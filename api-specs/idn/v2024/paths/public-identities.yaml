get:
  operationId: getPublicIdentities
  tags:
    - Public Identities
  summary: Get list of public identities
  description: Get a list of public identities.  Set `add-core-filters` to `true` to exclude incomplete identities and uncorrelated accounts.
  security:
    - userAuth: [sp:scopes:default]
  x-sailpoint-userLevels:
    - USER
  parameters:
    - $ref: '../parameters/limit.yaml'
    - $ref: '../parameters/offset.yaml'
    - $ref: '../parameters/count.yaml'
    - in: query
      name: filters
      schema:
        type: string
      required: false
      description: >-
        Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)


        Filtering is supported for the following fields and operators:


        **id**: *eq, in*


        **alias**: *eq, sw*


        **email**: *eq, sw*


        **firstname**: *eq, sw*


        **lastname**: *eq, sw*
      example: firstname eq "John"
    - in: query
      name: add-core-filters
      description: >-
        If *true*, only get identities which satisfy ALL the following criteria in addition to any criteria specified by *filters*:
          - Should be either correlated or protected.
          - Should not be "spadmin" or "cloudadmin".
          - uid should not be null.
          - lastname should not be null.
          - email should not be null.
      required: false
      example: false
      schema:
        type: boolean
        default: false
    - in: query
      name: sorters
      schema:
        type: string
        format: comma-separated
      required: false
      description: >-
        Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)


        Sorting is supported for the following fields: **name**
      example: name
  responses:
    '200':
      description: A list of public identity objects.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '../schemas/PublicIdentity.yaml'
          example:
            - id: 2c9180857182305e0171993735622948
              name: Alison Ferguso
              alias: alison.ferguso
              email: alison.ferguso@acme-solar.com
              status: Active
              manager:
                type: IDENTITY
                id: 2c9180a46faadee4016fb4e018c20639
                name: Thomas Edison
              attributes:
                - key: phone
                  name: Phone
                  value: '5125551234'
                - key: country
                  name: Country
                  value: US
            - id: 2c9180a46faadee4016fb4e018c20639
              name: Thomas Edison
              alias: thomas.edison
              email: thomas.edison@acme-solar.com
              status: Active
              manager:
                type: IDENTITY
                id: 2c918086676d3e0601677611dbde220f
                name: Mister Manager
              attributes:
                - key: phone
                  name: Phone
                  value: '5125554321'
                - key: country
                  name: Country
                  value: US
    '400':
      $ref: '../responses/400.yaml'
    '401':
      $ref: '../responses/401.yaml'
    '403':
      $ref: '../responses/403.yaml'
    '429':
      $ref: '../responses/429.yaml'
    '500':
      $ref: '../responses/500.yaml'
