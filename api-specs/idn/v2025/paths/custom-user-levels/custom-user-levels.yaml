post:
  tags:
    - Custom User Levels
  summary: Create a custom user level
  description: Creates a new custom user level for the tenant.
  operationId: createCustomUserLevel
  x-sailpoint-userLevels:
    - ORG_ADMIN
  security:
    - userAuth: [ idn:user-level:manage ]
  parameters:
    - name: X-SailPoint-Experimental
      in: header
      description: Use this header to enable this experimental API.
      example: true
      schema:
        type: string
        default: true
      required: true
  requestBody:
    description: |
      Payload containing the details of the user level to be created.
        - If only a parent right set id is included in the request body, all child right sets associated with that parent will be automatically assigned.
        - If the request body includes both a parent right set and a subset of its children, only the explicitly listed right sets (parent and specified children) will be assigned. Implicit inheritance is not applied in this case.
    required: true
    content:
      application/json:
        schema:
          $ref: '../../schemas/ams/UserLevelRequest.yaml'
        example:
          {
            "name": "Identity And Access Management",
            "description": "This is a description of the custom user level.",
            "owner": {
              "id": "29b9da8273b441239238bc041c386817",
              "name": "John Doe"
            },
            "rightSets": [
              "idn:ui-identity-manage-example",
              "idn:ui-identity-manage-child-one-example"
            ]
          }
  responses:
    '200':
      description: The user level summary.
      headers:
        accept-language:
          description: The locale to use for translations for the response
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '../../schemas/ams/UserLevelSummaryDTO.yaml'
          example:
            {
              "owner": {
                "type": "IDENTITY",
                "id": "29b9da8273b441239238bc041c386817",
                "name": "John Doe"
              },
              "status": "DRAFT",
              "created": "2023-01-01T12:00:00Z",
              "modified": "2023-01-02T12:00:00Z",
              "associatedIdentitiesCount": 0,
              "id": "beb02a57-010f-4c29-a6d2-fae9628bda73",
              "name": "Identity And Detail Management",
              "description": "This is a description of the custom user level.",
              "legacyGroup": null,
              "rightSets": [
                {
                  "id": "idn:ui-identity-manage-example",
                  "name": "Identity Management",
                  "description": "Access to manage all identities.",
                  "category": "identity",
                  "rights": [
                    "idn:ui-identity-example:read",
                    "idn:ui-identity-example:write"
                  ],
                  "rightSetIds": [
                    "idn:identity-management-example"
                  ],
                  "uiAssignableChildRightSetIds": [
                    "idn:ui-identity-manage-child-one-example",
                    "idn:ui-identity-manage-child-two-example"
                  ],
                  "uiAssignable": true,
                  "translatedName": "Identity Management",
                  "translatedDescription": "Access to manage all identities.",
                  "parentId": null
                },
                {
                  "id": "idn:ui-identity-manage-child-one-example",
                  "name": "Identity Details Read",
                  "description": "Read only access for identity details.",
                  "category": "identity",
                  "rights": [
                    "idn:ui-identity-manage-child-one-example:read"
                  ],
                  "rightSetIds": [ ],
                  "uiAssignableChildRightSetIds": [ ],
                  "uiAssignable": true,
                  "translatedName": "Identity Details Read",
                  "translatedDescription": "Read only access for identity details.",
                  "parentId": "idn:ui-identity-manage-example"
                }
              ],
              "custom": true,
              "adminAssignable": true,
              "translatedName": null,
              "translatedGrant": null,
              "translatedRemove": null
            }
    '400':
      $ref: '../../responses/400.yaml'
    '401':
      $ref: '../../responses/401.yaml'
    '403':
      $ref: '../../responses/403.yaml'
    '404':
      $ref: '../../responses/404.yaml'
    '429':
      $ref: '../../responses/429.yaml'
    '500':
      $ref: '../../responses/500.yaml'

get:
  tags:
    - Custom User Levels
  summary: List user levels
  description: Retrieves a list of user levels for the tenant.
  operationId: listUserLevels
  x-sailpoint-userLevels:
    - ORG_ADMIN
  security:
    - userAuth: [ idn:user-level:manage ]
  parameters:
    - name: X-SailPoint-Experimental
      in: header
      description: Use this header to enable this experimental API.
      example: true
      schema:
        type: string
        default: true
      required: true
    - name: detailLevel
      in: query
      required: false
      description: Specifies the level of detail for the user levels.
      schema:
        type: string
        enum:
          - FULL
          - SLIM
      default: basic
      example: detailLevel=FULL
    - name: filters
      in: query
      schema:
        type: string
      description: >-
        Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)
        
        
        Filtering is supported for the following fields and operators:
        
        
        **name**: *co*  
        
        
        **owner**: *co*  
        
        
        **status**: *eq*
        
        
        **description**: *co*
      example: name co "identity", owner co "john", status eq "active", description co "some description"
      required: false
    - name: sorters
      in: query
      schema:
        type: string
      description: >-
        Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)


        Sorting is supported for the following fields: **name, created, description, status, owner**
      example: name, -created, description, status, owner
      required: false
    - $ref: '../../../v2025/parameters/limit.yaml'
    - $ref: '../../../v2025/parameters/offset.yaml'
  responses:
    '200':
      description: Successfully retrieved the list of user levels.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '../../schemas/ams/UserLevelSummaryDTO.yaml'
          example:
            [
              {
                "owner": {
                  "type": "IDENTITY",
                  "id": "29b9da8273b441239238bc041c386817",
                  "name": "John Doe"
                },
                "status": "ACTIVE",
                "created": "2023-01-01T12:00:00Z",
                "modified": "2023-01-02T12:00:00Z",
                "associatedIdentitiesCount": 10,
                "id": "beb02a57-010f-4c29-a6d2-fae9628bda73",
                "name": "Identity And Detail Management",
                "description": "This is a description of the custom user level.",
                "legacyGroup": null,
                "rightSets": [
                  {
                    "id": "idn:ui-identity-manage-example",
                    "name": "Identity Management",
                    "description": "Access to manage all identities.",
                    "category": "identity",
                    "rights": [
                      "idn:ui-identity-example:read",
                      "idn:ui-identity-example:write"
                    ],
                    "rightSetIds": [
                      "idn:identity-management-example"
                    ],
                    "uiAssignableChildRightSetIds": [
                      "idn:ui-identity-details-read-example",
                      "idn:ui-identity-list-read-example"
                    ],
                    "uiAssignable": true,
                    "translatedName": "Identity Management",
                    "translatedDescription": "Access to manage all identities.",
                    "parentId": null
                  },
                  {
                    "id": "idn:ui-identity-details-read-example",
                    "name": "Identity Details Read",
                    "description": "Read only access for identity details.",
                    "category": "identity",
                    "rights": [
                      "idn:ui-identity-details-example:read"
                    ],
                    "rightSetIds": [ ],
                    "uiAssignableChildRightSetIds": [ ],
                    "uiAssignable": true,
                    "translatedName": "Identity Details Read",
                    "translatedDescription": "Read only access for identity details.",
                    "parentId": "idn:ui-identity-manage-example"
                  }
                ],
                "custom": true,
                "adminAssignable": true,
                "translatedName": null,
                "translatedGrant": null,
                "translatedRemove": null
              }
            ]
      headers:
        X-Total-Count:
          description: Total number of user levels.
          schema:
            type: integer
          example: 10
        accept-language:
          description: The locale to use for translations for the response
          schema:
            type: string
    '400':
      $ref: '../../responses/400.yaml'
    '401':
      $ref: '../../responses/401.yaml'
    '403':
      $ref: '../../responses/403.yaml'
    '404':
      $ref: '../../responses/404.yaml'
    '429':
      $ref: '../../responses/429.yaml'
    '500':
      $ref: '../../responses/500.yaml'

