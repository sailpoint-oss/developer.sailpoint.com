"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["199707"],{277083:function(e,l,n){n.r(l),n.d(l,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>r});var s=n(436401),i=n(785893),a=n(250065);let t={id:"cli-va",title:"VA",pagination_label:"CLI VA",sidebar_label:"VA",sidebar_position:7,sidebar_class_name:"cli-va",keywords:["cli","va"],description:"Learn about the CLI commands you can use to interact with VAs in this guide.",slug:"/tools/cli/va",tags:["CLI"]},c=void 0,o={},r=[{value:"Commands",id:"commands",level:2},{value:"Collect",id:"collect",level:3},{value:"Flags",id:"flags",level:4},{value:"Example",id:"example",level:4},{value:"Parse",id:"parse",level:3},{value:"Flags",id:"flags-1",level:4},{value:"Example",id:"example-1",level:4},{value:"Update",id:"update",level:3},{value:"Flags",id:"flags-2",level:4},{value:"Example",id:"example-2",level:4}];function d(e){let l={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.p,{children:"Learn about the CLI commands you can use to interact with VAs in this guide."}),"\n",(0,i.jsx)(l.p,{children:"A virtual appliance (VA) is a Linux-based virtual machine that connects to your sources and applications in ISC by using APIs, connectors, and other integrations SailPoint has made available."}),"\n",(0,i.jsxs)(l.p,{children:["For more information about VAs, refer to the ",(0,i.jsx)(l.a,{href:"https://community.sailpoint.com/t5/IdentityNow-Connectors/Virtual-Appliance-Reference-Guide/ta-p/74641?_ga=2.265747530.43742715.1681135659-1245631791.1680185785&_gl=1*1bevvkq*_ga*MTI0NTYzMTc5MS4xNjgwMTg1Nzg1*_ga_SS72Z4HXJM*MTY4MTMwOTc1MC4yOS4xLjE2ODEzMDk5MzkuMjguMC4w",children:"Virtual Appliance Reference Guide"}),"."]}),"\n",(0,i.jsx)(l.h2,{id:"commands",children:"Commands"}),"\n",(0,i.jsx)(l.p,{children:"To use the CLI to interact with VAs connected to your tenant, run these commands:"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.a,{href:"#commands",children:"Commands"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.a,{href:"#collect",children:"Collect"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsx)(l.li,{children:(0,i.jsx)(l.a,{href:"#flags",children:"Flags"})}),"\n",(0,i.jsx)(l.li,{children:(0,i.jsx)(l.a,{href:"#example",children:"Example"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.a,{href:"#parse",children:"Parse"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsx)(l.li,{children:(0,i.jsx)(l.a,{href:"#flags-1",children:"Flags"})}),"\n",(0,i.jsx)(l.li,{children:(0,i.jsx)(l.a,{href:"#example-1",children:"Example"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.a,{href:"#update",children:"Update"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsx)(l.li,{children:(0,i.jsx)(l.a,{href:"#flags-2",children:"Flags"})}),"\n",(0,i.jsx)(l.li,{children:(0,i.jsx)(l.a,{href:"#example-2",children:"Example"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(l.h3,{id:"collect",children:"Collect"}),"\n",(0,i.jsx)(l.p,{children:"To collect all files from a VA, run this command:"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-shell",children:"sail va collect {VA IP address} {flags}\n"})}),"\n",(0,i.jsx)(l.p,{children:"This command gets all files from the VA and saves them to the current working directory (the directory you're in), unless you specify flags."}),"\n",(0,i.jsx)(l.h4,{id:"flags",children:"Flags"}),"\n",(0,i.jsxs)(l.p,{children:["You can add these flags to the the ",(0,i.jsx)(l.code,{children:"collect"})," command:"]}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"-o, --output"}),": Set the path to save the files to. If the directory doesn't exist, the CLI creates it. The default directory is the current working directory."]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"-c, --config"}),": Only get config files."]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"-h, --help"}),": View the command's help with examples within the CLI."]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"-l, --logs"}),": Only get log files."]}),"\n"]}),"\n",(0,i.jsx)(l.h4,{id:"example",children:"Example"}),"\n",(0,i.jsx)(l.p,{children:"Here is an example command and response:"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-shell",children:"sail va collect 10.10.10.25 10.10.10.26 -p S@ilp0int -p S@ilp0int\n2023/10/05 22:19:19 INFO Starting File Collection VA=10.10.10.26\n2023/10/05 22:19:19 INFO Starting File Collection VA=10.10.10.25\n2023/10/05 22:19:19 WARN Skipping file file=/home/sailpoint/proxy.yaml VA=10.10.10.25\n2023/10/05 22:19:19 WARN Skipping file file=/home/sailpoint/log/ccg.log VA=10.10.10.25\n2023/10/05 22:19:19 WARN Skipping file file=/home/sailpoint/proxy.yaml VA=10.10.10.26\n2023/10/05 22:19:19 WARN Skipping file file=/home/sailpoint/log/ccg.log VA=10.10.10.26\n10.10.10.26 - static.network : 87.00 b                Complete\n10.10.10.26 - resolv.conf    : 785.00 b               Complete\n10.10.10.25 - resolv.conf    : 785.00 b               Complete\n10.10.10.25 - static.network : 87.00 b                Complete\n10.10.10.25 - charon.log : 36.12 MB   Complete\n10.10.10.26 - charon.log : 36.06 MB   Complete\n"})}),"\n",(0,i.jsx)(l.h3,{id:"parse",children:"Parse"}),"\n",(0,i.jsx)(l.p,{children:"This command converts log files into a human-readable format. It's helpful when you want to troubleshoot VA issues."}),"\n",(0,i.jsx)(l.p,{children:"To parse log files, run this command:"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-shell",children:"sail va parse {log file} {flags}\n"})}),"\n",(0,i.jsx)(l.p,{children:"By default, this command parses all errors in the log files, not all log traffic - you can use flags to parse all log traffic."}),"\n",(0,i.jsx)(l.h4,{id:"flags-1",children:"Flags"}),"\n",(0,i.jsxs)(l.p,{children:["You can add these flags to the ",(0,i.jsx)(l.code,{children:"parse"})," command:"]}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"--type"}),":","\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"canal"})," Specify that the provided files are Canal log files."]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"ccg"})," Specify that the provided files are CCG log files."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"-e, --everything"}),": Parse all log traffic, not just errors."]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"-h, --help"}),": View the command's help with examples within the CLI."]}),"\n"]}),"\n",(0,i.jsx)(l.h4,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(l.p,{children:"Here is an example command:"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-shell",children:"sail va parse --type ccg ./path/to/ccg.log ./path/to/ccg.log --all\n\nor\n\nsail va parse --type canal ./path/to/canal.log ./path/to/canal.log\n"})}),"\n",(0,i.jsx)(l.h3,{id:"update",children:"Update"}),"\n",(0,i.jsx)(l.p,{children:"To update a VA, run this command:"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-shell",children:"sail va update {VA IP address} {flags}\n"})}),"\n",(0,i.jsx)(l.h4,{id:"flags-2",children:"Flags"}),"\n",(0,i.jsxs)(l.p,{children:["You can add these flags to the ",(0,i.jsx)(l.code,{children:"update"})," command:"]}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"-h, --help"}),": View the command's help with examples within the CLI."]}),"\n"]}),"\n",(0,i.jsx)(l.h4,{id:"example-2",children:"Example"}),"\n",(0,i.jsx)(l.p,{children:"Here is an example command:"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-shell",children:"sail va update 10.10.10.25\n\nor\n\nsail va update 10.10.10.25 -p S@ilp0int\n"})})]})}function h(e={}){let{wrapper:l}={...(0,a.a)(),...e.components};return l?(0,i.jsx)(l,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},250065:function(e,l,n){n.d(l,{Z:()=>c,a:()=>t});var s=n(667294);let i={},a=s.createContext(i);function t(e){let l=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(l):{...l,...e}},[l,e])}function c(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(a.Provider,{value:l},e.children)}},436401:function(e){e.exports=JSON.parse('{"id":"tools/cli/cli-va","title":"VA","description":"Learn about the CLI commands you can use to interact with VAs in this guide.","source":"@site/docs/tools/cli/va.md","sourceDirName":"tools/cli","slug":"/tools/cli/va","permalink":"/docs/tools/cli/va","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/cli/va.md","tags":[{"inline":true,"label":"CLI","permalink":"/docs/tags/cli"}],"version":"current","lastUpdatedBy":"Tyler Mairose","lastUpdatedAt":1727183373000,"sidebarPosition":7,"frontMatter":{"id":"cli-va","title":"VA","pagination_label":"CLI VA","sidebar_label":"VA","sidebar_position":7,"sidebar_class_name":"cli-va","keywords":["cli","va"],"description":"Learn about the CLI commands you can use to interact with VAs in this guide.","slug":"/tools/cli/va","tags":["CLI"]},"sidebar":"openApiSidebar","previous":{"title":"CLI Transforms","permalink":"/docs/tools/cli/transforms"},"next":{"title":"CLI Clusters","permalink":"/docs/tools/cli/cluster"}}')}}]);