"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["159152"],{571722:function(e,n,t){t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var r=t(665117),o=t(785893),i=t(250065);let s={id:"v2025-connectors",title:"Connectors",pagination_label:"Connectors",sidebar_label:"Connectors",sidebar_class_name:"gosdk",keywords:["go","Golang","sdk","Connectors","V2025Connectors"],slug:"/tools/sdk/go/v2025/methods/connectors",tags:["SDK","Software Development Kit","Connectors","V2025Connectors"]},c="ConnectorsAPI",a={},l=[{value:"create-custom-connector",id:"create-custom-connector",level:2},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Other Parameters",id:"other-parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example",level:3},{value:"delete-custom-connector",id:"delete-custom-connector",level:2},{value:"Path Parameters",id:"path-parameters-1",level:3},{value:"Other Parameters",id:"other-parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-1",level:3},{value:"get-connector",id:"get-connector",level:2},{value:"Path Parameters",id:"path-parameters-2",level:3},{value:"Other Parameters",id:"other-parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-2",level:3},{value:"get-connector-correlation-config",id:"get-connector-correlation-config",level:2},{value:"Path Parameters",id:"path-parameters-3",level:3},{value:"Other Parameters",id:"other-parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-3",level:3},{value:"get-connector-list",id:"get-connector-list",level:2},{value:"Path Parameters",id:"path-parameters-4",level:3},{value:"Other Parameters",id:"other-parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3},{value:"Example",id:"example-4",level:3},{value:"get-connector-source-config",id:"get-connector-source-config",level:2},{value:"Path Parameters",id:"path-parameters-5",level:3},{value:"Other Parameters",id:"other-parameters-5",level:3},{value:"Return type",id:"return-type-5",level:3},{value:"HTTP request headers",id:"http-request-headers-5",level:3},{value:"Example",id:"example-5",level:3},{value:"get-connector-source-template",id:"get-connector-source-template",level:2},{value:"Path Parameters",id:"path-parameters-6",level:3},{value:"Other Parameters",id:"other-parameters-6",level:3},{value:"Return type",id:"return-type-6",level:3},{value:"HTTP request headers",id:"http-request-headers-6",level:3},{value:"Example",id:"example-6",level:3},{value:"get-connector-translations",id:"get-connector-translations",level:2},{value:"Path Parameters",id:"path-parameters-7",level:3},{value:"Other Parameters",id:"other-parameters-7",level:3},{value:"Return type",id:"return-type-7",level:3},{value:"HTTP request headers",id:"http-request-headers-7",level:3},{value:"Example",id:"example-7",level:3},{value:"put-connector-correlation-config",id:"put-connector-correlation-config",level:2},{value:"Path Parameters",id:"path-parameters-8",level:3},{value:"Other Parameters",id:"other-parameters-8",level:3},{value:"Return type",id:"return-type-8",level:3},{value:"HTTP request headers",id:"http-request-headers-8",level:3},{value:"Example",id:"example-8",level:3},{value:"put-connector-source-config",id:"put-connector-source-config",level:2},{value:"Path Parameters",id:"path-parameters-9",level:3},{value:"Other Parameters",id:"other-parameters-9",level:3},{value:"Return type",id:"return-type-9",level:3},{value:"HTTP request headers",id:"http-request-headers-9",level:3},{value:"Example",id:"example-9",level:3},{value:"put-connector-source-template",id:"put-connector-source-template",level:2},{value:"Path Parameters",id:"path-parameters-10",level:3},{value:"Other Parameters",id:"other-parameters-10",level:3},{value:"Return type",id:"return-type-10",level:3},{value:"HTTP request headers",id:"http-request-headers-10",level:3},{value:"Example",id:"example-10",level:3},{value:"put-connector-translations",id:"put-connector-translations",level:2},{value:"Path Parameters",id:"path-parameters-11",level:3},{value:"Other Parameters",id:"other-parameters-11",level:3},{value:"Return type",id:"return-type-11",level:3},{value:"HTTP request headers",id:"http-request-headers-11",level:3},{value:"Example",id:"example-11",level:3},{value:"update-connector",id:"update-connector",level:2},{value:"Path Parameters",id:"path-parameters-12",level:3},{value:"Other Parameters",id:"other-parameters-12",level:3},{value:"Return type",id:"return-type-12",level:3},{value:"HTTP request headers",id:"http-request-headers-12",level:3},{value:"Example",id:"example-12",level:3}];function d(e){let n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"connectorsapi",children:"ConnectorsAPI"})}),"\n",(0,o.jsx)(n.p,{children:"Use this API to implement connector functionality.\nWith this functionality in place, administrators can view available connectors."}),"\n",(0,o.jsx)(n.p,{children:"Connectors are the bridges Identity Security Cloud uses to communicate with and aggregate data from sources.\nFor example, if it is necessary to set up a connection between Identity Security Cloud and the Active Directory source, a connector can bridge the two and enable Identity Security Cloud to synchronize data between the systems.\nThis ensures account entitlements and states are correct throughout the organization."}),"\n",(0,o.jsx)(n.p,{children:"In Identity Security Cloud, administrators can use the Connections drop-down menu and select Sources to view the available source connectors."}),"\n",(0,o.jsxs)(n.p,{children:["Refer to ",(0,o.jsx)(n.a,{href:"https://documentation.sailpoint.com/connectors/identitynow/landingpages/help/landingpages/identitynow_connectivity_landing.html",children:"Identity Security Cloud Connectors"})," for more information about the connectors available in Identity Security Cloud."]}),"\n",(0,o.jsxs)(n.p,{children:["Refer to ",(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/connectivity/saas-connectivity/",children:"SaaS Connectivity"})," for more information about the SaaS custom connectors that do not need VAs (virtual appliances) to communicate with their sources."]}),"\n",(0,o.jsxs)(n.p,{children:["Refer to ",(0,o.jsx)(n.a,{href:"https://documentation.sailpoint.com/saas/help/sources/index.html",children:"Managing Sources"})," for more information about using connectors in Identity Security Cloud."]}),"\n",(0,o.jsxs)(n.p,{children:["All URIs are relative to ",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.a,{href:"https://sailpoint.api.identitynow.com/v2025",children:"https://sailpoint.api.identitynow.com/v2025"})})]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Method"}),(0,o.jsx)(n.th,{children:"HTTP request"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#create-custom-connector",children:(0,o.jsx)(n.strong,{children:"create-custom-connector"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Post"})," ",(0,o.jsx)(n.code,{children:"/connectors"})]}),(0,o.jsx)(n.td,{children:"Create custom connector"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#delete-custom-connector",children:(0,o.jsx)(n.strong,{children:"delete-custom-connector"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Delete"})," ",(0,o.jsx)(n.code,{children:"/connectors/{scriptName}"})]}),(0,o.jsx)(n.td,{children:"Delete connector by script name"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#get-connector",children:(0,o.jsx)(n.strong,{children:"get-connector"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Get"})," ",(0,o.jsx)(n.code,{children:"/connectors/{scriptName}"})]}),(0,o.jsx)(n.td,{children:"Get connector by script name"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#get-connector-correlation-config",children:(0,o.jsx)(n.strong,{children:"get-connector-correlation-config"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Get"})," ",(0,o.jsx)(n.code,{children:"/connectors/{scriptName}/correlation-config"})]}),(0,o.jsx)(n.td,{children:"Get connector correlation configuration"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#get-connector-list",children:(0,o.jsx)(n.strong,{children:"get-connector-list"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Get"})," ",(0,o.jsx)(n.code,{children:"/connectors"})]}),(0,o.jsx)(n.td,{children:"Get connector list"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#get-connector-source-config",children:(0,o.jsx)(n.strong,{children:"get-connector-source-config"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Get"})," ",(0,o.jsx)(n.code,{children:"/connectors/{scriptName}/source-config"})]}),(0,o.jsx)(n.td,{children:"Get connector source configuration"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#get-connector-source-template",children:(0,o.jsx)(n.strong,{children:"get-connector-source-template"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Get"})," ",(0,o.jsx)(n.code,{children:"/connectors/{scriptName}/source-template"})]}),(0,o.jsx)(n.td,{children:"Get connector source template"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#get-connector-translations",children:(0,o.jsx)(n.strong,{children:"get-connector-translations"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Get"})," ",(0,o.jsx)(n.code,{children:"/connectors/{scriptName}/translations/{locale}"})]}),(0,o.jsx)(n.td,{children:"Get connector translations"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#put-connector-correlation-config",children:(0,o.jsx)(n.strong,{children:"put-connector-correlation-config"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Put"})," ",(0,o.jsx)(n.code,{children:"/connectors/{scriptName}/correlation-config"})]}),(0,o.jsx)(n.td,{children:"Update connector correlation configuration"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#put-connector-source-config",children:(0,o.jsx)(n.strong,{children:"put-connector-source-config"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Put"})," ",(0,o.jsx)(n.code,{children:"/connectors/{scriptName}/source-config"})]}),(0,o.jsx)(n.td,{children:"Update connector source configuration"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#put-connector-source-template",children:(0,o.jsx)(n.strong,{children:"put-connector-source-template"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Put"})," ",(0,o.jsx)(n.code,{children:"/connectors/{scriptName}/source-template"})]}),(0,o.jsx)(n.td,{children:"Update connector source template"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#put-connector-translations",children:(0,o.jsx)(n.strong,{children:"put-connector-translations"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Put"})," ",(0,o.jsx)(n.code,{children:"/connectors/{scriptName}/translations/{locale}"})]}),(0,o.jsx)(n.td,{children:"Update connector translations"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#update-connector",children:(0,o.jsx)(n.strong,{children:"update-connector"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Patch"})," ",(0,o.jsx)(n.code,{children:"/connectors/{scriptName}"})]}),(0,o.jsx)(n.td,{children:"Update connector by script name"})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"create-custom-connector",children:"create-custom-connector"}),"\n",(0,o.jsx)(n.p,{children:"Create custom connector\nCreate custom connector."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/create-custom-connector",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiCreateCustomConnectorRequest struct via the builder pattern"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"v3CreateConnectorDto"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"../models/v3-create-connector-dto",children:(0,o.jsx)(n.strong,{children:"V3CreateConnectorDto"})})}),(0,o.jsx)(n.td,{}),(0,o.jsx)(n.td,{})]})})]}),"\n",(0,o.jsx)(n.h3,{id:"return-type",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"../models/v3-connector-dto",children:(0,o.jsx)(n.strong,{children:"V3ConnectorDto"})})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    v2025 "github.com/sailpoint-oss/golang-sdk/v2/api_v2025"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    v3createconnectordto := []byte(`{\n          "name" : "custom connector",\n          "directConnect" : true,\n          "className" : "sailpoint.connector.OpenConnectorAdapter",\n          "type" : "custom connector type",\n          "status" : "RELEASED"\n        }`) // V3CreateConnectorDto | \n\n    var v3CreateConnectorDto v2025.V3CreateConnectorDto\n    if err := json.Unmarshal(v3createconnectordto, &v3CreateConnectorDto); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorsAPI.CreateCustomConnector(context.Background()).V3CreateConnectorDto(v3CreateConnectorDto).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorsAPI.CreateCustomConnector(context.Background()).V3CreateConnectorDto(v3CreateConnectorDto).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.CreateCustomConnector``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `CreateCustomConnector`: V3ConnectorDto\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorsAPI.CreateCustomConnector`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"delete-custom-connector",children:"delete-custom-connector"}),"\n",(0,o.jsx)(n.p,{children:"Delete connector by script name\nDelete a custom connector that using its script name."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/delete-custom-connector",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-1",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"scriptName"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The scriptName value of the connector. ScriptName is the unique id generated at connector creation."}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-1",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiDeleteCustomConnectorRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsx)(n.h3,{id:"return-type-1",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:"(empty response body)"}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-1",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    scriptName := `aScriptName` // string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    r, err := apiClient.V2025.ConnectorsAPI.DeleteCustomConnector(context.Background(), scriptName).Execute()\n	  //r, err := apiClient.V2025.ConnectorsAPI.DeleteCustomConnector(context.Background(), scriptName).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.DeleteCustomConnector``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    \n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"get-connector",children:"get-connector"}),"\n",(0,o.jsx)(n.p,{children:"Get connector by script name\nFetches a connector that using its script name."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/get-connector",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-2",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"scriptName"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The scriptName value of the connector. ScriptName is the unique id generated at connector creation."}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-2",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiGetConnectorRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"locale"})," | ",(0,o.jsx)(n.strong,{children:"string"})," | The locale to apply to the config. If no viable locale is given, it will default to &quot;en&quot; |"]}),"\n",(0,o.jsx)(n.h3,{id:"return-type-2",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"../models/connector-detail",children:(0,o.jsx)(n.strong,{children:"ConnectorDetail"})})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-2",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-2",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    scriptName := `aScriptName` // string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.\n    locale := `de` // string | The locale to apply to the config. If no viable locale is given, it will default to \\"en\\" (optional) # string | The locale to apply to the config. If no viable locale is given, it will default to \\"en\\" (optional)\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorsAPI.GetConnector(context.Background(), scriptName).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorsAPI.GetConnector(context.Background(), scriptName).Locale(locale).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.GetConnector``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetConnector`: ConnectorDetail\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorsAPI.GetConnector`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"get-connector-correlation-config",children:"get-connector-correlation-config"}),"\n",(0,o.jsx)(n.p,{children:"Get connector correlation configuration\nFetches a connector's correlation config using its script name."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/get-connector-correlation-config",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-3",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"scriptName"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The scriptName value of the connector. Scriptname is the unique id generated at connector creation."}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-3",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiGetConnectorCorrelationConfigRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsx)(n.h3,{id:"return-type-3",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"string"})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-3",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/xml, application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-3",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    scriptName := `aScriptName` // string | The scriptName value of the connector. Scriptname is the unique id generated at connector creation. # string | The scriptName value of the connector. Scriptname is the unique id generated at connector creation.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorsAPI.GetConnectorCorrelationConfig(context.Background(), scriptName).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorsAPI.GetConnectorCorrelationConfig(context.Background(), scriptName).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.GetConnectorCorrelationConfig``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetConnectorCorrelationConfig`: string\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorsAPI.GetConnectorCorrelationConfig`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"get-connector-list",children:"get-connector-list"}),"\n",(0,o.jsx)(n.p,{children:"Get connector list\nFetches list of connectors that have 'RELEASED' status using filtering and pagination."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/get-connector-list",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-4",children:"Path Parameters"}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-4",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiGetConnectorListRequest struct via the builder pattern"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"filters"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsxs)(n.td,{children:["Filter results using the standard syntax described in ",(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results",children:"V3 API Standard Collection Parameters"}),"  Filtering is supported for the following fields and operators:  ",(0,o.jsx)(n.strong,{children:"name"}),": ",(0,o.jsx)(n.em,{children:"sw, co"}),"  ",(0,o.jsx)(n.strong,{children:"type"}),": ",(0,o.jsx)(n.em,{children:"sw, co, eq"}),"  ",(0,o.jsx)(n.strong,{children:"directConnect"}),": ",(0,o.jsx)(n.em,{children:"eq"}),"  ",(0,o.jsx)(n.strong,{children:"category"}),": ",(0,o.jsx)(n.em,{children:"eq"}),"  ",(0,o.jsx)(n.strong,{children:"features"}),": ",(0,o.jsx)(n.em,{children:"ca"}),"  ",(0,o.jsx)(n.strong,{children:"labels"}),": ",(0,o.jsx)(n.em,{children:"ca"})]}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"limit"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"int32"})}),(0,o.jsxs)(n.td,{children:["Max number of results to return. See ",(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,o.jsx)(n.td,{children:"[default to 250]"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"offset"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"int32"})}),(0,o.jsxs)(n.td,{children:["Offset into the full result set. Usually specified with ",(0,o.jsx)(n.em,{children:"limit"})," to paginate through the results. See ",(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,o.jsx)(n.td,{children:"[default to 0]"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"count"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"bool"})}),(0,o.jsxs)(n.td,{children:["If ",(0,o.jsx)(n.em,{children:"true"})," it will populate the ",(0,o.jsx)(n.em,{children:"X-Total-Count"})," response header with the number of results that would be returned if ",(0,o.jsx)(n.em,{children:"limit"})," and ",(0,o.jsx)(n.em,{children:"offset"})," were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send ",(0,o.jsx)(n.strong,{children:"count=true"})," if that value will not be used.  See ",(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,o.jsx)(n.td,{children:"[default to false]"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"locale"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The locale to apply to the config. If no viable locale is given, it will default to &quot;en&quot;"}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"return-type-4",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"../models/v3-connector-dto",children:(0,o.jsx)(n.strong,{children:"[]V3ConnectorDto"})})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-4",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-4",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    filters := `directConnect eq "true"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw, co*  **type**: *sw, co, eq*  **directConnect**: *eq*  **category**: *eq*  **features**: *ca*  **labels**: *ca* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw, co*  **type**: *sw, co, eq*  **directConnect**: *eq*  **category**: *eq*  **features**: *ca*  **labels**: *ca* (optional)\n    limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)\n    offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)\n    count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)\n    locale := `de` // string | The locale to apply to the config. If no viable locale is given, it will default to \\"en\\" (optional) # string | The locale to apply to the config. If no viable locale is given, it will default to \\"en\\" (optional)\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorsAPI.GetConnectorList(context.Background()).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorsAPI.GetConnectorList(context.Background()).Filters(filters).Limit(limit).Offset(offset).Count(count).Locale(locale).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.GetConnectorList``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetConnectorList`: []V3ConnectorDto\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorsAPI.GetConnectorList`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"get-connector-source-config",children:"get-connector-source-config"}),"\n",(0,o.jsx)(n.p,{children:"Get connector source configuration\nFetches a connector's source config using its script name."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/get-connector-source-config",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-5",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"scriptName"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The scriptName value of the connector. ScriptName is the unique id generated at connector creation."}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-5",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiGetConnectorSourceConfigRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsx)(n.h3,{id:"return-type-5",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"string"})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-5",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/xml, application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-5",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    scriptName := `aScriptName` // string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorsAPI.GetConnectorSourceConfig(context.Background(), scriptName).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorsAPI.GetConnectorSourceConfig(context.Background(), scriptName).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.GetConnectorSourceConfig``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetConnectorSourceConfig`: string\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorsAPI.GetConnectorSourceConfig`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"get-connector-source-template",children:"get-connector-source-template"}),"\n",(0,o.jsx)(n.p,{children:"Get connector source template\nFetches a connector's source template using its script name."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/get-connector-source-template",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-6",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"scriptName"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The scriptName value of the connector. ScriptName is the unique id generated at connector creation."}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-6",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiGetConnectorSourceTemplateRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsx)(n.h3,{id:"return-type-6",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"string"})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-6",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/xml, application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-6",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    scriptName := `aScriptName` // string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorsAPI.GetConnectorSourceTemplate(context.Background(), scriptName).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorsAPI.GetConnectorSourceTemplate(context.Background(), scriptName).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.GetConnectorSourceTemplate``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetConnectorSourceTemplate`: string\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorsAPI.GetConnectorSourceTemplate`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"get-connector-translations",children:"get-connector-translations"}),"\n",(0,o.jsx)(n.p,{children:"Get connector translations\nFetches a connector's translations using its script name."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/get-connector-translations",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-7",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"scriptName"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The scriptName value of the connector. Scriptname is the unique id generated at connector creation."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"locale"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The locale to apply to the config. If no viable locale is given, it will default to &quot;en&quot;"}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-7",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiGetConnectorTranslationsRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsx)(n.h3,{id:"return-type-7",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"string"})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-7",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": text/plain, application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-7",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    scriptName := `aScriptName` // string | The scriptName value of the connector. Scriptname is the unique id generated at connector creation. # string | The scriptName value of the connector. Scriptname is the unique id generated at connector creation.\n    locale := `de` // string | The locale to apply to the config. If no viable locale is given, it will default to \\"en\\" # string | The locale to apply to the config. If no viable locale is given, it will default to \\"en\\"\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorsAPI.GetConnectorTranslations(context.Background(), scriptName, locale).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorsAPI.GetConnectorTranslations(context.Background(), scriptName, locale).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.GetConnectorTranslations``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetConnectorTranslations`: string\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorsAPI.GetConnectorTranslations`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"put-connector-correlation-config",children:"put-connector-correlation-config"}),"\n",(0,o.jsx)(n.p,{children:"Update connector correlation configuration\nUpdate a connector's correlation config using its script name."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/put-connector-correlation-config",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-8",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"scriptName"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The scriptName value of the connector. Scriptname is the unique id generated at connector creation."}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-8",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiPutConnectorCorrelationConfigRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"file"})," | *",(0,o.jsx)(n.strong,{children:"os.File"})," | connector correlation config xml file |"]}),"\n",(0,o.jsx)(n.h3,{id:"return-type-8",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"../models/update-detail",children:(0,o.jsx)(n.strong,{children:"UpdateDetail"})})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-8",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": multipart/form-data"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-8",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    scriptName := `aScriptName` // string | The scriptName value of the connector. Scriptname is the unique id generated at connector creation. # string | The scriptName value of the connector. Scriptname is the unique id generated at connector creation.\n    file := BINARY_DATA_HERE // *os.File | connector correlation config xml file # *os.File | connector correlation config xml file\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorsAPI.PutConnectorCorrelationConfig(context.Background(), scriptName).File(file).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorsAPI.PutConnectorCorrelationConfig(context.Background(), scriptName).File(file).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.PutConnectorCorrelationConfig``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `PutConnectorCorrelationConfig`: UpdateDetail\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorsAPI.PutConnectorCorrelationConfig`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"put-connector-source-config",children:"put-connector-source-config"}),"\n",(0,o.jsx)(n.p,{children:"Update connector source configuration\nUpdate a connector's source config using its script name."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/put-connector-source-config",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-9",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"scriptName"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The scriptName value of the connector. ScriptName is the unique id generated at connector creation."}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-9",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiPutConnectorSourceConfigRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"file"})," | *",(0,o.jsx)(n.strong,{children:"os.File"})," | connector source config xml file |"]}),"\n",(0,o.jsx)(n.h3,{id:"return-type-9",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"../models/update-detail",children:(0,o.jsx)(n.strong,{children:"UpdateDetail"})})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-9",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": multipart/form-data"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-9",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    scriptName := `aScriptName` // string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.\n    file := BINARY_DATA_HERE // *os.File | connector source config xml file # *os.File | connector source config xml file\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorsAPI.PutConnectorSourceConfig(context.Background(), scriptName).File(file).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorsAPI.PutConnectorSourceConfig(context.Background(), scriptName).File(file).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.PutConnectorSourceConfig``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `PutConnectorSourceConfig`: UpdateDetail\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorsAPI.PutConnectorSourceConfig`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"put-connector-source-template",children:"put-connector-source-template"}),"\n",(0,o.jsx)(n.p,{children:"Update connector source template\nUpdate a connector's source template using its script name."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/put-connector-source-template",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-10",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"scriptName"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The scriptName value of the connector. ScriptName is the unique id generated at connector creation."}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-10",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiPutConnectorSourceTemplateRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"file"})," | *",(0,o.jsx)(n.strong,{children:"os.File"})," | connector source template xml file |"]}),"\n",(0,o.jsx)(n.h3,{id:"return-type-10",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"../models/update-detail",children:(0,o.jsx)(n.strong,{children:"UpdateDetail"})})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-10",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": multipart/form-data"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-10",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    scriptName := `aScriptName` // string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.\n    file := BINARY_DATA_HERE // *os.File | connector source template xml file # *os.File | connector source template xml file\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorsAPI.PutConnectorSourceTemplate(context.Background(), scriptName).File(file).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorsAPI.PutConnectorSourceTemplate(context.Background(), scriptName).File(file).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.PutConnectorSourceTemplate``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `PutConnectorSourceTemplate`: UpdateDetail\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorsAPI.PutConnectorSourceTemplate`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"put-connector-translations",children:"put-connector-translations"}),"\n",(0,o.jsx)(n.p,{children:"Update connector translations\nUpdate a connector's translations using its script name."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/put-connector-translations",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-11",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"scriptName"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The scriptName value of the connector. Scriptname is the unique id generated at connector creation."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"locale"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The locale to apply to the config. If no viable locale is given, it will default to &quot;en&quot;"}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-11",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiPutConnectorTranslationsRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsx)(n.h3,{id:"return-type-11",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"../models/update-detail",children:(0,o.jsx)(n.strong,{children:"UpdateDetail"})})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-11",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": multipart/form-data"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-11",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    scriptName := `aScriptName` // string | The scriptName value of the connector. Scriptname is the unique id generated at connector creation. # string | The scriptName value of the connector. Scriptname is the unique id generated at connector creation.\n    locale := `de` // string | The locale to apply to the config. If no viable locale is given, it will default to \\"en\\" # string | The locale to apply to the config. If no viable locale is given, it will default to \\"en\\"\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorsAPI.PutConnectorTranslations(context.Background(), scriptName, locale).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorsAPI.PutConnectorTranslations(context.Background(), scriptName, locale).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.PutConnectorTranslations``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `PutConnectorTranslations`: UpdateDetail\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorsAPI.PutConnectorTranslations`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"update-connector",children:"update-connector"}),"\n",(0,o.jsxs)(n.p,{children:["Update connector by script name\nThis API updates a custom connector by script name using ",(0,o.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc6902",children:"JSON Patch"})," syntax."]}),"\n",(0,o.jsx)(n.p,{children:"The following fields are patchable:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"connectorMetadata"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"applicationXml"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"correlationConfigXml"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"sourceConfigXml"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/update-connector",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-12",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"scriptName"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"The scriptName value of the connector. ScriptName is the unique id generated at connector creation."}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-12",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiUpdateConnectorRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"jsonPatchOperation"})," | ",(0,o.jsx)(n.a,{href:"../models/json-patch-operation",children:(0,o.jsx)(n.strong,{children:"[]JsonPatchOperation"})})," | A list of connector detail update operations  |"]}),"\n",(0,o.jsx)(n.h3,{id:"return-type-12",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"../models/connector-detail",children:(0,o.jsx)(n.strong,{children:"ConnectorDetail"})})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-12",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": application/json-patch+json"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-12",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    v2025 "github.com/sailpoint-oss/golang-sdk/v2/api_v2025"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    scriptName := `aScriptName` // string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation. # string | The scriptName value of the connector. ScriptName is the unique id generated at connector creation.\n    jsonpatchoperation := []byte(``) // []JsonPatchOperation | A list of connector detail update operations \n\n    var jsonPatchOperation []v2025.JsonPatchOperation\n    if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorsAPI.UpdateConnector(context.Background(), scriptName).JsonPatchOperation(jsonPatchOperation).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorsAPI.UpdateConnector(context.Background(), scriptName).JsonPatchOperation(jsonPatchOperation).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.UpdateConnector``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `UpdateConnector`: ConnectorDetail\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorsAPI.UpdateConnector`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})})]})}function h(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:()=>c,a:()=>s});var r=t(667294);let o={},i=r.createContext(o);function s(e){let n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}},665117:function(e){e.exports=JSON.parse('{"id":"tools/sdk/go/Reference/V2025/Methods/v2025-connectors","title":"Connectors","description":"Use this API to implement connector functionality.","source":"@site/docs/tools/sdk/go/Reference/V2025/Methods/ConnectorsAPI.md","sourceDirName":"tools/sdk/go/Reference/V2025/Methods","slug":"/tools/sdk/go/v2025/methods/connectors","permalink":"/docs/tools/sdk/go/v2025/methods/connectors","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/go/Reference/V2025/Methods/ConnectorsAPI.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"Connectors","permalink":"/docs/tags/connectors"},{"inline":true,"label":"V2025Connectors","permalink":"/docs/tags/v-2025-connectors"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1758738425000,"frontMatter":{"id":"v2025-connectors","title":"Connectors","pagination_label":"Connectors","sidebar_label":"Connectors","sidebar_class_name":"gosdk","keywords":["go","Golang","sdk","Connectors","V2025Connectors"],"slug":"/tools/sdk/go/v2025/methods/connectors","tags":["SDK","Software Development Kit","Connectors","V2025Connectors"]},"sidebar":"openApiSidebar","previous":{"title":"ConnectorRuleManagement","permalink":"/docs/tools/sdk/go/v2025/methods/connector-rule-management"},"next":{"title":"CustomForms","permalink":"/docs/tools/sdk/go/v2025/methods/custom-forms"}}')}}]);