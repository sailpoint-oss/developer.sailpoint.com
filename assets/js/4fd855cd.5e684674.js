"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["280589"],{341056:function(e,n,t){t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>g,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var o=t(494846),i=t(785893),s=t(250065);let c={id:"logging",title:"Logging",pagination_label:"Logging",sidebar_label:"Logging",sidebar_position:5,sidebar_class_name:"logging",keywords:["connectivity","connectors","logging"],description:"You can use this feature to read the logs of your connectors.",slug:"/connectivity/saas-connectivity/in-depth/logging",tags:["Connectivity"]},a=void 0,r={},l=[{value:"Printing Logs with the CLI",id:"printing-logs-with-the-cli",level:2},{value:"Logging with console.log",id:"logging-with-consolelog",level:2},{value:"Logging using the SDK",id:"logging-using-the-sdk",level:2},{value:"Configuring the SDK to Mask Sensitive Values",id:"configuring-the-sdk-to-mask-sensitive-values",level:2}];function d(e){let n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"printing-logs-with-the-cli",children:"Printing Logs with the CLI"}),"\n",(0,i.jsxs)(n.p,{children:["Fetch logs from ISC by issuing the ",(0,i.jsx)(n.code,{children:"sail conn logs"})," command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'$ sail conn logs\n\n[2022-07-14T11:04:24.276-04:00] ERROR | connectorMessage \u25B6\uFE0E {"commandType":"std:test-connection","invocationId":"49213a1c-0ba5-48f4-bceb-b6b5b0ec18d5","message":"Connector error ConnectorError: unable to connect, check your connection parameters and API key\\n    at /app/index.js:1:441187\\n    at runMicrotasks (\\u003canonymous\\u003e)\\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\\n    at async /app/index.js:1:441923\\n    at async Connector._exec (/app/index.js:1:5872)\\n    at async /usr/bin/index.js:1:77407 {\\n  type: \'generic\'\\n}\\n","requestId":"cca732a2-084d-4433-9bd5-ed22fa397d8d","version":2}\n[2022-07-14T11:04:24.310-04:00] INFO  | commandOutcome   \u25B6\uFE0E {"commandType":"std:test-connection","completed":true,"elapsed":62,"error":"[ConnectorError] unable to connect, check your connection parameters and API key","message":"command failed","requestId":"cca732a2-084d-4433-9bd5-ed22fa397d8d","version":2}\n[2022-07-14T11:04:24.442-04:00] INFO  | invokeCommand    \u25B6\uFE0E Command execution started : std:test-connection, for connector version 29.\n[2022-07-14T11:04:24.442-04:00] INFO  | invokeCommand    \u25B6\uFE0E Command invocation complete : std:test-connection, for connector version: 29. Elapsed time 144.178\xb5s\n[2022-07-14T11:04:24.812-04:00] INFO  | commandOutcome   \u25B6\uFE0E {"commandType":"std:test-connection","completed":true,"elapsed":369,"message":"command completed","requestId":"cca732a2-084d-4433-9bd5-ed22fa397d8d","version":29}\n[2022-07-14T11:04:24.890-04:00] INFO  | invokeCommand    \u25B6\uFE0E Command execution started : std:test-connection, for connector version 8.\n[2022-07-14T11:04:24.890-04:00] INFO  | invokeCommand    \u25B6\uFE0E Command invocation complete : std:test-connection, for connector version: 8. Elapsed time 125.749\xb5s\n[2022-07-14T11:04:24.941-04:00] INFO  | commandOutcome   \u25B6\uFE0E {"commandType":"std:test-connection","completed":true,"elapsed":49,"message":"command completed","requestId":"cca732a2-084d-4433-9bd5-ed22fa397d8d","version":8}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["To tail the logs to see output as it happens, execute the ",(0,i.jsx)(n.code,{children:"sail conn logs tail"})," command."]}),"\n",(0,i.jsx)(n.p,{children:"It can also be helpful to execute the logs command along with grep to filter your results to a specific connector or text:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ sail conn logs | grep 'connector version 29'\n[2022-07-14T11:04:24.442-04:00] INFO  | invokeCommand    \u25B6\uFE0E Command execution started : std:test-connection, for connector version 29.\n"})}),"\n",(0,i.jsx)(n.h2,{id:"logging-with-consolelog",children:"Logging with console.log"}),"\n",(0,i.jsx)(n.p,{children:"anywhere that you use console.log in your code will expose the output to the logs. The following example has a printed statement in the index.ts file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Connector must be exported as module property named connector\nexport const connector = async () => {\n\n...\n    // Use the vendor SDK, or implement own client as necessary, to initialize a client\n    const airtable = new AirtableClient(config)\n    return createConnector()\n        .stdTestConnection(async (context: Context, input: undefined, res: Response<StdTestConnectionOutput>) => {\n            // print the output to the console\n            console.log('testing connector logging')\n            res.send(await airtable.testConnection())\n        })\n\n...\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["When you run the ",(0,i.jsx)(n.code,{children:"sail conn logs"})," command, you will see the following in the output:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'$ sail conn logs tail\n\n[2022-07-14T11:23:05.418-04:00] INFO  | connectorMessage \u25B6\uFE0E {"commandType":"std:test-connection","invocationId":"e5c73502-2c03-4b22-aa0d-5b67655e8f2d","message":"testing connector logging\\n","requestId":"93370aa663d94bebb509bf5661f18650","version":9}\n[2022-07-14T11:23:06.085-04:00] INFO  | commandOutcome   \u25B6\uFE0E {"commandType":"std:test-connection","completed":true,"elapsed":1071,"message":"command completed","requestId":"93370aa663d94bebb509bf5661f18650","version":9}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"logging-using-the-sdk",children:"Logging using the SDK"}),"\n",(0,i.jsx)(n.p,{children:"Use the built in logging tool to simplify the logging process and enhance your logger\u2019s capabilities. To start, import the logger from the sdk:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"import { logger as SDKLogger } from '@sailpoint/connector-sdk'"})}),"\n",(0,i.jsx)(n.p,{children:"Next, add a simple configuration for the logger to use throughout your application."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/sailpoint-oss/airtable-example-connector/blob/main/src/logger/logger.ts",children:"logger.ts"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import {logger as SDKLogger} from '@sailpoint/connector-sdk';\n\nexport const logger = SDKLogger.child(\n  // specify your connector name\n  {connectorName: 'Airtable'},\n);\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now you can import your logger into your project and start logging."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/sailpoint-oss/airtable-example-connector/blob/main/src/index.ts",children:"index.ts"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// Connector must be exported as module property named connector\nexport const connector = async () => {\n\n...\n    // Use the vendor SDK, or implement own client as necessary, to initialize a client\n    const airtable = new AirtableClient(config)\n    return createConnector()\n        .stdAccountList(async (context: Context, input: undefined, res: Response<StdAccountListOutput>) => {\n            const accounts = await airtable.getAllAccounts()\n\n            // use the logger to send accounts that are fetched\n            logger.info(accounts, "fetched the following accounts from Airtable")\n            for (const account of accounts) {\n                res.send(account.toStdAccountListOutput())\n            }\n        })\n\n...\n\n'})}),"\n",(0,i.jsx)(n.h2,{id:"configuring-the-sdk-to-mask-sensitive-values",children:"Configuring the SDK to Mask Sensitive Values"}),"\n",(0,i.jsxs)(n.p,{children:["The SDK Logger uses ",(0,i.jsx)(n.a,{href:"https://github.com/pinojs/pino",children:"Pino"})," under the hood, which has the built-in capability to search and remove JSON paths that can contain sensitive information."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\uD83D\uDEA7 Never expose any Personal Identifiable Information in any logging operations."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Start by looking at line 116 to 122 in your logger configuration, which looks like the one below:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import {logger as SDKLogger} from '@sailpoint/connector-sdk';\n\nexport const logger = SDKLogger.child(\n  // specify your connector name\n  {connectorName: 'Airtable'},\n  // This is optional for  removing specific information you might not want to be logged\n  {\n    redact: {\n      paths: [\n        '*.password',\n        '*.username',\n        '*.email',\n        '*.id',\n        '*.firstName',\n        '*.lastName',\n        '*.displayName',\n      ],\n      censor: '****',\n    },\n  },\n);\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now compare that with the object you want to remove information from while still logging information in it:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/sailpoint-oss/airtable-example-connector/blob/main/src/models/AirtableAccount.ts",children:"AirtableAccount.ts"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"export class AirtableAccount {\n    airtableId!: string\n    displayName!: string\n    email!: string\n    id!: string\n    department!: string\n    firstName!: string\n    lastName!: string\n    enabled = true\n    locked = false\n    password!: string\n    entitlments!: Array<string>\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now when you log the contents of an ",(0,i.jsx)(n.code,{children:"AirtableAccount"})," object, you will see all the fields redacted. For example, in ",(0,i.jsx)(n.a,{href:"https://github.com/sailpoint-oss/airtable-example-connector/blob/main/src/index.ts",children:"index.ts"})," we log the ",(0,i.jsx)(n.code,{children:"accounts"})," in the following code snippet:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'.stdAccountList(async (context: Context, input: undefined, res: Response<StdAccountListOutput>) => {\n    const accounts = await airtable.getAllAccounts()\n\n    logger.info(accounts, "fetched the following accounts from Airtable")\n    for (const account of accounts) {\n        res.send(account.toStdAccountListOutput())\n    }\n})\n'})}),"\n",(0,i.jsx)(n.p,{children:"which results in the following log output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'$ sail conn logs\n\n[2022-07-14T11:19:29.368-04:00] INFO  | invokeCommand    \u25B6\uFE0E Command invocation complete : std:account:list, for connector version: 8. Elapsed time 111.836542ms\n[2022-07-14T11:19:30.629-04:00] INFO  | connectorMessage \u25B6\uFE0E {"0":{"airtableId":"recdUN76q9KibYMir","department":"sailpoint admins","displayName":"****","email":"****","enabled":true,"entitlments":["administrator","sailpoint"],"firstName":"****","id":"****","lastName":"****","locked":false},"1":{"airtableId":"recXJEzpeySmtlIOF","department":"external","displayName":"****","email":"****","enabled":true,"entitlments":["administrator"],"firstName":"****","id":"****","lastName":"****","locked":false},"2":{"airtableId":"recnsv3VJ1K4k867v","department":"external","displayName":"****","email":"****","enabled":true,"entitlments":[""],"firstName":"****","id":"****","lastName":"****","locked":false},"commandType":"std:account:list","connectorName":"Airtable","invocationId":"541bcc2f-1d42-4c78-b201-de3ea46552e0","message":"fetched the following accounts from Airtable","requestId":"379a8a4510944daf9d02b51a29ae863e","version":8}\n[2022-07-14T11:19:30.678-04:00] INFO  | commandOutcome   \u25B6\uFE0E {"commandType":"std:account:list","completed":true,"elapsed":1290,"message":"command completed","requestId":"379a8a4510944daf9d02b51a29ae863e","version":8}\n'})}),"\n",(0,i.jsx)(n.p,{children:'You can see that any of the PII information has now been transformed into "****"'})]})}function g(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:()=>a,a:()=>c});var o=t(667294);let i={},s=o.createContext(i);function c(e){let n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(s.Provider,{value:n},e.children)}},494846:function(e){e.exports=JSON.parse('{"id":"connectivity/saas-connectivity/in-depth/logging","title":"Logging","description":"You can use this feature to read the logs of your connectors.","source":"@site/docs/connectivity/saas-connectivity/in-depth/logging.md","sourceDirName":"connectivity/saas-connectivity/in-depth","slug":"/connectivity/saas-connectivity/in-depth/logging","permalink":"/docs/connectivity/saas-connectivity/in-depth/logging","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/connectivity/saas-connectivity/in-depth/logging.md","tags":[{"inline":true,"label":"Connectivity","permalink":"/docs/tags/connectivity"}],"version":"current","lastUpdatedBy":"Colin McKibben","lastUpdatedAt":1731592739000,"sidebarPosition":5,"frontMatter":{"id":"logging","title":"Logging","pagination_label":"Logging","sidebar_label":"Logging","sidebar_position":5,"sidebar_class_name":"logging","keywords":["connectivity","connectors","logging"],"description":"You can use this feature to read the logs of your connectors.","slug":"/connectivity/saas-connectivity/in-depth/logging","tags":["Connectivity"]},"sidebar":"openApiSidebar","previous":{"title":"Linting","permalink":"/docs/connectivity/saas-connectivity/in-depth/linting"},"next":{"title":"Handling Rate Limits","permalink":"/docs/connectivity/saas-connectivity/in-depth/handling-rate-limits"}}')}}]);