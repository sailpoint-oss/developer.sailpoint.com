"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["642829"],{402250:function(t,e,n){n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var r=n(465359),i=n(785893),s=n(250065);let o={id:"beta-multi-host-integration",title:"MultiHostIntegration",pagination_label:"MultiHostIntegration",sidebar_label:"MultiHostIntegration",sidebar_class_name:"gosdk",keywords:["go","Golang","sdk","MultiHostIntegration","BetaMultiHostIntegration"],slug:"/tools/sdk/go/beta/methods/multi-host-integration",tags:["SDK","Software Development Kit","MultiHostIntegration","BetaMultiHostIntegration"]},l="MultiHostIntegrationAPI",a={},d=[{value:"create-multi-host-integration",id:"create-multi-host-integration",level:2},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Other Parameters",id:"other-parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example",level:3},{value:"create-sources-within-multi-host",id:"create-sources-within-multi-host",level:2},{value:"Path Parameters",id:"path-parameters-1",level:3},{value:"Other Parameters",id:"other-parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-1",level:3},{value:"delete-multi-host",id:"delete-multi-host",level:2},{value:"Path Parameters",id:"path-parameters-2",level:3},{value:"Other Parameters",id:"other-parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-2",level:3},{value:"get-acct-aggregation-groups",id:"get-acct-aggregation-groups",level:2},{value:"Path Parameters",id:"path-parameters-3",level:3},{value:"Other Parameters",id:"other-parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-3",level:3},{value:"get-entitlement-aggregation-groups",id:"get-entitlement-aggregation-groups",level:2},{value:"Path Parameters",id:"path-parameters-4",level:3},{value:"Other Parameters",id:"other-parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3},{value:"Example",id:"example-4",level:3},{value:"get-multi-host-integrations",id:"get-multi-host-integrations",level:2},{value:"Path Parameters",id:"path-parameters-5",level:3},{value:"Other Parameters",id:"other-parameters-5",level:3},{value:"Return type",id:"return-type-5",level:3},{value:"HTTP request headers",id:"http-request-headers-5",level:3},{value:"Example",id:"example-5",level:3},{value:"get-multi-host-integrations-list",id:"get-multi-host-integrations-list",level:2},{value:"Path Parameters",id:"path-parameters-6",level:3},{value:"Other Parameters",id:"other-parameters-6",level:3},{value:"Return type",id:"return-type-6",level:3},{value:"HTTP request headers",id:"http-request-headers-6",level:3},{value:"Example",id:"example-6",level:3},{value:"get-multi-host-source-creation-errors",id:"get-multi-host-source-creation-errors",level:2},{value:"Path Parameters",id:"path-parameters-7",level:3},{value:"Other Parameters",id:"other-parameters-7",level:3},{value:"Return type",id:"return-type-7",level:3},{value:"HTTP request headers",id:"http-request-headers-7",level:3},{value:"Example",id:"example-7",level:3},{value:"get-multihost-integration-types",id:"get-multihost-integration-types",level:2},{value:"Path Parameters",id:"path-parameters-8",level:3},{value:"Other Parameters",id:"other-parameters-8",level:3},{value:"Return type",id:"return-type-8",level:3},{value:"HTTP request headers",id:"http-request-headers-8",level:3},{value:"Example",id:"example-8",level:3},{value:"get-sources-within-multi-host",id:"get-sources-within-multi-host",level:2},{value:"Path Parameters",id:"path-parameters-9",level:3},{value:"Other Parameters",id:"other-parameters-9",level:3},{value:"Return type",id:"return-type-9",level:3},{value:"HTTP request headers",id:"http-request-headers-9",level:3},{value:"Example",id:"example-9",level:3},{value:"test-connection-multi-host-sources",id:"test-connection-multi-host-sources",level:2},{value:"Path Parameters",id:"path-parameters-10",level:3},{value:"Other Parameters",id:"other-parameters-10",level:3},{value:"Return type",id:"return-type-10",level:3},{value:"HTTP request headers",id:"http-request-headers-10",level:3},{value:"Example",id:"example-10",level:3},{value:"test-source-connection-multihost",id:"test-source-connection-multihost",level:2},{value:"Path Parameters",id:"path-parameters-11",level:3},{value:"Other Parameters",id:"other-parameters-11",level:3},{value:"Return type",id:"return-type-11",level:3},{value:"HTTP request headers",id:"http-request-headers-11",level:3},{value:"Example",id:"example-11",level:3},{value:"update-multi-host-sources",id:"update-multi-host-sources",level:2},{value:"Path Parameters",id:"path-parameters-12",level:3},{value:"Other Parameters",id:"other-parameters-12",level:3},{value:"Return type",id:"return-type-12",level:3},{value:"HTTP request headers",id:"http-request-headers-12",level:3},{value:"Example",id:"example-12",level:3}];function h(t){let e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"multihostintegrationapi",children:"MultiHostIntegrationAPI"})}),"\n",(0,i.jsx)(e.p,{children:"Use this API to build a Multi-Host Integration.\nMulti-Host Integration will help customers to configure and manage similar type of target system in Identity Security Cloud.\nIn Identity Security Cloud, administrators can create a Multi-Host Integration by going to Admin > Connections > Multi-Host Sources and selecting 'Create.'"}),"\n",(0,i.jsxs)(e.p,{children:["All URIs are relative to ",(0,i.jsx)(e.em,{children:(0,i.jsx)(e.a,{href:"https://sailpoint.api.identitynow.com/beta",children:"https://sailpoint.api.identitynow.com/beta"})})]}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Method"}),(0,i.jsx)(e.th,{children:"HTTP request"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"#create-multi-host-integration",children:(0,i.jsx)(e.strong,{children:"create-multi-host-integration"})})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"Post"})," ",(0,i.jsx)(e.code,{children:"/multihosts"})]}),(0,i.jsx)(e.td,{children:"Create multi-host integration"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"#create-sources-within-multi-host",children:(0,i.jsx)(e.strong,{children:"create-sources-within-multi-host"})})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"Post"})," ",(0,i.jsx)(e.code,{children:"/multihosts/{multihostId}"})]}),(0,i.jsx)(e.td,{children:"Create sources within multi-host integration"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"#delete-multi-host",children:(0,i.jsx)(e.strong,{children:"delete-multi-host"})})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"Delete"})," ",(0,i.jsx)(e.code,{children:"/multihosts/{multihostId}"})]}),(0,i.jsx)(e.td,{children:"Delete multi-host integration"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"#get-acct-aggregation-groups",children:(0,i.jsx)(e.strong,{children:"get-acct-aggregation-groups"})})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"Get"})," ",(0,i.jsx)(e.code,{children:"/multihosts/{multihostId}/acctAggregationGroups"})]}),(0,i.jsx)(e.td,{children:"Get account aggregation groups within multi-host integration id"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"#get-entitlement-aggregation-groups",children:(0,i.jsx)(e.strong,{children:"get-entitlement-aggregation-groups"})})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"Get"})," ",(0,i.jsx)(e.code,{children:"/multihosts/{multiHostId}/entitlementAggregationGroups"})]}),(0,i.jsx)(e.td,{children:"Get entitlement aggregation groups within multi-host integration id"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"#get-multi-host-integrations",children:(0,i.jsx)(e.strong,{children:"get-multi-host-integrations"})})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"Get"})," ",(0,i.jsx)(e.code,{children:"/multihosts/{multihostId}"})]}),(0,i.jsx)(e.td,{children:"Get multi-host integration by id"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"#get-multi-host-integrations-list",children:(0,i.jsx)(e.strong,{children:"get-multi-host-integrations-list"})})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"Get"})," ",(0,i.jsx)(e.code,{children:"/multihosts"})]}),(0,i.jsx)(e.td,{children:"List all existing multi-host integrations"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"#get-multi-host-source-creation-errors",children:(0,i.jsx)(e.strong,{children:"get-multi-host-source-creation-errors"})})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"Get"})," ",(0,i.jsx)(e.code,{children:"/multihosts/{multiHostId}/sources/errors"})]}),(0,i.jsx)(e.td,{children:"List multi-host source creation errors"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"#get-multihost-integration-types",children:(0,i.jsx)(e.strong,{children:"get-multihost-integration-types"})})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"Get"})," ",(0,i.jsx)(e.code,{children:"/multihosts/types"})]}),(0,i.jsx)(e.td,{children:"List multi-host integration types"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"#get-sources-within-multi-host",children:(0,i.jsx)(e.strong,{children:"get-sources-within-multi-host"})})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"Get"})," ",(0,i.jsx)(e.code,{children:"/multihosts/{multihostId}/sources"})]}),(0,i.jsx)(e.td,{children:"List sources within multi-host integration"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"#test-connection-multi-host-sources",children:(0,i.jsx)(e.strong,{children:"test-connection-multi-host-sources"})})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"Post"})," ",(0,i.jsx)(e.code,{children:"/multihosts/{multihostId}/sources/testConnection"})]}),(0,i.jsx)(e.td,{children:"Test configuration for multi-host integration"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"#test-source-connection-multihost",children:(0,i.jsx)(e.strong,{children:"test-source-connection-multihost"})})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"Get"})," ",(0,i.jsx)(e.code,{children:"/multihosts/{multihostId}/sources/{sourceId}/testConnection"})]}),(0,i.jsx)(e.td,{children:"Test configuration for multi-host integration's single source"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"#update-multi-host-sources",children:(0,i.jsx)(e.strong,{children:"update-multi-host-sources"})})}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"Patch"})," ",(0,i.jsx)(e.code,{children:"/multihosts/{multihostId}"})]}),(0,i.jsx)(e.td,{children:"Update multi-host integration"})]})]})]}),"\n",(0,i.jsx)(e.h2,{id:"create-multi-host-integration",children:"create-multi-host-integration"}),"\n",(0,i.jsx)(e.p,{children:"Create multi-host integration\nThis API is used to create Multi-Host Integration. Multi-host Integration holds similar types of sources."}),"\n",(0,i.jsx)(e.p,{children:"A token with Org Admin or Multi-Host Admin authority is required to access this endpoint."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/beta/create-multi-host-integration",children:"API Spec"})}),"\n",(0,i.jsx)(e.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,i.jsx)(e.h3,{id:"other-parameters",children:"Other Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Other parameters are passed through a pointer to a apiCreateMultiHostIntegrationRequest struct via the builder pattern"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"multiHostIntegrationsCreate"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"../models/multi-host-integrations-create",children:(0,i.jsx)(e.strong,{children:"MultiHostIntegrationsCreate"})})}),(0,i.jsx)(e.td,{children:"The specifics of the Multi-Host Integration to create"}),(0,i.jsx)(e.td,{})]})})]}),"\n",(0,i.jsx)(e.h3,{id:"return-type",children:"Return type"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"../models/multi-host-integrations",children:(0,i.jsx)(e.strong,{children:"MultiHostIntegrations"})})}),"\n",(0,i.jsx)(e.h3,{id:"http-request-headers",children:"HTTP request headers"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    multihostintegrationscreate := []byte(`{\n          "owner" : {\n            "name" : "MyName",\n            "id" : "2c91808568c529c60168cca6f90c1313",\n            "type" : "IDENTITY"\n          },\n          "managementWorkgroup" : {\n            "name" : "My Management Workgroup",\n            "id" : "2c91808568c529c60168cca6f90c2222",\n            "type" : "GOVERNANCE_GROUP"\n          },\n          "cluster" : {\n            "name" : "Corporate Cluster",\n            "id" : "2c9180866166b5b0016167c32ef31a66",\n            "type" : "CLUSTER"\n          },\n          "connector" : "multihost-microsoft-sql-server",\n          "connectorAttributes" : {\n            "maxSourcesPerAggGroup" : 10,\n            "maxAllowedSources" : 300\n          },\n          "created" : "2022-02-08T14:50:03.827Z",\n          "name" : "My Multi-Host Integration",\n          "description" : "This is the Multi-Host Integration.",\n          "modified" : "2024-01-23T18:08:50.897Z"\n        }`) // MultiHostIntegrationsCreate | The specifics of the Multi-Host Integration to create\n\n    var multiHostIntegrationsCreate beta.MultiHostIntegrationsCreate\n    if err := json.Unmarshal(multihostintegrationscreate, &multiHostIntegrationsCreate); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.CreateMultiHostIntegration(context.Background()).MultiHostIntegrationsCreate(multiHostIntegrationsCreate).Execute()\n	  //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.CreateMultiHostIntegration(context.Background()).MultiHostIntegrationsCreate(multiHostIntegrationsCreate).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.CreateMultiHostIntegration``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `CreateMultiHostIntegration`: MultiHostIntegrations\n    fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.CreateMultiHostIntegration`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(e.h2,{id:"create-sources-within-multi-host",children:"create-sources-within-multi-host"}),"\n",(0,i.jsx)(e.p,{children:"Create sources within multi-host integration\nThis API is used to create sources within Multi-Host Integration. Multi-Host Integration holds similar types of sources."}),"\n",(0,i.jsx)(e.p,{children:"A token with Org Admin or Multi-Host Admin authority is required to access this endpoint."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/beta/create-sources-within-multi-host",children:"API Spec"})}),"\n",(0,i.jsx)(e.h3,{id:"path-parameters-1",children:"Path Parameters"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"ctx"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"context.Context"})}),(0,i.jsx)(e.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"multihostId"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsx)(e.td,{children:"ID of the Multi-Host Integration."}),(0,i.jsx)(e.td,{})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"other-parameters-1",children:"Other Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Other parameters are passed through a pointer to a apiCreateSourcesWithinMultiHostRequest struct via the builder pattern"}),"\n",(0,i.jsx)(e.table,{children:(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"multiHostIntegrationsCreateSources"})," | ",(0,i.jsx)(e.a,{href:"../models/multi-host-integrations-create-sources",children:(0,i.jsx)(e.strong,{children:"[]MultiHostIntegrationsCreateSources"})})," | The specifics of the sources to create within Multi-Host Integration. |"]}),"\n",(0,i.jsx)(e.h3,{id:"return-type-1",children:"Return type"}),"\n",(0,i.jsx)(e.p,{children:"(empty response body)"}),"\n",(0,i.jsx)(e.h3,{id:"http-request-headers-1",children:"HTTP request headers"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    multihostId := `2c91808568c529c60168cca6f90c1326` // string | ID of the Multi-Host Integration. # string | ID of the Multi-Host Integration.\n    multihostintegrationscreatesources := []byte(``) // []MultiHostIntegrationsCreateSources | The specifics of the sources to create within Multi-Host Integration.\n\n    var multiHostIntegrationsCreateSources []beta.MultiHostIntegrationsCreateSources\n    if err := json.Unmarshal(multihostintegrationscreatesources, &multiHostIntegrationsCreateSources); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    r, err := apiClient.Beta.MultiHostIntegrationAPI.CreateSourcesWithinMultiHost(context.Background(), multihostId).MultiHostIntegrationsCreateSources(multiHostIntegrationsCreateSources).Execute()\n	  //r, err := apiClient.Beta.MultiHostIntegrationAPI.CreateSourcesWithinMultiHost(context.Background(), multihostId).MultiHostIntegrationsCreateSources(multiHostIntegrationsCreateSources).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.CreateSourcesWithinMultiHost``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    \n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(e.h2,{id:"delete-multi-host",children:"delete-multi-host"}),"\n",(0,i.jsx)(e.p,{children:"Delete multi-host integration\nDelete an existing Multi-Host Integration by ID."}),"\n",(0,i.jsx)(e.p,{children:"A token with Org Admin or Multi Host Admin authority is required to access this endpoint."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/beta/delete-multi-host",children:"API Spec"})}),"\n",(0,i.jsx)(e.h3,{id:"path-parameters-2",children:"Path Parameters"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"ctx"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"context.Context"})}),(0,i.jsx)(e.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"multihostId"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsx)(e.td,{children:"ID of Multi-Host Integration to delete."}),(0,i.jsx)(e.td,{})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"other-parameters-2",children:"Other Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Other parameters are passed through a pointer to a apiDeleteMultiHostRequest struct via the builder pattern"}),"\n",(0,i.jsx)(e.table,{children:(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})})}),"\n",(0,i.jsx)(e.h3,{id:"return-type-2",children:"Return type"}),"\n",(0,i.jsx)(e.p,{children:"(empty response body)"}),"\n",(0,i.jsx)(e.h3,{id:"http-request-headers-2",children:"HTTP request headers"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example-2",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    multihostId := `2c91808568c529c60168cca6f90c1326` // string | ID of Multi-Host Integration to delete. # string | ID of Multi-Host Integration to delete.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    r, err := apiClient.Beta.MultiHostIntegrationAPI.DeleteMultiHost(context.Background(), multihostId).Execute()\n	  //r, err := apiClient.Beta.MultiHostIntegrationAPI.DeleteMultiHost(context.Background(), multihostId).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.DeleteMultiHost``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    \n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(e.h2,{id:"get-acct-aggregation-groups",children:"get-acct-aggregation-groups"}),"\n",(0,i.jsx)(e.p,{children:"Get account aggregation groups within multi-host integration id\nThis API will return array of account aggregation groups within provided Multi-Host Integration ID."}),"\n",(0,i.jsx)(e.p,{children:"A token with Org Admin or Multi-Host Admin authority is required to access this endpoint."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-acct-aggregation-groups",children:"API Spec"})}),"\n",(0,i.jsx)(e.h3,{id:"path-parameters-3",children:"Path Parameters"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"ctx"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"context.Context"})}),(0,i.jsx)(e.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"multihostId"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsx)(e.td,{children:"ID of the Multi-Host Integration to update"}),(0,i.jsx)(e.td,{})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"other-parameters-3",children:"Other Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Other parameters are passed through a pointer to a apiGetAcctAggregationGroupsRequest struct via the builder pattern"}),"\n",(0,i.jsx)(e.table,{children:(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})})}),"\n",(0,i.jsx)(e.h3,{id:"return-type-3",children:"Return type"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"../models/multi-host-integrations-agg-schedule-update",children:(0,i.jsx)(e.strong,{children:"MultiHostIntegrationsAggScheduleUpdate"})})}),"\n",(0,i.jsx)(e.h3,{id:"http-request-headers-3",children:"HTTP request headers"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example-3",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    multihostId := `aMultiHostId` // string | ID of the Multi-Host Integration to update # string | ID of the Multi-Host Integration to update\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetAcctAggregationGroups(context.Background(), multihostId).Execute()\n	  //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetAcctAggregationGroups(context.Background(), multihostId).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetAcctAggregationGroups``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetAcctAggregationGroups`: MultiHostIntegrationsAggScheduleUpdate\n    fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetAcctAggregationGroups`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(e.h2,{id:"get-entitlement-aggregation-groups",children:"get-entitlement-aggregation-groups"}),"\n",(0,i.jsx)(e.p,{children:"Get entitlement aggregation groups within multi-host integration id\nThis API will return array of aggregation groups within provided Multi-Host Integration ID."}),"\n",(0,i.jsx)(e.p,{children:"A token with Org Admin or Multi-Host Admin authority is required to access this endpoint."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-entitlement-aggregation-groups",children:"API Spec"})}),"\n",(0,i.jsx)(e.h3,{id:"path-parameters-4",children:"Path Parameters"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"ctx"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"context.Context"})}),(0,i.jsx)(e.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"multiHostId"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsx)(e.td,{children:"ID of the Multi-Host Integration to update"}),(0,i.jsx)(e.td,{})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"other-parameters-4",children:"Other Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Other parameters are passed through a pointer to a apiGetEntitlementAggregationGroupsRequest struct via the builder pattern"}),"\n",(0,i.jsx)(e.table,{children:(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})})}),"\n",(0,i.jsx)(e.h3,{id:"return-type-4",children:"Return type"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"../models/multi-host-integrations-agg-schedule-update",children:(0,i.jsx)(e.strong,{children:"MultiHostIntegrationsAggScheduleUpdate"})})}),"\n",(0,i.jsx)(e.h3,{id:"http-request-headers-4",children:"HTTP request headers"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example-4",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    multiHostId := `aMultiHostId` // string | ID of the Multi-Host Integration to update # string | ID of the Multi-Host Integration to update\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetEntitlementAggregationGroups(context.Background(), multiHostId).Execute()\n	  //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetEntitlementAggregationGroups(context.Background(), multiHostId).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetEntitlementAggregationGroups``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetEntitlementAggregationGroups`: MultiHostIntegrationsAggScheduleUpdate\n    fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetEntitlementAggregationGroups`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(e.h2,{id:"get-multi-host-integrations",children:"get-multi-host-integrations"}),"\n",(0,i.jsx)(e.p,{children:"Get multi-host integration by id\nGet an existing Multi-Host Integration."}),"\n",(0,i.jsx)(e.p,{children:"A token with Org Admin or Multi-Host Integration Admin authority is required to access this endpoint."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-multi-host-integrations",children:"API Spec"})}),"\n",(0,i.jsx)(e.h3,{id:"path-parameters-5",children:"Path Parameters"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"ctx"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"context.Context"})}),(0,i.jsx)(e.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"multihostId"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsx)(e.td,{children:"ID of the Multi-Host Integration."}),(0,i.jsx)(e.td,{})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"other-parameters-5",children:"Other Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Other parameters are passed through a pointer to a apiGetMultiHostIntegrationsRequest struct via the builder pattern"}),"\n",(0,i.jsx)(e.table,{children:(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})})}),"\n",(0,i.jsx)(e.h3,{id:"return-type-5",children:"Return type"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"../models/multi-host-integrations",children:(0,i.jsx)(e.strong,{children:"MultiHostIntegrations"})})}),"\n",(0,i.jsx)(e.h3,{id:"http-request-headers-5",children:"HTTP request headers"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example-5",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    multihostId := `2c91808568c529c60168cca6f90c1326` // string | ID of the Multi-Host Integration. # string | ID of the Multi-Host Integration.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultiHostIntegrations(context.Background(), multihostId).Execute()\n	  //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultiHostIntegrations(context.Background(), multihostId).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetMultiHostIntegrations``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetMultiHostIntegrations`: MultiHostIntegrations\n    fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetMultiHostIntegrations`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(e.h2,{id:"get-multi-host-integrations-list",children:"get-multi-host-integrations-list"}),"\n",(0,i.jsx)(e.p,{children:"List all existing multi-host integrations\nGet a list of Multi-Host Integrations."}),"\n",(0,i.jsx)(e.p,{children:"A token with Org Admin or Multi-Host Admin authority is required to access this endpoint."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-multi-host-integrations-list",children:"API Spec"})}),"\n",(0,i.jsx)(e.h3,{id:"path-parameters-6",children:"Path Parameters"}),"\n",(0,i.jsx)(e.h3,{id:"other-parameters-6",children:"Other Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Other parameters are passed through a pointer to a apiGetMultiHostIntegrationsListRequest struct via the builder pattern"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"offset"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"int32"})}),(0,i.jsxs)(e.td,{children:["Offset into the full result set. Usually specified with ",(0,i.jsx)(e.em,{children:"limit"})," to paginate through the results. See ",(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,i.jsx)(e.td,{children:"[default to 0]"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"limit"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"int32"})}),(0,i.jsxs)(e.td,{children:["Max number of results to return. See ",(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,i.jsx)(e.td,{children:"[default to 250]"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"sorters"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsxs)(e.td,{children:["Sort results using the standard syntax described in ",(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results",children:"V3 API Standard Collection Parameters"}),"  Sorting is supported for the following fields: ",(0,i.jsx)(e.strong,{children:"name"})]}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"filters"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsxs)(e.td,{children:["Filter results using the standard syntax described in ",(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results",children:"V3 API Standard Collection Parameters"}),"  Filtering is supported for the following fields and operators:  ",(0,i.jsx)(e.strong,{children:"type"}),": ",(0,i.jsx)(e.em,{children:"in"}),"  ",(0,i.jsx)(e.strong,{children:"forSubAdminId"}),": ",(0,i.jsx)(e.em,{children:"in"})]}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"count"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"bool"})}),(0,i.jsxs)(e.td,{children:["If ",(0,i.jsx)(e.em,{children:"true"})," it will populate the ",(0,i.jsx)(e.em,{children:"X-Total-Count"})," response header with the number of results that would be returned if ",(0,i.jsx)(e.em,{children:"limit"})," and ",(0,i.jsx)(e.em,{children:"offset"})," were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send ",(0,i.jsx)(e.strong,{children:"count=true"})," if that value will not be used.  See ",(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,i.jsx)(e.td,{children:"[default to false]"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"forSubadmin"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsxs)(e.td,{children:["If provided, filters the returned list according to what is visible to the indicated ROLE_SUBADMIN Identity or SOURCE_SUBADMIN identity.  The value of the parameter is either an Identity ID, or the special value ",(0,i.jsx)(e.strong,{children:"me"}),", which is shorthand for the calling Identity's ID.  A 400 Bad Request error is returned if the ",(0,i.jsx)(e.strong,{children:"for-subadmin"})," parameter is specified for an Identity that is not a subadmin."]}),(0,i.jsx)(e.td,{})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"return-type-6",children:"Return type"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"../models/multi-host-integrations",children:(0,i.jsx)(e.strong,{children:"[]MultiHostIntegrations"})})}),"\n",(0,i.jsx)(e.h3,{id:"http-request-headers-6",children:"HTTP request headers"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example-6",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)\n    limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)\n    sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional)\n    filters := `id eq 2c91808b6ef1d43e016efba0ce470904` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **type**: *in*  **forSubAdminId**: *in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **type**: *in*  **forSubAdminId**: *in* (optional)\n    count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)\n    forSubadmin := `5168015d32f890ca15812c9180835d2e` // string | If provided, filters the returned list according to what is visible to the indicated ROLE_SUBADMIN Identity or SOURCE_SUBADMIN identity.  The value of the parameter is either an Identity ID, or the special value **me**, which is shorthand for the calling Identity\'s ID.  A 400 Bad Request error is returned if the **for-subadmin** parameter is specified for an Identity that is not a subadmin. (optional) # string | If provided, filters the returned list according to what is visible to the indicated ROLE_SUBADMIN Identity or SOURCE_SUBADMIN identity.  The value of the parameter is either an Identity ID, or the special value **me**, which is shorthand for the calling Identity\'s ID.  A 400 Bad Request error is returned if the **for-subadmin** parameter is specified for an Identity that is not a subadmin. (optional)\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultiHostIntegrationsList(context.Background()).Execute()\n	  //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultiHostIntegrationsList(context.Background()).Offset(offset).Limit(limit).Sorters(sorters).Filters(filters).Count(count).ForSubadmin(forSubadmin).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetMultiHostIntegrationsList``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetMultiHostIntegrationsList`: []MultiHostIntegrations\n    fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetMultiHostIntegrationsList`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(e.h2,{id:"get-multi-host-source-creation-errors",children:"get-multi-host-source-creation-errors"}),"\n",(0,i.jsx)(e.p,{children:"List multi-host source creation errors\nGet a list of sources creation errors within Multi-Host Integration ID."}),"\n",(0,i.jsx)(e.p,{children:"A token with Org Admin or Multi-Host Admin authority is required to access this endpoint."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-multi-host-source-creation-errors",children:"API Spec"})}),"\n",(0,i.jsx)(e.h3,{id:"path-parameters-7",children:"Path Parameters"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"ctx"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"context.Context"})}),(0,i.jsx)(e.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"multiHostId"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsx)(e.td,{children:"ID of the Multi-Host Integration"}),(0,i.jsx)(e.td,{})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"other-parameters-7",children:"Other Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Other parameters are passed through a pointer to a apiGetMultiHostSourceCreationErrorsRequest struct via the builder pattern"}),"\n",(0,i.jsx)(e.table,{children:(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})})}),"\n",(0,i.jsx)(e.h3,{id:"return-type-7",children:"Return type"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"../models/source-creation-errors",children:(0,i.jsx)(e.strong,{children:"[]SourceCreationErrors"})})}),"\n",(0,i.jsx)(e.h3,{id:"http-request-headers-7",children:"HTTP request headers"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example-7",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    multiHostId := `004091cb79b04636b88662afa50a4440` // string | ID of the Multi-Host Integration # string | ID of the Multi-Host Integration\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultiHostSourceCreationErrors(context.Background(), multiHostId).Execute()\n	  //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultiHostSourceCreationErrors(context.Background(), multiHostId).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetMultiHostSourceCreationErrors``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetMultiHostSourceCreationErrors`: []SourceCreationErrors\n    fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetMultiHostSourceCreationErrors`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(e.h2,{id:"get-multihost-integration-types",children:"get-multihost-integration-types"}),"\n",(0,i.jsx)(e.p,{children:"List multi-host integration types\nThis API endpoint returns the current list of supported Multi-Host Integration types."}),"\n",(0,i.jsx)(e.p,{children:"A token with Org Admin or Multi-Host Admin authority is required to access this endpoint."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-multihost-integration-types",children:"API Spec"})}),"\n",(0,i.jsx)(e.h3,{id:"path-parameters-8",children:"Path Parameters"}),"\n",(0,i.jsx)(e.p,{children:"This endpoint does not need any parameter."}),"\n",(0,i.jsx)(e.h3,{id:"other-parameters-8",children:"Other Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Other parameters are passed through a pointer to a apiGetMultihostIntegrationTypesRequest struct via the builder pattern"}),"\n",(0,i.jsx)(e.h3,{id:"return-type-8",children:"Return type"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"../models/multi-host-integration-template-type",children:(0,i.jsx)(e.strong,{children:"[]MultiHostIntegrationTemplateType"})})}),"\n",(0,i.jsx)(e.h3,{id:"http-request-headers-8",children:"HTTP request headers"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example-8",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultihostIntegrationTypes(context.Background()).Execute()\n	  //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultihostIntegrationTypes(context.Background()).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetMultihostIntegrationTypes``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetMultihostIntegrationTypes`: []MultiHostIntegrationTemplateType\n    fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetMultihostIntegrationTypes`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(e.h2,{id:"get-sources-within-multi-host",children:"get-sources-within-multi-host"}),"\n",(0,i.jsx)(e.p,{children:"List sources within multi-host integration\nGet a list of sources within Multi-Host Integration ID."}),"\n",(0,i.jsx)(e.p,{children:"A token with Org Admin or Multi-Host Admin authority is required to access this endpoint."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-sources-within-multi-host",children:"API Spec"})}),"\n",(0,i.jsx)(e.h3,{id:"path-parameters-9",children:"Path Parameters"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"ctx"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"context.Context"})}),(0,i.jsx)(e.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"multihostId"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsx)(e.td,{children:"ID of the Multi-Host Integration to update"}),(0,i.jsx)(e.td,{})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"other-parameters-9",children:"Other Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Other parameters are passed through a pointer to a apiGetSourcesWithinMultiHostRequest struct via the builder pattern"}),"\n",(0,i.jsx)(e.table,{children:(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"offset"})," | ",(0,i.jsx)(e.strong,{children:"int32"})," | Offset into the full result set. Usually specified with ",(0,i.jsx)(e.em,{children:"limit"})," to paginate through the results. See ",(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information. | [default to 0]\n",(0,i.jsx)(e.strong,{children:"limit"})," | ",(0,i.jsx)(e.strong,{children:"int32"})," | Max number of results to return. See ",(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information. | [default to 250]\n",(0,i.jsx)(e.strong,{children:"sorters"})," | ",(0,i.jsx)(e.strong,{children:"string"})," | Sort results using the standard syntax described in ",(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results",children:"V3 API Standard Collection Parameters"}),"  Sorting is supported for the following fields: ",(0,i.jsx)(e.strong,{children:"name"})," |\n",(0,i.jsx)(e.strong,{children:"filters"})," | ",(0,i.jsx)(e.strong,{children:"string"})," | Filter results using the standard syntax described in ",(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results",children:"V3 API Standard Collection Parameters"}),"  Filtering is supported for the following fields and operators:  ",(0,i.jsx)(e.strong,{children:"id"}),": ",(0,i.jsx)(e.em,{children:"in"})," |\n",(0,i.jsx)(e.strong,{children:"count"})," | ",(0,i.jsx)(e.strong,{children:"bool"})," | If ",(0,i.jsx)(e.em,{children:"true"})," it will populate the ",(0,i.jsx)(e.em,{children:"X-Total-Count"})," response header with the number of results that would be returned if ",(0,i.jsx)(e.em,{children:"limit"})," and ",(0,i.jsx)(e.em,{children:"offset"})," were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send ",(0,i.jsx)(e.strong,{children:"count=true"})," if that value will not be used.  See ",(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information. | [default to false]"]}),"\n",(0,i.jsx)(e.h3,{id:"return-type-9",children:"Return type"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"../models/multi-host-sources",children:(0,i.jsx)(e.strong,{children:"[]MultiHostSources"})})}),"\n",(0,i.jsx)(e.h3,{id:"http-request-headers-9",children:"HTTP request headers"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example-9",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    multihostId := `aMultiHostId` // string | ID of the Multi-Host Integration to update # string | ID of the Multi-Host Integration to update\n    offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)\n    limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)\n    sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional)\n    filters := `id eq 2c91808b6ef1d43e016efba0ce470904` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *in* (optional)\n    count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetSourcesWithinMultiHost(context.Background(), multihostId).Execute()\n	  //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetSourcesWithinMultiHost(context.Background(), multihostId).Offset(offset).Limit(limit).Sorters(sorters).Filters(filters).Count(count).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetSourcesWithinMultiHost``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetSourcesWithinMultiHost`: []MultiHostSources\n    fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetSourcesWithinMultiHost`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(e.h2,{id:"test-connection-multi-host-sources",children:"test-connection-multi-host-sources"}),"\n",(0,i.jsx)(e.p,{children:"Test configuration for multi-host integration\nThis endpoint performs a more detailed validation of the Multi-Host Integration's configuration."}),"\n",(0,i.jsx)(e.p,{children:"A token with Org Admin or Multi-Host Admin authority is required to access this endpoint."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/beta/test-connection-multi-host-sources",children:"API Spec"})}),"\n",(0,i.jsx)(e.h3,{id:"path-parameters-10",children:"Path Parameters"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"ctx"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"context.Context"})}),(0,i.jsx)(e.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"multihostId"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsx)(e.td,{children:"ID of the Multi-Host Integration"}),(0,i.jsx)(e.td,{})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"other-parameters-10",children:"Other Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Other parameters are passed through a pointer to a apiTestConnectionMultiHostSourcesRequest struct via the builder pattern"}),"\n",(0,i.jsx)(e.table,{children:(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})})}),"\n",(0,i.jsx)(e.h3,{id:"return-type-10",children:"Return type"}),"\n",(0,i.jsx)(e.p,{children:"(empty response body)"}),"\n",(0,i.jsx)(e.h3,{id:"http-request-headers-10",children:"HTTP request headers"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example-10",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    multihostId := `2c91808568c529c60168cca6f90c1324` // string | ID of the Multi-Host Integration # string | ID of the Multi-Host Integration\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    r, err := apiClient.Beta.MultiHostIntegrationAPI.TestConnectionMultiHostSources(context.Background(), multihostId).Execute()\n	  //r, err := apiClient.Beta.MultiHostIntegrationAPI.TestConnectionMultiHostSources(context.Background(), multihostId).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.TestConnectionMultiHostSources``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    \n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(e.h2,{id:"test-source-connection-multihost",children:"test-source-connection-multihost"}),"\n",(0,i.jsx)(e.p,{children:"Test configuration for multi-host integration's single source\nThis endpoint performs a more detailed validation of the source's configuration."}),"\n",(0,i.jsx)(e.p,{children:"A token with Org Admin or Multi-Host Admin authority is required to access this endpoint."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/beta/test-source-connection-multihost",children:"API Spec"})}),"\n",(0,i.jsx)(e.h3,{id:"path-parameters-11",children:"Path Parameters"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"ctx"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"context.Context"})}),(0,i.jsx)(e.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"multihostId"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsx)(e.td,{children:"ID of the Multi-Host Integration"}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"sourceId"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsx)(e.td,{children:"ID of the source within the Multi-Host Integration"}),(0,i.jsx)(e.td,{})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"other-parameters-11",children:"Other Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Other parameters are passed through a pointer to a apiTestSourceConnectionMultihostRequest struct via the builder pattern"}),"\n",(0,i.jsx)(e.table,{children:(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})})}),"\n",(0,i.jsx)(e.h3,{id:"return-type-11",children:"Return type"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"../models/test-source-connection-multihost200-response",children:(0,i.jsx)(e.strong,{children:"TestSourceConnectionMultihost200Response"})})}),"\n",(0,i.jsx)(e.h3,{id:"http-request-headers-11",children:"HTTP request headers"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example-11",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    multihostId := `2c91808568c529c60168cca6f90c1326` // string | ID of the Multi-Host Integration # string | ID of the Multi-Host Integration\n    sourceId := `2c91808568c529f60168cca6f90c1324` // string | ID of the source within the Multi-Host Integration # string | ID of the source within the Multi-Host Integration\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.TestSourceConnectionMultihost(context.Background(), multihostId, sourceId).Execute()\n	  //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.TestSourceConnectionMultihost(context.Background(), multihostId, sourceId).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.TestSourceConnectionMultihost``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `TestSourceConnectionMultihost`: TestSourceConnectionMultihost200Response\n    fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.TestSourceConnectionMultihost`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(e.h2,{id:"update-multi-host-sources",children:"update-multi-host-sources"}),"\n",(0,i.jsx)(e.p,{children:"Update multi-host integration\nUpdate existing sources within Multi-Host Integration."}),"\n",(0,i.jsx)(e.p,{children:"A token with Org Admin or Multi-Host Admin authority is required to access this endpoint."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/beta/update-multi-host-sources",children:"API Spec"})}),"\n",(0,i.jsx)(e.h3,{id:"path-parameters-12",children:"Path Parameters"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"ctx"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"context.Context"})}),(0,i.jsx)(e.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"multihostId"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"string"})}),(0,i.jsx)(e.td,{children:"ID of the Multi-Host Integration to update."}),(0,i.jsx)(e.td,{})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"other-parameters-12",children:"Other Parameters"}),"\n",(0,i.jsx)(e.p,{children:"Other parameters are passed through a pointer to a apiUpdateMultiHostSourcesRequest struct via the builder pattern"}),"\n",(0,i.jsx)(e.table,{children:(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Notes"})]})})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"updateMultiHostSourcesRequestInner"})," | ",(0,i.jsx)(e.a,{href:"../models/update-multi-host-sources-request-inner",children:(0,i.jsx)(e.strong,{children:"[]UpdateMultiHostSourcesRequestInner"})})," | This endpoint allows you to update a Multi-Host Integration.  |"]}),"\n",(0,i.jsx)(e.h3,{id:"return-type-12",children:"Return type"}),"\n",(0,i.jsx)(e.p,{children:"(empty response body)"}),"\n",(0,i.jsx)(e.h3,{id:"http-request-headers-12",children:"HTTP request headers"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Content-Type"}),": application/json-patch+json"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example-12",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    multihostId := `anId` // string | ID of the Multi-Host Integration to update. # string | ID of the Multi-Host Integration to update.\n    updatemultihostsourcesrequestinner := []byte(`[{op=add, path=/description, value=MDK Multi-Host Integration 222 description}]`) // []UpdateMultiHostSourcesRequestInner | This endpoint allows you to update a Multi-Host Integration. \n\n    var updateMultiHostSourcesRequestInner []beta.UpdateMultiHostSourcesRequestInner\n    if err := json.Unmarshal(updatemultihostsourcesrequestinner, &updateMultiHostSourcesRequestInner); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    r, err := apiClient.Beta.MultiHostIntegrationAPI.UpdateMultiHostSources(context.Background(), multihostId).UpdateMultiHostSourcesRequestInner(updateMultiHostSourcesRequestInner).Execute()\n	  //r, err := apiClient.Beta.MultiHostIntegrationAPI.UpdateMultiHostSources(context.Background(), multihostId).UpdateMultiHostSourcesRequestInner(updateMultiHostSourcesRequestInner).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.UpdateMultiHostSources``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    \n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#",children:"[Back to top]"})})]})}function c(t={}){let{wrapper:e}={...(0,s.a)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(h,{...t})}):h(t)}},250065:function(t,e,n){n.d(e,{Z:()=>l,a:()=>o});var r=n(667294);let i={},s=r.createContext(i);function o(t){let e=r.useContext(s);return r.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:o(t.components),r.createElement(s.Provider,{value:e},t.children)}},465359:function(t){t.exports=JSON.parse('{"id":"tools/sdk/go/Reference/Beta/Methods/beta-multi-host-integration","title":"MultiHostIntegration","description":"Use this API to build a Multi-Host Integration.","source":"@site/docs/tools/sdk/go/Reference/Beta/Methods/MultiHostIntegrationAPI.md","sourceDirName":"tools/sdk/go/Reference/Beta/Methods","slug":"/tools/sdk/go/beta/methods/multi-host-integration","permalink":"/docs/tools/sdk/go/beta/methods/multi-host-integration","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/go/Reference/Beta/Methods/MultiHostIntegrationAPI.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"MultiHostIntegration","permalink":"/docs/tags/multi-host-integration"},{"inline":true,"label":"BetaMultiHostIntegration","permalink":"/docs/tags/beta-multi-host-integration"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1747667177000,"frontMatter":{"id":"beta-multi-host-integration","title":"MultiHostIntegration","pagination_label":"MultiHostIntegration","sidebar_label":"MultiHostIntegration","sidebar_class_name":"gosdk","keywords":["go","Golang","sdk","MultiHostIntegration","BetaMultiHostIntegration"],"slug":"/tools/sdk/go/beta/methods/multi-host-integration","tags":["SDK","Software Development Kit","MultiHostIntegration","BetaMultiHostIntegration"]},"sidebar":"openApiSidebar","previous":{"title":"ManagedClusters","permalink":"/docs/tools/sdk/go/beta/methods/managed-clusters"},"next":{"title":"NonEmployeeLifecycleManagement","permalink":"/docs/tools/sdk/go/beta/methods/non-employee-lifecycle-management"}}')}}]);