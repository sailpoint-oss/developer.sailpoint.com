"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["398029"],{114244:function(e,i,t){t.r(i),t.d(i,{assets:()=>f,contentTitle:()=>y,default:()=>v,frontMatter:()=>u,metadata:()=>s,toc:()=>g});var s=t(386645),n=t(785893),o=t(250065),a=t(247936),r=t(444039),c=t.n(r),l=t(140218),p=t.n(l),d=t(769141),m=t.n(d);t(261142),t(292415);var h=t(172642);let u={id:"check-policy-violations",sidebar_label:"This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/api/iiq/identityiq-scim-rest-api",custom_edit_url:"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to 'This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.' (check-policy-violations)"},y=void 0,f={},g=[];function x(e){let i={blockquote:"blockquote",em:"em",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations."}),"\n",(0,n.jsx)(a.Z,{method:"post",path:"/CheckedPolicyViolations",context:"endpoint"}),"\n",(0,n.jsx)(i.p,{children:">This submits a set of access items to request and a set of policies to check after the access provisioning is simulated in order to determine if policy violations would be created by provisioning the access items. It receives a payload that includes:"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"An identity:"})," Used as the recipient for the access items on the simulation."]}),"\n"]}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"A provisioning plan:"})," To specify the changes to be simulatedly provisioned in the provided identity"]}),"\n"]}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"A list of policies:"})," to check after the simulation of provisioning plan was applied to the identity in order to determine if the access granted in the simulation causes new policy violations."]}),"\n"]}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:["Optionally you can pass a list of attributes, as query params, to be included or excluded from the response, this setting is applicable only to top level attributes as defined in the schema ",(0,n.jsx)(i.em,{children:(0,n.jsxs)(i.strong,{children:["urn:ietf:params:scim:schemas:sailpoint:1.0",":CheckedPolicyViolation","."]})})]}),"\n"]}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Valid values"}),":\n",(0,n.jsx)(i.strong,{children:"- policies"}),"\n",(0,n.jsx)(i.strong,{children:"- identity"}),"\n",(0,n.jsx)(i.strong,{children:"- plan"}),"\n",(0,n.jsx)(i.strong,{children:"- violations"}),"\n",(0,n.jsx)(i.strong,{children:"- leftBundles"}),"\n",(0,n.jsx)(i.strong,{children:"- rightBundles"})]}),"\n"]}),"\n",(0,n.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,n.jsx)(c(),{parameters:[{in:"query",name:"attributes",schema:{type:"string"},description:"A list of attributes to indicate what top level attributes to include in the response"},{in:"query",name:"authnPassword",schema:{type:"string"},description:"Password for authentication"},{in:"query",name:"authnUsername",schema:{type:"string"},description:"Username for authentication"},{in:"query",name:"excludedAttributes",schema:{type:"string"},description:"A list of attributes to indicate what top level attributes to exclude from the response"},{in:"query",name:"lookupByName",schema:{type:"boolean"},description:"This is not required in this endpoint, the returned object is a new PolicyViolation and not one returned from the persistence layer. This is inherited from the BaseSCIMResource and is used to override the default id based lookup, and use a name based lookup instead, if for any reason the artifact id is not present.",example:!1}]}),"\n",(0,n.jsx)(p(),{title:"Body",body:{required:!0,content:{"application/json":{schema:{type:"object",properties:{identity:{description:"An identity for whom access is requested on the provisioning simulation",type:"string",example:{identity:"Ryan.Russell"}},plan:{description:"A provisioning plan detailing the access to request on the simulation",type:"object",properties:{value:{type:"object",properties:{accounts:{type:"array",items:{type:"object",properties:{op:{description:"The operation to perform on the provisioning.",type:"string",example:"Modify"},instance:{type:"string",example:"null",description:"A particular instance to provision this access to"},application:{type:"string",example:"Active_Directory",description:"The application that owns the access items in the request"},attributes:{type:"array",items:{type:"object",properties:{op:{description:"The operation to perform on the access item.",type:"string",example:"Add"},name:{description:"The type of access item to provision.",type:"string",example:"groupmbr"},value:{description:"The name of the access item to provision.",type:"string",example:"UnixAdministration"}}}}}}}}},type:{type:"string",example:"application/sailpoint.object.ProvisioningPlan+json"}}},policies:{description:"A list of policies to check for new policy violations on the access provisioned by the simulation.",type:"array",items:{type:"string"},example:["SOD Policy","Entitlement Policy","RandomPolicyNotExisting"]}}}}}}}),"\n",(0,n.jsx)(m(),{id:void 0,label:void 0,responses:{201:{description:"Returns a list of violations based on simulated requested access",content:{"application/json":{schema:{type:"object",properties:{identity:{description:"An identity for whom access was requested on the provisioning simulation",type:"string",example:{identity:"Ryan.Russell"}},meta:{type:"object",properties:{resourceType:{description:"",type:"string",example:"CheckedPolicyViolation"}}},violations:{type:"array",items:{properties:{entitlements:{description:"An array of the entitlements used in the provisioning simulation.",type:"array",items:{type:"string"},example:["a2a","a2b","benefits"]},policyName:{description:"The name of the policy that conflicted with the access items provisioned in the simulation causing policy violation.",type:"string",example:"SOD Policy"},policyType:{description:"The type of the policy that conflicted with the access items provisioned in the simulation causing policy violation(s).",type:"string",example:"SOD"},description:{description:"The description of the policy violation(s) caused by the access provisioned in the simulation.",type:"string",example:"Security design should not be combined with administrative permissions."},constraintName:{description:"The specific constraint in the policy that conflicted with the access items provisioned in the simulation.",type:"string",example:" IT SOD-117"},leftBundles:{description:"The left set of entitlements defined in the policy constraint in order to check against another set of entitlements for compliance.",type:"array",items:{type:"string"},example:["Security Architect - IT"]},rightBundles:{description:"The right set of entitlements defined in the policy constraint in order to check against another set of entitlements for compliance.",type:"array",items:{type:"string"},example:["Unix Administrator - IT"]}}}},schemas:{description:"The SCIM schema for Checked Policy Violations.",type:"array",items:{type:"string",example:"urn:ietf:params:scim:schemas:sailpoint:1.0:CheckedPolicyViolation"}},policies:{description:"The set of policies used to check for conflicting access in the provisioning simulation",type:"array",items:{type:"string"},example:["SOD Policy","Entitlement Policy","RandomPolicyNotExisting"]},plan:{description:"A provisioning plan detailing the access to request on the simulation",type:"object",properties:{value:{type:"object",properties:{accounts:{type:"array",items:{type:"object",properties:{op:{description:"The operation performed on the access in the provisioning simulation.",type:"string",example:"Modify"},instance:{type:"string",example:"null",description:"A particular instance to provision this access to"},application:{type:"string",example:"Active_Directory",description:"The application that owns the access provisioned in the simulation."},attributes:{type:"array",items:{type:"object",properties:{op:{description:"The operation performed on the access in the provisioning simulation.",type:"string",example:"Add"},name:{description:"The type of provisioned access.",type:"string",example:"groupmbr"},value:{description:"The name of the provisioned access items.",type:"string",example:"UnixAdministration"}}}}}}}}},type:{type:"string",example:"application/sailpoint.object.ProvisioningPlan+json"}}}}}}}}}})]})}function v(e={}){let{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(x,{...e})}):x(e)}},627777:function(e,i,t){t.r(i),t.d(i,{default:()=>o,setAccept:()=>n,slice:()=>s});let s=(0,t(829829).createSlice)({name:"accept",initialState:{},reducers:{setAccept:(e,i)=>{e.value=i.payload}}}),{setAccept:n}=s.actions,o=s.reducer},371780:function(e,i,t){t.r(i),t.d(i,{default:()=>o,setContentType:()=>n,slice:()=>s});let s=(0,t(829829).createSlice)({name:"contentType",initialState:{},reducers:{setContentType:(e,i)=>{e.value=i.payload}}}),{setContentType:n}=s.actions,o=s.reducer},247936:function(e,i,t){t.d(i,{Z:()=>a});var s=t(785893);t(667294);var n=t(570144),o=t(974968);let a=function(e){let{method:i,path:t,context:a}=e,r=(0,o.useTypedSelector)(e=>e.server.value),c="";return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)("pre",{className:"openapi__method-endpoint",children:[(0,s.jsx)("span",{className:"badge badge--"+function(e){switch(e.toLowerCase()){case"get":return"primary";case"post":return"success";case"delete":return"danger";case"put":return"info";case"patch":return"warning";case"head":case"event":return"secondary";default:return}}(i),children:"event"===i?"Webhook":i.toUpperCase()})," ","event"!==i&&(0,s.jsxs)("h2",{className:"openapi__method-endpoint-path",children:["callback"===a?"":(r&&r.variables&&(c=r.url.replace(/\/$/,""),Object.keys(r.variables).forEach(e=>{c=c.replace(`{${e}}`,r.variables?.[e].default??"")})),(0,s.jsx)(n.default,{children:()=>c.length?c:r&&r.url?r.url:void 0})),`${t.replace(/{([a-z0-9-_]+)}/gi,":$1")}`]})]}),(0,s.jsx)("div",{className:"openapi__divider"})]})}},235719:function(e,i,t){t.r(i),t.d(i,{default:()=>u,guard:()=>p,toString:()=>d});var s=t(785893),n=t(667294),o=t(700937),a=t(862199),r=t.n(a),c=t(292415),l=t(467026);function p(e,i){if(e||0===e){var t;return Array.isArray(t=i(e))?t.filter(e=>void 0!==e).join(""):t??""}return""}function d(e){return"string"==typeof e?e:null!=e?Array.isArray(e)?`[${e.join(", ")}]`:e+"":void 0}function m(e,i){return e.format?e.format:e.allOf?"string"==typeof e.allOf[0]&&e.allOf[0].includes("circular")?e.allOf[0]:"object":e.oneOf||e.anyOf?"object":"object"===e.type||"array"===e.type?e.xml?.name??e.type:e.title??e.type}let h=e=>e?.length?`| Enum Value | Description |
| ---- | ----- |
${e.map(e=>`| ${e[0]} | ${e[1]} | `.replaceAll("\n","<br/>")).join("\n")}
    `:"",u=function(e){let i,{param:t,...a}=e,{description:u,example:y,examples:f,name:g,required:x,deprecated:v,enumDescriptions:j}=t,b=t.schema;b&&b?.type||(b={type:"any"}),b&&(i=b.items?b.items.default:b.default);let k=p(b,e=>{var i;return(0,s.jsxs)("span",{className:"openapi-schema__type",children:[" ",e.items?m(e.items,void 0)+"[]":m(e,i)??""]})}),w=p(x,()=>(0,s.jsx)("span",{className:"openapi-schema__required",children:"required"})),M=p(v,()=>(0,s.jsx)("span",{className:"openapi-schema__deprecated",children:"deprecated"})),T=p(function e(i){if(!i)return;if(i.items&&void 0===i.minItems&&void 0===i.maxItems)return e(i.items);let t=[];if(i.items&&i.items.enum&&i.items.enum&&t.push(`[${i.items.enum.map(e=>`\`${e}\``).join(", ")}]`),i.minLength||i.maxLength){let e,s,n="";i.minLength&&i.minLength>1&&(e=`\`>= ${i.minLength} characters\``),i.minLength&&1===i.minLength&&(e="`non-empty`"),i.maxLength&&(s=`\`<= ${i.maxLength} characters\``),e&&!s&&(n+=e),s&&!e&&(n+=s),e&&s&&(n+=`${e} and ${s}`),t.push(n)}if(i.minimum||i.maximum||"number"==typeof i.exclusiveMinimum||"number"==typeof i.exclusiveMaximum){let e,s,n="";"number"==typeof i.exclusiveMinimum?e=`\`> ${i.exclusiveMinimum}\``:i.minimum&&!i.exclusiveMinimum?e=`\`>= ${i.minimum}\``:i.minimum&&!0===i.exclusiveMinimum&&(e=`\`> ${i.minimum}\``),"number"==typeof i.exclusiveMaximum?s=`\`< ${i.exclusiveMaximum}\``:i.maximum&&!i.exclusiveMaximum?s=`\`<= ${i.maximum}\``:i.maximum&&!0===i.exclusiveMaximum&&(s=`\`< ${i.maximum}\``),e&&!s&&(n+=e),s&&!e&&(n+=s),e&&s&&(n+=`${e} and ${s}`),t.push(n)}if(i.pattern&&t.push(`Value must match regular expression \`${i.pattern}\``),i.mapping){let e=Object.keys(i.mapping);t.push(`[${e.map(e=>`\`${e}\``).join(", ")}]`)}if(i.enum&&t.push(`[${i.enum.map(e=>`\`${e}\``).join(", ")}]`),i.minItems&&t.push(`\`>= ${i.minItems}\``),i.maxItems&&t.push(`\`<= ${i.maxItems}\``),0!==t.length)return"**Possible values:** "+t.join(", ")}(b),e=>(0,s.jsx)(o.default,{children:e})),A=p(u,e=>(0,s.jsx)(o.default,{children:e})),Z=p(h(j),e=>(0,s.jsx)("div",{style:{marginTop:".5rem"},children:(0,s.jsx)(o.default,{children:e})})),C=p(d(y),e=>(0,s.jsxs)("div",{children:[(0,s.jsx)("strong",{children:"Example: "}),e]})),L=p(f,e=>{let i=Object.entries(e);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("strong",{children:"Examples:"}),(0,s.jsx)(r(),{children:i.map(e=>{let[i,t]=e;return(0,s.jsxs)(c.default,{value:i,label:i,children:[t.summary&&(0,s.jsx)("p",{children:t.summary}),t.description&&(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Description: "}),(0,s.jsx)("span",{children:t.description})]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Example: "}),(0,s.jsx)("code",{children:t.value})]})]})})})]})});function P(e){return e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}async function B(e){for(let i of e)try{if((await fetch(i,{method:"HEAD"})).ok)return i}catch(e){console.error(`Error checking URL: ${i}`,e)}return null}function q(e){let{operationId:i}=e,[t,o]=(0,n.useState)(null);if((0,n.useEffect)(()=>{!async function(){let e=[`https://developer.sailpoint.com/docs/api/v2025/${P(i)}`,`https://developer.sailpoint.com/docs/api/v2024/${P(i)}`,`https://developer.sailpoint.com/docs/api/v3/${P(i)}`,`https://developer.sailpoint.com/docs/api/beta/${P(i)}`];o(await B(e))}()},[i]),t)return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("text",{children:"Found in "}),(0,s.jsx)("a",{href:t,id:"operationIdLink",target:"_blank",rel:"noopener noreferrer",style:{color:"var(--ifm-color-primary)"},children:i.replace(/([A-Z])/g," $1").replace(/^./,e=>e.toUpperCase()).trim()})]})}return(0,s.jsxs)("div",{className:"openapi-params__list-item",children:[(0,s.jsxs)("span",{className:"openapi-schema__container",children:[(0,s.jsx)("strong",{className:(0,l.Z)("openapi-schema__property",{"openapi-schema__strikethrough":v}),children:g}),k,(x||v)&&(0,s.jsx)("span",{className:"openapi-schema__divider"}),w,M]}),T,A,Z,function(){if(t["x-sailpoint-resource-operation-id"])return(0,s.jsx)(q,{operationId:t["x-sailpoint-resource-operation-id"]})}(),function(){if(void 0!==i)return"string"==typeof i?(0,s.jsxs)("div",{children:[(0,s.jsx)("strong",{children:"Default value: "}),(0,s.jsx)("span",{children:(0,s.jsx)("code",{children:i})})]}):(0,s.jsxs)("div",{children:[(0,s.jsx)("strong",{children:"Default value: "}),(0,s.jsx)("span",{children:(0,s.jsx)("code",{children:JSON.stringify(i)})})]})}(),C,L]})}},386645:function(e){e.exports=JSON.parse('{"id":"api/iiq/check-policy-violations","title":"check-policy-violations","description":"<Heading","source":"@site/docs/api/iiq/check-policy-violations.api.mdx","sourceDirName":"api/iiq","slug":"/api/iiq/check-policy-violations","permalink":"/docs/api/iiq/check-policy-violations","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.\' (check-policy-violations)","tags":[],"version":"current","lastUpdatedBy":null,"lastUpdatedAt":null,"frontMatter":{"id":"check-policy-violations","sidebar_label":"This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/api/iiq/identityiq-scim-rest-api","custom_edit_url":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.\' (check-policy-violations)"},"sidebar":"iiqApiSideBar","previous":{"title":"Checked Policy Violations","permalink":"/docs/api/iiq/checked-policy-violations"},"next":{"title":"Entitlements","permalink":"/docs/api/iiq/entitlements"}}')}}]);