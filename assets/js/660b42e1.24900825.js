"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["436934"],{224324:function(t,e,s){s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>i});var a=s(78229),n=s(785893),u=s(250065);let o={id:"beta-account-status-changed-status-change",title:"AccountStatusChangedStatusChange",pagination_label:"AccountStatusChangedStatusChange",sidebar_label:"AccountStatusChangedStatusChange",sidebar_class_name:"gosdk",keywords:["go","Golang","sdk","AccountStatusChangedStatusChange","BetaAccountStatusChangedStatusChange"],slug:"/tools/sdk/go/beta/models/account-status-changed-status-change",tags:["SDK","Software Development Kit","AccountStatusChangedStatusChange","BetaAccountStatusChangedStatusChange"]},c="AccountStatusChangedStatusChange",d={},i=[{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"NewAccountStatusChangedStatusChange",id:"newaccountstatuschangedstatuschange",level:3},{value:"NewAccountStatusChangedStatusChangeWithDefaults",id:"newaccountstatuschangedstatuschangewithdefaults",level:3},{value:"GetPreviousStatus",id:"getpreviousstatus",level:3},{value:"GetPreviousStatusOk",id:"getpreviousstatusok",level:3},{value:"SetPreviousStatus",id:"setpreviousstatus",level:3},{value:"HasPreviousStatus",id:"haspreviousstatus",level:3},{value:"GetNewStatus",id:"getnewstatus",level:3},{value:"GetNewStatusOk",id:"getnewstatusok",level:3},{value:"SetNewStatus",id:"setnewstatus",level:3},{value:"HasNewStatus",id:"hasnewstatus",level:3}];function h(t){let e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,u.a)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.header,{children:(0,n.jsx)(e.h1,{id:"accountstatuschangedstatuschange",children:"AccountStatusChangedStatusChange"})}),"\n",(0,n.jsx)(e.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:"Name"}),(0,n.jsx)(e.th,{children:"Type"}),(0,n.jsx)(e.th,{children:"Description"}),(0,n.jsx)(e.th,{children:"Notes"})]})}),(0,n.jsxs)(e.tbody,{children:[(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.strong,{children:"PreviousStatus"})}),(0,n.jsxs)(e.td,{children:["Pointer to ",(0,n.jsx)(e.strong,{children:"string"})]}),(0,n.jsx)(e.td,{children:"the previous status of the account"}),(0,n.jsx)(e.td,{children:"[optional]"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.strong,{children:"NewStatus"})}),(0,n.jsxs)(e.td,{children:["Pointer to ",(0,n.jsx)(e.strong,{children:"string"})]}),(0,n.jsx)(e.td,{children:"the new status of the account"}),(0,n.jsx)(e.td,{children:"[optional]"})]})]})]}),"\n",(0,n.jsx)(e.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(e.h3,{id:"newaccountstatuschangedstatuschange",children:"NewAccountStatusChangedStatusChange"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.code,{children:"func NewAccountStatusChangedStatusChange() *AccountStatusChangedStatusChange"})}),"\n",(0,n.jsx)(e.p,{children:"NewAccountStatusChangedStatusChange instantiates a new AccountStatusChangedStatusChange object\nThis constructor will assign default values to properties that have it defined,\nand makes sure properties required by API are set, but the set of arguments\nwill change when the set of required properties is changed"}),"\n",(0,n.jsx)(e.h3,{id:"newaccountstatuschangedstatuschangewithdefaults",children:"NewAccountStatusChangedStatusChangeWithDefaults"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.code,{children:"func NewAccountStatusChangedStatusChangeWithDefaults() *AccountStatusChangedStatusChange"})}),"\n",(0,n.jsx)(e.p,{children:"NewAccountStatusChangedStatusChangeWithDefaults instantiates a new AccountStatusChangedStatusChange object\nThis constructor will only assign default values to properties that have it defined,\nbut it doesn't guarantee that properties required by API are set"}),"\n",(0,n.jsx)(e.h3,{id:"getpreviousstatus",children:"GetPreviousStatus"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.code,{children:"func (o *AccountStatusChangedStatusChange) GetPreviousStatus() string"})}),"\n",(0,n.jsx)(e.p,{children:"GetPreviousStatus returns the PreviousStatus field if non-nil, zero value otherwise."}),"\n",(0,n.jsx)(e.h3,{id:"getpreviousstatusok",children:"GetPreviousStatusOk"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.code,{children:"func (o *AccountStatusChangedStatusChange) GetPreviousStatusOk() (*string, bool)"})}),"\n",(0,n.jsx)(e.p,{children:"GetPreviousStatusOk returns a tuple with the PreviousStatus field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,n.jsx)(e.h3,{id:"setpreviousstatus",children:"SetPreviousStatus"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.code,{children:"func (o *AccountStatusChangedStatusChange) SetPreviousStatus(v string)"})}),"\n",(0,n.jsx)(e.p,{children:"SetPreviousStatus sets PreviousStatus field to given value."}),"\n",(0,n.jsx)(e.h3,{id:"haspreviousstatus",children:"HasPreviousStatus"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.code,{children:"func (o *AccountStatusChangedStatusChange) HasPreviousStatus() bool"})}),"\n",(0,n.jsx)(e.p,{children:"HasPreviousStatus returns a boolean if a field has been set."}),"\n",(0,n.jsx)(e.h3,{id:"getnewstatus",children:"GetNewStatus"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.code,{children:"func (o *AccountStatusChangedStatusChange) GetNewStatus() string"})}),"\n",(0,n.jsx)(e.p,{children:"GetNewStatus returns the NewStatus field if non-nil, zero value otherwise."}),"\n",(0,n.jsx)(e.h3,{id:"getnewstatusok",children:"GetNewStatusOk"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.code,{children:"func (o *AccountStatusChangedStatusChange) GetNewStatusOk() (*string, bool)"})}),"\n",(0,n.jsx)(e.p,{children:"GetNewStatusOk returns a tuple with the NewStatus field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,n.jsx)(e.h3,{id:"setnewstatus",children:"SetNewStatus"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.code,{children:"func (o *AccountStatusChangedStatusChange) SetNewStatus(v string)"})}),"\n",(0,n.jsx)(e.p,{children:"SetNewStatus sets NewStatus field to given value."}),"\n",(0,n.jsx)(e.h3,{id:"hasnewstatus",children:"HasNewStatus"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.code,{children:"func (o *AccountStatusChangedStatusChange) HasNewStatus() bool"})}),"\n",(0,n.jsx)(e.p,{children:"HasNewStatus returns a boolean if a field has been set."})]})}function l(t={}){let{wrapper:e}={...(0,u.a)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(h,{...t})}):h(t)}},250065:function(t,e,s){s.d(e,{Z:()=>c,a:()=>o});var a=s(667294);let n={},u=a.createContext(n);function o(t){let e=a.useContext(u);return a.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:o(t.components),a.createElement(u.Provider,{value:e},t.children)}},78229:function(t){t.exports=JSON.parse('{"id":"tools/sdk/go/Reference/Beta/Models/beta-account-status-changed-status-change","title":"AccountStatusChangedStatusChange","description":"Properties","source":"@site/docs/tools/sdk/go/Reference/Beta/Models/AccountStatusChangedStatusChange.md","sourceDirName":"tools/sdk/go/Reference/Beta/Models","slug":"/tools/sdk/go/beta/models/account-status-changed-status-change","permalink":"/docs/tools/sdk/go/beta/models/account-status-changed-status-change","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/go/Reference/Beta/Models/AccountStatusChangedStatusChange.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"AccountStatusChangedStatusChange","permalink":"/docs/tags/account-status-changed-status-change"},{"inline":true,"label":"BetaAccountStatusChangedStatusChange","permalink":"/docs/tags/beta-account-status-changed-status-change"}],"version":"current","lastUpdatedBy":"darrell-thobe-sp","lastUpdatedAt":1743446986000,"frontMatter":{"id":"beta-account-status-changed-status-change","title":"AccountStatusChangedStatusChange","pagination_label":"AccountStatusChangedStatusChange","sidebar_label":"AccountStatusChangedStatusChange","sidebar_class_name":"gosdk","keywords":["go","Golang","sdk","AccountStatusChangedStatusChange","BetaAccountStatusChangedStatusChange"],"slug":"/tools/sdk/go/beta/models/account-status-changed-status-change","tags":["SDK","Software Development Kit","AccountStatusChangedStatusChange","BetaAccountStatusChangedStatusChange"]},"sidebar":"openApiSidebar","previous":{"title":"AccountStatusChangedAccount","permalink":"/docs/tools/sdk/go/beta/models/account-status-changed-account"},"next":{"title":"AccountToggleRequest","permalink":"/docs/tools/sdk/go/beta/models/account-toggle-request"}}')}}]);