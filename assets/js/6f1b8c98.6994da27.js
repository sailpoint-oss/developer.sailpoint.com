"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["1812"],{60835:function(e,s,r){r.r(s),r.d(s,{assets:()=>i,contentTitle:()=>d,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>l});var n=r(665684),t=r(785893),o=r(250065);let a={id:"v2024-password-sync-groups",title:"PasswordSyncGroups",pagination_label:"PasswordSyncGroups",sidebar_label:"PasswordSyncGroups",sidebar_class_name:"gosdk",keywords:["go","Golang","sdk","PasswordSyncGroups","V2024PasswordSyncGroups"],slug:"/tools/sdk/go/v2024/methods/password-sync-groups",tags:["SDK","Software Development Kit","PasswordSyncGroups","V2024PasswordSyncGroups"]},d="PasswordSyncGroupsAPI",i={},l=[{value:"create-password-sync-group",id:"create-password-sync-group",level:2},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Other Parameters",id:"other-parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example",level:3},{value:"delete-password-sync-group",id:"delete-password-sync-group",level:2},{value:"Path Parameters",id:"path-parameters-1",level:3},{value:"Other Parameters",id:"other-parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-1",level:3},{value:"get-password-sync-group",id:"get-password-sync-group",level:2},{value:"Path Parameters",id:"path-parameters-2",level:3},{value:"Other Parameters",id:"other-parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-2",level:3},{value:"get-password-sync-groups",id:"get-password-sync-groups",level:2},{value:"Path Parameters",id:"path-parameters-3",level:3},{value:"Other Parameters",id:"other-parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-3",level:3},{value:"update-password-sync-group",id:"update-password-sync-group",level:2},{value:"Path Parameters",id:"path-parameters-4",level:3},{value:"Other Parameters",id:"other-parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3},{value:"Example",id:"example-4",level:3}];function c(e){let s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"passwordsyncgroupsapi",children:"PasswordSyncGroupsAPI"})}),"\n",(0,t.jsx)(s.p,{children:"Use this API to implement password sync group functionality.\nWith this functionality in place, administrators can group sources into password sync groups so that all their applications share the same password.\nThis allows users to update the password for all the applications in a sync group if they want, rather than updating each password individually."}),"\n",(0,t.jsx)(s.p,{children:"A password sync group is a group of applications that shares a password.\nAdministrators create these groups by grouping the applications' sources.\nFor example, an administrator can group the ActiveDirectory, GitHub, and G Suite sources together so that all those sources' applications can also be grouped to share a password.\nA user can then update his or her password for ActiveDirectory, GitHub, Gmail, Google Drive, and Google Calendar all at once, rather then updating each one individually."}),"\n",(0,t.jsx)(s.p,{children:"The following are required for administrators to create a password sync group in Identity Security Cloud:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"At least two direct connect sources connected to Identity Security Cloud and configured for Password Management."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Each authentication source in a sync group must have at least one application. Refer to ",(0,t.jsx)(s.a,{href:"https://documentation.sailpoint.com/saas/help/pwd/adv_config.html#adding-and-resetting-application-passwords",children:"Adding and Resetting Application Passwords"})," for more information about adding applications to sources."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["At least one password policy. Refer to ",(0,t.jsx)(s.a,{href:"https://documentation.sailpoint.com/saas/help/pwd/pwd_policies/index.html",children:"Managing Password Policies"})," for more information about password policies."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"In the Admin panel in Identity Security Cloud, administrators can use the Password Mgmt dropdown menu to select Sync Groups.\nTo create a sync group, administrators must provide a name, choose a password policy to be enforced across the sources in the sync group, and select the sources to include in the sync group."}),"\n",(0,t.jsx)(s.p,{children:"Administrators can also delete sync groups in Identity Security Cloud, but they should know the following before they do:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Passwords related to the associated sources will become independent, so changing one will not change the others anymore."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Passwords for the sources' connected applications will also become independent."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Password policies assigned to the sync group are then assigned directly to the associated sources.\nTo change the password policy for a source, administrators must edit it directly."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Once the password sync group has been created, users can update the password for the group in Password Manager."}),"\n",(0,t.jsxs)(s.p,{children:["Refer to ",(0,t.jsx)(s.a,{href:"https://documentation.sailpoint.com/saas/help/pwd/sync_grps.html",children:"Managing Password Sync Groups"})," for more information about password sync groups."]}),"\n",(0,t.jsxs)(s.p,{children:["All URIs are relative to ",(0,t.jsx)(s.em,{children:(0,t.jsx)(s.a,{href:"https://sailpoint.api.identitynow.com/v2024",children:"https://sailpoint.api.identitynow.com/v2024"})})]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Method"}),(0,t.jsx)(s.th,{children:"HTTP request"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"#create-password-sync-group",children:(0,t.jsx)(s.strong,{children:"create-password-sync-group"})})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.strong,{children:"Post"})," ",(0,t.jsx)(s.code,{children:"/password-sync-groups"})]}),(0,t.jsx)(s.td,{children:"Create password sync group"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"#delete-password-sync-group",children:(0,t.jsx)(s.strong,{children:"delete-password-sync-group"})})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.strong,{children:"Delete"})," ",(0,t.jsx)(s.code,{children:"/password-sync-groups/{id}"})]}),(0,t.jsx)(s.td,{children:"Delete password sync group by id"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"#get-password-sync-group",children:(0,t.jsx)(s.strong,{children:"get-password-sync-group"})})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.strong,{children:"Get"})," ",(0,t.jsx)(s.code,{children:"/password-sync-groups/{id}"})]}),(0,t.jsx)(s.td,{children:"Get password sync group by id"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"#get-password-sync-groups",children:(0,t.jsx)(s.strong,{children:"get-password-sync-groups"})})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.strong,{children:"Get"})," ",(0,t.jsx)(s.code,{children:"/password-sync-groups"})]}),(0,t.jsx)(s.td,{children:"Get password sync group list"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"#update-password-sync-group",children:(0,t.jsx)(s.strong,{children:"update-password-sync-group"})})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.strong,{children:"Put"})," ",(0,t.jsx)(s.code,{children:"/password-sync-groups/{id}"})]}),(0,t.jsx)(s.td,{children:"Update password sync group by id"})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"create-password-sync-group",children:"create-password-sync-group"}),"\n",(0,t.jsx)(s.p,{children:"Create password sync group\nThis API creates a password sync group based on the specifications provided."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/v2024/create-password-sync-group",children:"API Spec"})}),"\n",(0,t.jsx)(s.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,t.jsx)(s.h3,{id:"other-parameters",children:"Other Parameters"}),"\n",(0,t.jsx)(s.p,{children:"Other parameters are passed through a pointer to a apiCreatePasswordSyncGroupRequest struct via the builder pattern"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Notes"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"passwordSyncGroup"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../models/password-sync-group",children:(0,t.jsx)(s.strong,{children:"PasswordSyncGroup"})})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{})]})})]}),"\n",(0,t.jsx)(s.h3,{id:"return-type",children:"Return type"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"../models/password-sync-group",children:(0,t.jsx)(s.strong,{children:"PasswordSyncGroup"})})}),"\n",(0,t.jsx)(s.h3,{id:"http-request-headers",children:"HTTP request headers"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    v2024 "github.com/sailpoint-oss/golang-sdk/v2/api_v2024"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    passwordsyncgroup := []byte(`{\n          "created" : "2023-03-16T04:00:00Z",\n          "name" : "Password Sync Group 1",\n          "modified" : "2023-03-16T04:00:00Z",\n          "passwordPolicyId" : "2c91808d744ba0ce01746f93b6204501",\n          "id" : "6881f631-3bd5-4213-9c75-8e05cc3e35dd",\n          "sourceIds" : [ "2c918084660f45d6016617daa9210584", "2c918084660f45d6016617daa9210500" ]\n        }`) // PasswordSyncGroup | \n\n    var passwordSyncGroup v2024.PasswordSyncGroup\n    if err := json.Unmarshal(passwordsyncgroup, &passwordSyncGroup); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2024.PasswordSyncGroupsAPI.CreatePasswordSyncGroup(context.Background()).PasswordSyncGroup(passwordSyncGroup).Execute()\n	  //resp, r, err := apiClient.V2024.PasswordSyncGroupsAPI.CreatePasswordSyncGroup(context.Background()).PasswordSyncGroup(passwordSyncGroup).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordSyncGroupsAPI.CreatePasswordSyncGroup``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `CreatePasswordSyncGroup`: PasswordSyncGroup\n    fmt.Fprintf(os.Stdout, "Response from `PasswordSyncGroupsAPI.CreatePasswordSyncGroup`: %v\\n", resp)\n}\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"#",children:"[Back to top]"})}),"\n",(0,t.jsx)(s.h2,{id:"delete-password-sync-group",children:"delete-password-sync-group"}),"\n",(0,t.jsx)(s.p,{children:"Delete password sync group by id\nThis API deletes the specified password sync group."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/v2024/delete-password-sync-group",children:"API Spec"})}),"\n",(0,t.jsx)(s.h3,{id:"path-parameters-1",children:"Path Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Notes"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"ctx"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"context.Context"})}),(0,t.jsx)(s.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"id"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"string"})}),(0,t.jsx)(s.td,{children:"The ID of password sync group to delete."}),(0,t.jsx)(s.td,{})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"other-parameters-1",children:"Other Parameters"}),"\n",(0,t.jsx)(s.p,{children:"Other parameters are passed through a pointer to a apiDeletePasswordSyncGroupRequest struct via the builder pattern"}),"\n",(0,t.jsx)(s.table,{children:(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Notes"})]})})}),"\n",(0,t.jsx)(s.h3,{id:"return-type-1",children:"Return type"}),"\n",(0,t.jsx)(s.p,{children:"(empty response body)"}),"\n",(0,t.jsx)(s.h3,{id:"http-request-headers-1",children:"HTTP request headers"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `6881f631-3bd5-4213-9c75-8e05cc3e35dd` // string | The ID of password sync group to delete. # string | The ID of password sync group to delete.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    r, err := apiClient.V2024.PasswordSyncGroupsAPI.DeletePasswordSyncGroup(context.Background(), id).Execute()\n	  //r, err := apiClient.V2024.PasswordSyncGroupsAPI.DeletePasswordSyncGroup(context.Background(), id).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordSyncGroupsAPI.DeletePasswordSyncGroup``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    \n}\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"#",children:"[Back to top]"})}),"\n",(0,t.jsx)(s.h2,{id:"get-password-sync-group",children:"get-password-sync-group"}),"\n",(0,t.jsx)(s.p,{children:"Get password sync group by id\nThis API returns the sync group for the specified ID."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/v2024/get-password-sync-group",children:"API Spec"})}),"\n",(0,t.jsx)(s.h3,{id:"path-parameters-2",children:"Path Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Notes"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"ctx"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"context.Context"})}),(0,t.jsx)(s.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"id"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"string"})}),(0,t.jsx)(s.td,{children:"The ID of password sync group to retrieve."}),(0,t.jsx)(s.td,{})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"other-parameters-2",children:"Other Parameters"}),"\n",(0,t.jsx)(s.p,{children:"Other parameters are passed through a pointer to a apiGetPasswordSyncGroupRequest struct via the builder pattern"}),"\n",(0,t.jsx)(s.table,{children:(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Notes"})]})})}),"\n",(0,t.jsx)(s.h3,{id:"return-type-2",children:"Return type"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"../models/password-sync-group",children:(0,t.jsx)(s.strong,{children:"PasswordSyncGroup"})})}),"\n",(0,t.jsx)(s.h3,{id:"http-request-headers-2",children:"HTTP request headers"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"example-2",children:"Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `6881f631-3bd5-4213-9c75-8e05cc3e35dd` // string | The ID of password sync group to retrieve. # string | The ID of password sync group to retrieve.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2024.PasswordSyncGroupsAPI.GetPasswordSyncGroup(context.Background(), id).Execute()\n	  //resp, r, err := apiClient.V2024.PasswordSyncGroupsAPI.GetPasswordSyncGroup(context.Background(), id).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordSyncGroupsAPI.GetPasswordSyncGroup``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetPasswordSyncGroup`: PasswordSyncGroup\n    fmt.Fprintf(os.Stdout, "Response from `PasswordSyncGroupsAPI.GetPasswordSyncGroup`: %v\\n", resp)\n}\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"#",children:"[Back to top]"})}),"\n",(0,t.jsx)(s.h2,{id:"get-password-sync-groups",children:"get-password-sync-groups"}),"\n",(0,t.jsx)(s.p,{children:"Get password sync group list\nThis API returns a list of password sync groups."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/v2024/get-password-sync-groups",children:"API Spec"})}),"\n",(0,t.jsx)(s.h3,{id:"path-parameters-3",children:"Path Parameters"}),"\n",(0,t.jsx)(s.h3,{id:"other-parameters-3",children:"Other Parameters"}),"\n",(0,t.jsx)(s.p,{children:"Other parameters are passed through a pointer to a apiGetPasswordSyncGroupsRequest struct via the builder pattern"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Notes"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"limit"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"int32"})}),(0,t.jsxs)(s.td,{children:["Max number of results to return. See ",(0,t.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,t.jsx)(s.td,{children:"[default to 250]"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"offset"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"int32"})}),(0,t.jsxs)(s.td,{children:["Offset into the full result set. Usually specified with ",(0,t.jsx)(s.em,{children:"limit"})," to paginate through the results. See ",(0,t.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,t.jsx)(s.td,{children:"[default to 0]"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"count"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"bool"})}),(0,t.jsxs)(s.td,{children:["If ",(0,t.jsx)(s.em,{children:"true"})," it will populate the ",(0,t.jsx)(s.em,{children:"X-Total-Count"})," response header with the number of results that would be returned if ",(0,t.jsx)(s.em,{children:"limit"})," and ",(0,t.jsx)(s.em,{children:"offset"})," were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send ",(0,t.jsx)(s.strong,{children:"count=true"})," if that value will not be used.  See ",(0,t.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,t.jsx)(s.td,{children:"[default to false]"})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"return-type-3",children:"Return type"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"../models/password-sync-group",children:(0,t.jsx)(s.strong,{children:"[]PasswordSyncGroup"})})}),"\n",(0,t.jsx)(s.h3,{id:"http-request-headers-3",children:"HTTP request headers"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"example-3",children:"Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)\n    offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)\n    count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2024.PasswordSyncGroupsAPI.GetPasswordSyncGroups(context.Background()).Execute()\n	  //resp, r, err := apiClient.V2024.PasswordSyncGroupsAPI.GetPasswordSyncGroups(context.Background()).Limit(limit).Offset(offset).Count(count).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordSyncGroupsAPI.GetPasswordSyncGroups``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetPasswordSyncGroups`: []PasswordSyncGroup\n    fmt.Fprintf(os.Stdout, "Response from `PasswordSyncGroupsAPI.GetPasswordSyncGroups`: %v\\n", resp)\n}\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"#",children:"[Back to top]"})}),"\n",(0,t.jsx)(s.h2,{id:"update-password-sync-group",children:"update-password-sync-group"}),"\n",(0,t.jsx)(s.p,{children:"Update password sync group by id\nThis API updates the specified password sync group."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/v2024/update-password-sync-group",children:"API Spec"})}),"\n",(0,t.jsx)(s.h3,{id:"path-parameters-4",children:"Path Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Notes"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"ctx"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"context.Context"})}),(0,t.jsx)(s.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"id"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"string"})}),(0,t.jsx)(s.td,{children:"The ID of password sync group to update."}),(0,t.jsx)(s.td,{})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"other-parameters-4",children:"Other Parameters"}),"\n",(0,t.jsx)(s.p,{children:"Other parameters are passed through a pointer to a apiUpdatePasswordSyncGroupRequest struct via the builder pattern"}),"\n",(0,t.jsx)(s.table,{children:(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Notes"})]})})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"passwordSyncGroup"})," | ",(0,t.jsx)(s.a,{href:"../models/password-sync-group",children:(0,t.jsx)(s.strong,{children:"PasswordSyncGroup"})})," |  |"]}),"\n",(0,t.jsx)(s.h3,{id:"return-type-4",children:"Return type"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"../models/password-sync-group",children:(0,t.jsx)(s.strong,{children:"PasswordSyncGroup"})})}),"\n",(0,t.jsx)(s.h3,{id:"http-request-headers-4",children:"HTTP request headers"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"example-4",children:"Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    v2024 "github.com/sailpoint-oss/golang-sdk/v2/api_v2024"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `6881f631-3bd5-4213-9c75-8e05cc3e35dd` // string | The ID of password sync group to update. # string | The ID of password sync group to update.\n    passwordsyncgroup := []byte(`{\n          "created" : "2023-03-16T04:00:00Z",\n          "name" : "Password Sync Group 1",\n          "modified" : "2023-03-16T04:00:00Z",\n          "passwordPolicyId" : "2c91808d744ba0ce01746f93b6204501",\n          "id" : "6881f631-3bd5-4213-9c75-8e05cc3e35dd",\n          "sourceIds" : [ "2c918084660f45d6016617daa9210584", "2c918084660f45d6016617daa9210500" ]\n        }`) // PasswordSyncGroup | \n\n    var passwordSyncGroup v2024.PasswordSyncGroup\n    if err := json.Unmarshal(passwordsyncgroup, &passwordSyncGroup); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2024.PasswordSyncGroupsAPI.UpdatePasswordSyncGroup(context.Background(), id).PasswordSyncGroup(passwordSyncGroup).Execute()\n	  //resp, r, err := apiClient.V2024.PasswordSyncGroupsAPI.UpdatePasswordSyncGroup(context.Background(), id).PasswordSyncGroup(passwordSyncGroup).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordSyncGroupsAPI.UpdatePasswordSyncGroup``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `UpdatePasswordSyncGroup`: PasswordSyncGroup\n    fmt.Fprintf(os.Stdout, "Response from `PasswordSyncGroupsAPI.UpdatePasswordSyncGroup`: %v\\n", resp)\n}\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"#",children:"[Back to top]"})})]})}function p(e={}){let{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},250065:function(e,s,r){r.d(s,{Z:()=>d,a:()=>a});var n=r(667294);let t={},o=n.createContext(t);function a(e){let s=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(o.Provider,{value:s},e.children)}},665684:function(e){e.exports=JSON.parse('{"id":"tools/sdk/go/Reference/V2024/Methods/v2024-password-sync-groups","title":"PasswordSyncGroups","description":"Use this API to implement password sync group functionality.","source":"@site/docs/tools/sdk/go/Reference/V2024/Methods/PasswordSyncGroupsAPI.md","sourceDirName":"tools/sdk/go/Reference/V2024/Methods","slug":"/tools/sdk/go/v2024/methods/password-sync-groups","permalink":"/docs/tools/sdk/go/v2024/methods/password-sync-groups","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/go/Reference/V2024/Methods/PasswordSyncGroupsAPI.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"PasswordSyncGroups","permalink":"/docs/tags/password-sync-groups"},{"inline":true,"label":"V2024PasswordSyncGroups","permalink":"/docs/tags/v-2024-password-sync-groups"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1758738425000,"frontMatter":{"id":"v2024-password-sync-groups","title":"PasswordSyncGroups","pagination_label":"PasswordSyncGroups","sidebar_label":"PasswordSyncGroups","sidebar_class_name":"gosdk","keywords":["go","Golang","sdk","PasswordSyncGroups","V2024PasswordSyncGroups"],"slug":"/tools/sdk/go/v2024/methods/password-sync-groups","tags":["SDK","Software Development Kit","PasswordSyncGroups","V2024PasswordSyncGroups"]},"sidebar":"openApiSidebar","previous":{"title":"PasswordPolicies","permalink":"/docs/tools/sdk/go/v2024/methods/password-policies"},"next":{"title":"PersonalAccessTokens","permalink":"/docs/tools/sdk/go/v2024/methods/personal-access-tokens"}}')}}]);