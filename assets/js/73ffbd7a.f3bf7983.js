"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["721157"],{802534:function(e,t,n){n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var r=n(639963),i=n(785893),s=n(250065);let a={id:"webservices-after-provisioning-rule",title:"Web Services After Operation Rule",pagination_label:"Web Services After Operation Rule",sidebar_label:"Web Services After Operation Rule",sidebar_class_name:"webServicesAfterOperationRule",keywords:["cloud","rules","webservices"],description:"This rule calculates attributes after a web-service operation call.",slug:"/extensibility/rules/connector-rules/webservices-after-provisioning-rule",tags:["Rules"]},o=void 0,l={},c=[{value:"Overview",id:"overview",level:2},{value:"Execution",id:"execution",level:2},{value:"Input",id:"input",level:2},{value:"Output",id:"output",level:2},{value:"Template",id:"template",level:2},{value:"Example",id:"example",level:2},{value:"Attach to source",id:"attach-to-source",level:2}];function p(e){let t={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(t.p,{children:"This rule calculates attributes after a web-service operation call."}),"\n",(0,i.jsx)(t.h2,{id:"execution",children:"Execution"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Connector Execution"})," - This rule executes within the virtual appliance. It may offer special abilities to perform connector-related functions, and it may offer managed connections to sources."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Logging"})," - Logging statements are viewable within the ccg.log on the virtual appliance, and they are viewable by SailPoint personnel."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Rule Execution",src:n(994422).Z+"",width:"1525",height:"618"})}),"\n",(0,i.jsx)(t.h2,{id:"input",children:"Input"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Argument"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Purpose"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"application"}),(0,i.jsx)(t.td,{children:"sailpoint.object.Application"}),(0,i.jsx)(t.td,{children:"Application whose data file is being processed."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"processedResponseObject"}),(0,i.jsx)(t.td,{children:"List<Map<String, Object>>"}),(0,i.jsx)(t.td,{children:"List of map (account/group). The map contains a key, the identityAttribute of the application schema, and a value, all the account/group attributes (schema) passed by the connector after parsing the respective API response."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"requestEndPoint"}),(0,i.jsx)(t.td,{children:"sailpoint.connector.webservices.EndPoint"}),(0,i.jsx)(t.td,{children:"Current request information. It contains the header, body, context url, method type, response attribute map, successful response code."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"restClient"}),(0,i.jsx)(t.td,{children:"sailpoint.connector.webservices.WebServicesClient"}),(0,i.jsx)(t.td,{children:"WebServicesClient (HttpClient) object that enables the user to call the Web Services API target system."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"rawResponseObject"}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"String object that holds the raw response returned from the target system, which can be in JSON or XML form."})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Argument"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Purpose"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"updatedAccountOrGroupList"}),(0,i.jsx)(t.td,{children:"java.util.Map"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"Map"})," object returned from the After Operation Rule. It may contain any or all of the following: an updated list of account / group resource objects, identified by key ",(0,i.jsx)(t.code,{children:"data"}),"/ attribute values to be updated into application by the connector state map identified by key ",(0,i.jsx)(t.code,{children:"connectorStateMap"}),". Each resource (account/group) object is of type ",(0,i.jsx)(t.code,{children:"Map"}),", which contains the ",(0,i.jsx)(t.strong,{children:"key-value"})," pair. The ",(0,i.jsx)(t.strong,{children:"key"})," represents the schema attribute name, and the ",(0,i.jsx)(t.strong,{children:"value"})," represents the account/group attribute value."]})]})})]}),"\n",(0,i.jsx)(t.h2,{id:"template",children:"Template"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",children:'<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">\n<Rule name="Example Rule" type="WebServiceAfterOperationRule">\n  <Description>Describe your rule here.</Description>\n  <Source><![CDATA[\n\n  // Add your logic here.\n\n  ]]></Source>\n</Rule>\n'})}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">\n<Rule name="Example Rule" type="WebServiceAfterOperationRule">\n  <Description>This rule is used by the  Web Services connector after performing any operation like testconnection, aggregation etc.</Description>\n  <Source><![CDATA[\nimport connector.common.JsonUtil;\n    import java.util.HashMap;\n    import java.util.Map.Entry;\n    import java.util.Map;\n    import java.util.List;\n    import java.util.ArrayList;\n    import javax.net.ssl.HttpsURLConnection;\n    import java.io.BufferedReader;\n    import java.io.PrintStream;\n    import java.io.StringWriter;\n    import java.text.SimpleDateFormat;\n    import sailpoint.tools.GeneralException;\n\nMap updatedMapInfo = new HashMap();\nList list = new ArrayList();\nArrayList<String> Roles = new ArrayList<String>();\nMap response = (Map) JsonUtil.toMap(rawResponseObject);\nint RoleSize = 0;\nString newName;\nList Finallist = new ArrayList();\nList workspace = new ArrayList();\n\nlog.error("RULES response at start" + response);\nif (response.get("data") != null) {\n\n     list = (ArrayList) response.get("data");\n\n     for(int d = 0; d < list.size(); d++ ){\n\n         Map responseMap = (Map) list.get(d);\n\n         if (responseMap.get("attributes") != null) {\n            Map newmap = new HashMap();\n             Map data = (Map) responseMap.get("attributes");\n             newmap.put("firstName", data.get("firstName"));\n             newmap.put("lastName",data.get("lastName"));\n             newmap.put("displayName",data.get("displayName"));\n             newmap.put("userName",data.get("userName"));\n             newmap.put("email",data.get("email"));\n\n             if (data.get("workspaceMemberships") != null) {\n\n                 ArrayList Workspacedetail = (ArrayList) data.get("workspaceMemberships");\n\n                 for (int i = 0; i < Workspacedetail.size(); i++) {\n\n                     Map work = (Map) Workspacedetail.get(i);\n\n                     for (int w = 0; w < work.size(); w++) {\n\n                         if (work.get("workspaceName") != null) {\n\n                            workspace.add(work.get("workspaceName"));\n\n                             Roles = (ArrayList) work.get("workspaceRoles");\n\n                             for (int r = 0; r < Roles.size(); r++) {\n\n                                 if (Roles.get(r) != null) {\n                                     newName = Roles.get(r).toString() + " - " + work.get("workspaceName");\n\n                                     if(newName != null) {\n                                         Roles.set(r, newName);\n                                         newmap.put("workspaceRoles", Roles);\n\n                                     }\n\n                                 }\n                             }\n                         }\n                         break;\n                     }\n                 }\n             }\n\n             Finallist.add(newmap);\n\n         }\n    }\n\n}\nlog.error("RULES newmap at end" + newmap);\nlog.error("RULES Finallist at end" + Finallist);\n\nlog.error("RULES processedResponseObject Before is " + processedResponseObject);\n\nupdatedMapInfo.put("data", Finallist);\nlog.error("RULES updatedMapInfo is " + updatedMapInfo);\n\nreturn updatedMapInfo;\nlog.error("RULES processedResponseObject after is " + processedResponseObject);\u200B\n  ]]></Source>\n</Rule>\n'})}),"\n",(0,i.jsx)(t.h2,{id:"attach-to-source",children:"Attach to source"}),"\n",(0,i.jsxs)(t.p,{children:["Refer to ",(0,i.jsx)(t.a,{href:"/docs/extensibility/rules/connector-rules#webserviceafteroperation-rule",children:"Attaching Connector-Related Rules to Sources"})," for details on how to attach your rule to your source."]})]})}function d(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},994422:function(e,t,n){n.d(t,{Z:()=>r});let r=n.p+"assets/images/connector_execution-a516e4420c18c0906bef94a9b1299330.png"},250065:function(e,t,n){n.d(t,{Z:()=>o,a:()=>a});var r=n(667294);let i={},s=r.createContext(i);function a(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:t},e.children)}},639963:function(e){e.exports=JSON.parse('{"id":"extensibility/rules/connector-rules/webservices-after-provisioning-rule","title":"Web Services After Operation Rule","description":"This rule calculates attributes after a web-service operation call.","source":"@site/docs/extensibility/rules/connector-rules/web_services_after_operation_rule.md","sourceDirName":"extensibility/rules/connector-rules","slug":"/extensibility/rules/connector-rules/webservices-after-provisioning-rule","permalink":"/docs/extensibility/rules/connector-rules/webservices-after-provisioning-rule","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/extensibility/rules/connector-rules/web_services_after_operation_rule.md","tags":[{"inline":true,"label":"Rules","permalink":"/docs/tags/rules"}],"version":"current","lastUpdatedBy":"darrell-thobe-sp","lastUpdatedAt":1746721553000,"frontMatter":{"id":"webservices-after-provisioning-rule","title":"Web Services After Operation Rule","pagination_label":"Web Services After Operation Rule","sidebar_label":"Web Services After Operation Rule","sidebar_class_name":"webServicesAfterOperationRule","keywords":["cloud","rules","webservices"],"description":"This rule calculates attributes after a web-service operation call.","slug":"/extensibility/rules/connector-rules/webservices-after-provisioning-rule","tags":["Rules"]},"sidebar":"openApiSidebar","previous":{"title":"SAP HR Provisioning Modify Rule","permalink":"/docs/extensibility/rules/connector-rules/sap-provisioning-modify-rule"},"next":{"title":"Web Services Before Operation Rule","permalink":"/docs/extensibility/rules/connector-rules/webservices-before-provisioning-rule"}}')}}]);