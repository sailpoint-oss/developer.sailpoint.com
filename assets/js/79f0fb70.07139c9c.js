"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["69799"],{149061:function(e,t,n){n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var r=n(84574),i=n(785893),s=n(250065);let o={id:"beta-sp-config",title:"SPConfig",pagination_label:"SPConfig",sidebar_label:"SPConfig",sidebar_class_name:"gosdk",keywords:["go","Golang","sdk","SPConfig","BetaSPConfig"],slug:"/tools/sdk/go/beta/methods/sp-config",tags:["SDK","Software Development Kit","SPConfig","BetaSPConfig"]},l="SPConfigAPI",a={},d=[{value:"export-sp-config",id:"export-sp-config",level:2},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Other Parameters",id:"other-parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example",level:3},{value:"get-sp-config-export",id:"get-sp-config-export",level:2},{value:"Path Parameters",id:"path-parameters-1",level:3},{value:"Other Parameters",id:"other-parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-1",level:3},{value:"get-sp-config-export-status",id:"get-sp-config-export-status",level:2},{value:"Path Parameters",id:"path-parameters-2",level:3},{value:"Other Parameters",id:"other-parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-2",level:3},{value:"get-sp-config-import",id:"get-sp-config-import",level:2},{value:"Path Parameters",id:"path-parameters-3",level:3},{value:"Other Parameters",id:"other-parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-3",level:3},{value:"get-sp-config-import-status",id:"get-sp-config-import-status",level:2},{value:"Path Parameters",id:"path-parameters-4",level:3},{value:"Other Parameters",id:"other-parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3},{value:"Example",id:"example-4",level:3},{value:"import-sp-config",id:"import-sp-config",level:2},{value:"Path Parameters",id:"path-parameters-5",level:3},{value:"Other Parameters",id:"other-parameters-5",level:3},{value:"Return type",id:"return-type-5",level:3},{value:"HTTP request headers",id:"http-request-headers-5",level:3},{value:"Example",id:"example-5",level:3},{value:"list-sp-config-objects",id:"list-sp-config-objects",level:2},{value:"Path Parameters",id:"path-parameters-6",level:3},{value:"Other Parameters",id:"other-parameters-6",level:3},{value:"Return type",id:"return-type-6",level:3},{value:"HTTP request headers",id:"http-request-headers-6",level:3},{value:"Example",id:"example-6",level:3}];function p(e){let t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"spconfigapi",children:"SPConfigAPI"})}),"\n",(0,i.jsxs)(t.p,{children:["Import and export configuration for some objects between tenants.\nAll URIs are relative to ",(0,i.jsx)(t.em,{children:(0,i.jsx)(t.a,{href:"https://sailpoint.api.identitynow.com/beta",children:"https://sailpoint.api.identitynow.com/beta"})})]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Method"}),(0,i.jsx)(t.th,{children:"HTTP request"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"#export-sp-config",children:(0,i.jsx)(t.strong,{children:"export-sp-config"})})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Post"})," ",(0,i.jsx)(t.code,{children:"/sp-config/export"})]}),(0,i.jsx)(t.td,{children:"Initiates configuration objects export job"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"#get-sp-config-export",children:(0,i.jsx)(t.strong,{children:"get-sp-config-export"})})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Get"})," ",(0,i.jsx)(t.code,{children:"/sp-config/export/{id}/download"})]}),(0,i.jsx)(t.td,{children:"Download export job result."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"#get-sp-config-export-status",children:(0,i.jsx)(t.strong,{children:"get-sp-config-export-status"})})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Get"})," ",(0,i.jsx)(t.code,{children:"/sp-config/export/{id}"})]}),(0,i.jsx)(t.td,{children:"Get export job status"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"#get-sp-config-import",children:(0,i.jsx)(t.strong,{children:"get-sp-config-import"})})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Get"})," ",(0,i.jsx)(t.code,{children:"/sp-config/import/{id}/download"})]}),(0,i.jsx)(t.td,{children:"Download import job result"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"#get-sp-config-import-status",children:(0,i.jsx)(t.strong,{children:"get-sp-config-import-status"})})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Get"})," ",(0,i.jsx)(t.code,{children:"/sp-config/import/{id}"})]}),(0,i.jsx)(t.td,{children:"Get import job status"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"#import-sp-config",children:(0,i.jsx)(t.strong,{children:"import-sp-config"})})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Post"})," ",(0,i.jsx)(t.code,{children:"/sp-config/import"})]}),(0,i.jsx)(t.td,{children:"Initiates configuration objects import job"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"#list-sp-config-objects",children:(0,i.jsx)(t.strong,{children:"list-sp-config-objects"})})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Get"})," ",(0,i.jsx)(t.code,{children:"/sp-config/config-objects"})]}),(0,i.jsx)(t.td,{children:"List config objects"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"export-sp-config",children:"export-sp-config"}),"\n",(0,i.jsxs)(t.p,{children:["Initiates configuration objects export job\nThis post will export objects from the tenant to a JSON configuration file.\nFor more information about the object types that currently support export functionality, refer to ",(0,i.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/extensibility/configuration-management/saas-configuration#supported-objects",children:"SaaS Configuration"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/beta/export-sp-config",children:"API Spec"})}),"\n",(0,i.jsx)(t.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,i.jsx)(t.h3,{id:"other-parameters",children:"Other Parameters"}),"\n",(0,i.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiExportSpConfigRequest struct via the builder pattern"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Notes"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"exportPayload"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../models/export-payload",children:(0,i.jsx)(t.strong,{children:"ExportPayload"})})}),(0,i.jsx)(t.td,{children:"Export options control what will be included in the export."}),(0,i.jsx)(t.td,{})]})})]}),"\n",(0,i.jsx)(t.h3,{id:"return-type",children:"Return type"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"../models/sp-config-export-job",children:(0,i.jsx)(t.strong,{children:"SpConfigExportJob"})})}),"\n",(0,i.jsx)(t.h3,{id:"http-request-headers",children:"HTTP request headers"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    exportpayload := []byte(`{\n          "description" : "Export Job 1 Test"\n        }`) // ExportPayload | Export options control what will be included in the export.\n\n    var exportPayload beta.ExportPayload\n    if err := json.Unmarshal(exportpayload, &exportPayload); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.SPConfigAPI.ExportSpConfig(context.Background()).ExportPayload(exportPayload).Execute()\n	  //resp, r, err := apiClient.Beta.SPConfigAPI.ExportSpConfig(context.Background()).ExportPayload(exportPayload).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.ExportSpConfig``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `ExportSpConfig`: SpConfigExportJob\n    fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.ExportSpConfig`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(t.h2,{id:"get-sp-config-export",children:"get-sp-config-export"}),"\n",(0,i.jsxs)(t.p,{children:["Download export job result.\nThis endpoint gets the export file resulting from the export job with the requested ",(0,i.jsx)(t.code,{children:"id"})," and downloads it to a file.\nThe request will need one of the following security scopes:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["sp:config",":read"," - sp:config",":manage"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-sp-config-export",children:"API Spec"})}),"\n",(0,i.jsx)(t.h3,{id:"path-parameters-1",children:"Path Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Notes"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"ctx"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"context.Context"})}),(0,i.jsx)(t.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"id"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"string"})}),(0,i.jsx)(t.td,{children:"The ID of the export job whose results will be downloaded."}),(0,i.jsx)(t.td,{})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"other-parameters-1",children:"Other Parameters"}),"\n",(0,i.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiGetSpConfigExportRequest struct via the builder pattern"}),"\n",(0,i.jsx)(t.table,{children:(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Notes"})]})})}),"\n",(0,i.jsx)(t.h3,{id:"return-type-1",children:"Return type"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"../models/sp-config-export-results",children:(0,i.jsx)(t.strong,{children:"SpConfigExportResults"})})}),"\n",(0,i.jsx)(t.h3,{id:"http-request-headers-1",children:"HTTP request headers"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the export job whose results will be downloaded. # string | The ID of the export job whose results will be downloaded.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigExport(context.Background(), id).Execute()\n	  //resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigExport(context.Background(), id).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.GetSpConfigExport``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetSpConfigExport`: SpConfigExportResults\n    fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.GetSpConfigExport`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(t.h2,{id:"get-sp-config-export-status",children:"get-sp-config-export-status"}),"\n",(0,i.jsxs)(t.p,{children:["Get export job status\nThis gets the status of the export job identified by the ",(0,i.jsx)(t.code,{children:"id"})," parameter.\nThe request will need one of the following security scopes:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["sp:config",":read"," - sp:config",":manage"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-sp-config-export-status",children:"API Spec"})}),"\n",(0,i.jsx)(t.h3,{id:"path-parameters-2",children:"Path Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Notes"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"ctx"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"context.Context"})}),(0,i.jsx)(t.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"id"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"string"})}),(0,i.jsx)(t.td,{children:"The ID of the export job whose status will be returned."}),(0,i.jsx)(t.td,{})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"other-parameters-2",children:"Other Parameters"}),"\n",(0,i.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiGetSpConfigExportStatusRequest struct via the builder pattern"}),"\n",(0,i.jsx)(t.table,{children:(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Notes"})]})})}),"\n",(0,i.jsx)(t.h3,{id:"return-type-2",children:"Return type"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"../models/sp-config-export-job-status",children:(0,i.jsx)(t.strong,{children:"SpConfigExportJobStatus"})})}),"\n",(0,i.jsx)(t.h3,{id:"http-request-headers-2",children:"HTTP request headers"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"example-2",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the export job whose status will be returned. # string | The ID of the export job whose status will be returned.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigExportStatus(context.Background(), id).Execute()\n	  //resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigExportStatus(context.Background(), id).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.GetSpConfigExportStatus``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetSpConfigExportStatus`: SpConfigExportJobStatus\n    fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.GetSpConfigExportStatus`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(t.h2,{id:"get-sp-config-import",children:"get-sp-config-import"}),"\n",(0,i.jsx)(t.p,{children:"Download import job result\nThis gets import file resulting from the import job with the requested id and downloads it to a file. The downloaded file will contain the results of the import operation, including any error, warning or informational messages associated with the import.\nThe request will need the following security scope:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["sp:config",":manage"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-sp-config-import",children:"API Spec"})}),"\n",(0,i.jsx)(t.h3,{id:"path-parameters-3",children:"Path Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Notes"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"ctx"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"context.Context"})}),(0,i.jsx)(t.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"id"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"string"})}),(0,i.jsx)(t.td,{children:"The ID of the import job whose results will be downloaded."}),(0,i.jsx)(t.td,{})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"other-parameters-3",children:"Other Parameters"}),"\n",(0,i.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiGetSpConfigImportRequest struct via the builder pattern"}),"\n",(0,i.jsx)(t.table,{children:(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Notes"})]})})}),"\n",(0,i.jsx)(t.h3,{id:"return-type-3",children:"Return type"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"../models/sp-config-import-results",children:(0,i.jsx)(t.strong,{children:"SpConfigImportResults"})})}),"\n",(0,i.jsx)(t.h3,{id:"http-request-headers-3",children:"HTTP request headers"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"example-3",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the import job whose results will be downloaded. # string | The ID of the import job whose results will be downloaded.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigImport(context.Background(), id).Execute()\n	  //resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigImport(context.Background(), id).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.GetSpConfigImport``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetSpConfigImport`: SpConfigImportResults\n    fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.GetSpConfigImport`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(t.h2,{id:"get-sp-config-import-status",children:"get-sp-config-import-status"}),"\n",(0,i.jsxs)(t.p,{children:["Get import job status\nThis gets the status of the import job identified by the ",(0,i.jsx)(t.code,{children:"id"})," parameter.\nFor more information about the object types that currently support import functionality, refer to ",(0,i.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/extensibility/configuration-management/saas-configuration#supported-objects",children:"SaaS Configuration"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-sp-config-import-status",children:"API Spec"})}),"\n",(0,i.jsx)(t.h3,{id:"path-parameters-4",children:"Path Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Notes"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"ctx"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"context.Context"})}),(0,i.jsx)(t.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"id"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"string"})}),(0,i.jsx)(t.td,{children:"The ID of the import job whose status will be returned."}),(0,i.jsx)(t.td,{})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"other-parameters-4",children:"Other Parameters"}),"\n",(0,i.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiGetSpConfigImportStatusRequest struct via the builder pattern"}),"\n",(0,i.jsx)(t.table,{children:(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Notes"})]})})}),"\n",(0,i.jsx)(t.h3,{id:"return-type-4",children:"Return type"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"../models/sp-config-import-job-status",children:(0,i.jsx)(t.strong,{children:"SpConfigImportJobStatus"})})}),"\n",(0,i.jsx)(t.h3,{id:"http-request-headers-4",children:"HTTP request headers"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"example-4",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the import job whose status will be returned. # string | The ID of the import job whose status will be returned.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigImportStatus(context.Background(), id).Execute()\n	  //resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigImportStatus(context.Background(), id).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.GetSpConfigImportStatus``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetSpConfigImportStatus`: SpConfigImportJobStatus\n    fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.GetSpConfigImportStatus`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(t.h2,{id:"import-sp-config",children:"import-sp-config"}),"\n",(0,i.jsxs)(t.p,{children:['Initiates configuration objects import job\nThis post will import objects from a JSON configuration file into a tenant.\nBy default, every import will first export all existing objects supported by sp-config as a backup before the import is attempted.\nThe backup is provided so that the state of the configuration prior to the import is available for inspection or restore if needed.\nThe backup can be skipped by setting "excludeBackup" to true in the import options.\nIf a backup is performed, the id of the backup will be provided in the ImportResult as the "exportJobId". This can be downloaded\nusing the ',(0,i.jsx)(t.code,{children:"/sp-config/export/{exportJobId}/download"})," endpoint."]}),"\n",(0,i.jsx)(t.p,{children:"You cannot currently import from the Non-Employee Lifecycle Management (NELM) source. You cannot use this endpoint to back up or store NELM data."}),"\n",(0,i.jsxs)(t.p,{children:["For more information about the object types that currently support import functionality, refer to ",(0,i.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/extensibility/configuration-management/saas-configuration#supported-objects",children:"SaaS Configuration"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/beta/import-sp-config",children:"API Spec"})}),"\n",(0,i.jsx)(t.h3,{id:"path-parameters-5",children:"Path Parameters"}),"\n",(0,i.jsx)(t.h3,{id:"other-parameters-5",children:"Other Parameters"}),"\n",(0,i.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiImportSpConfigRequest struct via the builder pattern"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Notes"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"data"})}),(0,i.jsxs)(t.td,{children:["*",(0,i.jsx)(t.strong,{children:"os.File"})]}),(0,i.jsx)(t.td,{children:"JSON file containing the objects to be imported."}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"preview"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"bool"})}),(0,i.jsx)(t.td,{children:"This option is intended to give the user information about how an import operation would proceed, without having any effect on the target tenant. If this parameter is &quot;true&quot;, no objects will be imported. Instead, the import process will pre-process the import file and attempt to resolve references within imported objects. The import result file will contain messages pertaining to how specific references were resolved, any errors associated with the preprocessing, and messages indicating which objects would be imported."}),(0,i.jsx)(t.td,{children:"[default to false]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"options"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../models/import-options",children:(0,i.jsx)(t.strong,{children:"ImportOptions"})})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"return-type-5",children:"Return type"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"../models/sp-config-job",children:(0,i.jsx)(t.strong,{children:"SpConfigJob"})})}),"\n",(0,i.jsx)(t.h3,{id:"http-request-headers-5",children:"HTTP request headers"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Content-Type"}),": multipart/form-data"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"example-5",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    data := BINARY_DATA_HERE // *os.File | JSON file containing the objects to be imported. # *os.File | JSON file containing the objects to be imported.\n    preview := true // bool | This option is intended to give the user information about how an import operation would proceed, without having any effect on the target tenant. If this parameter is \\"true\\", no objects will be imported. Instead, the import process will pre-process the import file and attempt to resolve references within imported objects. The import result file will contain messages pertaining to how specific references were resolved, any errors associated with the preprocessing, and messages indicating which objects would be imported.  (optional) (default to false) # bool | This option is intended to give the user information about how an import operation would proceed, without having any effect on the target tenant. If this parameter is \\"true\\", no objects will be imported. Instead, the import process will pre-process the import file and attempt to resolve references within imported objects. The import result file will contain messages pertaining to how specific references were resolved, any errors associated with the preprocessing, and messages indicating which objects would be imported.  (optional) (default to false)\n    options := []byte(``) // ImportOptions |  (optional)\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.SPConfigAPI.ImportSpConfig(context.Background()).Data(data).Execute()\n	  //resp, r, err := apiClient.Beta.SPConfigAPI.ImportSpConfig(context.Background()).Data(data).Preview(preview).Options(options).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.ImportSpConfig``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `ImportSpConfig`: SpConfigJob\n    fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.ImportSpConfig`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(t.h2,{id:"list-sp-config-objects",children:"list-sp-config-objects"}),"\n",(0,i.jsx)(t.p,{children:"List config objects\nGet a list of object configurations that the tenant export/import service knows."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/beta/list-sp-config-objects",children:"API Spec"})}),"\n",(0,i.jsx)(t.h3,{id:"path-parameters-6",children:"Path Parameters"}),"\n",(0,i.jsx)(t.p,{children:"This endpoint does not need any parameter."}),"\n",(0,i.jsx)(t.h3,{id:"other-parameters-6",children:"Other Parameters"}),"\n",(0,i.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiListSpConfigObjectsRequest struct via the builder pattern"}),"\n",(0,i.jsx)(t.h3,{id:"return-type-6",children:"Return type"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"../models/sp-config-object",children:(0,i.jsx)(t.strong,{children:"[]SpConfigObject"})})}),"\n",(0,i.jsx)(t.h3,{id:"http-request-headers-6",children:"HTTP request headers"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"example-6",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.SPConfigAPI.ListSpConfigObjects(context.Background()).Execute()\n	  //resp, r, err := apiClient.Beta.SPConfigAPI.ListSpConfigObjects(context.Background()).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.ListSpConfigObjects``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `ListSpConfigObjects`: []SpConfigObject\n    fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.ListSpConfigObjects`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"#",children:"[Back to top]"})})]})}function c(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},250065:function(e,t,n){n.d(t,{Z:()=>l,a:()=>o});var r=n(667294);let i={},s=r.createContext(i);function o(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}},84574:function(e){e.exports=JSON.parse('{"id":"tools/sdk/go/Reference/Beta/Methods/beta-sp-config","title":"SPConfig","description":"Import and export configuration for some objects between tenants.","source":"@site/docs/tools/sdk/go/Reference/Beta/Methods/SPConfigAPI.md","sourceDirName":"tools/sdk/go/Reference/Beta/Methods","slug":"/tools/sdk/go/beta/methods/sp-config","permalink":"/docs/tools/sdk/go/beta/methods/sp-config","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/go/Reference/Beta/Methods/SPConfigAPI.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"SPConfig","permalink":"/docs/tags/sp-config"},{"inline":true,"label":"BetaSPConfig","permalink":"/docs/tags/beta-sp-config"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1758738425000,"frontMatter":{"id":"beta-sp-config","title":"SPConfig","pagination_label":"SPConfig","sidebar_label":"SPConfig","sidebar_class_name":"gosdk","keywords":["go","Golang","sdk","SPConfig","BetaSPConfig"],"slug":"/tools/sdk/go/beta/methods/sp-config","tags":["SDK","Software Development Kit","SPConfig","BetaSPConfig"]},"sidebar":"openApiSidebar","previous":{"title":"SODViolations","permalink":"/docs/tools/sdk/go/beta/methods/sod-violations"},"next":{"title":"SearchAttributeConfiguration","permalink":"/docs/tools/sdk/go/beta/methods/search-attribute-configuration"}}')}}]);