"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["810264"],{503918:function(e,t,s){s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var r=s(205698),n=s(785893),i=s(250065);let o={id:"beta-source-usages",title:"Source_Usages",pagination_label:"Source_Usages",sidebar_label:"Source_Usages",sidebar_class_name:"pythonsdk",keywords:["python","Python","sdk","Source_Usages","BetaSource_Usages"],slug:"/tools/sdk/python/beta/methods/source-usages",tags:["SDK","Software Development Kit","Source_Usages","BetaSource_Usages"]},a="sailpoint.beta.SourceUsagesApi",d={},l=[{value:"get-status-by-source-id",id:"get-status-by-source-id",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"Responses",id:"responses",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example",level:3},{value:"get-usages-by-source-id",id:"get-usages-by-source-id",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"Responses",id:"responses-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-1",level:3}];function c(e){let t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"sailpointbetasourceusagesapi",children:"sailpoint.beta.SourceUsagesApi"})}),"\n",(0,n.jsx)(t.p,{children:"Use this API to implement source usage insight functionality.\nWith this functionality in place, administrators can gather information and insights about how their tenants' sources are being used.\nThis allows organizations to get the information they need to start optimizing and securing source usage."}),"\n",(0,n.jsxs)(t.p,{children:["All URIs are relative to ",(0,n.jsx)(t.em,{children:(0,n.jsx)(t.a,{href:"https://sailpoint.api.identitynow.com/beta",children:"https://sailpoint.api.identitynow.com/beta"})})]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Method"}),(0,n.jsx)(t.th,{children:"HTTP request"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"#get-status-by-source-id",children:(0,n.jsx)(t.strong,{children:"get-status-by-source-id"})})}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"GET"})," ",(0,n.jsx)(t.code,{children:"/source-usages/{sourceId}/status"})]}),(0,n.jsx)(t.td,{children:"Finds status of source usage"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"#get-usages-by-source-id",children:(0,n.jsx)(t.strong,{children:"get-usages-by-source-id"})})}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"GET"})," ",(0,n.jsx)(t.code,{children:"/source-usages/{sourceId}/summaries"})]}),(0,n.jsx)(t.td,{children:"Returns source usage insights"})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"get-status-by-source-id",children:"get-status-by-source-id"}),"\n",(0,n.jsx)(t.p,{children:"Finds status of source usage\nThis API returns the status of the source usage insights setup by IDN source ID."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-status-by-source-id",children:"API Spec"})}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Param Type"}),(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Data Type"}),(0,n.jsx)(t.th,{children:"Required"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Path"}),(0,n.jsx)(t.td,{children:"source_id"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"str"})}),(0,n.jsx)(t.td,{children:"True"}),(0,n.jsx)(t.td,{children:"ID of IDN source"})]})})]}),"\n",(0,n.jsx)(t.h3,{id:"return-type",children:"Return type"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"../models/source-usage-status",children:(0,n.jsx)(t.strong,{children:"SourceUsageStatus"})})}),"\n",(0,n.jsx)(t.h3,{id:"responses",children:"Responses"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Code"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Data Type"}),(0,n.jsx)(t.th,{children:"Response headers"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"200"}),(0,n.jsx)(t.td,{children:"Status of the source usage insights setup by IDN source ID."}),(0,n.jsx)(t.td,{children:"SourceUsageStatus"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"400"}),(0,n.jsx)(t.td,{children:"Client Error - Returned if the request body is invalid."}),(0,n.jsx)(t.td,{children:"ErrorResponseDto"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"401"}),(0,n.jsx)(t.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,n.jsx)(t.td,{children:"ListAccessModelMetadataAttribute401Response"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"403"}),(0,n.jsx)(t.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,n.jsx)(t.td,{children:"ErrorResponseDto"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"429"}),(0,n.jsx)(t.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,n.jsx)(t.td,{children:"ListAccessModelMetadataAttribute429Response"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"500"}),(0,n.jsx)(t.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,n.jsx)(t.td,{children:"ErrorResponseDto"}),(0,n.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"http-request-headers",children:"HTTP request headers"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'from sailpoint.beta.api.source_usages_api import SourceUsagesApi\nfrom sailpoint.beta.api_client import ApiClient\nfrom sailpoint.beta.models.source_usage_status import SourceUsageStatus\nfrom sailpoint.configuration import Configuration\nconfiguration = Configuration()\n\n\nwith ApiClient(configuration) as api_client:\n    source_id = \'2c9180835d191a86015d28455b4a2329\' # str | ID of IDN source # str | ID of IDN source\n\n    try:\n        # Finds status of source usage\n        \n        results = SourceUsagesApi(api_client).get_status_by_source_id(source_id=source_id)\n        # Below is a request that includes all optional parameters\n        # results = SourceUsagesApi(api_client).get_status_by_source_id(source_id)\n        print("The response of SourceUsagesApi->get_status_by_source_id:\\n")\n        print(results.model_dump_json(by_alias=True, indent=4))\n    except Exception as e:\n        print("Exception when calling SourceUsagesApi->get_status_by_source_id: %s\\n" % e)\n'})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,n.jsx)(t.h2,{id:"get-usages-by-source-id",children:"get-usages-by-source-id"}),"\n",(0,n.jsx)(t.p,{children:"Returns source usage insights\nThis API returns a summary of source usage insights for past 12 months."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-usages-by-source-id",children:"API Spec"})}),"\n",(0,n.jsx)(t.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Param Type"}),(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Data Type"}),(0,n.jsx)(t.th,{children:"Required"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Path"}),(0,n.jsx)(t.td,{children:"source_id"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"str"})}),(0,n.jsx)(t.td,{children:"True"}),(0,n.jsx)(t.td,{children:"ID of IDN source"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Query"}),(0,n.jsx)(t.td,{children:"limit"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"int"})}),(0,n.jsx)(t.td,{children:"(optional) (default to 250)"}),(0,n.jsxs)(t.td,{children:["Max number of results to return. See ",(0,n.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Query"}),(0,n.jsx)(t.td,{children:"offset"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"int"})}),(0,n.jsx)(t.td,{children:"(optional) (default to 0)"}),(0,n.jsxs)(t.td,{children:["Offset into the full result set. Usually specified with ",(0,n.jsx)(t.em,{children:"limit"})," to paginate through the results. See ",(0,n.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Query"}),(0,n.jsx)(t.td,{children:"count"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"bool"})}),(0,n.jsx)(t.td,{children:"(optional) (default to False)"}),(0,n.jsxs)(t.td,{children:["If ",(0,n.jsx)(t.em,{children:"true"})," it will populate the ",(0,n.jsx)(t.em,{children:"X-Total-Count"})," response header with the number of results that would be returned if ",(0,n.jsx)(t.em,{children:"limit"})," and ",(0,n.jsx)(t.em,{children:"offset"})," were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send ",(0,n.jsx)(t.strong,{children:"count=true"})," if that value will not be used.  See ",(0,n.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Query"}),(0,n.jsx)(t.td,{children:"sorters"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"str"})}),(0,n.jsx)(t.td,{children:"(optional)"}),(0,n.jsxs)(t.td,{children:["Sort results using the standard syntax described in ",(0,n.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results",children:"V3 API Standard Collection Parameters"}),"  Sorting is supported for the following fields: ",(0,n.jsx)(t.strong,{children:"date"})]})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"return-type-1",children:"Return type"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"../models/source-usage",children:(0,n.jsx)(t.strong,{children:"List[SourceUsage]"})})}),"\n",(0,n.jsx)(t.h3,{id:"responses-1",children:"Responses"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Code"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Data Type"}),(0,n.jsx)(t.th,{children:"Response headers"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"200"}),(0,n.jsx)(t.td,{children:"Summary of source usage insights for past 12 months."}),(0,n.jsx)(t.td,{children:"List[SourceUsage]"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"400"}),(0,n.jsx)(t.td,{children:"Client Error - Returned if the request body is invalid."}),(0,n.jsx)(t.td,{children:"ErrorResponseDto"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"401"}),(0,n.jsx)(t.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,n.jsx)(t.td,{children:"ListAccessModelMetadataAttribute401Response"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"403"}),(0,n.jsx)(t.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,n.jsx)(t.td,{children:"ErrorResponseDto"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"429"}),(0,n.jsx)(t.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,n.jsx)(t.td,{children:"ListAccessModelMetadataAttribute429Response"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"500"}),(0,n.jsx)(t.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,n.jsx)(t.td,{children:"ErrorResponseDto"}),(0,n.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"http-request-headers-1",children:"HTTP request headers"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"example-1",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"from sailpoint.beta.api.source_usages_api import SourceUsagesApi\nfrom sailpoint.beta.api_client import ApiClient\nfrom sailpoint.beta.models.source_usage import SourceUsage\nfrom sailpoint.configuration import Configuration\nconfiguration = Configuration()\n\n\nwith ApiClient(configuration) as api_client:\n    source_id = '2c9180835d191a86015d28455b4a2329' # str | ID of IDN source # str | ID of IDN source\n    limit = 250 # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)\n    offset = 0 # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)\n    count = False # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to False) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to False)\n    sorters = '-date' # str | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **date** (optional) # str | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **date** (optional)\n\n    try:\n        # Returns source usage insights\n        \n        results = SourceUsagesApi(api_client).get_usages_by_source_id(source_id=source_id)\n        # Below is a request that includes all optional parameters\n        # results = SourceUsagesApi(api_client).get_usages_by_source_id(source_id, limit, offset, count, sorters)\n        print(\"The response of SourceUsagesApi->get_usages_by_source_id:\\n\")\n        for item in results:\n            print(item.model_dump_json(by_alias=True, indent=4))\n    except Exception as e:\n        print(\"Exception when calling SourceUsagesApi->get_usages_by_source_id: %s\\n\" % e)\n"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"#",children:"[Back to top]"})})]})}function h(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},250065:function(e,t,s){s.d(t,{Z:()=>a,a:()=>o});var r=s(667294);let n={},i=r.createContext(n);function o(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:t},e.children)}},205698:function(e){e.exports=JSON.parse('{"id":"tools/sdk/python/Reference/Beta/Methods/beta-source-usages","title":"Source_Usages","description":"Use this API to implement source usage insight functionality.","source":"@site/docs/tools/sdk/python/Reference/Beta/Methods/SourceUsagesApi.md","sourceDirName":"tools/sdk/python/Reference/Beta/Methods","slug":"/tools/sdk/python/beta/methods/source-usages","permalink":"/docs/tools/sdk/python/beta/methods/source-usages","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/python/Reference/Beta/Methods/SourceUsagesApi.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"Source_Usages","permalink":"/docs/tags/source-usages"},{"inline":true,"label":"BetaSource_Usages","permalink":"/docs/tags/beta-source-usages"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1743697918000,"frontMatter":{"id":"beta-source-usages","title":"Source_Usages","pagination_label":"Source_Usages","sidebar_label":"Source_Usages","sidebar_class_name":"pythonsdk","keywords":["python","Python","sdk","Source_Usages","BetaSource_Usages"],"slug":"/tools/sdk/python/beta/methods/source-usages","tags":["SDK","Software Development Kit","Source_Usages","BetaSource_Usages"]},"sidebar":"openApiSidebar","previous":{"title":"Service_Desk_Integration","permalink":"/docs/tools/sdk/python/beta/methods/service-desk-integration"},"next":{"title":"Sources","permalink":"/docs/tools/sdk/python/beta/methods/sources"}}')}}]);