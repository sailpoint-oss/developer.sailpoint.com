"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["419377"],{332484:function(e,t,s){s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});var n=s(267404),r=s(785893),a=s(250065);let i={id:"beta-password-management",title:"PasswordManagement",pagination_label:"PasswordManagement",sidebar_label:"PasswordManagement",sidebar_class_name:"gosdk",keywords:["go","Golang","sdk","PasswordManagement","BetaPasswordManagement"],slug:"/tools/sdk/go/beta/methods/password-management",tags:["SDK","Software Development Kit","PasswordManagement","BetaPasswordManagement"]},o="PasswordManagementAPI",d={},l=[{value:"create-digit-token",id:"create-digit-token",level:2},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Other Parameters",id:"other-parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example",level:3},{value:"get-identity-password-change-status",id:"get-identity-password-change-status",level:2},{value:"Path Parameters",id:"path-parameters-1",level:3},{value:"Other Parameters",id:"other-parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-1",level:3},{value:"query-password-info",id:"query-password-info",level:2},{value:"Path Parameters",id:"path-parameters-2",level:3},{value:"Other Parameters",id:"other-parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-2",level:3},{value:"set-identity-password",id:"set-identity-password",level:2},{value:"Path Parameters",id:"path-parameters-3",level:3},{value:"Other Parameters",id:"other-parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-3",level:3}];function c(e){let t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"passwordmanagementapi",children:"PasswordManagementAPI"})}),"\n",(0,r.jsx)(t.p,{children:"Use this API to implement password management functionality.\nWith this functionality in place, users can manage their identity passwords for all their applications."}),"\n",(0,r.jsx)(t.p,{children:"In Identity Security Cloud, users can select their names in the upper right corner of the page and use the drop-down menu to select Password Manager.\nPassword Manager lists the user's identity's applications, possibly grouped to share passwords.\nUsers can then select 'Change Password' to update their passwords."}),"\n",(0,r.jsx)(t.p,{children:"Grouping passwords allows users to update their passwords more broadly, rather than requiring them to update each password individually.\nPassword Manager may list the applications and sources in the following groups:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Password Group: This refers to a group of applications that share a password.\nFor example, a user can use the same password for Google Drive, Google Mail, and YouTube.\nUpdating the password for the password group updates the password for all its included applications."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Multi-Application Source: This refers to a source with multiple applications that share a password.\nFor example, a user can have a source, G Suite, that includes the Google Calendar, Google Drive, and Google Mail applications.\nUpdating the password for the multi-application source updates the password for all its included applications."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Applications: These are applications that do not share passwords with other applications."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"An organization may require some authentication for users to update their passwords.\nUsers may be required to answer security questions or use a third-party authenticator before they can confirm their updates."}),"\n",(0,r.jsxs)(t.p,{children:["Refer to ",(0,r.jsx)(t.a,{href:"https://documentation.sailpoint.com/saas/user-help/accounts/passwords.html",children:"Managing Passwords"})," for more information about password management."]}),"\n",(0,r.jsxs)(t.p,{children:["All URIs are relative to ",(0,r.jsx)(t.em,{children:(0,r.jsx)(t.a,{href:"https://sailpoint.api.identitynow.com/beta",children:"https://sailpoint.api.identitynow.com/beta"})})]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Method"}),(0,r.jsx)(t.th,{children:"HTTP request"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#create-digit-token",children:(0,r.jsx)(t.strong,{children:"create-digit-token"})})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Post"})," ",(0,r.jsx)(t.code,{children:"/generate-password-reset-token/digit"})]}),(0,r.jsx)(t.td,{children:"Generate a digit token"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#get-identity-password-change-status",children:(0,r.jsx)(t.strong,{children:"get-identity-password-change-status"})})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Get"})," ",(0,r.jsx)(t.code,{children:"/password-change-status/{id}"})]}),(0,r.jsx)(t.td,{children:"Get password change request status"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#query-password-info",children:(0,r.jsx)(t.strong,{children:"query-password-info"})})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Post"})," ",(0,r.jsx)(t.code,{children:"/query-password-info"})]}),(0,r.jsx)(t.td,{children:"Query password info"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#set-identity-password",children:(0,r.jsx)(t.strong,{children:"set-identity-password"})})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Post"})," ",(0,r.jsx)(t.code,{children:"/set-password"})]}),(0,r.jsx)(t.td,{children:"Set identity's password"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"create-digit-token",children:"create-digit-token"}),"\n",(0,r.jsxs)(t.p,{children:['Generate a digit token\nThis API is used to generate a digit token for password management. Requires authorization scope of "idn:password-digit-token',":create",'".']}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/beta/create-digit-token",children:"API Spec"})}),"\n",(0,r.jsx)(t.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,r.jsx)(t.h3,{id:"other-parameters",children:"Other Parameters"}),"\n",(0,r.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiCreateDigitTokenRequest struct via the builder pattern"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Notes"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"passwordDigitTokenReset"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../models/password-digit-token-reset",children:(0,r.jsx)(t.strong,{children:"PasswordDigitTokenReset"})})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]})})]}),"\n",(0,r.jsx)(t.h3,{id:"return-type",children:"Return type"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"../models/password-digit-token",children:(0,r.jsx)(t.strong,{children:"PasswordDigitToken"})})}),"\n",(0,r.jsx)(t.h3,{id:"http-request-headers",children:"HTTP request headers"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    passworddigittokenreset := []byte(`{\n          "durationMinutes" : 5,\n          "length" : 8,\n          "userId" : "Abby.Smith"\n        }`) // PasswordDigitTokenReset | \n\n    var passwordDigitTokenReset beta.PasswordDigitTokenReset\n    if err := json.Unmarshal(passworddigittokenreset, &passwordDigitTokenReset); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.PasswordManagementAPI.CreateDigitToken(context.Background()).PasswordDigitTokenReset(passwordDigitTokenReset).Execute()\n	  //resp, r, err := apiClient.Beta.PasswordManagementAPI.CreateDigitToken(context.Background()).PasswordDigitTokenReset(passwordDigitTokenReset).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordManagementAPI.CreateDigitToken``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `CreateDigitToken`: PasswordDigitToken\n    fmt.Fprintf(os.Stdout, "Response from `PasswordManagementAPI.CreateDigitToken`: %v\\n", resp)\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,r.jsx)(t.h2,{id:"get-identity-password-change-status",children:"get-identity-password-change-status"}),"\n",(0,r.jsx)(t.p,{children:"Get password change request status\nThis API returns the status of a password change request. A token with identity owner or trusted API client application authority is required to call this API."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-identity-password-change-status",children:"API Spec"})}),"\n",(0,r.jsx)(t.h3,{id:"path-parameters-1",children:"Path Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Notes"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"ctx"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"context.Context"})}),(0,r.jsx)(t.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"id"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"string"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"other-parameters-1",children:"Other Parameters"}),"\n",(0,r.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiGetIdentityPasswordChangeStatusRequest struct via the builder pattern"}),"\n",(0,r.jsx)(t.table,{children:(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Notes"})]})})}),"\n",(0,r.jsx)(t.h3,{id:"return-type-1",children:"Return type"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"../models/password-status",children:(0,r.jsx)(t.strong,{children:"PasswordStatus"})})}),"\n",(0,r.jsx)(t.h3,{id:"http-request-headers-1",children:"HTTP request headers"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"example-1",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `id_example` // string |  # string | \n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.PasswordManagementAPI.GetIdentityPasswordChangeStatus(context.Background(), id).Execute()\n	  //resp, r, err := apiClient.Beta.PasswordManagementAPI.GetIdentityPasswordChangeStatus(context.Background(), id).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordManagementAPI.GetIdentityPasswordChangeStatus``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetIdentityPasswordChangeStatus`: PasswordStatus\n    fmt.Fprintf(os.Stdout, "Response from `PasswordManagementAPI.GetIdentityPasswordChangeStatus`: %v\\n", resp)\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,r.jsx)(t.h2,{id:"query-password-info",children:"query-password-info"}),"\n",(0,r.jsx)(t.p,{children:"Query password info\nThis API is used to query password related information."}),"\n",(0,r.jsxs)(t.p,{children:["A token with ",(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow",children:"API authority"}),'\nis required to call this API.  "API authority" refers to a token that only has the "client_credentials"\ngrant type, and therefore no user context. A ',(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens",children:"personal access token"}),"\nor a token generated with the ",(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow",children:"authorization_code"}),"\ngrant type will ",(0,r.jsx)(t.strong,{children:"NOT"})," work on this endpoint, and a ",(0,r.jsx)(t.code,{children:"403 Forbidden"})," response\nwill be returned."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/beta/query-password-info",children:"API Spec"})}),"\n",(0,r.jsx)(t.h3,{id:"path-parameters-2",children:"Path Parameters"}),"\n",(0,r.jsx)(t.h3,{id:"other-parameters-2",children:"Other Parameters"}),"\n",(0,r.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiQueryPasswordInfoRequest struct via the builder pattern"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Notes"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"passwordInfoQueryDTO"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../models/password-info-query-dto",children:(0,r.jsx)(t.strong,{children:"PasswordInfoQueryDTO"})})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]})})]}),"\n",(0,r.jsx)(t.h3,{id:"return-type-2",children:"Return type"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"../models/password-info",children:(0,r.jsx)(t.strong,{children:"PasswordInfo"})})}),"\n",(0,r.jsx)(t.h3,{id:"http-request-headers-2",children:"HTTP request headers"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"example-2",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    passwordinfoquerydto := []byte(`{\n          "sourceName" : "My-AD",\n          "userName" : "Abby.Smith"\n        }`) // PasswordInfoQueryDTO | \n\n    var passwordInfoQueryDTO beta.PasswordInfoQueryDTO\n    if err := json.Unmarshal(passwordinfoquerydto, &passwordInfoQueryDTO); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.PasswordManagementAPI.QueryPasswordInfo(context.Background()).PasswordInfoQueryDTO(passwordInfoQueryDTO).Execute()\n	  //resp, r, err := apiClient.Beta.PasswordManagementAPI.QueryPasswordInfo(context.Background()).PasswordInfoQueryDTO(passwordInfoQueryDTO).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordManagementAPI.QueryPasswordInfo``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `QueryPasswordInfo`: PasswordInfo\n    fmt.Fprintf(os.Stdout, "Response from `PasswordManagementAPI.QueryPasswordInfo`: %v\\n", resp)\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,r.jsx)(t.h2,{id:"set-identity-password",children:"set-identity-password"}),"\n",(0,r.jsx)(t.p,{children:"Set identity's password\nThis API is used to set a password for an identity."}),"\n",(0,r.jsxs)(t.p,{children:["An identity can change their own password (as well as any of their accounts' passwords) if they use a token generated by their ISC user, such as a ",(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens",children:"personal access token"})," or ",(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow",children:'"authorization_code" derived OAuth token'}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["A token with ",(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow",children:"API authority"})," can be used to change ",(0,r.jsx)(t.strong,{children:"any"}),' identity\'s password or the password of any of the identity\'s accounts.\n"API authority" refers to a token that only has the "client_credentials" grant type.']}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:(0,r.jsxs)(t.strong,{children:["Note: If you want to set an identity's source account password, you must enable ",(0,r.jsx)(t.code,{children:"PASSWORD"})," as one of the source's features. You can use the ",(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v3/update-source",children:"PATCH Source endpoint"})," to add the ",(0,r.jsx)(t.code,{children:"PASSWORD"})," feature."]})}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["You can use this endpoint to generate an ",(0,r.jsx)(t.code,{children:"encryptedPassword"})," (RSA encrypted using publicKey).\nTo do so, follow these steps:"]}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Use ",(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/v3/query-password-info",children:"Query Password Info"})," to get the following information: ",(0,r.jsx)(t.code,{children:"identityId"}),", ",(0,r.jsx)(t.code,{children:"sourceId"}),", ",(0,r.jsx)(t.code,{children:"publicKeyId"}),", ",(0,r.jsx)(t.code,{children:"publicKey"}),", ",(0,r.jsx)(t.code,{children:"accounts"}),", and ",(0,r.jsx)(t.code,{children:"policies"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Choose an account from the previous response that you will provide as an ",(0,r.jsx)(t.code,{children:"accountId"})," in your request to set an encrypted password."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Use ",(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/v3/set-password",children:"Set Identity's Password"})," and provide the information you got from your earlier query. Then add this code to your request to get the encrypted password:"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'import javax.crypto.Cipher;\nimport java.security.KeyFactory;\nimport java.security.PublicKey;\nimport java.security.spec.X509EncodedKeySpec;\nimport java util.Base64;\n\nString encrypt(String publicKey, String toEncrypt) throws Exception {\n  byte[] publicKeyBytes = Base64.getDecoder().decode(publicKey);\n  byte[] encryptedBytes = encryptRsa(publicKeyBytes, toEncrypt.getBytes("UTF-8"));\n  return Base64.getEncoder().encodeToString(encryptedBytes);\n}\n\nprivate byte[] encryptRsa(byte[] publicKeyBytes, byte[] toEncryptBytes) throws Exception {\n  PublicKey key = KeyFactory.getInstance("RSA").generatePublic(new X509EncodedKeySpec(publicKeyBytes));\n  String transformation = "RSA/ECB/PKCS1Padding";\n  Cipher cipher = Cipher.getInstance(transformation);\n  cipher.init(1, key);\n  return cipher.doFinal(toEncryptBytes);\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["In this example, ",(0,r.jsx)(t.code,{children:"toEncrypt"})," refers to the plain text password you are setting and then encrypting, and the ",(0,r.jsx)(t.code,{children:"publicKey"})," refers to the publicKey you got from the first request you sent."]}),"\n",(0,r.jsxs)(t.p,{children:["You can then use ",(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/v3/get-password-change-status",children:"Get Password Change Request Status"})," to check the password change request status. To do so, you must provide the ",(0,r.jsx)(t.code,{children:"requestId"})," from your earlier request to set the password."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/beta/set-identity-password",children:"API Spec"})}),"\n",(0,r.jsx)(t.h3,{id:"path-parameters-3",children:"Path Parameters"}),"\n",(0,r.jsx)(t.h3,{id:"other-parameters-3",children:"Other Parameters"}),"\n",(0,r.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiSetIdentityPasswordRequest struct via the builder pattern"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Notes"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"passwordChangeRequest"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../models/password-change-request",children:(0,r.jsx)(t.strong,{children:"PasswordChangeRequest"})})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]})})]}),"\n",(0,r.jsx)(t.h3,{id:"return-type-3",children:"Return type"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"../models/password-change-response",children:(0,r.jsx)(t.strong,{children:"PasswordChangeResponse"})})}),"\n",(0,r.jsx)(t.h3,{id:"http-request-headers-3",children:"HTTP request headers"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"example-3",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    passwordchangerequest := []byte(`{\n          "sourceId" : "8a807d4c73c545510173c545d4b60246",\n          "accountId" : "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com",\n          "identityId" : "8a807d4c73c545510173c545f0a002ff",\n          "publicKeyId" : "YWQ2NjQ4MTItZjY0NC00MWExLWFjMjktOGNmMzU3Y2VlNjk2",\n          "encryptedPassword" : "XzN+YwKgr2C+InkMYFMBG3UtjMEw5ZIql/XFlXo8cJNeslmkplx6vn4kd4/43IF9STBk5RnzR6XmjpEO+FwHDoiBwYZAkAZK/Iswxk4OdybG6Y4MStJCOCiK8osKr35IMMSV/mbO4wAeltoCk7daTWzTGLiI6UaT5tf+F2EgdjJZ7YqM8W8r7aUWsm3p2Xt01Y46ZRx0QaM91QruiIx2rECFT2pUO0wr+7oQ77jypATyGWRtADsu3YcvCk/6U5MqCnXMzKBcRas7NnZdSL/d5H1GglVGz3VLPMaivG4/oL4chOMmFCRl/zVsGxZ9RhN8rxsRGFFKn+rhExTi+bax3A=="\n        }`) // PasswordChangeRequest | \n\n    var passwordChangeRequest beta.PasswordChangeRequest\n    if err := json.Unmarshal(passwordchangerequest, &passwordChangeRequest); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.PasswordManagementAPI.SetIdentityPassword(context.Background()).PasswordChangeRequest(passwordChangeRequest).Execute()\n	  //resp, r, err := apiClient.Beta.PasswordManagementAPI.SetIdentityPassword(context.Background()).PasswordChangeRequest(passwordChangeRequest).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordManagementAPI.SetIdentityPassword``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `SetIdentityPassword`: PasswordChangeResponse\n    fmt.Fprintf(os.Stdout, "Response from `PasswordManagementAPI.SetIdentityPassword`: %v\\n", resp)\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"#",children:"[Back to top]"})})]})}function h(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},250065:function(e,t,s){s.d(t,{Z:()=>o,a:()=>i});var n=s(667294);let r={},a=n.createContext(r);function i(e){let t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:t},e.children)}},267404:function(e){e.exports=JSON.parse('{"id":"tools/sdk/go/Reference/Beta/Methods/beta-password-management","title":"PasswordManagement","description":"Use this API to implement password management functionality.","source":"@site/docs/tools/sdk/go/Reference/Beta/Methods/PasswordManagementAPI.md","sourceDirName":"tools/sdk/go/Reference/Beta/Methods","slug":"/tools/sdk/go/beta/methods/password-management","permalink":"/docs/tools/sdk/go/beta/methods/password-management","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/go/Reference/Beta/Methods/PasswordManagementAPI.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"PasswordManagement","permalink":"/docs/tags/password-management"},{"inline":true,"label":"BetaPasswordManagement","permalink":"/docs/tags/beta-password-management"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1747667177000,"frontMatter":{"id":"beta-password-management","title":"PasswordManagement","pagination_label":"PasswordManagement","sidebar_label":"PasswordManagement","sidebar_class_name":"gosdk","keywords":["go","Golang","sdk","PasswordManagement","BetaPasswordManagement"],"slug":"/tools/sdk/go/beta/methods/password-management","tags":["SDK","Software Development Kit","PasswordManagement","BetaPasswordManagement"]},"sidebar":"openApiSidebar","previous":{"title":"PasswordDictionary","permalink":"/docs/tools/sdk/go/beta/methods/password-dictionary"},"next":{"title":"PasswordPolicies","permalink":"/docs/tools/sdk/go/beta/methods/password-policies"}}')}}]);