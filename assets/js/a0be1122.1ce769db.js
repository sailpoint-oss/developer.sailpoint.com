"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["960792"],{282157:function(e,t,n){n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var i=n(843470),o=n(785893),s=n(250065);let r={id:"extending-services",title:"Extending Services",pagination_label:"UDK",sidebar_label:"Extending",sidebar_position:2,sidebar_class_name:"rudk",keywords:["UI","development","kit"],description:"Extending Services in the UI Development Kit",slug:"/tools/ui-development-kit/extending-services",tags:["UI"]},a=void 0,l={},d=[{value:"Adding additional electron based API calls",id:"adding-additional-electron-based-api-calls",level:2},{value:"1. Add a new electron method",id:"1-add-a-new-electron-method",level:4},{value:"2. Expose the method to the angular app",id:"2-expose-the-method-to-the-angular-app",level:4},{value:"3. Add the service in the ElectronAPIInterface",id:"3-add-the-service-in-the-electronapiinterface",level:4},{value:"4. Add the service in the web implementation",id:"4-add-the-service-in-the-web-implementation",level:4},{value:"5. Call the api",id:"5-call-the-api",level:4}];function c(e){let t={code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"adding-additional-electron-based-api-calls",children:"Adding additional electron based API calls"}),"\n",(0,o.jsx)(t.p,{children:"Sometimes, the APIs available through the SDK are not enough for the type of implmentation you are trying to build or you want to extend the application to access local files. To do this, follow the steps below:"}),"\n",(0,o.jsx)(t.h4,{id:"1-add-a-new-electron-method",children:"1. Add a new electron method"}),"\n",(0,o.jsx)(t.p,{children:"This is where you can make the API call or access the filesystem safely and return it back to the app:"}),"\n",(0,o.jsxs)(t.p,{children:["Inside the ",(0,o.jsx)(t.code,{children:"app/main.ts"})," file, add a new method like the example below:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"  ipcMain.handle('my-new-method', async (event, param: string) => {\n    // implement your logic, or call another method here and return the results\n    console.log('my-new-method called with param:', param);\n    fetch('https://api.github.com').then(response => response.json()).then(data => {\n      console.log('Fetched data from GitHub API:', data);\n      return JSON.stringify(data.response);\n    }).catch(error => {\n      console.error('Error fetching data from GitHub API:', error);\n      return 'Error fetching data';\n    });\n  });\n"})}),"\n",(0,o.jsx)(t.h4,{id:"2-expose-the-method-to-the-angular-app",children:"2. Expose the method to the angular app"}),"\n",(0,o.jsxs)(t.p,{children:["Inside the ",(0,o.jsx)(t.code,{children:"app/preload.ts"})," file, add the new method to expose it to the angular application:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"contextBridge.exposeInMainWorld('electronAPI', {\n  ...\n  myNewMethod: (param: string) => ipcMain.invoke('my-new-method', param),\n  ...\n}\n"})}),"\n",(0,o.jsx)(t.h4,{id:"3-add-the-service-in-the-electronapiinterface",children:"3. Add the service in the ElectronAPIInterface"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"projects\\sailpoint-components\\src\\lib\\services\\web-api.service.ts"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"export interface ElectronAPIInterface {\n  ...\n  myNewMethod: (param: string) => Promise<{ response: string }>;\n  ...\n}\n"})}),"\n",(0,o.jsx)(t.h4,{id:"4-add-the-service-in-the-web-implementation",children:"4. Add the service in the web implementation"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"projects\\sailpoint-components\\src\\lib\\services\\web-api.service.ts"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"export class WebApiService implements ElectronAPIInterface {\n  ...\n  // you only need to implement this on the backend if you decide to use this in web mode\n  async myNewMethod(param: string): Promise<{ response: string }> {\n    return this.apiCall<{ response: string }>('my-new-method', 'POST', { param });\n  }\n  ...\n}\n"})}),"\n",(0,o.jsx)(t.h4,{id:"5-call-the-api",children:"5. Call the api"}),"\n",(0,o.jsx)(t.p,{children:"inside any test.component.ts angular component:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"\n  constructor(private electronService: ElectronApiFactoryService) {}\n\n  ...\n\n  async asyncMethod(): Promise<void> {\n\n    const returnString = await this.electronService.getApi().myNewMethod('test')\n    console.log('myNewMethod response:', returnString);\n    \n"})})]})}function p(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},250065:function(e,t,n){n.d(t,{Z:()=>a,a:()=>r});var i=n(667294);let o={},s=i.createContext(o);function r(e){let t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}},843470:function(e){e.exports=JSON.parse('{"id":"tools/ui-development-kit/extending-services","title":"Extending Services","description":"Extending Services in the UI Development Kit","source":"@site/docs/tools/ui-development-kit/extending-services.md","sourceDirName":"tools/ui-development-kit","slug":"/tools/ui-development-kit/extending-services","permalink":"/docs/tools/ui-development-kit/extending-services","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/ui-development-kit/extending-services.md","tags":[{"inline":true,"label":"UI","permalink":"/docs/tags/ui"}],"version":"current","lastUpdatedBy":"Philip Ellis","lastUpdatedAt":1758567480000,"sidebarPosition":2,"frontMatter":{"id":"extending-services","title":"Extending Services","pagination_label":"UDK","sidebar_label":"Extending","sidebar_position":2,"sidebar_class_name":"rudk","keywords":["UI","development","kit"],"description":"Extending Services in the UI Development Kit","slug":"/tools/ui-development-kit/extending-services","tags":["UI"]},"sidebar":"openApiSidebar","previous":{"title":"UDK","permalink":"/docs/tools/ui-development-kit/deploying"},"next":{"title":"UDK","permalink":"/docs/tools/ui-development-kit/theming"}}')}}]);