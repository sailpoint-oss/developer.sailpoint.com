"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["390812"],{895343:function(e,t,a){a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>o});var n=a(982999),s=a(785893),r=a(250065);let i={id:"v2025-access-model-metadata",title:"AccessModelMetadata",pagination_label:"AccessModelMetadata",sidebar_label:"AccessModelMetadata",sidebar_class_name:"gosdk",keywords:["go","Golang","sdk","AccessModelMetadata","V2025AccessModelMetadata"],slug:"/tools/sdk/go/v2025/methods/access-model-metadata",tags:["SDK","Software Development Kit","AccessModelMetadata","V2025AccessModelMetadata"]},l="AccessModelMetadataAPI",d={},o=[{value:"get-access-model-metadata-attribute",id:"get-access-model-metadata-attribute",level:2},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Other Parameters",id:"other-parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example",level:3},{value:"get-access-model-metadata-attribute-value",id:"get-access-model-metadata-attribute-value",level:2},{value:"Path Parameters",id:"path-parameters-1",level:3},{value:"Other Parameters",id:"other-parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-1",level:3},{value:"list-access-model-metadata-attribute",id:"list-access-model-metadata-attribute",level:2},{value:"Path Parameters",id:"path-parameters-2",level:3},{value:"Other Parameters",id:"other-parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-2",level:3},{value:"list-access-model-metadata-attribute-value",id:"list-access-model-metadata-attribute-value",level:2},{value:"Path Parameters",id:"path-parameters-3",level:3},{value:"Other Parameters",id:"other-parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-3",level:3},{value:"update-access-model-metadata-by-filter",id:"update-access-model-metadata-by-filter",level:2},{value:"Path Parameters",id:"path-parameters-4",level:3},{value:"Other Parameters",id:"other-parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3},{value:"Example",id:"example-4",level:3},{value:"update-access-model-metadata-by-ids",id:"update-access-model-metadata-by-ids",level:2},{value:"Path Parameters",id:"path-parameters-5",level:3},{value:"Other Parameters",id:"other-parameters-5",level:3},{value:"Return type",id:"return-type-5",level:3},{value:"HTTP request headers",id:"http-request-headers-5",level:3},{value:"Example",id:"example-5",level:3},{value:"update-access-model-metadata-by-query",id:"update-access-model-metadata-by-query",level:2},{value:"Path Parameters",id:"path-parameters-6",level:3},{value:"Other Parameters",id:"other-parameters-6",level:3},{value:"Return type",id:"return-type-6",level:3},{value:"HTTP request headers",id:"http-request-headers-6",level:3},{value:"Example",id:"example-6",level:3}];function c(e){let t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"accessmodelmetadataapi",children:"AccessModelMetadataAPI"})}),"\n",(0,s.jsx)(t.p,{children:"Use this API to create and manage metadata attributes for your Access Model.\nAccess Model Metadata allows you to add contextual information to your ISC Access Model items using pre-defined metadata for risk, regulations, privacy levels, etc., or by creating your own metadata attributes to reflect the unique needs of your organization. This release of the API includes support for entitlement metadata. Support for role and access profile metadata will be introduced in a subsequent release."}),"\n",(0,s.jsx)(t.p,{children:"Common usages for Access Model metadata include:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Organizing and categorizing access items to make it easier for your users to search for and find the access rights they want to request, certify, or manage."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Providing richer information about access that is being acted on to allow stakeholders to make better decisions when approving, certifying, or managing access rights."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Identifying access that may requires additional approval requirements or be subject to more frequent review."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["All URIs are relative to ",(0,s.jsx)(t.em,{children:(0,s.jsx)(t.a,{href:"https://sailpoint.api.identitynow.com/v2025",children:"https://sailpoint.api.identitynow.com/v2025"})})]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Method"}),(0,s.jsx)(t.th,{children:"HTTP request"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"#get-access-model-metadata-attribute",children:(0,s.jsx)(t.strong,{children:"get-access-model-metadata-attribute"})})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"Get"})," ",(0,s.jsx)(t.code,{children:"/access-model-metadata/attributes/{key}"})]}),(0,s.jsx)(t.td,{children:"Get access model metadata attribute"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"#get-access-model-metadata-attribute-value",children:(0,s.jsx)(t.strong,{children:"get-access-model-metadata-attribute-value"})})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"Get"})," ",(0,s.jsx)(t.code,{children:"/access-model-metadata/attributes/{key}/values/{value}"})]}),(0,s.jsx)(t.td,{children:"Get access model metadata value"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"#list-access-model-metadata-attribute",children:(0,s.jsx)(t.strong,{children:"list-access-model-metadata-attribute"})})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"Get"})," ",(0,s.jsx)(t.code,{children:"/access-model-metadata/attributes"})]}),(0,s.jsx)(t.td,{children:"List access model metadata attributes"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"#list-access-model-metadata-attribute-value",children:(0,s.jsx)(t.strong,{children:"list-access-model-metadata-attribute-value"})})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"Get"})," ",(0,s.jsx)(t.code,{children:"/access-model-metadata/attributes/{key}/values"})]}),(0,s.jsx)(t.td,{children:"List access model metadata values"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"#update-access-model-metadata-by-filter",children:(0,s.jsx)(t.strong,{children:"update-access-model-metadata-by-filter"})})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"Post"})," ",(0,s.jsx)(t.code,{children:"/access-model-metadata/bulk-update/filter"})]}),(0,s.jsx)(t.td,{children:"Metadata Attribute update by filter"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"#update-access-model-metadata-by-ids",children:(0,s.jsx)(t.strong,{children:"update-access-model-metadata-by-ids"})})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"Post"})," ",(0,s.jsx)(t.code,{children:"/access-model-metadata/bulk-update/ids"})]}),(0,s.jsx)(t.td,{children:"Metadata Attribute update by ids"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"#update-access-model-metadata-by-query",children:(0,s.jsx)(t.strong,{children:"update-access-model-metadata-by-query"})})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"Post"})," ",(0,s.jsx)(t.code,{children:"/access-model-metadata/bulk-update/query"})]}),(0,s.jsx)(t.td,{children:"Metadata Attribute update by query"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"get-access-model-metadata-attribute",children:"get-access-model-metadata-attribute"}),"\n",(0,s.jsx)(t.p,{children:"Get access model metadata attribute\nGet single Access Model Metadata Attribute"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/get-access-model-metadata-attribute",children:"API Spec"})}),"\n",(0,s.jsx)(t.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Notes"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"ctx"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"context.Context"})}),(0,s.jsx)(t.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"key"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"string"})}),(0,s.jsx)(t.td,{children:"Technical name of the Attribute."}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"other-parameters",children:"Other Parameters"}),"\n",(0,s.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiGetAccessModelMetadataAttributeRequest struct via the builder pattern"}),"\n",(0,s.jsx)(t.table,{children:(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Notes"})]})})}),"\n",(0,s.jsx)(t.h3,{id:"return-type",children:"Return type"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"../models/attribute-dto",children:(0,s.jsx)(t.strong,{children:"AttributeDTO"})})}),"\n",(0,s.jsx)(t.h3,{id:"http-request-headers",children:"HTTP request headers"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    key := `iscPrivacy` // string | Technical name of the Attribute. # string | Technical name of the Attribute.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.AccessModelMetadataAPI.GetAccessModelMetadataAttribute(context.Background(), key).Execute()\n	  //resp, r, err := apiClient.V2025.AccessModelMetadataAPI.GetAccessModelMetadataAttribute(context.Background(), key).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `AccessModelMetadataAPI.GetAccessModelMetadataAttribute``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetAccessModelMetadataAttribute`: AttributeDTO\n    fmt.Fprintf(os.Stdout, "Response from `AccessModelMetadataAPI.GetAccessModelMetadataAttribute`: %v\\n", resp)\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,s.jsx)(t.h2,{id:"get-access-model-metadata-attribute-value",children:"get-access-model-metadata-attribute-value"}),"\n",(0,s.jsx)(t.p,{children:"Get access model metadata value\nGet single Access Model Metadata Attribute Value"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/get-access-model-metadata-attribute-value",children:"API Spec"})}),"\n",(0,s.jsx)(t.h3,{id:"path-parameters-1",children:"Path Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Notes"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"ctx"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"context.Context"})}),(0,s.jsx)(t.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"key"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"string"})}),(0,s.jsx)(t.td,{children:"Technical name of the Attribute."}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"value"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"string"})}),(0,s.jsx)(t.td,{children:"Technical name of the Attribute value."}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"other-parameters-1",children:"Other Parameters"}),"\n",(0,s.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiGetAccessModelMetadataAttributeValueRequest struct via the builder pattern"}),"\n",(0,s.jsx)(t.table,{children:(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Notes"})]})})}),"\n",(0,s.jsx)(t.h3,{id:"return-type-1",children:"Return type"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"../models/attribute-value-dto",children:(0,s.jsx)(t.strong,{children:"AttributeValueDTO"})})}),"\n",(0,s.jsx)(t.h3,{id:"http-request-headers-1",children:"HTTP request headers"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"example-1",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    key := `iscPrivacy` // string | Technical name of the Attribute. # string | Technical name of the Attribute.\n    value := `public` // string | Technical name of the Attribute value. # string | Technical name of the Attribute value.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.AccessModelMetadataAPI.GetAccessModelMetadataAttributeValue(context.Background(), key, value).Execute()\n	  //resp, r, err := apiClient.V2025.AccessModelMetadataAPI.GetAccessModelMetadataAttributeValue(context.Background(), key, value).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `AccessModelMetadataAPI.GetAccessModelMetadataAttributeValue``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetAccessModelMetadataAttributeValue`: AttributeValueDTO\n    fmt.Fprintf(os.Stdout, "Response from `AccessModelMetadataAPI.GetAccessModelMetadataAttributeValue`: %v\\n", resp)\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,s.jsx)(t.h2,{id:"list-access-model-metadata-attribute",children:"list-access-model-metadata-attribute"}),"\n",(0,s.jsx)(t.p,{children:"List access model metadata attributes\nGet a list of Access Model Metadata Attributes"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/list-access-model-metadata-attribute",children:"API Spec"})}),"\n",(0,s.jsx)(t.h3,{id:"path-parameters-2",children:"Path Parameters"}),"\n",(0,s.jsx)(t.h3,{id:"other-parameters-2",children:"Other Parameters"}),"\n",(0,s.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiListAccessModelMetadataAttributeRequest struct via the builder pattern"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Notes"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"filters"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"string"})}),(0,s.jsxs)(t.td,{children:["Filter results using the standard syntax described in ",(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results",children:"V3 API Standard Collection Parameters"}),"  Filtering is supported for the following fields and operators:  ",(0,s.jsx)(t.strong,{children:"key"}),": ",(0,s.jsx)(t.em,{children:"eq"}),"  ",(0,s.jsx)(t.strong,{children:"name"}),": ",(0,s.jsx)(t.em,{children:"eq"}),"  ",(0,s.jsx)(t.strong,{children:"type"}),": ",(0,s.jsx)(t.em,{children:"eq"}),"  ",(0,s.jsx)(t.strong,{children:"status"}),": ",(0,s.jsx)(t.em,{children:"eq"}),"  ",(0,s.jsx)(t.strong,{children:"objectTypes"}),": ",(0,s.jsx)(t.em,{children:"eq"}),"  ",(0,s.jsx)(t.strong,{children:"Supported composite operators"}),": ",(0,s.jsx)(t.em,{children:"and"})]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"sorters"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"string"})}),(0,s.jsxs)(t.td,{children:["Sort results using the standard syntax described in ",(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results",children:"V3 API Standard Collection Parameters"}),"  Sorting is supported for the following fields: ",(0,s.jsx)(t.strong,{children:"name, key"})]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"offset"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"int32"})}),(0,s.jsxs)(t.td,{children:["Offset into the full result set. Usually specified with ",(0,s.jsx)(t.em,{children:"limit"})," to paginate through the results. See ",(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,s.jsx)(t.td,{children:"[default to 0]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"limit"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"int32"})}),(0,s.jsxs)(t.td,{children:["Max number of results to return. See ",(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,s.jsx)(t.td,{children:"[default to 250]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"count"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"bool"})}),(0,s.jsxs)(t.td,{children:["If ",(0,s.jsx)(t.em,{children:"true"})," it will populate the ",(0,s.jsx)(t.em,{children:"X-Total-Count"})," response header with the number of results that would be returned if ",(0,s.jsx)(t.em,{children:"limit"})," and ",(0,s.jsx)(t.em,{children:"offset"})," were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send ",(0,s.jsx)(t.strong,{children:"count=true"})," if that value will not be used.  See ",(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,s.jsx)(t.td,{children:"[default to false]"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"return-type-2",children:"Return type"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"../models/attribute-dto",children:(0,s.jsx)(t.strong,{children:"[]AttributeDTO"})})}),"\n",(0,s.jsx)(t.h3,{id:"http-request-headers-2",children:"HTTP request headers"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"example-2",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    filters := `name eq "Privacy"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **key**: *eq*  **name**: *eq*  **type**: *eq*  **status**: *eq*  **objectTypes**: *eq*  **Supported composite operators**: *and* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **key**: *eq*  **name**: *eq*  **type**: *eq*  **status**: *eq*  **objectTypes**: *eq*  **Supported composite operators**: *and* (optional)\n    sorters := `name,-key` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, key** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, key** (optional)\n    offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)\n    limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)\n    count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.AccessModelMetadataAPI.ListAccessModelMetadataAttribute(context.Background()).Execute()\n	  //resp, r, err := apiClient.V2025.AccessModelMetadataAPI.ListAccessModelMetadataAttribute(context.Background()).Filters(filters).Sorters(sorters).Offset(offset).Limit(limit).Count(count).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `AccessModelMetadataAPI.ListAccessModelMetadataAttribute``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `ListAccessModelMetadataAttribute`: []AttributeDTO\n    fmt.Fprintf(os.Stdout, "Response from `AccessModelMetadataAPI.ListAccessModelMetadataAttribute`: %v\\n", resp)\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,s.jsx)(t.h2,{id:"list-access-model-metadata-attribute-value",children:"list-access-model-metadata-attribute-value"}),"\n",(0,s.jsx)(t.p,{children:"List access model metadata values\nGet a list of Access Model Metadata Attribute Values"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/list-access-model-metadata-attribute-value",children:"API Spec"})}),"\n",(0,s.jsx)(t.h3,{id:"path-parameters-3",children:"Path Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Notes"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"ctx"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"context.Context"})}),(0,s.jsx)(t.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"key"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"string"})}),(0,s.jsx)(t.td,{children:"Technical name of the Attribute."}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"other-parameters-3",children:"Other Parameters"}),"\n",(0,s.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiListAccessModelMetadataAttributeValueRequest struct via the builder pattern"}),"\n",(0,s.jsx)(t.table,{children:(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Notes"})]})})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"offset"})," | ",(0,s.jsx)(t.strong,{children:"int32"})," | Offset into the full result set. Usually specified with ",(0,s.jsx)(t.em,{children:"limit"})," to paginate through the results. See ",(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information. | [default to 0]\n",(0,s.jsx)(t.strong,{children:"limit"})," | ",(0,s.jsx)(t.strong,{children:"int32"})," | Max number of results to return. See ",(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information. | [default to 250]\n",(0,s.jsx)(t.strong,{children:"count"})," | ",(0,s.jsx)(t.strong,{children:"bool"})," | If ",(0,s.jsx)(t.em,{children:"true"})," it will populate the ",(0,s.jsx)(t.em,{children:"X-Total-Count"})," response header with the number of results that would be returned if ",(0,s.jsx)(t.em,{children:"limit"})," and ",(0,s.jsx)(t.em,{children:"offset"})," were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send ",(0,s.jsx)(t.strong,{children:"count=true"})," if that value will not be used.  See ",(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information. | [default to false]"]}),"\n",(0,s.jsx)(t.h3,{id:"return-type-3",children:"Return type"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"../models/attribute-value-dto",children:(0,s.jsx)(t.strong,{children:"[]AttributeValueDTO"})})}),"\n",(0,s.jsx)(t.h3,{id:"http-request-headers-3",children:"HTTP request headers"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"example-3",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    key := `iscPrivacy` // string | Technical name of the Attribute. # string | Technical name of the Attribute.\n    offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)\n    limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)\n    count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.AccessModelMetadataAPI.ListAccessModelMetadataAttributeValue(context.Background(), key).Execute()\n	  //resp, r, err := apiClient.V2025.AccessModelMetadataAPI.ListAccessModelMetadataAttributeValue(context.Background(), key).Offset(offset).Limit(limit).Count(count).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `AccessModelMetadataAPI.ListAccessModelMetadataAttributeValue``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `ListAccessModelMetadataAttributeValue`: []AttributeValueDTO\n    fmt.Fprintf(os.Stdout, "Response from `AccessModelMetadataAPI.ListAccessModelMetadataAttributeValue`: %v\\n", resp)\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,s.jsx)(t.h2,{id:"update-access-model-metadata-by-filter",children:"update-access-model-metadata-by-filter"}),"\n",(0,s.jsx)(t.p,{children:"Metadata Attribute update by filter\nBulk update Access Model Metadata Attribute Values using a filter"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/update-access-model-metadata-by-filter",children:"API Spec"})}),"\n",(0,s.jsx)(t.h3,{id:"path-parameters-4",children:"Path Parameters"}),"\n",(0,s.jsx)(t.h3,{id:"other-parameters-4",children:"Other Parameters"}),"\n",(0,s.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiUpdateAccessModelMetadataByFilterRequest struct via the builder pattern"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Notes"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"entitlementAttributeBulkUpdateFilterRequest"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../models/entitlement-attribute-bulk-update-filter-request",children:(0,s.jsx)(t.strong,{children:"EntitlementAttributeBulkUpdateFilterRequest"})})}),(0,s.jsx)(t.td,{children:"Attribute metadata bulk update request body."}),(0,s.jsx)(t.td,{})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"return-type-4",children:"Return type"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"../models/access-model-metadata-bulk-update-response",children:(0,s.jsx)(t.strong,{children:"AccessModelMetadataBulkUpdateResponse"})})}),"\n",(0,s.jsx)(t.h3,{id:"http-request-headers-4",children:"HTTP request headers"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"example-4",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    v2025 "github.com/sailpoint-oss/golang-sdk/v2/api_v2025"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    entitlementattributebulkupdatefilterrequest := []byte(`{\n          "values" : [ {\n            "attribute" : "iscFederalClassifications",\n            "values" : [ "topSecret" ]\n          } ],\n          "filters" : "id eq 2c9180867817ac4d017817c491119a20",\n          "replaceScope" : "attribute",\n          "operation" : "add"\n        }`) // EntitlementAttributeBulkUpdateFilterRequest | Attribute metadata bulk update request body.\n\n    var entitlementAttributeBulkUpdateFilterRequest v2025.EntitlementAttributeBulkUpdateFilterRequest\n    if err := json.Unmarshal(entitlementattributebulkupdatefilterrequest, &entitlementAttributeBulkUpdateFilterRequest); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.AccessModelMetadataAPI.UpdateAccessModelMetadataByFilter(context.Background()).EntitlementAttributeBulkUpdateFilterRequest(entitlementAttributeBulkUpdateFilterRequest).Execute()\n	  //resp, r, err := apiClient.V2025.AccessModelMetadataAPI.UpdateAccessModelMetadataByFilter(context.Background()).EntitlementAttributeBulkUpdateFilterRequest(entitlementAttributeBulkUpdateFilterRequest).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `AccessModelMetadataAPI.UpdateAccessModelMetadataByFilter``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `UpdateAccessModelMetadataByFilter`: AccessModelMetadataBulkUpdateResponse\n    fmt.Fprintf(os.Stdout, "Response from `AccessModelMetadataAPI.UpdateAccessModelMetadataByFilter`: %v\\n", resp)\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,s.jsx)(t.h2,{id:"update-access-model-metadata-by-ids",children:"update-access-model-metadata-by-ids"}),"\n",(0,s.jsx)(t.p,{children:"Metadata Attribute update by ids\nBulk update Access Model Metadata Attribute Values using ids."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/update-access-model-metadata-by-ids",children:"API Spec"})}),"\n",(0,s.jsx)(t.h3,{id:"path-parameters-5",children:"Path Parameters"}),"\n",(0,s.jsx)(t.h3,{id:"other-parameters-5",children:"Other Parameters"}),"\n",(0,s.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiUpdateAccessModelMetadataByIdsRequest struct via the builder pattern"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Notes"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"entitlementAttributeBulkUpdateIdsRequest"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../models/entitlement-attribute-bulk-update-ids-request",children:(0,s.jsx)(t.strong,{children:"EntitlementAttributeBulkUpdateIdsRequest"})})}),(0,s.jsx)(t.td,{children:"Attribute metadata bulk update request body."}),(0,s.jsx)(t.td,{})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"return-type-5",children:"Return type"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"../models/access-model-metadata-bulk-update-response",children:(0,s.jsx)(t.strong,{children:"AccessModelMetadataBulkUpdateResponse"})})}),"\n",(0,s.jsx)(t.h3,{id:"http-request-headers-5",children:"HTTP request headers"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"example-5",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    v2025 "github.com/sailpoint-oss/golang-sdk/v2/api_v2025"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    entitlementattributebulkupdateidsrequest := []byte(`{\n          "entitlements" : [ "2c9180867817ac4d017817c491119a20", "2c9180867817ac4d017817c491119a21" ],\n          "values" : [ {\n            "attribute" : "iscFederalClassifications",\n            "values" : [ "topSecret" ]\n          } ],\n          "replaceScope" : "attribute",\n          "operation" : "add"\n        }`) // EntitlementAttributeBulkUpdateIdsRequest | Attribute metadata bulk update request body.\n\n    var entitlementAttributeBulkUpdateIdsRequest v2025.EntitlementAttributeBulkUpdateIdsRequest\n    if err := json.Unmarshal(entitlementattributebulkupdateidsrequest, &entitlementAttributeBulkUpdateIdsRequest); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.AccessModelMetadataAPI.UpdateAccessModelMetadataByIds(context.Background()).EntitlementAttributeBulkUpdateIdsRequest(entitlementAttributeBulkUpdateIdsRequest).Execute()\n	  //resp, r, err := apiClient.V2025.AccessModelMetadataAPI.UpdateAccessModelMetadataByIds(context.Background()).EntitlementAttributeBulkUpdateIdsRequest(entitlementAttributeBulkUpdateIdsRequest).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `AccessModelMetadataAPI.UpdateAccessModelMetadataByIds``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `UpdateAccessModelMetadataByIds`: AccessModelMetadataBulkUpdateResponse\n    fmt.Fprintf(os.Stdout, "Response from `AccessModelMetadataAPI.UpdateAccessModelMetadataByIds`: %v\\n", resp)\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,s.jsx)(t.h2,{id:"update-access-model-metadata-by-query",children:"update-access-model-metadata-by-query"}),"\n",(0,s.jsx)(t.p,{children:"Metadata Attribute update by query\nBulk update Access Model Metadata Attribute Values using a query"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/update-access-model-metadata-by-query",children:"API Spec"})}),"\n",(0,s.jsx)(t.h3,{id:"path-parameters-6",children:"Path Parameters"}),"\n",(0,s.jsx)(t.h3,{id:"other-parameters-6",children:"Other Parameters"}),"\n",(0,s.jsx)(t.p,{children:"Other parameters are passed through a pointer to a apiUpdateAccessModelMetadataByQueryRequest struct via the builder pattern"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Notes"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"entitlementAttributeBulkUpdateQueryRequest"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../models/entitlement-attribute-bulk-update-query-request",children:(0,s.jsx)(t.strong,{children:"EntitlementAttributeBulkUpdateQueryRequest"})})}),(0,s.jsx)(t.td,{children:"Attribute metadata bulk update request body."}),(0,s.jsx)(t.td,{})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"return-type-6",children:"Return type"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"../models/access-model-metadata-bulk-update-response",children:(0,s.jsx)(t.strong,{children:"AccessModelMetadataBulkUpdateResponse"})})}),"\n",(0,s.jsx)(t.h3,{id:"http-request-headers-6",children:"HTTP request headers"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"example-6",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    v2025 "github.com/sailpoint-oss/golang-sdk/v2/api_v2025"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    entitlementattributebulkupdatequeryrequest := []byte(`{\n          "query" : {\n            "queryDsl" : {\n              "match" : {\n                "name" : "john.doe"\n              }\n            },\n            "aggregationType" : "DSL",\n            "aggregationsVersion" : "",\n            "query" : {\n              "query" : "name:a*",\n              "timeZone" : "America/Chicago",\n              "fields" : "[firstName,lastName,email]",\n              "innerHit" : {\n                "query" : "source.name:\\\\\\"Active Directory\\\\\\"",\n                "type" : "access"\n              }\n            },\n            "aggregationsDsl" : { },\n            "sort" : [ "displayName", "+id" ],\n            "filters" : { },\n            "queryVersion" : "",\n            "queryType" : "SAILPOINT",\n            "includeNested" : true,\n            "queryResultFilter" : {\n              "excludes" : [ "stacktrace" ],\n              "includes" : [ "name", "displayName" ]\n            },\n            "indices" : [ "identities" ],\n            "typeAheadQuery" : {\n              "field" : "source.name",\n              "size" : 100,\n              "query" : "Work",\n              "sortByValue" : true,\n              "nestedType" : "access",\n              "sort" : "asc",\n              "maxExpansions" : 10\n            },\n            "textQuery" : {\n              "contains" : true,\n              "terms" : [ "The quick brown fox", "3141592", "7" ],\n              "matchAny" : false,\n              "fields" : [ "displayName", "employeeNumber", "roleCount" ]\n            },\n            "searchAfter" : [ "John Doe", "2c91808375d8e80a0175e1f88a575221" ],\n            "aggregations" : {\n              "filter" : {\n                "field" : "access.type",\n                "name" : "Entitlements",\n                "type" : "TERM",\n                "value" : "ENTITLEMENT"\n              },\n              "bucket" : {\n                "field" : "attributes.city",\n                "size" : 100,\n                "minDocCount" : 2,\n                "name" : "Identity Locations",\n                "type" : "TERMS"\n              },\n              "metric" : {\n                "field" : "@access.name",\n                "name" : "Access Name Count",\n                "type" : "COUNT"\n              },\n              "subAggregation" : {\n                "filter" : {\n                  "field" : "access.type",\n                  "name" : "Entitlements",\n                  "type" : "TERM",\n                  "value" : "ENTITLEMENT"\n                },\n                "bucket" : {\n                  "field" : "attributes.city",\n                  "size" : 100,\n                  "minDocCount" : 2,\n                  "name" : "Identity Locations",\n                  "type" : "TERMS"\n                },\n                "metric" : {\n                  "field" : "@access.name",\n                  "name" : "Access Name Count",\n                  "type" : "COUNT"\n                },\n                "subAggregation" : {\n                  "filter" : {\n                    "field" : "access.type",\n                    "name" : "Entitlements",\n                    "type" : "TERM",\n                    "value" : "ENTITLEMENT"\n                  },\n                  "bucket" : {\n                    "field" : "attributes.city",\n                    "size" : 100,\n                    "minDocCount" : 2,\n                    "name" : "Identity Locations",\n                    "type" : "TERMS"\n                  },\n                  "metric" : {\n                    "field" : "@access.name",\n                    "name" : "Access Name Count",\n                    "type" : "COUNT"\n                  },\n                  "nested" : {\n                    "name" : "id",\n                    "type" : "access"\n                  }\n                },\n                "nested" : {\n                  "name" : "id",\n                  "type" : "access"\n                }\n              },\n              "nested" : {\n                "name" : "id",\n                "type" : "access"\n              }\n            }\n          },\n          "values" : [ {\n            "attribute" : "iscFederalClassifications",\n            "values" : [ "topSecret" ]\n          } ],\n          "replaceScope" : "attribute",\n          "operation" : "add"\n        }`) // EntitlementAttributeBulkUpdateQueryRequest | Attribute metadata bulk update request body.\n\n    var entitlementAttributeBulkUpdateQueryRequest v2025.EntitlementAttributeBulkUpdateQueryRequest\n    if err := json.Unmarshal(entitlementattributebulkupdatequeryrequest, &entitlementAttributeBulkUpdateQueryRequest); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.AccessModelMetadataAPI.UpdateAccessModelMetadataByQuery(context.Background()).EntitlementAttributeBulkUpdateQueryRequest(entitlementAttributeBulkUpdateQueryRequest).Execute()\n	  //resp, r, err := apiClient.V2025.AccessModelMetadataAPI.UpdateAccessModelMetadataByQuery(context.Background()).EntitlementAttributeBulkUpdateQueryRequest(entitlementAttributeBulkUpdateQueryRequest).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `AccessModelMetadataAPI.UpdateAccessModelMetadataByQuery``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `UpdateAccessModelMetadataByQuery`: AccessModelMetadataBulkUpdateResponse\n    fmt.Fprintf(os.Stdout, "Response from `AccessModelMetadataAPI.UpdateAccessModelMetadataByQuery`: %v\\n", resp)\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"#",children:"[Back to top]"})})]})}function h(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,t,a){a.d(t,{Z:()=>l,a:()=>i});var n=a(667294);let s={},r=n.createContext(s);function i(e){let t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(r.Provider,{value:t},e.children)}},982999:function(e){e.exports=JSON.parse('{"id":"tools/sdk/go/Reference/V2025/Methods/v2025-access-model-metadata","title":"AccessModelMetadata","description":"Use this API to create and manage metadata attributes for your Access Model.","source":"@site/docs/tools/sdk/go/Reference/V2025/Methods/AccessModelMetadataAPI.md","sourceDirName":"tools/sdk/go/Reference/V2025/Methods","slug":"/tools/sdk/go/v2025/methods/access-model-metadata","permalink":"/docs/tools/sdk/go/v2025/methods/access-model-metadata","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/go/Reference/V2025/Methods/AccessModelMetadataAPI.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"AccessModelMetadata","permalink":"/docs/tags/access-model-metadata"},{"inline":true,"label":"V2025AccessModelMetadata","permalink":"/docs/tags/v-2025-access-model-metadata"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1753456281000,"frontMatter":{"id":"v2025-access-model-metadata","title":"AccessModelMetadata","pagination_label":"AccessModelMetadata","sidebar_label":"AccessModelMetadata","sidebar_class_name":"gosdk","keywords":["go","Golang","sdk","AccessModelMetadata","V2025AccessModelMetadata"],"slug":"/tools/sdk/go/v2025/methods/access-model-metadata","tags":["SDK","Software Development Kit","AccessModelMetadata","V2025AccessModelMetadata"]},"sidebar":"openApiSidebar","previous":{"title":"Methods","permalink":"/docs/tools/sdk/go/v2025/methods"},"next":{"title":"AccessProfiles","permalink":"/docs/tools/sdk/go/v2025/methods/access-profiles"}}')}}]);