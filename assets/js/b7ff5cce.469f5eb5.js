"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["886781"],{317470:function(e,t,s){s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>l,toc:()=>a});var l=s(868208),n=s(785893),r=s(250065);let d={id:"beta-schedule-hours",title:"ScheduleHours",pagination_label:"ScheduleHours",sidebar_label:"ScheduleHours",sidebar_class_name:"gosdk",keywords:["go","Golang","sdk","ScheduleHours","BetaScheduleHours"],slug:"/tools/sdk/go/beta/models/schedule-hours",tags:["SDK","Software Development Kit","ScheduleHours","BetaScheduleHours"]},o="ScheduleHours",i={},a=[{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"NewScheduleHours",id:"newschedulehours",level:3},{value:"NewScheduleHoursWithDefaults",id:"newschedulehourswithdefaults",level:3},{value:"GetType",id:"gettype",level:3},{value:"GetTypeOk",id:"gettypeok",level:3},{value:"SetType",id:"settype",level:3},{value:"GetValues",id:"getvalues",level:3},{value:"GetValuesOk",id:"getvaluesok",level:3},{value:"SetValues",id:"setvalues",level:3},{value:"GetInterval",id:"getinterval",level:3},{value:"GetIntervalOk",id:"getintervalok",level:3},{value:"SetInterval",id:"setinterval",level:3},{value:"HasInterval",id:"hasinterval",level:3}];function h(e){let t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"schedulehours",children:"ScheduleHours"})}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Notes"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Type"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"string"})}),(0,n.jsx)(t.td,{children:"Enum type to specify hours value"}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Values"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"[]string"})}),(0,n.jsx)(t.td,{children:"Values of the days based on the enum type mentioned above"}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Interval"})}),(0,n.jsxs)(t.td,{children:["Pointer to ",(0,n.jsx)(t.strong,{children:"int64"})]}),(0,n.jsx)(t.td,{children:"Interval between the cert generations"}),(0,n.jsx)(t.td,{children:"[optional]"})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"newschedulehours",children:"NewScheduleHours"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"func NewScheduleHours(type_ string, values []string, ) *ScheduleHours"})}),"\n",(0,n.jsx)(t.p,{children:"NewScheduleHours instantiates a new ScheduleHours object\nThis constructor will assign default values to properties that have it defined,\nand makes sure properties required by API are set, but the set of arguments\nwill change when the set of required properties is changed"}),"\n",(0,n.jsx)(t.h3,{id:"newschedulehourswithdefaults",children:"NewScheduleHoursWithDefaults"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"func NewScheduleHoursWithDefaults() *ScheduleHours"})}),"\n",(0,n.jsx)(t.p,{children:"NewScheduleHoursWithDefaults instantiates a new ScheduleHours object\nThis constructor will only assign default values to properties that have it defined,\nbut it doesn't guarantee that properties required by API are set"}),"\n",(0,n.jsx)(t.h3,{id:"gettype",children:"GetType"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"func (o *ScheduleHours) GetType() string"})}),"\n",(0,n.jsx)(t.p,{children:"GetType returns the Type field if non-nil, zero value otherwise."}),"\n",(0,n.jsx)(t.h3,{id:"gettypeok",children:"GetTypeOk"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"func (o *ScheduleHours) GetTypeOk() (*string, bool)"})}),"\n",(0,n.jsx)(t.p,{children:"GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,n.jsx)(t.h3,{id:"settype",children:"SetType"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"func (o *ScheduleHours) SetType(v string)"})}),"\n",(0,n.jsx)(t.p,{children:"SetType sets Type field to given value."}),"\n",(0,n.jsx)(t.h3,{id:"getvalues",children:"GetValues"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"func (o *ScheduleHours) GetValues() []string"})}),"\n",(0,n.jsx)(t.p,{children:"GetValues returns the Values field if non-nil, zero value otherwise."}),"\n",(0,n.jsx)(t.h3,{id:"getvaluesok",children:"GetValuesOk"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"func (o *ScheduleHours) GetValuesOk() (*[]string, bool)"})}),"\n",(0,n.jsx)(t.p,{children:"GetValuesOk returns a tuple with the Values field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,n.jsx)(t.h3,{id:"setvalues",children:"SetValues"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"func (o *ScheduleHours) SetValues(v []string)"})}),"\n",(0,n.jsx)(t.p,{children:"SetValues sets Values field to given value."}),"\n",(0,n.jsx)(t.h3,{id:"getinterval",children:"GetInterval"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"func (o *ScheduleHours) GetInterval() int64"})}),"\n",(0,n.jsx)(t.p,{children:"GetInterval returns the Interval field if non-nil, zero value otherwise."}),"\n",(0,n.jsx)(t.h3,{id:"getintervalok",children:"GetIntervalOk"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"func (o *ScheduleHours) GetIntervalOk() (*int64, bool)"})}),"\n",(0,n.jsx)(t.p,{children:"GetIntervalOk returns a tuple with the Interval field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,n.jsx)(t.h3,{id:"setinterval",children:"SetInterval"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"func (o *ScheduleHours) SetInterval(v int64)"})}),"\n",(0,n.jsx)(t.p,{children:"SetInterval sets Interval field to given value."}),"\n",(0,n.jsx)(t.h3,{id:"hasinterval",children:"HasInterval"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"func (o *ScheduleHours) HasInterval() bool"})}),"\n",(0,n.jsx)(t.p,{children:"HasInterval returns a boolean if a field has been set."})]})}function u(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},250065:function(e,t,s){s.d(t,{Z:()=>o,a:()=>d});var l=s(667294);let n={},r=l.createContext(n);function d(e){let t=l.useContext(r);return l.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),l.createElement(r.Provider,{value:t},e.children)}},868208:function(e){e.exports=JSON.parse('{"id":"tools/sdk/go/Reference/Beta/Models/beta-schedule-hours","title":"ScheduleHours","description":"Properties","source":"@site/docs/tools/sdk/go/Reference/Beta/Models/ScheduleHours.md","sourceDirName":"tools/sdk/go/Reference/Beta/Models","slug":"/tools/sdk/go/beta/models/schedule-hours","permalink":"/docs/tools/sdk/go/beta/models/schedule-hours","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/go/Reference/Beta/Models/ScheduleHours.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"ScheduleHours","permalink":"/docs/tags/schedule-hours"},{"inline":true,"label":"BetaScheduleHours","permalink":"/docs/tags/beta-schedule-hours"}],"version":"current","lastUpdatedBy":"darrell-thobe-sp","lastUpdatedAt":1743446986000,"frontMatter":{"id":"beta-schedule-hours","title":"ScheduleHours","pagination_label":"ScheduleHours","sidebar_label":"ScheduleHours","sidebar_class_name":"gosdk","keywords":["go","Golang","sdk","ScheduleHours","BetaScheduleHours"],"slug":"/tools/sdk/go/beta/models/schedule-hours","tags":["SDK","Software Development Kit","ScheduleHours","BetaScheduleHours"]},"sidebar":"openApiSidebar","previous":{"title":"ScheduleDays","permalink":"/docs/tools/sdk/go/beta/models/schedule-days"},"next":{"title":"ScheduleMonths","permalink":"/docs/tools/sdk/go/beta/models/schedule-months"}}')}}]);