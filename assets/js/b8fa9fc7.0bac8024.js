"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["808830"],{14726:function(e,t,n){n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>r});var i=n(434797),l=n(785893),d=n(250065);let s={id:"beta-account",title:"Account",pagination_label:"Account",sidebar_label:"Account",sidebar_class_name:"gosdk",keywords:["go","Golang","sdk","Account","BetaAccount"],slug:"/tools/sdk/go/beta/models/account",tags:["SDK","Software Development Kit","Account","BetaAccount"]},c="Account",o={},r=[{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"NewAccount",id:"newaccount",level:3},{value:"NewAccountWithDefaults",id:"newaccountwithdefaults",level:3},{value:"GetId",id:"getid",level:3},{value:"GetIdOk",id:"getidok",level:3},{value:"SetId",id:"setid",level:3},{value:"HasId",id:"hasid",level:3},{value:"GetName",id:"getname",level:3},{value:"GetNameOk",id:"getnameok",level:3},{value:"SetName",id:"setname",level:3},{value:"SetNameNil",id:"setnamenil",level:3},{value:"UnsetName",id:"unsetname",level:3},{value:"GetCreated",id:"getcreated",level:3},{value:"GetCreatedOk",id:"getcreatedok",level:3},{value:"SetCreated",id:"setcreated",level:3},{value:"HasCreated",id:"hascreated",level:3},{value:"GetModified",id:"getmodified",level:3},{value:"GetModifiedOk",id:"getmodifiedok",level:3},{value:"SetModified",id:"setmodified",level:3},{value:"HasModified",id:"hasmodified",level:3},{value:"GetSourceId",id:"getsourceid",level:3},{value:"GetSourceIdOk",id:"getsourceidok",level:3},{value:"SetSourceId",id:"setsourceid",level:3},{value:"GetSourceName",id:"getsourcename",level:3},{value:"GetSourceNameOk",id:"getsourcenameok",level:3},{value:"SetSourceName",id:"setsourcename",level:3},{value:"SetSourceNameNil",id:"setsourcenamenil",level:3},{value:"UnsetSourceName",id:"unsetsourcename",level:3},{value:"GetIdentityId",id:"getidentityid",level:3},{value:"GetIdentityIdOk",id:"getidentityidok",level:3},{value:"SetIdentityId",id:"setidentityid",level:3},{value:"HasIdentityId",id:"hasidentityid",level:3},{value:"GetCloudLifecycleState",id:"getcloudlifecyclestate",level:3},{value:"GetCloudLifecycleStateOk",id:"getcloudlifecyclestateok",level:3},{value:"SetCloudLifecycleState",id:"setcloudlifecyclestate",level:3},{value:"HasCloudLifecycleState",id:"hascloudlifecyclestate",level:3},{value:"SetCloudLifecycleStateNil",id:"setcloudlifecyclestatenil",level:3},{value:"UnsetCloudLifecycleState",id:"unsetcloudlifecyclestate",level:3},{value:"GetIdentityState",id:"getidentitystate",level:3},{value:"GetIdentityStateOk",id:"getidentitystateok",level:3},{value:"SetIdentityState",id:"setidentitystate",level:3},{value:"HasIdentityState",id:"hasidentitystate",level:3},{value:"SetIdentityStateNil",id:"setidentitystatenil",level:3},{value:"UnsetIdentityState",id:"unsetidentitystate",level:3},{value:"GetConnectionType",id:"getconnectiontype",level:3},{value:"GetConnectionTypeOk",id:"getconnectiontypeok",level:3},{value:"SetConnectionType",id:"setconnectiontype",level:3},{value:"HasConnectionType",id:"hasconnectiontype",level:3},{value:"SetConnectionTypeNil",id:"setconnectiontypenil",level:3},{value:"UnsetConnectionType",id:"unsetconnectiontype",level:3},{value:"GetIsMachine",id:"getismachine",level:3},{value:"GetIsMachineOk",id:"getismachineok",level:3},{value:"SetIsMachine",id:"setismachine",level:3},{value:"HasIsMachine",id:"hasismachine",level:3},{value:"GetRecommendation",id:"getrecommendation",level:3},{value:"GetRecommendationOk",id:"getrecommendationok",level:3},{value:"SetRecommendation",id:"setrecommendation",level:3},{value:"HasRecommendation",id:"hasrecommendation",level:3},{value:"SetRecommendationNil",id:"setrecommendationnil",level:3},{value:"UnsetRecommendation",id:"unsetrecommendation",level:3},{value:"GetAttributes",id:"getattributes",level:3},{value:"GetAttributesOk",id:"getattributesok",level:3},{value:"SetAttributes",id:"setattributes",level:3},{value:"SetAttributesNil",id:"setattributesnil",level:3},{value:"UnsetAttributes",id:"unsetattributes",level:3},{value:"GetAuthoritative",id:"getauthoritative",level:3},{value:"GetAuthoritativeOk",id:"getauthoritativeok",level:3},{value:"SetAuthoritative",id:"setauthoritative",level:3},{value:"GetDescription",id:"getdescription",level:3},{value:"GetDescriptionOk",id:"getdescriptionok",level:3},{value:"SetDescription",id:"setdescription",level:3},{value:"HasDescription",id:"hasdescription",level:3},{value:"SetDescriptionNil",id:"setdescriptionnil",level:3},{value:"UnsetDescription",id:"unsetdescription",level:3},{value:"GetDisabled",id:"getdisabled",level:3},{value:"GetDisabledOk",id:"getdisabledok",level:3},{value:"SetDisabled",id:"setdisabled",level:3},{value:"GetLocked",id:"getlocked",level:3},{value:"GetLockedOk",id:"getlockedok",level:3},{value:"SetLocked",id:"setlocked",level:3},{value:"GetNativeIdentity",id:"getnativeidentity",level:3},{value:"GetNativeIdentityOk",id:"getnativeidentityok",level:3},{value:"SetNativeIdentity",id:"setnativeidentity",level:3},{value:"GetSystemAccount",id:"getsystemaccount",level:3},{value:"GetSystemAccountOk",id:"getsystemaccountok",level:3},{value:"SetSystemAccount",id:"setsystemaccount",level:3},{value:"GetUncorrelated",id:"getuncorrelated",level:3},{value:"GetUncorrelatedOk",id:"getuncorrelatedok",level:3},{value:"SetUncorrelated",id:"setuncorrelated",level:3},{value:"GetUuid",id:"getuuid",level:3},{value:"GetUuidOk",id:"getuuidok",level:3},{value:"SetUuid",id:"setuuid",level:3},{value:"HasUuid",id:"hasuuid",level:3},{value:"SetUuidNil",id:"setuuidnil",level:3},{value:"UnsetUuid",id:"unsetuuid",level:3},{value:"GetManuallyCorrelated",id:"getmanuallycorrelated",level:3},{value:"GetManuallyCorrelatedOk",id:"getmanuallycorrelatedok",level:3},{value:"SetManuallyCorrelated",id:"setmanuallycorrelated",level:3},{value:"GetHasEntitlements",id:"gethasentitlements",level:3},{value:"GetHasEntitlementsOk",id:"gethasentitlementsok",level:3},{value:"SetHasEntitlements",id:"sethasentitlements",level:3},{value:"GetIdentity",id:"getidentity",level:3},{value:"GetIdentityOk",id:"getidentityok",level:3},{value:"SetIdentity",id:"setidentity",level:3},{value:"HasIdentity",id:"hasidentity",level:3},{value:"GetSourceOwner",id:"getsourceowner",level:3},{value:"GetSourceOwnerOk",id:"getsourceownerok",level:3},{value:"SetSourceOwner",id:"setsourceowner",level:3},{value:"HasSourceOwner",id:"hassourceowner",level:3},{value:"GetFeatures",id:"getfeatures",level:3},{value:"GetFeaturesOk",id:"getfeaturesok",level:3},{value:"SetFeatures",id:"setfeatures",level:3},{value:"HasFeatures",id:"hasfeatures",level:3},{value:"SetFeaturesNil",id:"setfeaturesnil",level:3},{value:"UnsetFeatures",id:"unsetfeatures",level:3},{value:"GetOrigin",id:"getorigin",level:3},{value:"GetOriginOk",id:"getoriginok",level:3},{value:"SetOrigin",id:"setorigin",level:3},{value:"HasOrigin",id:"hasorigin",level:3},{value:"SetOriginNil",id:"setoriginnil",level:3},{value:"UnsetOrigin",id:"unsetorigin",level:3},{value:"GetOwnerIdentity",id:"getowneridentity",level:3},{value:"GetOwnerIdentityOk",id:"getowneridentityok",level:3},{value:"SetOwnerIdentity",id:"setowneridentity",level:3},{value:"HasOwnerIdentity",id:"hasowneridentity",level:3}];function a(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"account",children:"Account"})}),"\n",(0,l.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{children:"Name"}),(0,l.jsx)(t.th,{children:"Type"}),(0,l.jsx)(t.th,{children:"Description"}),(0,l.jsx)(t.th,{children:"Notes"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Id"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.strong,{children:"string"})]}),(0,l.jsx)(t.td,{children:"System-generated unique ID of the Object"}),(0,l.jsx)(t.td,{children:"[optional] [readonly]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Name"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"NullableString"})}),(0,l.jsx)(t.td,{children:"Name of the Object"}),(0,l.jsx)(t.td,{})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Created"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.strong,{children:"SailPointTime"})]}),(0,l.jsx)(t.td,{children:"Creation date of the Object"}),(0,l.jsx)(t.td,{children:"[optional] [readonly]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Modified"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.strong,{children:"SailPointTime"})]}),(0,l.jsx)(t.td,{children:"Last modification date of the Object"}),(0,l.jsx)(t.td,{children:"[optional] [readonly]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"SourceId"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"string"})}),(0,l.jsx)(t.td,{children:"The unique ID of the source this account belongs to"}),(0,l.jsx)(t.td,{})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"SourceName"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"NullableString"})}),(0,l.jsx)(t.td,{children:"The display name of the source this account belongs to"}),(0,l.jsx)(t.td,{})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"IdentityId"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.strong,{children:"string"})]}),(0,l.jsx)(t.td,{children:"The unique ID of the identity this account is correlated to"}),(0,l.jsx)(t.td,{children:"[optional]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"CloudLifecycleState"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.strong,{children:"NullableString"})]}),(0,l.jsx)(t.td,{children:"The lifecycle state of the identity this account is correlated to"}),(0,l.jsx)(t.td,{children:"[optional]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"IdentityState"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.strong,{children:"NullableString"})]}),(0,l.jsx)(t.td,{children:"The identity state of the identity this account is correlated to"}),(0,l.jsx)(t.td,{children:"[optional]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"ConnectionType"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.strong,{children:"NullableString"})]}),(0,l.jsx)(t.td,{children:"The connection type of the source this account is from"}),(0,l.jsx)(t.td,{children:"[optional]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"IsMachine"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.strong,{children:"bool"})]}),(0,l.jsx)(t.td,{children:"Indicates if the account is of machine type"}),(0,l.jsx)(t.td,{children:"[optional] [default to false]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Recommendation"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.a,{href:"recommendation",children:(0,l.jsx)(t.strong,{children:"NullableRecommendation"})})]}),(0,l.jsx)(t.td,{}),(0,l.jsx)(t.td,{children:"[optional]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Attributes"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"map[string]interface"})}),(0,l.jsx)(t.td,{children:"The account attributes that are aggregated"}),(0,l.jsx)(t.td,{})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Authoritative"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"bool"})}),(0,l.jsx)(t.td,{children:"Indicates if this account is from an authoritative source"}),(0,l.jsx)(t.td,{})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Description"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.strong,{children:"NullableString"})]}),(0,l.jsx)(t.td,{children:"A description of the account"}),(0,l.jsx)(t.td,{children:"[optional]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Disabled"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"bool"})}),(0,l.jsx)(t.td,{children:"Indicates if the account is currently disabled"}),(0,l.jsx)(t.td,{})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Locked"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"bool"})}),(0,l.jsx)(t.td,{children:"Indicates if the account is currently locked"}),(0,l.jsx)(t.td,{})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"NativeIdentity"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"string"})}),(0,l.jsx)(t.td,{children:"The unique ID of the account generated by the source system"}),(0,l.jsx)(t.td,{})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"SystemAccount"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"bool"})}),(0,l.jsx)(t.td,{children:"If true, this is a user account within IdentityNow.  If false, this is an account from a source system."}),(0,l.jsx)(t.td,{})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Uncorrelated"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"bool"})}),(0,l.jsx)(t.td,{children:"Indicates if this account is not correlated to an identity"}),(0,l.jsx)(t.td,{})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Uuid"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.strong,{children:"NullableString"})]}),(0,l.jsx)(t.td,{children:"The unique ID of the account as determined by the account schema"}),(0,l.jsx)(t.td,{children:"[optional]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"ManuallyCorrelated"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"bool"})}),(0,l.jsx)(t.td,{children:"Indicates if the account has been manually correlated to an identity"}),(0,l.jsx)(t.td,{})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"HasEntitlements"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"bool"})}),(0,l.jsx)(t.td,{children:"Indicates if the account has entitlements"}),(0,l.jsx)(t.td,{})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Identity"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.a,{href:"base-reference-dto",children:(0,l.jsx)(t.strong,{children:"BaseReferenceDto"})})]}),(0,l.jsx)(t.td,{}),(0,l.jsx)(t.td,{children:"[optional]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"SourceOwner"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.a,{href:"base-reference-dto",children:(0,l.jsx)(t.strong,{children:"BaseReferenceDto"})})]}),(0,l.jsx)(t.td,{}),(0,l.jsx)(t.td,{children:"[optional]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Features"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.strong,{children:"NullableString"})]}),(0,l.jsx)(t.td,{children:"A string list containing the owning source's features"}),(0,l.jsx)(t.td,{children:"[optional]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"Origin"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.strong,{children:"NullableString"})]}),(0,l.jsx)(t.td,{children:"The origin of the account either aggregated or provisioned"}),(0,l.jsx)(t.td,{children:"[optional]"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.strong,{children:"OwnerIdentity"})}),(0,l.jsxs)(t.td,{children:["Pointer to ",(0,l.jsx)(t.a,{href:"base-reference-dto",children:(0,l.jsx)(t.strong,{children:"BaseReferenceDto"})})]}),(0,l.jsx)(t.td,{}),(0,l.jsx)(t.td,{children:"[optional]"})]})]})]}),"\n",(0,l.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(t.h3,{id:"newaccount",children:"NewAccount"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func NewAccount(name NullableString, sourceId string, sourceName NullableString, attributes map[string]interface{}, authoritative bool, disabled bool, locked bool, nativeIdentity string, systemAccount bool, uncorrelated bool, manuallyCorrelated bool, hasEntitlements bool, ) *Account"})}),"\n",(0,l.jsx)(t.p,{children:"NewAccount instantiates a new Account object\nThis constructor will assign default values to properties that have it defined,\nand makes sure properties required by API are set, but the set of arguments\nwill change when the set of required properties is changed"}),"\n",(0,l.jsx)(t.h3,{id:"newaccountwithdefaults",children:"NewAccountWithDefaults"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func NewAccountWithDefaults() *Account"})}),"\n",(0,l.jsx)(t.p,{children:"NewAccountWithDefaults instantiates a new Account object\nThis constructor will only assign default values to properties that have it defined,\nbut it doesn't guarantee that properties required by API are set"}),"\n",(0,l.jsx)(t.h3,{id:"getid",children:"GetId"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetId() string"})}),"\n",(0,l.jsx)(t.p,{children:"GetId returns the Id field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getidok",children:"GetIdOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetIdOk() (*string, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setid",children:"SetId"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetId(v string)"})}),"\n",(0,l.jsx)(t.p,{children:"SetId sets Id field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hasid",children:"HasId"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasId() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasId returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"getname",children:"GetName"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetName() string"})}),"\n",(0,l.jsx)(t.p,{children:"GetName returns the Name field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getnameok",children:"GetNameOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetNameOk() (*string, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setname",children:"SetName"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetName(v string)"})}),"\n",(0,l.jsx)(t.p,{children:"SetName sets Name field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"setnamenil",children:"SetNameNil"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetNameNil(b bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetNameNil sets the value for Name to be an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"unsetname",children:"UnsetName"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) UnsetName()"})}),"\n",(0,l.jsx)(t.p,{children:"UnsetName ensures that no value is present for Name, not even an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"getcreated",children:"GetCreated"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetCreated() SailPointTime"})}),"\n",(0,l.jsx)(t.p,{children:"GetCreated returns the Created field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getcreatedok",children:"GetCreatedOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetCreatedOk() (*SailPointTime, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetCreatedOk returns a tuple with the Created field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setcreated",children:"SetCreated"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetCreated(v SailPointTime)"})}),"\n",(0,l.jsx)(t.p,{children:"SetCreated sets Created field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hascreated",children:"HasCreated"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasCreated() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasCreated returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"getmodified",children:"GetModified"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetModified() SailPointTime"})}),"\n",(0,l.jsx)(t.p,{children:"GetModified returns the Modified field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getmodifiedok",children:"GetModifiedOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetModifiedOk() (*SailPointTime, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetModifiedOk returns a tuple with the Modified field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setmodified",children:"SetModified"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetModified(v SailPointTime)"})}),"\n",(0,l.jsx)(t.p,{children:"SetModified sets Modified field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hasmodified",children:"HasModified"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasModified() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasModified returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"getsourceid",children:"GetSourceId"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetSourceId() string"})}),"\n",(0,l.jsx)(t.p,{children:"GetSourceId returns the SourceId field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getsourceidok",children:"GetSourceIdOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetSourceIdOk() (*string, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetSourceIdOk returns a tuple with the SourceId field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setsourceid",children:"SetSourceId"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetSourceId(v string)"})}),"\n",(0,l.jsx)(t.p,{children:"SetSourceId sets SourceId field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"getsourcename",children:"GetSourceName"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetSourceName() string"})}),"\n",(0,l.jsx)(t.p,{children:"GetSourceName returns the SourceName field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getsourcenameok",children:"GetSourceNameOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetSourceNameOk() (*string, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetSourceNameOk returns a tuple with the SourceName field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setsourcename",children:"SetSourceName"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetSourceName(v string)"})}),"\n",(0,l.jsx)(t.p,{children:"SetSourceName sets SourceName field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"setsourcenamenil",children:"SetSourceNameNil"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetSourceNameNil(b bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetSourceNameNil sets the value for SourceName to be an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"unsetsourcename",children:"UnsetSourceName"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) UnsetSourceName()"})}),"\n",(0,l.jsx)(t.p,{children:"UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"getidentityid",children:"GetIdentityId"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetIdentityId() string"})}),"\n",(0,l.jsx)(t.p,{children:"GetIdentityId returns the IdentityId field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getidentityidok",children:"GetIdentityIdOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetIdentityIdOk() (*string, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetIdentityIdOk returns a tuple with the IdentityId field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setidentityid",children:"SetIdentityId"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetIdentityId(v string)"})}),"\n",(0,l.jsx)(t.p,{children:"SetIdentityId sets IdentityId field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hasidentityid",children:"HasIdentityId"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasIdentityId() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasIdentityId returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"getcloudlifecyclestate",children:"GetCloudLifecycleState"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetCloudLifecycleState() string"})}),"\n",(0,l.jsx)(t.p,{children:"GetCloudLifecycleState returns the CloudLifecycleState field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getcloudlifecyclestateok",children:"GetCloudLifecycleStateOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetCloudLifecycleStateOk() (*string, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetCloudLifecycleStateOk returns a tuple with the CloudLifecycleState field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setcloudlifecyclestate",children:"SetCloudLifecycleState"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetCloudLifecycleState(v string)"})}),"\n",(0,l.jsx)(t.p,{children:"SetCloudLifecycleState sets CloudLifecycleState field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hascloudlifecyclestate",children:"HasCloudLifecycleState"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasCloudLifecycleState() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasCloudLifecycleState returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setcloudlifecyclestatenil",children:"SetCloudLifecycleStateNil"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetCloudLifecycleStateNil(b bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetCloudLifecycleStateNil sets the value for CloudLifecycleState to be an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"unsetcloudlifecyclestate",children:"UnsetCloudLifecycleState"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) UnsetCloudLifecycleState()"})}),"\n",(0,l.jsx)(t.p,{children:"UnsetCloudLifecycleState ensures that no value is present for CloudLifecycleState, not even an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"getidentitystate",children:"GetIdentityState"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetIdentityState() string"})}),"\n",(0,l.jsx)(t.p,{children:"GetIdentityState returns the IdentityState field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getidentitystateok",children:"GetIdentityStateOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetIdentityStateOk() (*string, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetIdentityStateOk returns a tuple with the IdentityState field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setidentitystate",children:"SetIdentityState"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetIdentityState(v string)"})}),"\n",(0,l.jsx)(t.p,{children:"SetIdentityState sets IdentityState field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hasidentitystate",children:"HasIdentityState"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasIdentityState() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasIdentityState returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setidentitystatenil",children:"SetIdentityStateNil"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetIdentityStateNil(b bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetIdentityStateNil sets the value for IdentityState to be an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"unsetidentitystate",children:"UnsetIdentityState"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) UnsetIdentityState()"})}),"\n",(0,l.jsx)(t.p,{children:"UnsetIdentityState ensures that no value is present for IdentityState, not even an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"getconnectiontype",children:"GetConnectionType"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetConnectionType() string"})}),"\n",(0,l.jsx)(t.p,{children:"GetConnectionType returns the ConnectionType field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getconnectiontypeok",children:"GetConnectionTypeOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetConnectionTypeOk() (*string, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetConnectionTypeOk returns a tuple with the ConnectionType field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setconnectiontype",children:"SetConnectionType"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetConnectionType(v string)"})}),"\n",(0,l.jsx)(t.p,{children:"SetConnectionType sets ConnectionType field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hasconnectiontype",children:"HasConnectionType"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasConnectionType() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasConnectionType returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setconnectiontypenil",children:"SetConnectionTypeNil"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetConnectionTypeNil(b bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetConnectionTypeNil sets the value for ConnectionType to be an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"unsetconnectiontype",children:"UnsetConnectionType"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) UnsetConnectionType()"})}),"\n",(0,l.jsx)(t.p,{children:"UnsetConnectionType ensures that no value is present for ConnectionType, not even an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"getismachine",children:"GetIsMachine"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetIsMachine() bool"})}),"\n",(0,l.jsx)(t.p,{children:"GetIsMachine returns the IsMachine field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getismachineok",children:"GetIsMachineOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetIsMachineOk() (*bool, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetIsMachineOk returns a tuple with the IsMachine field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setismachine",children:"SetIsMachine"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetIsMachine(v bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetIsMachine sets IsMachine field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hasismachine",children:"HasIsMachine"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasIsMachine() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasIsMachine returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"getrecommendation",children:"GetRecommendation"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetRecommendation() Recommendation"})}),"\n",(0,l.jsx)(t.p,{children:"GetRecommendation returns the Recommendation field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getrecommendationok",children:"GetRecommendationOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetRecommendationOk() (*Recommendation, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetRecommendationOk returns a tuple with the Recommendation field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setrecommendation",children:"SetRecommendation"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetRecommendation(v Recommendation)"})}),"\n",(0,l.jsx)(t.p,{children:"SetRecommendation sets Recommendation field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hasrecommendation",children:"HasRecommendation"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasRecommendation() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasRecommendation returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setrecommendationnil",children:"SetRecommendationNil"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetRecommendationNil(b bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetRecommendationNil sets the value for Recommendation to be an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"unsetrecommendation",children:"UnsetRecommendation"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) UnsetRecommendation()"})}),"\n",(0,l.jsx)(t.p,{children:"UnsetRecommendation ensures that no value is present for Recommendation, not even an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"getattributes",children:"GetAttributes"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetAttributes() map[string]interface{}"})}),"\n",(0,l.jsx)(t.p,{children:"GetAttributes returns the Attributes field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getattributesok",children:"GetAttributesOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetAttributesOk() (*map[string]interface{}, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetAttributesOk returns a tuple with the Attributes field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setattributes",children:"SetAttributes"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetAttributes(v map[string]interface{})"})}),"\n",(0,l.jsx)(t.p,{children:"SetAttributes sets Attributes field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"setattributesnil",children:"SetAttributesNil"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetAttributesNil(b bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetAttributesNil sets the value for Attributes to be an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"unsetattributes",children:"UnsetAttributes"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) UnsetAttributes()"})}),"\n",(0,l.jsx)(t.p,{children:"UnsetAttributes ensures that no value is present for Attributes, not even an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"getauthoritative",children:"GetAuthoritative"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetAuthoritative() bool"})}),"\n",(0,l.jsx)(t.p,{children:"GetAuthoritative returns the Authoritative field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getauthoritativeok",children:"GetAuthoritativeOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetAuthoritativeOk() (*bool, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetAuthoritativeOk returns a tuple with the Authoritative field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setauthoritative",children:"SetAuthoritative"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetAuthoritative(v bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetAuthoritative sets Authoritative field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"getdescription",children:"GetDescription"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetDescription() string"})}),"\n",(0,l.jsx)(t.p,{children:"GetDescription returns the Description field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getdescriptionok",children:"GetDescriptionOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetDescriptionOk() (*string, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setdescription",children:"SetDescription"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetDescription(v string)"})}),"\n",(0,l.jsx)(t.p,{children:"SetDescription sets Description field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hasdescription",children:"HasDescription"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasDescription() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasDescription returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setdescriptionnil",children:"SetDescriptionNil"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetDescriptionNil(b bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetDescriptionNil sets the value for Description to be an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"unsetdescription",children:"UnsetDescription"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) UnsetDescription()"})}),"\n",(0,l.jsx)(t.p,{children:"UnsetDescription ensures that no value is present for Description, not even an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"getdisabled",children:"GetDisabled"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetDisabled() bool"})}),"\n",(0,l.jsx)(t.p,{children:"GetDisabled returns the Disabled field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getdisabledok",children:"GetDisabledOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetDisabledOk() (*bool, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetDisabledOk returns a tuple with the Disabled field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setdisabled",children:"SetDisabled"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetDisabled(v bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetDisabled sets Disabled field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"getlocked",children:"GetLocked"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetLocked() bool"})}),"\n",(0,l.jsx)(t.p,{children:"GetLocked returns the Locked field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getlockedok",children:"GetLockedOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetLockedOk() (*bool, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetLockedOk returns a tuple with the Locked field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setlocked",children:"SetLocked"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetLocked(v bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetLocked sets Locked field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"getnativeidentity",children:"GetNativeIdentity"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetNativeIdentity() string"})}),"\n",(0,l.jsx)(t.p,{children:"GetNativeIdentity returns the NativeIdentity field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getnativeidentityok",children:"GetNativeIdentityOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetNativeIdentityOk() (*string, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetNativeIdentityOk returns a tuple with the NativeIdentity field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setnativeidentity",children:"SetNativeIdentity"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetNativeIdentity(v string)"})}),"\n",(0,l.jsx)(t.p,{children:"SetNativeIdentity sets NativeIdentity field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"getsystemaccount",children:"GetSystemAccount"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetSystemAccount() bool"})}),"\n",(0,l.jsx)(t.p,{children:"GetSystemAccount returns the SystemAccount field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getsystemaccountok",children:"GetSystemAccountOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetSystemAccountOk() (*bool, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetSystemAccountOk returns a tuple with the SystemAccount field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setsystemaccount",children:"SetSystemAccount"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetSystemAccount(v bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetSystemAccount sets SystemAccount field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"getuncorrelated",children:"GetUncorrelated"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetUncorrelated() bool"})}),"\n",(0,l.jsx)(t.p,{children:"GetUncorrelated returns the Uncorrelated field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getuncorrelatedok",children:"GetUncorrelatedOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetUncorrelatedOk() (*bool, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetUncorrelatedOk returns a tuple with the Uncorrelated field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setuncorrelated",children:"SetUncorrelated"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetUncorrelated(v bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetUncorrelated sets Uncorrelated field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"getuuid",children:"GetUuid"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetUuid() string"})}),"\n",(0,l.jsx)(t.p,{children:"GetUuid returns the Uuid field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getuuidok",children:"GetUuidOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetUuidOk() (*string, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetUuidOk returns a tuple with the Uuid field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setuuid",children:"SetUuid"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetUuid(v string)"})}),"\n",(0,l.jsx)(t.p,{children:"SetUuid sets Uuid field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hasuuid",children:"HasUuid"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasUuid() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasUuid returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setuuidnil",children:"SetUuidNil"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetUuidNil(b bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetUuidNil sets the value for Uuid to be an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"unsetuuid",children:"UnsetUuid"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) UnsetUuid()"})}),"\n",(0,l.jsx)(t.p,{children:"UnsetUuid ensures that no value is present for Uuid, not even an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"getmanuallycorrelated",children:"GetManuallyCorrelated"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetManuallyCorrelated() bool"})}),"\n",(0,l.jsx)(t.p,{children:"GetManuallyCorrelated returns the ManuallyCorrelated field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getmanuallycorrelatedok",children:"GetManuallyCorrelatedOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetManuallyCorrelatedOk() (*bool, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetManuallyCorrelatedOk returns a tuple with the ManuallyCorrelated field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setmanuallycorrelated",children:"SetManuallyCorrelated"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetManuallyCorrelated(v bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetManuallyCorrelated sets ManuallyCorrelated field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"gethasentitlements",children:"GetHasEntitlements"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetHasEntitlements() bool"})}),"\n",(0,l.jsx)(t.p,{children:"GetHasEntitlements returns the HasEntitlements field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"gethasentitlementsok",children:"GetHasEntitlementsOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetHasEntitlementsOk() (*bool, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetHasEntitlementsOk returns a tuple with the HasEntitlements field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"sethasentitlements",children:"SetHasEntitlements"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetHasEntitlements(v bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetHasEntitlements sets HasEntitlements field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"getidentity",children:"GetIdentity"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetIdentity() BaseReferenceDto"})}),"\n",(0,l.jsx)(t.p,{children:"GetIdentity returns the Identity field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getidentityok",children:"GetIdentityOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetIdentityOk() (*BaseReferenceDto, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetIdentityOk returns a tuple with the Identity field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setidentity",children:"SetIdentity"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetIdentity(v BaseReferenceDto)"})}),"\n",(0,l.jsx)(t.p,{children:"SetIdentity sets Identity field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hasidentity",children:"HasIdentity"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasIdentity() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasIdentity returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"getsourceowner",children:"GetSourceOwner"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetSourceOwner() BaseReferenceDto"})}),"\n",(0,l.jsx)(t.p,{children:"GetSourceOwner returns the SourceOwner field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getsourceownerok",children:"GetSourceOwnerOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetSourceOwnerOk() (*BaseReferenceDto, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetSourceOwnerOk returns a tuple with the SourceOwner field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setsourceowner",children:"SetSourceOwner"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetSourceOwner(v BaseReferenceDto)"})}),"\n",(0,l.jsx)(t.p,{children:"SetSourceOwner sets SourceOwner field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hassourceowner",children:"HasSourceOwner"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasSourceOwner() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasSourceOwner returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"getfeatures",children:"GetFeatures"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetFeatures() string"})}),"\n",(0,l.jsx)(t.p,{children:"GetFeatures returns the Features field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getfeaturesok",children:"GetFeaturesOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetFeaturesOk() (*string, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetFeaturesOk returns a tuple with the Features field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setfeatures",children:"SetFeatures"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetFeatures(v string)"})}),"\n",(0,l.jsx)(t.p,{children:"SetFeatures sets Features field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hasfeatures",children:"HasFeatures"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasFeatures() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasFeatures returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setfeaturesnil",children:"SetFeaturesNil"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetFeaturesNil(b bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetFeaturesNil sets the value for Features to be an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"unsetfeatures",children:"UnsetFeatures"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) UnsetFeatures()"})}),"\n",(0,l.jsx)(t.p,{children:"UnsetFeatures ensures that no value is present for Features, not even an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"getorigin",children:"GetOrigin"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetOrigin() string"})}),"\n",(0,l.jsx)(t.p,{children:"GetOrigin returns the Origin field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getoriginok",children:"GetOriginOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetOriginOk() (*string, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetOriginOk returns a tuple with the Origin field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setorigin",children:"SetOrigin"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetOrigin(v string)"})}),"\n",(0,l.jsx)(t.p,{children:"SetOrigin sets Origin field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hasorigin",children:"HasOrigin"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasOrigin() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasOrigin returns a boolean if a field has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setoriginnil",children:"SetOriginNil"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetOriginNil(b bool)"})}),"\n",(0,l.jsx)(t.p,{children:"SetOriginNil sets the value for Origin to be an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"unsetorigin",children:"UnsetOrigin"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) UnsetOrigin()"})}),"\n",(0,l.jsx)(t.p,{children:"UnsetOrigin ensures that no value is present for Origin, not even an explicit nil"}),"\n",(0,l.jsx)(t.h3,{id:"getowneridentity",children:"GetOwnerIdentity"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetOwnerIdentity() BaseReferenceDto"})}),"\n",(0,l.jsx)(t.p,{children:"GetOwnerIdentity returns the OwnerIdentity field if non-nil, zero value otherwise."}),"\n",(0,l.jsx)(t.h3,{id:"getowneridentityok",children:"GetOwnerIdentityOk"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) GetOwnerIdentityOk() (*BaseReferenceDto, bool)"})}),"\n",(0,l.jsx)(t.p,{children:"GetOwnerIdentityOk returns a tuple with the OwnerIdentity field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,l.jsx)(t.h3,{id:"setowneridentity",children:"SetOwnerIdentity"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) SetOwnerIdentity(v BaseReferenceDto)"})}),"\n",(0,l.jsx)(t.p,{children:"SetOwnerIdentity sets OwnerIdentity field to given value."}),"\n",(0,l.jsx)(t.h3,{id:"hasowneridentity",children:"HasOwnerIdentity"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"func (o *Account) HasOwnerIdentity() bool"})}),"\n",(0,l.jsx)(t.p,{children:"HasOwnerIdentity returns a boolean if a field has been set."})]})}function h(e={}){let{wrapper:t}={...(0,d.a)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},250065:function(e,t,n){n.d(t,{Z:()=>c,a:()=>s});var i=n(667294);let l={},d=i.createContext(l);function s(e){let t=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),i.createElement(d.Provider,{value:t},e.children)}},434797:function(e){e.exports=JSON.parse('{"id":"tools/sdk/go/Reference/Beta/Models/beta-account","title":"Account","description":"Properties","source":"@site/docs/tools/sdk/go/Reference/Beta/Models/Account.md","sourceDirName":"tools/sdk/go/Reference/Beta/Models","slug":"/tools/sdk/go/beta/models/account","permalink":"/docs/tools/sdk/go/beta/models/account","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/go/Reference/Beta/Models/Account.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"Account","permalink":"/docs/tags/account"},{"inline":true,"label":"BetaAccount","permalink":"/docs/tags/beta-account"}],"version":"current","lastUpdatedBy":"darrell-thobe-sp","lastUpdatedAt":1747149124000,"frontMatter":{"id":"beta-account","title":"Account","pagination_label":"Account","sidebar_label":"Account","sidebar_class_name":"gosdk","keywords":["go","Golang","sdk","Account","BetaAccount"],"slug":"/tools/sdk/go/beta/models/account","tags":["SDK","Software Development Kit","Account","BetaAccount"]},"sidebar":"openApiSidebar","previous":{"title":"AccessType","permalink":"/docs/tools/sdk/go/beta/models/access-type"},"next":{"title":"AccountAction","permalink":"/docs/tools/sdk/go/beta/models/account-action"}}')}}]);