"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["468333"],{403110:function(e,t,n){n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>c,frontMatter:()=>d,metadata:()=>i,toc:()=>l});var i=n(161156),r=n(785893),s=n(250065);let d={id:"v2025-sim-integrations",title:"SIM_Integrations",pagination_label:"SIM_Integrations",sidebar_label:"SIM_Integrations",sidebar_class_name:"pythonsdk",keywords:["python","Python","sdk","SIM_Integrations","V2025SIM_Integrations"],slug:"/tools/sdk/python/v2025/methods/sim-integrations",tags:["SDK","Software Development Kit","SIM_Integrations","V2025SIM_Integrations"]},o="sailpoint.v2025.SIMIntegrationsApi",a={},l=[{value:"create-sim-integration",id:"create-sim-integration",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"Responses",id:"responses",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example",level:3},{value:"delete-sim-integration",id:"delete-sim-integration",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"Responses",id:"responses-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-1",level:3},{value:"get-sim-integration",id:"get-sim-integration",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"Responses",id:"responses-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-2",level:3},{value:"get-sim-integrations",id:"get-sim-integrations",level:2},{value:"Parameters",id:"parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"Responses",id:"responses-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-3",level:3},{value:"patch-before-provisioning-rule",id:"patch-before-provisioning-rule",level:2},{value:"Parameters",id:"parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"Responses",id:"responses-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3},{value:"Example",id:"example-4",level:3},{value:"patch-sim-attributes",id:"patch-sim-attributes",level:2},{value:"Parameters",id:"parameters-5",level:3},{value:"Return type",id:"return-type-5",level:3},{value:"Responses",id:"responses-5",level:3},{value:"HTTP request headers",id:"http-request-headers-5",level:3},{value:"Example",id:"example-5",level:3},{value:"put-sim-integration",id:"put-sim-integration",level:2},{value:"Parameters",id:"parameters-6",level:3},{value:"Return type",id:"return-type-6",level:3},{value:"Responses",id:"responses-6",level:3},{value:"HTTP request headers",id:"http-request-headers-6",level:3},{value:"Example",id:"example-6",level:3}];function h(e){let t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"sailpointv2025simintegrationsapi",children:"sailpoint.v2025.SIMIntegrationsApi"})}),"\n",(0,r.jsx)(t.p,{children:"Use this API to administer IdentityNow's Service Integration Module, or SIM integration with ServiceNow, so that it converts IdentityNow provisioning actions into tickets in ServiceNow."}),"\n",(0,r.jsx)(t.p,{children:"ServiceNow is a software platform that supports IT service management and automates common business processes for requesting and fulfilling service requests across a business enterprise."}),"\n",(0,r.jsx)(t.p,{children:"You must have an IdentityNow ServiceNow ServiceDesk license to use this integration. Contact your Customer Success Manager for more information."}),"\n",(0,r.jsxs)(t.p,{children:["Service Desk integration for IdentityNow and in deprecation - not available for new implementation, as of July 21st, 2021. As per SailPoint\u2019s ",(0,r.jsx)(t.a,{href:"https://community.sailpoint.com/t5/Connector-Directory/SailPoint-Support-Policy-for-Connectivity/ta-p/79422",children:"support policy"}),", all existing SailPoint IdentityNow customers using this legacy integration will be supported until July 2022."]}),"\n",(0,r.jsxs)(t.p,{children:["All URIs are relative to ",(0,r.jsx)(t.em,{children:(0,r.jsx)(t.a,{href:"https://sailpoint.api.identitynow.com/v2025",children:"https://sailpoint.api.identitynow.com/v2025"})})]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Method"}),(0,r.jsx)(t.th,{children:"HTTP request"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#create-sim-integration",children:(0,r.jsx)(t.strong,{children:"create-sim-integration"})})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"POST"})," ",(0,r.jsx)(t.code,{children:"/sim-integrations"})]}),(0,r.jsx)(t.td,{children:"Create new sim integration"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#delete-sim-integration",children:(0,r.jsx)(t.strong,{children:"delete-sim-integration"})})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"DELETE"})," ",(0,r.jsx)(t.code,{children:"/sim-integrations/{id}"})]}),(0,r.jsx)(t.td,{children:"Delete a sim integration"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#get-sim-integration",children:(0,r.jsx)(t.strong,{children:"get-sim-integration"})})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"GET"})," ",(0,r.jsx)(t.code,{children:"/sim-integrations/{id}"})]}),(0,r.jsx)(t.td,{children:"Get a sim integration details."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#get-sim-integrations",children:(0,r.jsx)(t.strong,{children:"get-sim-integrations"})})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"GET"})," ",(0,r.jsx)(t.code,{children:"/sim-integrations"})]}),(0,r.jsx)(t.td,{children:"List the existing sim integrations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#patch-before-provisioning-rule",children:(0,r.jsx)(t.strong,{children:"patch-before-provisioning-rule"})})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"PATCH"})," ",(0,r.jsx)(t.code,{children:"/sim-integrations/{id}/beforeProvisioningRule"})]}),(0,r.jsx)(t.td,{children:"Patch a sim beforeprovisioningrule attribute."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#patch-sim-attributes",children:(0,r.jsx)(t.strong,{children:"patch-sim-attributes"})})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"PATCH"})," ",(0,r.jsx)(t.code,{children:"/sim-integrations/{id}"})]}),(0,r.jsx)(t.td,{children:"Patch a sim attribute."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#put-sim-integration",children:(0,r.jsx)(t.strong,{children:"put-sim-integration"})})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"PUT"})," ",(0,r.jsx)(t.code,{children:"/sim-integrations/{id}"})]}),(0,r.jsx)(t.td,{children:"Update an existing sim integration"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"create-sim-integration",children:"create-sim-integration"}),"\n",(0,r.jsx)(t.admonition,{title:"experimental",type:"warning",children:(0,r.jsxs)(t.p,{children:["This API is currently in an experimental state. The API is subject to change based on feedback and further testing. You must include the X-SailPoint-Experimental header and set it to ",(0,r.jsx)(t.code,{children:"true"})," to use this endpoint."]})}),"\n",(0,r.jsxs)(t.admonition,{title:"setting x-sailpoint-experimental header",type:"tip",children:[(0,r.jsxs)(t.p,{children:["on the configuration object you can set the ",(0,r.jsx)(t.code,{children:"x-sailpoint-experimental"})," header to `true' to enable all experimantl endpoints within the SDK.\nExample:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"  configuration = Configuration()\n  configuration.experimental = True\n"})})]}),"\n",(0,r.jsx)(t.p,{children:"Create new sim integration\nCreate a new SIM Integrations."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/create-sim-integration",children:"API Spec"})}),"\n",(0,r.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param Type"}),(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"x_sail_point_experimental"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"str"})}),(0,r.jsx)(t.td,{children:"True  (default to 'true')"}),(0,r.jsx)(t.td,{children:"Use this header to enable this experimental API."}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Body"}),(0,r.jsx)(t.td,{children:"sim_integration_details"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../models/sim-integration-details",children:(0,r.jsx)(t.strong,{children:"SimIntegrationDetails"})})}),(0,r.jsx)(t.td,{children:"True"}),(0,r.jsx)(t.td,{children:"DTO containing the details of the SIM integration"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"return-type",children:"Return type"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"../models/service-desk-integration-dto",children:(0,r.jsx)(t.strong,{children:"ServiceDeskIntegrationDto"})})}),"\n",(0,r.jsx)(t.h3,{id:"responses",children:"Responses"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Code"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Response headers"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"200"}),(0,r.jsx)(t.td,{children:"details of the created integration"}),(0,r.jsx)(t.td,{children:"ServiceDeskIntegrationDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"400"}),(0,r.jsx)(t.td,{children:"Client Error - Returned if the request body is invalid."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"401"}),(0,r.jsx)(t.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles401Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"403"}),(0,r.jsx)(t.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"404"}),(0,r.jsx)(t.td,{children:"Not Found - returned if the request URL refers to a resource or object that does not exist"}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"429"}),(0,r.jsx)(t.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles429Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"500"}),(0,r.jsx)(t.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"http-request-headers",children:"HTTP request headers"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'from sailpoint.v2025.api.sim_integrations_api import SIMIntegrationsApi\nfrom sailpoint.v2025.api_client import ApiClient\nfrom sailpoint.v2025.models.service_desk_integration_dto import ServiceDeskIntegrationDto\nfrom sailpoint.v2025.models.sim_integration_details import SimIntegrationDetails\nfrom sailpoint.configuration import Configuration\nconfiguration = Configuration()\n\nconfiguration.experimental = True\n\nwith ApiClient(configuration) as api_client:\n    x_sail_point_experimental = \'true\' # str | Use this header to enable this experimental API. (default to \'true\') # str | Use this header to enable this experimental API. (default to \'true\')\n    sim_integration_details = \'\'\'{\n          "cluster" : "xyzzy999",\n          "statusMap" : "{closed_cancelled=Failed, closed_complete=Committed, closed_incomplete=Failed, closed_rejected=Failed, in_process=Queued, requested=Queued}",\n          "request" : "{description=SailPoint Access Request,, req_description=The Service Request created by SailPoint ServiceNow Service Integration Module (SIM).,, req_short_description=SailPoint New Access Request Created from IdentityNow,, short_description=SailPoint Access Request $!plan.arguments.identityRequestId}",\n          "sources" : [ "2c9180835d191a86015d28455b4a2329", "2c5680835d191a85765d28455b4a9823" ],\n          "created" : "2015-05-28T14:07:17Z",\n          "name" : "aName",\n          "modified" : "2015-05-28T14:07:17Z",\n          "description" : "Integration description",\n          "attributes" : "{\\"uid\\":\\"Walter White\\",\\"firstname\\":\\"walter\\",\\"cloudStatus\\":\\"UNREGISTERED\\",\\"displayName\\":\\"Walter White\\",\\"identificationNumber\\":\\"942\\",\\"lastSyncDate\\":1470348809380,\\"email\\":\\"walter@gmail.com\\",\\"lastname\\":\\"white\\"}",\n          "id" : "id12345",\n          "type" : "ServiceNow Service Desk",\n          "beforeProvisioningRule" : {\n            "name" : "Example Rule",\n            "id" : "2c918085708c274401708c2a8a760001",\n            "type" : "IDENTITY"\n          }\n        }\'\'\' # SimIntegrationDetails | DTO containing the details of the SIM integration\n\n    try:\n        # Create new sim integration\n        new_sim_integration_details = SimIntegrationDetails.from_json(sim_integration_details)\n        results = SIMIntegrationsApi(api_client).create_sim_integration(x_sail_point_experimental=x_sail_point_experimental, sim_integration_details=new_sim_integration_details)\n        # Below is a request that includes all optional parameters\n        # results = SIMIntegrationsApi(api_client).create_sim_integration(x_sail_point_experimental, new_sim_integration_details)\n        print("The response of SIMIntegrationsApi->create_sim_integration:\\n")\n        print(results.model_dump_json(by_alias=True, indent=4))\n    except Exception as e:\n        print("Exception when calling SIMIntegrationsApi->create_sim_integration: %s\\n" % e)\n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,r.jsx)(t.h2,{id:"delete-sim-integration",children:"delete-sim-integration"}),"\n",(0,r.jsx)(t.admonition,{title:"experimental",type:"warning",children:(0,r.jsxs)(t.p,{children:["This API is currently in an experimental state. The API is subject to change based on feedback and further testing. You must include the X-SailPoint-Experimental header and set it to ",(0,r.jsx)(t.code,{children:"true"})," to use this endpoint."]})}),"\n",(0,r.jsxs)(t.admonition,{title:"setting x-sailpoint-experimental header",type:"tip",children:[(0,r.jsxs)(t.p,{children:["on the configuration object you can set the ",(0,r.jsx)(t.code,{children:"x-sailpoint-experimental"})," header to `true' to enable all experimantl endpoints within the SDK.\nExample:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"  configuration = Configuration()\n  configuration.experimental = True\n"})})]}),"\n",(0,r.jsx)(t.p,{children:"Delete a sim integration\nGet the details of a SIM integration."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/delete-sim-integration",children:"API Spec"})}),"\n",(0,r.jsx)(t.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param Type"}),(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Path"}),(0,r.jsx)(t.td,{children:"id"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"str"})}),(0,r.jsx)(t.td,{children:"True"}),(0,r.jsx)(t.td,{children:"The id of the integration to delete."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"x_sail_point_experimental"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"str"})}),(0,r.jsx)(t.td,{children:"True  (default to 'true')"}),(0,r.jsx)(t.td,{children:"Use this header to enable this experimental API."}),(0,r.jsx)(t.td,{})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"return-type-1",children:"Return type"}),"\n",(0,r.jsx)(t.p,{children:"(empty response body)"}),"\n",(0,r.jsx)(t.h3,{id:"responses-1",children:"Responses"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Code"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Response headers"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"200"}),(0,r.jsx)(t.td,{children:"No content response"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"400"}),(0,r.jsx)(t.td,{children:"Client Error - Returned if the request body is invalid."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"401"}),(0,r.jsx)(t.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles401Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"403"}),(0,r.jsx)(t.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"404"}),(0,r.jsx)(t.td,{children:"Not Found - returned if the request URL refers to a resource or object that does not exist"}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"429"}),(0,r.jsx)(t.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles429Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"500"}),(0,r.jsx)(t.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"http-request-headers-1",children:"HTTP request headers"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"example-1",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"from sailpoint.v2025.api.sim_integrations_api import SIMIntegrationsApi\nfrom sailpoint.v2025.api_client import ApiClient\nfrom sailpoint.configuration import Configuration\nconfiguration = Configuration()\n\nconfiguration.experimental = True\n\nwith ApiClient(configuration) as api_client:\n    id = '12345' # str | The id of the integration to delete. # str | The id of the integration to delete.\n    x_sail_point_experimental = 'true' # str | Use this header to enable this experimental API. (default to 'true') # str | Use this header to enable this experimental API. (default to 'true')\n\n    try:\n        # Delete a sim integration\n        \n        SIMIntegrationsApi(api_client).delete_sim_integration(id=id, x_sail_point_experimental=x_sail_point_experimental)\n        # Below is a request that includes all optional parameters\n        # SIMIntegrationsApi(api_client).delete_sim_integration(id, x_sail_point_experimental)\n    except Exception as e:\n        print(\"Exception when calling SIMIntegrationsApi->delete_sim_integration: %s\\n\" % e)\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,r.jsx)(t.h2,{id:"get-sim-integration",children:"get-sim-integration"}),"\n",(0,r.jsx)(t.admonition,{title:"experimental",type:"warning",children:(0,r.jsxs)(t.p,{children:["This API is currently in an experimental state. The API is subject to change based on feedback and further testing. You must include the X-SailPoint-Experimental header and set it to ",(0,r.jsx)(t.code,{children:"true"})," to use this endpoint."]})}),"\n",(0,r.jsxs)(t.admonition,{title:"setting x-sailpoint-experimental header",type:"tip",children:[(0,r.jsxs)(t.p,{children:["on the configuration object you can set the ",(0,r.jsx)(t.code,{children:"x-sailpoint-experimental"})," header to `true' to enable all experimantl endpoints within the SDK.\nExample:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"  configuration = Configuration()\n  configuration.experimental = True\n"})})]}),"\n",(0,r.jsx)(t.p,{children:"Get a sim integration details.\nGet the details of a SIM integration."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/get-sim-integration",children:"API Spec"})}),"\n",(0,r.jsx)(t.h3,{id:"parameters-2",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param Type"}),(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Path"}),(0,r.jsx)(t.td,{children:"id"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"str"})}),(0,r.jsx)(t.td,{children:"True"}),(0,r.jsx)(t.td,{children:"The id of the integration."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"x_sail_point_experimental"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"str"})}),(0,r.jsx)(t.td,{children:"True  (default to 'true')"}),(0,r.jsx)(t.td,{children:"Use this header to enable this experimental API."}),(0,r.jsx)(t.td,{})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"return-type-2",children:"Return type"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"../models/service-desk-integration-dto",children:(0,r.jsx)(t.strong,{children:"ServiceDeskIntegrationDto"})})}),"\n",(0,r.jsx)(t.h3,{id:"responses-2",children:"Responses"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Code"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Response headers"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"200"}),(0,r.jsx)(t.td,{children:"The DTO containing the details of the SIM integration"}),(0,r.jsx)(t.td,{children:"ServiceDeskIntegrationDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"400"}),(0,r.jsx)(t.td,{children:"Client Error - Returned if the request body is invalid."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"401"}),(0,r.jsx)(t.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles401Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"403"}),(0,r.jsx)(t.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"404"}),(0,r.jsx)(t.td,{children:"Not Found - returned if the request URL refers to a resource or object that does not exist"}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"429"}),(0,r.jsx)(t.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles429Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"500"}),(0,r.jsx)(t.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"http-request-headers-2",children:"HTTP request headers"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"example-2",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"from sailpoint.v2025.api.sim_integrations_api import SIMIntegrationsApi\nfrom sailpoint.v2025.api_client import ApiClient\nfrom sailpoint.v2025.models.service_desk_integration_dto import ServiceDeskIntegrationDto\nfrom sailpoint.configuration import Configuration\nconfiguration = Configuration()\n\nconfiguration.experimental = True\n\nwith ApiClient(configuration) as api_client:\n    id = '12345' # str | The id of the integration. # str | The id of the integration.\n    x_sail_point_experimental = 'true' # str | Use this header to enable this experimental API. (default to 'true') # str | Use this header to enable this experimental API. (default to 'true')\n\n    try:\n        # Get a sim integration details.\n        \n        results = SIMIntegrationsApi(api_client).get_sim_integration(id=id, x_sail_point_experimental=x_sail_point_experimental)\n        # Below is a request that includes all optional parameters\n        # results = SIMIntegrationsApi(api_client).get_sim_integration(id, x_sail_point_experimental)\n        print(\"The response of SIMIntegrationsApi->get_sim_integration:\\n\")\n        print(results.model_dump_json(by_alias=True, indent=4))\n    except Exception as e:\n        print(\"Exception when calling SIMIntegrationsApi->get_sim_integration: %s\\n\" % e)\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,r.jsx)(t.h2,{id:"get-sim-integrations",children:"get-sim-integrations"}),"\n",(0,r.jsx)(t.admonition,{title:"experimental",type:"warning",children:(0,r.jsxs)(t.p,{children:["This API is currently in an experimental state. The API is subject to change based on feedback and further testing. You must include the X-SailPoint-Experimental header and set it to ",(0,r.jsx)(t.code,{children:"true"})," to use this endpoint."]})}),"\n",(0,r.jsxs)(t.admonition,{title:"setting x-sailpoint-experimental header",type:"tip",children:[(0,r.jsxs)(t.p,{children:["on the configuration object you can set the ",(0,r.jsx)(t.code,{children:"x-sailpoint-experimental"})," header to `true' to enable all experimantl endpoints within the SDK.\nExample:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"  configuration = Configuration()\n  configuration.experimental = True\n"})})]}),"\n",(0,r.jsx)(t.p,{children:"List the existing sim integrations.\nList the existing SIM integrations."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/get-sim-integrations",children:"API Spec"})}),"\n",(0,r.jsx)(t.h3,{id:"parameters-3",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param Type"}),(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"x_sail_point_experimental"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"str"})}),(0,r.jsx)(t.td,{children:"True  (default to 'true')"}),(0,r.jsx)(t.td,{children:"Use this header to enable this experimental API."}),(0,r.jsx)(t.td,{})]})})]}),"\n",(0,r.jsx)(t.h3,{id:"return-type-3",children:"Return type"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"../models/service-desk-integration-dto",children:(0,r.jsx)(t.strong,{children:"List[ServiceDeskIntegrationDto]"})})}),"\n",(0,r.jsx)(t.h3,{id:"responses-3",children:"Responses"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Code"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Response headers"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"200"}),(0,r.jsx)(t.td,{children:"The DTO containing the details of the SIM integration"}),(0,r.jsx)(t.td,{children:"List[ServiceDeskIntegrationDto]"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"400"}),(0,r.jsx)(t.td,{children:"Client Error - Returned if the request body is invalid."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"401"}),(0,r.jsx)(t.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles401Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"403"}),(0,r.jsx)(t.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"404"}),(0,r.jsx)(t.td,{children:"Not Found - returned if the request URL refers to a resource or object that does not exist"}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"429"}),(0,r.jsx)(t.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles429Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"500"}),(0,r.jsx)(t.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"http-request-headers-3",children:"HTTP request headers"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"example-3",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"from sailpoint.v2025.api.sim_integrations_api import SIMIntegrationsApi\nfrom sailpoint.v2025.api_client import ApiClient\nfrom sailpoint.v2025.models.service_desk_integration_dto import ServiceDeskIntegrationDto\nfrom sailpoint.configuration import Configuration\nconfiguration = Configuration()\n\nconfiguration.experimental = True\n\nwith ApiClient(configuration) as api_client:\n    x_sail_point_experimental = 'true' # str | Use this header to enable this experimental API. (default to 'true') # str | Use this header to enable this experimental API. (default to 'true')\n\n    try:\n        # List the existing sim integrations.\n        \n        results = SIMIntegrationsApi(api_client).get_sim_integrations(x_sail_point_experimental=x_sail_point_experimental)\n        # Below is a request that includes all optional parameters\n        # results = SIMIntegrationsApi(api_client).get_sim_integrations(x_sail_point_experimental)\n        print(\"The response of SIMIntegrationsApi->get_sim_integrations:\\n\")\n        for item in results:\n            print(item.model_dump_json(by_alias=True, indent=4))\n    except Exception as e:\n        print(\"Exception when calling SIMIntegrationsApi->get_sim_integrations: %s\\n\" % e)\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,r.jsx)(t.h2,{id:"patch-before-provisioning-rule",children:"patch-before-provisioning-rule"}),"\n",(0,r.jsx)(t.admonition,{title:"experimental",type:"warning",children:(0,r.jsxs)(t.p,{children:["This API is currently in an experimental state. The API is subject to change based on feedback and further testing. You must include the X-SailPoint-Experimental header and set it to ",(0,r.jsx)(t.code,{children:"true"})," to use this endpoint."]})}),"\n",(0,r.jsxs)(t.admonition,{title:"setting x-sailpoint-experimental header",type:"tip",children:[(0,r.jsxs)(t.p,{children:["on the configuration object you can set the ",(0,r.jsx)(t.code,{children:"x-sailpoint-experimental"})," header to `true' to enable all experimantl endpoints within the SDK.\nExample:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"  configuration = Configuration()\n  configuration.experimental = True\n"})})]}),"\n",(0,r.jsx)(t.p,{children:"Patch a sim beforeprovisioningrule attribute.\nPatch a SIM beforeProvisioningRule attribute given a JsonPatch object."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/patch-before-provisioning-rule",children:"API Spec"})}),"\n",(0,r.jsx)(t.h3,{id:"parameters-4",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param Type"}),(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Path"}),(0,r.jsx)(t.td,{children:"id"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"str"})}),(0,r.jsx)(t.td,{children:"True"}),(0,r.jsx)(t.td,{children:"SIM integration id"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"x_sail_point_experimental"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"str"})}),(0,r.jsx)(t.td,{children:"True  (default to 'true')"}),(0,r.jsx)(t.td,{children:"Use this header to enable this experimental API."}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Body"}),(0,r.jsx)(t.td,{children:"json_patch"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../models/json-patch",children:(0,r.jsx)(t.strong,{children:"JsonPatch"})})}),(0,r.jsx)(t.td,{children:"True"}),(0,r.jsx)(t.td,{children:"The JsonPatch object that describes the changes of SIM beforeProvisioningRule."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"return-type-4",children:"Return type"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"../models/service-desk-integration-dto",children:(0,r.jsx)(t.strong,{children:"ServiceDeskIntegrationDto"})})}),"\n",(0,r.jsx)(t.h3,{id:"responses-4",children:"Responses"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Code"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Response headers"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"200"}),(0,r.jsx)(t.td,{children:"The updated DTO containing the details of the SIM integration."}),(0,r.jsx)(t.td,{children:"ServiceDeskIntegrationDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"400"}),(0,r.jsx)(t.td,{children:"Client Error - Returned if the request body is invalid."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"401"}),(0,r.jsx)(t.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles401Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"403"}),(0,r.jsx)(t.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"404"}),(0,r.jsx)(t.td,{children:"Not Found - returned if the request URL refers to a resource or object that does not exist"}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"429"}),(0,r.jsx)(t.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles429Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"500"}),(0,r.jsx)(t.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"http-request-headers-4",children:"HTTP request headers"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Content-Type"}),": application/json-patch+json"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"example-4",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'from sailpoint.v2025.api.sim_integrations_api import SIMIntegrationsApi\nfrom sailpoint.v2025.api_client import ApiClient\nfrom sailpoint.v2025.models.json_patch import JsonPatch\nfrom sailpoint.v2025.models.service_desk_integration_dto import ServiceDeskIntegrationDto\nfrom sailpoint.configuration import Configuration\nconfiguration = Configuration()\n\nconfiguration.experimental = True\n\nwith ApiClient(configuration) as api_client:\n    id = \'12345\' # str | SIM integration id # str | SIM integration id\n    x_sail_point_experimental = \'true\' # str | Use this header to enable this experimental API. (default to \'true\') # str | Use this header to enable this experimental API. (default to \'true\')\n    json_patch = \'\'\'{\n          "operations" : [ {\n            "op" : "replace",\n            "path" : "/description",\n            "value" : "New description"\n          }, {\n            "op" : "replace",\n            "path" : "/description",\n            "value" : "New description"\n          } ]\n        }\'\'\' # JsonPatch | The JsonPatch object that describes the changes of SIM beforeProvisioningRule.\n\n    try:\n        # Patch a sim beforeprovisioningrule attribute.\n        new_json_patch = JsonPatch.from_json(json_patch)\n        results = SIMIntegrationsApi(api_client).patch_before_provisioning_rule(id=id, x_sail_point_experimental=x_sail_point_experimental, json_patch=new_json_patch)\n        # Below is a request that includes all optional parameters\n        # results = SIMIntegrationsApi(api_client).patch_before_provisioning_rule(id, x_sail_point_experimental, new_json_patch)\n        print("The response of SIMIntegrationsApi->patch_before_provisioning_rule:\\n")\n        print(results.model_dump_json(by_alias=True, indent=4))\n    except Exception as e:\n        print("Exception when calling SIMIntegrationsApi->patch_before_provisioning_rule: %s\\n" % e)\n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,r.jsx)(t.h2,{id:"patch-sim-attributes",children:"patch-sim-attributes"}),"\n",(0,r.jsx)(t.admonition,{title:"experimental",type:"warning",children:(0,r.jsxs)(t.p,{children:["This API is currently in an experimental state. The API is subject to change based on feedback and further testing. You must include the X-SailPoint-Experimental header and set it to ",(0,r.jsx)(t.code,{children:"true"})," to use this endpoint."]})}),"\n",(0,r.jsxs)(t.admonition,{title:"setting x-sailpoint-experimental header",type:"tip",children:[(0,r.jsxs)(t.p,{children:["on the configuration object you can set the ",(0,r.jsx)(t.code,{children:"x-sailpoint-experimental"})," header to `true' to enable all experimantl endpoints within the SDK.\nExample:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"  configuration = Configuration()\n  configuration.experimental = True\n"})})]}),"\n",(0,r.jsx)(t.p,{children:"Patch a sim attribute.\nPatch a SIM attribute given a JsonPatch object."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/patch-sim-attributes",children:"API Spec"})}),"\n",(0,r.jsx)(t.h3,{id:"parameters-5",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param Type"}),(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Path"}),(0,r.jsx)(t.td,{children:"id"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"str"})}),(0,r.jsx)(t.td,{children:"True"}),(0,r.jsx)(t.td,{children:"SIM integration id"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"x_sail_point_experimental"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"str"})}),(0,r.jsx)(t.td,{children:"True  (default to 'true')"}),(0,r.jsx)(t.td,{children:"Use this header to enable this experimental API."}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Body"}),(0,r.jsx)(t.td,{children:"json_patch"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../models/json-patch",children:(0,r.jsx)(t.strong,{children:"JsonPatch"})})}),(0,r.jsx)(t.td,{children:"True"}),(0,r.jsx)(t.td,{children:"The JsonPatch object that describes the changes of SIM"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"return-type-5",children:"Return type"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"../models/service-desk-integration-dto",children:(0,r.jsx)(t.strong,{children:"ServiceDeskIntegrationDto"})})}),"\n",(0,r.jsx)(t.h3,{id:"responses-5",children:"Responses"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Code"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Response headers"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"200"}),(0,r.jsx)(t.td,{children:"The updated DTO containing the details of the SIM integration."}),(0,r.jsx)(t.td,{children:"ServiceDeskIntegrationDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"400"}),(0,r.jsx)(t.td,{children:"Client Error - Returned if the request body is invalid."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"401"}),(0,r.jsx)(t.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles401Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"403"}),(0,r.jsx)(t.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"404"}),(0,r.jsx)(t.td,{children:"Not Found - returned if the request URL refers to a resource or object that does not exist"}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"429"}),(0,r.jsx)(t.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles429Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"500"}),(0,r.jsx)(t.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"http-request-headers-5",children:"HTTP request headers"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Content-Type"}),": application/json-patch+json"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"example-5",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'from sailpoint.v2025.api.sim_integrations_api import SIMIntegrationsApi\nfrom sailpoint.v2025.api_client import ApiClient\nfrom sailpoint.v2025.models.json_patch import JsonPatch\nfrom sailpoint.v2025.models.service_desk_integration_dto import ServiceDeskIntegrationDto\nfrom sailpoint.configuration import Configuration\nconfiguration = Configuration()\n\nconfiguration.experimental = True\n\nwith ApiClient(configuration) as api_client:\n    id = \'12345\' # str | SIM integration id # str | SIM integration id\n    x_sail_point_experimental = \'true\' # str | Use this header to enable this experimental API. (default to \'true\') # str | Use this header to enable this experimental API. (default to \'true\')\n    json_patch = \'\'\'{\n          "operations" : [ {\n            "op" : "replace",\n            "path" : "/description",\n            "value" : "New description"\n          }, {\n            "op" : "replace",\n            "path" : "/description",\n            "value" : "New description"\n          } ]\n        }\'\'\' # JsonPatch | The JsonPatch object that describes the changes of SIM\n\n    try:\n        # Patch a sim attribute.\n        new_json_patch = JsonPatch.from_json(json_patch)\n        results = SIMIntegrationsApi(api_client).patch_sim_attributes(id=id, x_sail_point_experimental=x_sail_point_experimental, json_patch=new_json_patch)\n        # Below is a request that includes all optional parameters\n        # results = SIMIntegrationsApi(api_client).patch_sim_attributes(id, x_sail_point_experimental, new_json_patch)\n        print("The response of SIMIntegrationsApi->patch_sim_attributes:\\n")\n        print(results.model_dump_json(by_alias=True, indent=4))\n    except Exception as e:\n        print("Exception when calling SIMIntegrationsApi->patch_sim_attributes: %s\\n" % e)\n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"#",children:"[Back to top]"})}),"\n",(0,r.jsx)(t.h2,{id:"put-sim-integration",children:"put-sim-integration"}),"\n",(0,r.jsx)(t.admonition,{title:"experimental",type:"warning",children:(0,r.jsxs)(t.p,{children:["This API is currently in an experimental state. The API is subject to change based on feedback and further testing. You must include the X-SailPoint-Experimental header and set it to ",(0,r.jsx)(t.code,{children:"true"})," to use this endpoint."]})}),"\n",(0,r.jsxs)(t.admonition,{title:"setting x-sailpoint-experimental header",type:"tip",children:[(0,r.jsxs)(t.p,{children:["on the configuration object you can set the ",(0,r.jsx)(t.code,{children:"x-sailpoint-experimental"})," header to `true' to enable all experimantl endpoints within the SDK.\nExample:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"  configuration = Configuration()\n  configuration.experimental = True\n"})})]}),"\n",(0,r.jsx)(t.p,{children:"Update an existing sim integration\nUpdate an existing SIM integration."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://developer.sailpoint.com/docs/api/v2025/put-sim-integration",children:"API Spec"})}),"\n",(0,r.jsx)(t.h3,{id:"parameters-6",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param Type"}),(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Path"}),(0,r.jsx)(t.td,{children:"id"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"str"})}),(0,r.jsx)(t.td,{children:"True"}),(0,r.jsx)(t.td,{children:"The id of the integration."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"x_sail_point_experimental"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"str"})}),(0,r.jsx)(t.td,{children:"True  (default to 'true')"}),(0,r.jsx)(t.td,{children:"Use this header to enable this experimental API."}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Body"}),(0,r.jsx)(t.td,{children:"sim_integration_details"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../models/sim-integration-details",children:(0,r.jsx)(t.strong,{children:"SimIntegrationDetails"})})}),(0,r.jsx)(t.td,{children:"True"}),(0,r.jsx)(t.td,{children:"The full DTO of the integration containing the updated model"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"return-type-6",children:"Return type"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"../models/service-desk-integration-dto",children:(0,r.jsx)(t.strong,{children:"ServiceDeskIntegrationDto"})})}),"\n",(0,r.jsx)(t.h3,{id:"responses-6",children:"Responses"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Code"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Data Type"}),(0,r.jsx)(t.th,{children:"Response headers"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"200"}),(0,r.jsx)(t.td,{children:"details of the updated integration"}),(0,r.jsx)(t.td,{children:"ServiceDeskIntegrationDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"400"}),(0,r.jsx)(t.td,{children:"Client Error - Returned if the request body is invalid."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"401"}),(0,r.jsx)(t.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles401Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"403"}),(0,r.jsx)(t.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"404"}),(0,r.jsx)(t.td,{children:"Not Found - returned if the request URL refers to a resource or object that does not exist"}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"429"}),(0,r.jsx)(t.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,r.jsx)(t.td,{children:"ListAccessProfiles429Response"}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"500"}),(0,r.jsx)(t.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,r.jsx)(t.td,{children:"ErrorResponseDto"}),(0,r.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"http-request-headers-6",children:"HTTP request headers"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"example-6",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'from sailpoint.v2025.api.sim_integrations_api import SIMIntegrationsApi\nfrom sailpoint.v2025.api_client import ApiClient\nfrom sailpoint.v2025.models.service_desk_integration_dto import ServiceDeskIntegrationDto\nfrom sailpoint.v2025.models.sim_integration_details import SimIntegrationDetails\nfrom sailpoint.configuration import Configuration\nconfiguration = Configuration()\n\nconfiguration.experimental = True\n\nwith ApiClient(configuration) as api_client:\n    id = \'12345\' # str | The id of the integration. # str | The id of the integration.\n    x_sail_point_experimental = \'true\' # str | Use this header to enable this experimental API. (default to \'true\') # str | Use this header to enable this experimental API. (default to \'true\')\n    sim_integration_details = \'\'\'{\n          "cluster" : "xyzzy999",\n          "statusMap" : "{closed_cancelled=Failed, closed_complete=Committed, closed_incomplete=Failed, closed_rejected=Failed, in_process=Queued, requested=Queued}",\n          "request" : "{description=SailPoint Access Request,, req_description=The Service Request created by SailPoint ServiceNow Service Integration Module (SIM).,, req_short_description=SailPoint New Access Request Created from IdentityNow,, short_description=SailPoint Access Request $!plan.arguments.identityRequestId}",\n          "sources" : [ "2c9180835d191a86015d28455b4a2329", "2c5680835d191a85765d28455b4a9823" ],\n          "created" : "2015-05-28T14:07:17Z",\n          "name" : "aName",\n          "modified" : "2015-05-28T14:07:17Z",\n          "description" : "Integration description",\n          "attributes" : "{\\"uid\\":\\"Walter White\\",\\"firstname\\":\\"walter\\",\\"cloudStatus\\":\\"UNREGISTERED\\",\\"displayName\\":\\"Walter White\\",\\"identificationNumber\\":\\"942\\",\\"lastSyncDate\\":1470348809380,\\"email\\":\\"walter@gmail.com\\",\\"lastname\\":\\"white\\"}",\n          "id" : "id12345",\n          "type" : "ServiceNow Service Desk",\n          "beforeProvisioningRule" : {\n            "name" : "Example Rule",\n            "id" : "2c918085708c274401708c2a8a760001",\n            "type" : "IDENTITY"\n          }\n        }\'\'\' # SimIntegrationDetails | The full DTO of the integration containing the updated model\n\n    try:\n        # Update an existing sim integration\n        new_sim_integration_details = SimIntegrationDetails.from_json(sim_integration_details)\n        results = SIMIntegrationsApi(api_client).put_sim_integration(id=id, x_sail_point_experimental=x_sail_point_experimental, sim_integration_details=new_sim_integration_details)\n        # Below is a request that includes all optional parameters\n        # results = SIMIntegrationsApi(api_client).put_sim_integration(id, x_sail_point_experimental, new_sim_integration_details)\n        print("The response of SIMIntegrationsApi->put_sim_integration:\\n")\n        print(results.model_dump_json(by_alias=True, indent=4))\n    except Exception as e:\n        print("Exception when calling SIMIntegrationsApi->put_sim_integration: %s\\n" % e)\n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"#",children:"[Back to top]"})})]})}function c(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},250065:function(e,t,n){n.d(t,{Z:()=>o,a:()=>d});var i=n(667294);let r={},s=i.createContext(r);function d(e){let t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(s.Provider,{value:t},e.children)}},161156:function(e){e.exports=JSON.parse('{"id":"tools/sdk/python/Reference/V2025/Methods/v2025-sim-integrations","title":"SIM_Integrations","description":"Use this API to administer IdentityNow&#39;s Service Integration Module, or SIM integration with ServiceNow, so that it converts IdentityNow provisioning actions into tickets in ServiceNow.","source":"@site/docs/tools/sdk/python/Reference/V2025/Methods/SIMIntegrationsApi.md","sourceDirName":"tools/sdk/python/Reference/V2025/Methods","slug":"/tools/sdk/python/v2025/methods/sim-integrations","permalink":"/docs/tools/sdk/python/v2025/methods/sim-integrations","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/python/Reference/V2025/Methods/SIMIntegrationsApi.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"SIM_Integrations","permalink":"/docs/tags/sim-integrations"},{"inline":true,"label":"V2025SIM_Integrations","permalink":"/docs/tags/v-2025-sim-integrations"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1747667101000,"frontMatter":{"id":"v2025-sim-integrations","title":"SIM_Integrations","pagination_label":"SIM_Integrations","sidebar_label":"SIM_Integrations","sidebar_class_name":"pythonsdk","keywords":["python","Python","sdk","SIM_Integrations","V2025SIM_Integrations"],"slug":"/tools/sdk/python/v2025/methods/sim-integrations","tags":["SDK","Software Development Kit","SIM_Integrations","V2025SIM_Integrations"]},"sidebar":"openApiSidebar","previous":{"title":"Roles","permalink":"/docs/tools/sdk/python/v2025/methods/roles"},"next":{"title":"SOD_Policies","permalink":"/docs/tools/sdk/python/v2025/methods/sod-policies"}}')}}]);