"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["77138"],{768059:function(e,s,t){t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>c,frontMatter:()=>d,metadata:()=>n,toc:()=>l});var n=t(16073),r=t(785893),i=t(250065);let d={id:"beta-password-management",title:"PasswordManagement",pagination_label:"PasswordManagement",sidebar_label:"PasswordManagement",sidebar_class_name:"powershellsdk",keywords:["powershell","PowerShell","sdk","PasswordManagement","BetaPasswordManagement"],slug:"/tools/sdk/powershell/beta/methods/password-management",tags:["SDK","Software Development Kit","PasswordManagement","BetaPasswordManagement"]},a="PasswordManagement",o={},l=[{value:"create-digit-token",id:"create-digit-token",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"Responses",id:"responses",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example",level:3},{value:"get-identity-password-change-status",id:"get-identity-password-change-status",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"Responses",id:"responses-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-1",level:3},{value:"query-password-info",id:"query-password-info",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"Responses",id:"responses-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-2",level:3},{value:"set-identity-password",id:"set-identity-password",level:2},{value:"Parameters",id:"parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"Responses",id:"responses-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-3",level:3}];function h(e){let s={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"passwordmanagement",children:"PasswordManagement"})}),"\n",(0,r.jsx)(s.p,{children:"Use this API to implement password management functionality.\nWith this functionality in place, users can manage their identity passwords for all their applications."}),"\n",(0,r.jsx)(s.p,{children:"In Identity Security Cloud, users can select their names in the upper right corner of the page and use the drop-down menu to select Password Manager.\nPassword Manager lists the user's identity's applications, possibly grouped to share passwords.\nUsers can then select 'Change Password' to update their passwords."}),"\n",(0,r.jsx)(s.p,{children:"Grouping passwords allows users to update their passwords more broadly, rather than requiring them to update each password individually.\nPassword Manager may list the applications and sources in the following groups:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"Password Group: This refers to a group of applications that share a password.\nFor example, a user can use the same password for Google Drive, Google Mail, and YouTube.\nUpdating the password for the password group updates the password for all its included applications."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"Multi-Application Source: This refers to a source with multiple applications that share a password.\nFor example, a user can have a source, G Suite, that includes the Google Calendar, Google Drive, and Google Mail applications.\nUpdating the password for the multi-application source updates the password for all its included applications."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"Applications: These are applications that do not share passwords with other applications."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"An organization may require some authentication for users to update their passwords.\nUsers may be required to answer security questions or use a third-party authenticator before they can confirm their updates."}),"\n",(0,r.jsxs)(s.p,{children:["Refer to ",(0,r.jsx)(s.a,{href:"https://documentation.sailpoint.com/saas/user-help/accounts/passwords.html",children:"Managing Passwords"})," for more information about password management."]}),"\n",(0,r.jsxs)(s.p,{children:["All URIs are relative to ",(0,r.jsx)(s.em,{children:(0,r.jsx)(s.a,{href:"https://sailpoint.api.identitynow.com/beta",children:"https://sailpoint.api.identitynow.com/beta"})})]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Method"}),(0,r.jsx)(s.th,{children:"HTTP request"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#create-digit-token",children:(0,r.jsx)(s.strong,{children:"New-BetaDigitToken"})})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.strong,{children:"POST"})," ",(0,r.jsx)(s.code,{children:"/generate-password-reset-token/digit"})]}),(0,r.jsx)(s.td,{children:"Generate a digit token"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#get-identity-password-change-status",children:(0,r.jsx)(s.strong,{children:"Get-BetaIdentityPasswordChangeStatus"})})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.strong,{children:"GET"})," ",(0,r.jsx)(s.code,{children:"/password-change-status/{id}"})]}),(0,r.jsx)(s.td,{children:"Get password change request status"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#query-password-info",children:(0,r.jsx)(s.strong,{children:"Search-BetaPasswordInfo"})})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.strong,{children:"POST"})," ",(0,r.jsx)(s.code,{children:"/query-password-info"})]}),(0,r.jsx)(s.td,{children:"Query password info"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#set-identity-password",children:(0,r.jsx)(s.strong,{children:"Set-BetaIdentityPassword"})})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.strong,{children:"POST"})," ",(0,r.jsx)(s.code,{children:"/set-password"})]}),(0,r.jsx)(s.td,{children:"Set identity's password"})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"create-digit-token",children:"create-digit-token"}),"\n",(0,r.jsxs)(s.p,{children:['This API is used to generate a digit token for password management. Requires authorization scope of "idn:password-digit-token',":create",'".']}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/beta/create-digit-token",children:"API Spec"})}),"\n",(0,r.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Param Type"}),(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Data Type"}),(0,r.jsx)(s.th,{children:"Required"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Body"}),(0,r.jsx)(s.td,{children:"PasswordDigitTokenReset"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../models/password-digit-token-reset",children:(0,r.jsx)(s.strong,{children:"PasswordDigitTokenReset"})})}),(0,r.jsx)(s.td,{children:"True"}),(0,r.jsx)(s.td,{})]})})]}),"\n",(0,r.jsx)(s.h3,{id:"return-type",children:"Return type"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"../models/password-digit-token",children:(0,r.jsx)(s.strong,{children:"PasswordDigitToken"})})}),"\n",(0,r.jsx)(s.h3,{id:"responses",children:"Responses"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Code"}),(0,r.jsx)(s.th,{children:"Description"}),(0,r.jsx)(s.th,{children:"Data Type"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"200"}),(0,r.jsx)(s.td,{children:"The digit token for password management."}),(0,r.jsx)(s.td,{children:"PasswordDigitToken"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"400"}),(0,r.jsx)(s.td,{children:"Client Error - Returned if the request body is invalid."}),(0,r.jsx)(s.td,{children:"ErrorResponseDto"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"401"}),(0,r.jsx)(s.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,r.jsx)(s.td,{children:"ListAccessModelMetadataAttribute401Response"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"403"}),(0,r.jsx)(s.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,r.jsx)(s.td,{children:"ErrorResponseDto"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"429"}),(0,r.jsx)(s.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,r.jsx)(s.td,{children:"ListAccessModelMetadataAttribute429Response"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"500"}),(0,r.jsx)(s.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,r.jsx)(s.td,{children:"ErrorResponseDto"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"http-request-headers",children:"HTTP request headers"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-powershell",children:'$PasswordDigitTokenReset = @"{\n  "durationMinutes" : 5,\n  "length" : 8,\n  "userId" : "Abby.Smith"\n}"@\n\n# Generate a digit token\n\ntry {\n    $Result = ConvertFrom-BetaJsonToPasswordDigitTokenReset -Json $PasswordDigitTokenReset\n    New-BetaDigitToken -PasswordDigitTokenReset $Result \n    \n    # Below is a request that includes all optional parameters\n    # New-BetaDigitToken -PasswordDigitTokenReset $Result  \n} catch {\n    Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaDigitToken"\n    Write-Host $_.ErrorDetails\n}\n'})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"#",children:"[Back to top]"})}),"\n",(0,r.jsx)(s.h2,{id:"get-identity-password-change-status",children:"get-identity-password-change-status"}),"\n",(0,r.jsx)(s.p,{children:"This API returns the status of a password change request. A token with identity owner or trusted API client application authority is required to call this API."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-identity-password-change-status",children:"API Spec"})}),"\n",(0,r.jsx)(s.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Param Type"}),(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Data Type"}),(0,r.jsx)(s.th,{children:"Required"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Path"}),(0,r.jsx)(s.td,{children:"Id"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"String"})}),(0,r.jsx)(s.td,{children:"True"}),(0,r.jsx)(s.td,{})]})})]}),"\n",(0,r.jsx)(s.h3,{id:"return-type-1",children:"Return type"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"../models/password-status",children:(0,r.jsx)(s.strong,{children:"PasswordStatus"})})}),"\n",(0,r.jsx)(s.h3,{id:"responses-1",children:"Responses"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Code"}),(0,r.jsx)(s.th,{children:"Description"}),(0,r.jsx)(s.th,{children:"Data Type"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"200"}),(0,r.jsx)(s.td,{children:"Status of the password change request"}),(0,r.jsx)(s.td,{children:"PasswordStatus"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"400"}),(0,r.jsx)(s.td,{children:"Client Error - Returned if the request body is invalid."}),(0,r.jsx)(s.td,{children:"ErrorResponseDto"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"401"}),(0,r.jsx)(s.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,r.jsx)(s.td,{children:"ListAccessModelMetadataAttribute401Response"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"403"}),(0,r.jsx)(s.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,r.jsx)(s.td,{children:"ErrorResponseDto"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"404"}),(0,r.jsx)(s.td,{children:"Not Found - returned if the request URL refers to a resource or object that does not exist"}),(0,r.jsx)(s.td,{children:"ErrorResponseDto"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"500"}),(0,r.jsx)(s.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,r.jsx)(s.td,{children:"ErrorResponseDto"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"http-request-headers-1",children:"HTTP request headers"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"example-1",children:"Example"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-powershell",children:'$Id = "MyId" # String | \n\n# Get password change request status\n\ntry {\n    Get-BetaIdentityPasswordChangeStatus -Id $Id \n    \n    # Below is a request that includes all optional parameters\n    # Get-BetaIdentityPasswordChangeStatus -Id $Id  \n} catch {\n    Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityPasswordChangeStatus"\n    Write-Host $_.ErrorDetails\n}\n'})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"#",children:"[Back to top]"})}),"\n",(0,r.jsx)(s.h2,{id:"query-password-info",children:"query-password-info"}),"\n",(0,r.jsx)(s.p,{children:"This API is used to query password related information."}),"\n",(0,r.jsxs)(s.p,{children:["A token with ",(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow",children:"API authority"}),'\nis required to call this API.  "API authority" refers to a token that only has the "client_credentials"\ngrant type, and therefore no user context. A ',(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens",children:"personal access token"}),"\nor a token generated with the ",(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow",children:"authorization_code"}),"\ngrant type will ",(0,r.jsx)(s.strong,{children:"NOT"})," work on this endpoint, and a ",(0,r.jsx)(s.code,{children:"403 Forbidden"})," response\nwill be returned."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/beta/query-password-info",children:"API Spec"})}),"\n",(0,r.jsx)(s.h3,{id:"parameters-2",children:"Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Param Type"}),(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Data Type"}),(0,r.jsx)(s.th,{children:"Required"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Body"}),(0,r.jsx)(s.td,{children:"PasswordInfoQueryDTO"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../models/password-info-query-dto",children:(0,r.jsx)(s.strong,{children:"PasswordInfoQueryDTO"})})}),(0,r.jsx)(s.td,{children:"True"}),(0,r.jsx)(s.td,{})]})})]}),"\n",(0,r.jsx)(s.h3,{id:"return-type-2",children:"Return type"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"../models/password-info",children:(0,r.jsx)(s.strong,{children:"PasswordInfo"})})}),"\n",(0,r.jsx)(s.h3,{id:"responses-2",children:"Responses"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Code"}),(0,r.jsx)(s.th,{children:"Description"}),(0,r.jsx)(s.th,{children:"Data Type"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"200"}),(0,r.jsx)(s.td,{children:"Reference to the password info."}),(0,r.jsx)(s.td,{children:"PasswordInfo"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"400"}),(0,r.jsx)(s.td,{children:"Client Error - Returned if the request body is invalid."}),(0,r.jsx)(s.td,{children:"ErrorResponseDto"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"401"}),(0,r.jsx)(s.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,r.jsx)(s.td,{children:"ListAccessModelMetadataAttribute401Response"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"403"}),(0,r.jsx)(s.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,r.jsx)(s.td,{children:"ErrorResponseDto"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"429"}),(0,r.jsx)(s.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,r.jsx)(s.td,{children:"ListAccessModelMetadataAttribute429Response"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"500"}),(0,r.jsx)(s.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,r.jsx)(s.td,{children:"ErrorResponseDto"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"http-request-headers-2",children:"HTTP request headers"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"example-2",children:"Example"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-powershell",children:'$PasswordInfoQueryDTO = @"{\n  "sourceName" : "My-AD",\n  "userName" : "Abby.Smith"\n}"@\n\n# Query password info\n\ntry {\n    $Result = ConvertFrom-BetaJsonToPasswordInfoQueryDTO -Json $PasswordInfoQueryDTO\n    Search-BetaPasswordInfo -PasswordInfoQueryDTO $Result \n    \n    # Below is a request that includes all optional parameters\n    # Search-BetaPasswordInfo -PasswordInfoQueryDTO $Result  \n} catch {\n    Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Search-BetaPasswordInfo"\n    Write-Host $_.ErrorDetails\n}\n'})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"#",children:"[Back to top]"})}),"\n",(0,r.jsx)(s.h2,{id:"set-identity-password",children:"set-identity-password"}),"\n",(0,r.jsx)(s.p,{children:"This API is used to set a password for an identity."}),"\n",(0,r.jsxs)(s.p,{children:["An identity can change their own password (as well as any of their accounts' passwords) if they use a token generated by their ISC user, such as a ",(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens",children:"personal access token"})," or ",(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow",children:'"authorization_code" derived OAuth token'}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["A token with ",(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow",children:"API authority"})," can be used to change ",(0,r.jsx)(s.strong,{children:"any"}),' identity\'s password or the password of any of the identity\'s accounts.\n"API authority" refers to a token that only has the "client_credentials" grant type.']}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsxs)(s.strong,{children:["Note: If you want to set an identity's source account password, you must enable ",(0,r.jsx)(s.code,{children:"PASSWORD"})," as one of the source's features. You can use the ",(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/v3/update-source",children:"PATCH Source endpoint"})," to add the ",(0,r.jsx)(s.code,{children:"PASSWORD"})," feature."]})}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["You can use this endpoint to generate an ",(0,r.jsx)(s.code,{children:"encryptedPassword"})," (RSA encrypted using publicKey).\nTo do so, follow these steps:"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Use ",(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/v3/query-password-info",children:"Query Password Info"})," to get the following information: ",(0,r.jsx)(s.code,{children:"identityId"}),", ",(0,r.jsx)(s.code,{children:"sourceId"}),", ",(0,r.jsx)(s.code,{children:"publicKeyId"}),", ",(0,r.jsx)(s.code,{children:"publicKey"}),", ",(0,r.jsx)(s.code,{children:"accounts"}),", and ",(0,r.jsx)(s.code,{children:"policies"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Choose an account from the previous response that you will provide as an ",(0,r.jsx)(s.code,{children:"accountId"})," in your request to set an encrypted password."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Use ",(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/v3/set-password",children:"Set Identity's Password"})," and provide the information you got from your earlier query. Then add this code to your request to get the encrypted password:"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-java",children:'import javax.crypto.Cipher;\nimport java.security.KeyFactory;\nimport java.security.PublicKey;\nimport java.security.spec.X509EncodedKeySpec;\nimport java util.Base64;\n\nString encrypt(String publicKey, String toEncrypt) throws Exception {\n  byte[] publicKeyBytes = Base64.getDecoder().decode(publicKey);\n  byte[] encryptedBytes = encryptRsa(publicKeyBytes, toEncrypt.getBytes("UTF-8"));\n  return Base64.getEncoder().encodeToString(encryptedBytes);\n}\n\nprivate byte[] encryptRsa(byte[] publicKeyBytes, byte[] toEncryptBytes) throws Exception {\n  PublicKey key = KeyFactory.getInstance("RSA").generatePublic(new X509EncodedKeySpec(publicKeyBytes));\n  String transformation = "RSA/ECB/PKCS1Padding";\n  Cipher cipher = Cipher.getInstance(transformation);\n  cipher.init(1, key);\n  return cipher.doFinal(toEncryptBytes);\n}\n'})}),"\n",(0,r.jsxs)(s.p,{children:["In this example, ",(0,r.jsx)(s.code,{children:"toEncrypt"})," refers to the plain text password you are setting and then encrypting, and the ",(0,r.jsx)(s.code,{children:"publicKey"})," refers to the publicKey you got from the first request you sent."]}),"\n",(0,r.jsxs)(s.p,{children:["You can then use ",(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/v3/get-password-change-status",children:"Get Password Change Request Status"})," to check the password change request status. To do so, you must provide the ",(0,r.jsx)(s.code,{children:"requestId"})," from your earlier request to set the password."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/beta/set-identity-password",children:"API Spec"})}),"\n",(0,r.jsx)(s.h3,{id:"parameters-3",children:"Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Param Type"}),(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Data Type"}),(0,r.jsx)(s.th,{children:"Required"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Body"}),(0,r.jsx)(s.td,{children:"PasswordChangeRequest"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../models/password-change-request",children:(0,r.jsx)(s.strong,{children:"PasswordChangeRequest"})})}),(0,r.jsx)(s.td,{children:"True"}),(0,r.jsx)(s.td,{})]})})]}),"\n",(0,r.jsx)(s.h3,{id:"return-type-3",children:"Return type"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"../models/password-change-response",children:(0,r.jsx)(s.strong,{children:"PasswordChangeResponse"})})}),"\n",(0,r.jsx)(s.h3,{id:"responses-3",children:"Responses"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Code"}),(0,r.jsx)(s.th,{children:"Description"}),(0,r.jsx)(s.th,{children:"Data Type"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"202"}),(0,r.jsx)(s.td,{children:"Reference to the password change."}),(0,r.jsx)(s.td,{children:"PasswordChangeResponse"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"400"}),(0,r.jsx)(s.td,{children:"Client Error - Returned if the request body is invalid."}),(0,r.jsx)(s.td,{children:"ErrorResponseDto"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"401"}),(0,r.jsx)(s.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,r.jsx)(s.td,{children:"ListAccessModelMetadataAttribute401Response"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"403"}),(0,r.jsx)(s.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,r.jsx)(s.td,{children:"ErrorResponseDto"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"429"}),(0,r.jsx)(s.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,r.jsx)(s.td,{children:"ListAccessModelMetadataAttribute429Response"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"500"}),(0,r.jsx)(s.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,r.jsx)(s.td,{children:"ErrorResponseDto"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"http-request-headers-3",children:"HTTP request headers"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"example-3",children:"Example"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-powershell",children:'$PasswordChangeRequest = @"{\n  "sourceId" : "8a807d4c73c545510173c545d4b60246",\n  "accountId" : "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com",\n  "identityId" : "8a807d4c73c545510173c545f0a002ff",\n  "publicKeyId" : "YWQ2NjQ4MTItZjY0NC00MWExLWFjMjktOGNmMzU3Y2VlNjk2",\n  "encryptedPassword" : "XzN+YwKgr2C+InkMYFMBG3UtjMEw5ZIql/XFlXo8cJNeslmkplx6vn4kd4/43IF9STBk5RnzR6XmjpEO+FwHDoiBwYZAkAZK/Iswxk4OdybG6Y4MStJCOCiK8osKr35IMMSV/mbO4wAeltoCk7daTWzTGLiI6UaT5tf+F2EgdjJZ7YqM8W8r7aUWsm3p2Xt01Y46ZRx0QaM91QruiIx2rECFT2pUO0wr+7oQ77jypATyGWRtADsu3YcvCk/6U5MqCnXMzKBcRas7NnZdSL/d5H1GglVGz3VLPMaivG4/oL4chOMmFCRl/zVsGxZ9RhN8rxsRGFFKn+rhExTi+bax3A=="\n}"@\n\n# Set identity\'s password\n\ntry {\n    $Result = ConvertFrom-BetaJsonToPasswordChangeRequest -Json $PasswordChangeRequest\n    Set-BetaIdentityPassword -PasswordChangeRequest $Result \n    \n    # Below is a request that includes all optional parameters\n    # Set-BetaIdentityPassword -PasswordChangeRequest $Result  \n} catch {\n    Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Set-BetaIdentityPassword"\n    Write-Host $_.ErrorDetails\n}\n'})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"#",children:"[Back to top]"})})]})}function c(e={}){let{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},250065:function(e,s,t){t.d(s,{Z:()=>a,a:()=>d});var n=t(667294);let r={},i=n.createContext(r);function d(e){let s=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(i.Provider,{value:s},e.children)}},16073:function(e){e.exports=JSON.parse('{"id":"tools/sdk/powershell/Reference/Beta/Methods/beta-password-management","title":"PasswordManagement","description":"Use this API to implement password management functionality.","source":"@site/docs/tools/sdk/powershell/Reference/Beta/Methods/BetaPasswordManagementApi.md","sourceDirName":"tools/sdk/powershell/Reference/Beta/Methods","slug":"/tools/sdk/powershell/beta/methods/password-management","permalink":"/docs/tools/sdk/powershell/beta/methods/password-management","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/powershell/Reference/Beta/Methods/BetaPasswordManagementApi.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"PasswordManagement","permalink":"/docs/tags/password-management"},{"inline":true,"label":"BetaPasswordManagement","permalink":"/docs/tags/beta-password-management"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1758640246000,"frontMatter":{"id":"beta-password-management","title":"PasswordManagement","pagination_label":"PasswordManagement","sidebar_label":"PasswordManagement","sidebar_class_name":"powershellsdk","keywords":["powershell","PowerShell","sdk","PasswordManagement","BetaPasswordManagement"],"slug":"/tools/sdk/powershell/beta/methods/password-management","tags":["SDK","Software Development Kit","PasswordManagement","BetaPasswordManagement"]},"sidebar":"openApiSidebar","previous":{"title":"PasswordDictionary","permalink":"/docs/tools/sdk/powershell/beta/methods/password-dictionary"},"next":{"title":"PasswordPolicies","permalink":"/docs/tools/sdk/powershell/beta/methods/password-policies"}}')}}]);