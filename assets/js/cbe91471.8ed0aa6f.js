"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["445806"],{604274:function(e,n,t){t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var r=t(973420),o=t(785893),s=t(250065);let l={id:"v2025-connector-rule-management",title:"ConnectorRuleManagement",pagination_label:"ConnectorRuleManagement",sidebar_label:"ConnectorRuleManagement",sidebar_class_name:"gosdk",keywords:["go","Golang","sdk","ConnectorRuleManagement","V2025ConnectorRuleManagement"],slug:"/tools/sdk/go/v2025/methods/connector-rule-management",tags:["SDK","Software Development Kit","ConnectorRuleManagement","V2025ConnectorRuleManagement"]},i="ConnectorRuleManagementAPI",a={},c=[{value:"create-connector-rule",id:"create-connector-rule",level:2},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Other Parameters",id:"other-parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example",level:3},{value:"delete-connector-rule",id:"delete-connector-rule",level:2},{value:"Path Parameters",id:"path-parameters-1",level:3},{value:"Other Parameters",id:"other-parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-1",level:3},{value:"get-connector-rule",id:"get-connector-rule",level:2},{value:"Path Parameters",id:"path-parameters-2",level:3},{value:"Other Parameters",id:"other-parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-2",level:3},{value:"get-connector-rule-list",id:"get-connector-rule-list",level:2},{value:"Path Parameters",id:"path-parameters-3",level:3},{value:"Other Parameters",id:"other-parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-3",level:3},{value:"put-connector-rule",id:"put-connector-rule",level:2},{value:"Path Parameters",id:"path-parameters-4",level:3},{value:"Other Parameters",id:"other-parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3},{value:"Example",id:"example-4",level:3},{value:"test-connector-rule",id:"test-connector-rule",level:2},{value:"Path Parameters",id:"path-parameters-5",level:3},{value:"Other Parameters",id:"other-parameters-5",level:3},{value:"Return type",id:"return-type-5",level:3},{value:"HTTP request headers",id:"http-request-headers-5",level:3},{value:"Example",id:"example-5",level:3}];function d(e){let n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"connectorrulemanagementapi",children:"ConnectorRuleManagementAPI"})}),"\n",(0,o.jsx)(n.p,{children:"Use this API to implement connector rule management functionality.\nWith this functionality in place, administrators can implement connector-executed rules in a programmatic, scalable way."}),"\n",(0,o.jsxs)(n.p,{children:["In Identity Security Cloud (ISC), ",(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/extensibility/rules",children:"rules"})," serve as a flexible configuration framework you can leverage to perform complex or advanced configurations.\n",(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/extensibility/rules/connector-rules",children:"Connector-executed rules"})," are rules that are executed in the ISC virtual appliance (VA), usually extensions of the ",(0,o.jsx)(n.a,{href:"https://documentation.sailpoint.com/connectors/isc/landingpages/help/landingpages/isc_landing.html",children:"connector"})," itself, the bridge between the data source and ISC."]}),"\n",(0,o.jsx)(n.p,{children:"This API allows administrators to view existing connector-executed rules, make changes to them, delete them, and create new ones from the available types."}),"\n",(0,o.jsxs)(n.p,{children:["All URIs are relative to ",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.a,{href:"https://sailpoint.api.identitynow.com/v2025",children:"https://sailpoint.api.identitynow.com/v2025"})})]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Method"}),(0,o.jsx)(n.th,{children:"HTTP request"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#create-connector-rule",children:(0,o.jsx)(n.strong,{children:"create-connector-rule"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Post"})," ",(0,o.jsx)(n.code,{children:"/connector-rules"})]}),(0,o.jsx)(n.td,{children:"Create connector rule"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#delete-connector-rule",children:(0,o.jsx)(n.strong,{children:"delete-connector-rule"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Delete"})," ",(0,o.jsx)(n.code,{children:"/connector-rules/{id}"})]}),(0,o.jsx)(n.td,{children:"Delete connector rule"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#get-connector-rule",children:(0,o.jsx)(n.strong,{children:"get-connector-rule"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Get"})," ",(0,o.jsx)(n.code,{children:"/connector-rules/{id}"})]}),(0,o.jsx)(n.td,{children:"Get connector rule"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#get-connector-rule-list",children:(0,o.jsx)(n.strong,{children:"get-connector-rule-list"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Get"})," ",(0,o.jsx)(n.code,{children:"/connector-rules"})]}),(0,o.jsx)(n.td,{children:"List connector rules"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#put-connector-rule",children:(0,o.jsx)(n.strong,{children:"put-connector-rule"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Put"})," ",(0,o.jsx)(n.code,{children:"/connector-rules/{id}"})]}),(0,o.jsx)(n.td,{children:"Update connector rule"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#test-connector-rule",children:(0,o.jsx)(n.strong,{children:"test-connector-rule"})})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"Post"})," ",(0,o.jsx)(n.code,{children:"/connector-rules/validate"})]}),(0,o.jsx)(n.td,{children:"Validate connector rule"})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"create-connector-rule",children:"create-connector-rule"}),"\n",(0,o.jsx)(n.p,{children:"Create connector rule\nCreate a connector rule from the available types."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/create-connector-rule",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiCreateConnectorRuleRequest struct via the builder pattern"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"connectorRuleCreateRequest"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"../models/connector-rule-create-request",children:(0,o.jsx)(n.strong,{children:"ConnectorRuleCreateRequest"})})}),(0,o.jsx)(n.td,{children:"Connector rule to create."}),(0,o.jsx)(n.td,{})]})})]}),"\n",(0,o.jsx)(n.h3,{id:"return-type",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"../models/connector-rule-response",children:(0,o.jsx)(n.strong,{children:"ConnectorRuleResponse"})})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    v2025 "github.com/sailpoint-oss/golang-sdk/v2/api_v2025"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    connectorrulecreaterequest := []byte(`{\n          "sourceCode" : {\n            "version" : "1.0",\n            "script" : "return \\"Mr. \\" + firstName;"\n          },\n          "signature" : {\n            "output" : {\n              "name" : "firstName",\n              "description" : "the first name of the identity",\n              "type" : "String"\n            },\n            "input" : [ {\n              "name" : "firstName",\n              "description" : "the first name of the identity",\n              "type" : "String"\n            }, {\n              "name" : "firstName",\n              "description" : "the first name of the identity",\n              "type" : "String"\n            } ]\n          },\n          "name" : "WebServiceBeforeOperationRule",\n          "description" : "This rule does that",\n          "attributes" : { },\n          "type" : "BuildMap"\n        }`) // ConnectorRuleCreateRequest | Connector rule to create.\n\n    var connectorRuleCreateRequest v2025.ConnectorRuleCreateRequest\n    if err := json.Unmarshal(connectorrulecreaterequest, &connectorRuleCreateRequest); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorRuleManagementAPI.CreateConnectorRule(context.Background()).ConnectorRuleCreateRequest(connectorRuleCreateRequest).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorRuleManagementAPI.CreateConnectorRule(context.Background()).ConnectorRuleCreateRequest(connectorRuleCreateRequest).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorRuleManagementAPI.CreateConnectorRule``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `CreateConnectorRule`: ConnectorRuleResponse\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorRuleManagementAPI.CreateConnectorRule`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"delete-connector-rule",children:"delete-connector-rule"}),"\n",(0,o.jsx)(n.p,{children:"Delete connector rule\nDelete the connector rule for the given ID."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/delete-connector-rule",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-1",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"id"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"ID of the connector rule to delete."}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-1",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiDeleteConnectorRuleRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsx)(n.h3,{id:"return-type-1",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:"(empty response body)"}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-1",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | ID of the connector rule to delete. # string | ID of the connector rule to delete.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    r, err := apiClient.V2025.ConnectorRuleManagementAPI.DeleteConnectorRule(context.Background(), id).Execute()\n	  //r, err := apiClient.V2025.ConnectorRuleManagementAPI.DeleteConnectorRule(context.Background(), id).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorRuleManagementAPI.DeleteConnectorRule``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    \n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"get-connector-rule",children:"get-connector-rule"}),"\n",(0,o.jsx)(n.p,{children:"Get connector rule\nGet a connector rule by ID."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/get-connector-rule",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-2",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"id"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"ID of the connector rule to get."}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-2",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiGetConnectorRuleRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsx)(n.h3,{id:"return-type-2",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"../models/connector-rule-response",children:(0,o.jsx)(n.strong,{children:"ConnectorRuleResponse"})})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-2",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-2",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | ID of the connector rule to get. # string | ID of the connector rule to get.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorRuleManagementAPI.GetConnectorRule(context.Background(), id).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorRuleManagementAPI.GetConnectorRule(context.Background(), id).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorRuleManagementAPI.GetConnectorRule``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetConnectorRule`: ConnectorRuleResponse\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorRuleManagementAPI.GetConnectorRule`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"get-connector-rule-list",children:"get-connector-rule-list"}),"\n",(0,o.jsx)(n.p,{children:"List connector rules\nList existing connector rules."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/get-connector-rule-list",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-3",children:"Path Parameters"}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-3",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiGetConnectorRuleListRequest struct via the builder pattern"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"limit"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"int32"})}),(0,o.jsxs)(n.td,{children:["Note that for this API the maximum value for limit is 50. See ",(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,o.jsx)(n.td,{children:"[default to 50]"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"offset"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"int32"})}),(0,o.jsxs)(n.td,{children:["Offset into the full result set. Usually specified with ",(0,o.jsx)(n.em,{children:"limit"})," to paginate through the results. See ",(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,o.jsx)(n.td,{children:"[default to 0]"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"count"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"bool"})}),(0,o.jsxs)(n.td,{children:["If ",(0,o.jsx)(n.em,{children:"true"})," it will populate the ",(0,o.jsx)(n.em,{children:"X-Total-Count"})," response header with the number of results that would be returned if ",(0,o.jsx)(n.em,{children:"limit"})," and ",(0,o.jsx)(n.em,{children:"offset"})," were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send ",(0,o.jsx)(n.strong,{children:"count=true"})," if that value will not be used.  See ",(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,o.jsx)(n.td,{children:"[default to false]"})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"return-type-3",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"../models/connector-rule-response",children:(0,o.jsx)(n.strong,{children:"[]ConnectorRuleResponse"})})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-3",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-3",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    limit := 50 // int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50) # int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50)\n    offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)\n    count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorRuleManagementAPI.GetConnectorRuleList(context.Background()).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorRuleManagementAPI.GetConnectorRuleList(context.Background()).Limit(limit).Offset(offset).Count(count).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorRuleManagementAPI.GetConnectorRuleList``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetConnectorRuleList`: []ConnectorRuleResponse\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorRuleManagementAPI.GetConnectorRuleList`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"put-connector-rule",children:"put-connector-rule"}),"\n",(0,o.jsxs)(n.p,{children:["Update connector rule\nUpdate an existing connector rule with the one provided in the request body. These fields are immutable: ",(0,o.jsx)(n.code,{children:"id"}),", ",(0,o.jsx)(n.code,{children:"name"}),", ",(0,o.jsx)(n.code,{children:"type"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/put-connector-rule",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-4",children:"Path Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"ctx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"context.Context"})}),(0,o.jsx)(n.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"id"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"string"})}),(0,o.jsx)(n.td,{children:"ID of the connector rule to update."}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-4",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiPutConnectorRuleRequest struct via the builder pattern"}),"\n",(0,o.jsx)(n.table,{children:(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"connectorRuleUpdateRequest"})," | ",(0,o.jsx)(n.a,{href:"../models/connector-rule-update-request",children:(0,o.jsx)(n.strong,{children:"ConnectorRuleUpdateRequest"})})," | Connector rule with updated data. |"]}),"\n",(0,o.jsx)(n.h3,{id:"return-type-4",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"../models/connector-rule-response",children:(0,o.jsx)(n.strong,{children:"ConnectorRuleResponse"})})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-4",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-4",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | ID of the connector rule to update. # string | ID of the connector rule to update.\n    connectorruleupdaterequest := []byte(`{\n          "sourceCode" : {\n            "version" : "1.0",\n            "script" : "return \\"Mr. \\" + firstName;"\n          },\n          "signature" : {\n            "output" : {\n              "name" : "firstName",\n              "description" : "the first name of the identity",\n              "type" : "String"\n            },\n            "input" : [ {\n              "name" : "firstName",\n              "description" : "the first name of the identity",\n              "type" : "String"\n            }, {\n              "name" : "firstName",\n              "description" : "the first name of the identity",\n              "type" : "String"\n            } ]\n          },\n          "name" : "WebServiceBeforeOperationRule",\n          "description" : "This rule does that",\n          "attributes" : { },\n          "id" : "8113d48c0b914f17b4c6072d4dcb9dfe",\n          "type" : "BuildMap"\n        }`) // ConnectorRuleUpdateRequest | Connector rule with updated data. (optional)\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorRuleManagementAPI.PutConnectorRule(context.Background(), id).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorRuleManagementAPI.PutConnectorRule(context.Background(), id).ConnectorRuleUpdateRequest(connectorRuleUpdateRequest).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorRuleManagementAPI.PutConnectorRule``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `PutConnectorRule`: ConnectorRuleResponse\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorRuleManagementAPI.PutConnectorRule`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,o.jsx)(n.h2,{id:"test-connector-rule",children:"test-connector-rule"}),"\n",(0,o.jsx)(n.p,{children:"Validate connector rule\nDetect issues within the connector rule's code to fix and list them."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/v2025/test-connector-rule",children:"API Spec"})}),"\n",(0,o.jsx)(n.h3,{id:"path-parameters-5",children:"Path Parameters"}),"\n",(0,o.jsx)(n.h3,{id:"other-parameters-5",children:"Other Parameters"}),"\n",(0,o.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiTestConnectorRuleRequest struct via the builder pattern"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Notes"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"sourceCode"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"../models/source-code",children:(0,o.jsx)(n.strong,{children:"SourceCode"})})}),(0,o.jsx)(n.td,{children:"Code to validate."}),(0,o.jsx)(n.td,{})]})})]}),"\n",(0,o.jsx)(n.h3,{id:"return-type-5",children:"Return type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"../models/connector-rule-validation-response",children:(0,o.jsx)(n.strong,{children:"ConnectorRuleValidationResponse"})})}),"\n",(0,o.jsx)(n.h3,{id:"http-request-headers-5",children:"HTTP request headers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-5",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    v2025 "github.com/sailpoint-oss/golang-sdk/v2/api_v2025"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    sourcecode := []byte(`{\n          "version" : "1.0",\n          "script" : "return \\"Mr. \\" + firstName;"\n        }`) // SourceCode | Code to validate.\n\n    var sourceCode v2025.SourceCode\n    if err := json.Unmarshal(sourcecode, &sourceCode); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V2025.ConnectorRuleManagementAPI.TestConnectorRule(context.Background()).SourceCode(sourceCode).Execute()\n	  //resp, r, err := apiClient.V2025.ConnectorRuleManagementAPI.TestConnectorRule(context.Background()).SourceCode(sourceCode).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `ConnectorRuleManagementAPI.TestConnectorRule``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `TestConnectorRule`: ConnectorRuleValidationResponse\n    fmt.Fprintf(os.Stdout, "Response from `ConnectorRuleManagementAPI.TestConnectorRule`: %v\\n", resp)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#",children:"[Back to top]"})})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:()=>i,a:()=>l});var r=t(667294);let o={},s=r.createContext(o);function l(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(s.Provider,{value:n},e.children)}},973420:function(e){e.exports=JSON.parse('{"id":"tools/sdk/go/Reference/V2025/Methods/v2025-connector-rule-management","title":"ConnectorRuleManagement","description":"Use this API to implement connector rule management functionality.","source":"@site/docs/tools/sdk/go/Reference/V2025/Methods/ConnectorRuleManagementAPI.md","sourceDirName":"tools/sdk/go/Reference/V2025/Methods","slug":"/tools/sdk/go/v2025/methods/connector-rule-management","permalink":"/docs/tools/sdk/go/v2025/methods/connector-rule-management","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/go/Reference/V2025/Methods/ConnectorRuleManagementAPI.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"ConnectorRuleManagement","permalink":"/docs/tags/connector-rule-management"},{"inline":true,"label":"V2025ConnectorRuleManagement","permalink":"/docs/tags/v-2025-connector-rule-management"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1747667177000,"frontMatter":{"id":"v2025-connector-rule-management","title":"ConnectorRuleManagement","pagination_label":"ConnectorRuleManagement","sidebar_label":"ConnectorRuleManagement","sidebar_class_name":"gosdk","keywords":["go","Golang","sdk","ConnectorRuleManagement","V2025ConnectorRuleManagement"],"slug":"/tools/sdk/go/v2025/methods/connector-rule-management","tags":["SDK","Software Development Kit","ConnectorRuleManagement","V2025ConnectorRuleManagement"]},"sidebar":"openApiSidebar","previous":{"title":"ConnectorCustomizers","permalink":"/docs/tools/sdk/go/v2025/methods/connector-customizers"},"next":{"title":"Connectors","permalink":"/docs/tools/sdk/go/v2025/methods/connectors"}}')}}]);