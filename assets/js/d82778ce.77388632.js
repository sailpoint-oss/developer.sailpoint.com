"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["350238"],{736845:function(e,t,n){n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>c,toc:()=>s});var c=n(758015),o=n(785893),i=n(250065);let d={id:"v2025-account-uncorrelated-account",title:"AccountUncorrelatedAccount",pagination_label:"AccountUncorrelatedAccount",sidebar_label:"AccountUncorrelatedAccount",sidebar_class_name:"gosdk",keywords:["go","Golang","sdk","AccountUncorrelatedAccount","V2025AccountUncorrelatedAccount"],slug:"/tools/sdk/go/v2025/models/account-uncorrelated-account",tags:["SDK","Software Development Kit","AccountUncorrelatedAccount","V2025AccountUncorrelatedAccount"]},r="AccountUncorrelatedAccount",l={},s=[{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"NewAccountUncorrelatedAccount",id:"newaccountuncorrelatedaccount",level:3},{value:"NewAccountUncorrelatedAccountWithDefaults",id:"newaccountuncorrelatedaccountwithdefaults",level:3},{value:"GetType",id:"gettype",level:3},{value:"GetTypeOk",id:"gettypeok",level:3},{value:"SetType",id:"settype",level:3},{value:"GetId",id:"getid",level:3},{value:"GetIdOk",id:"getidok",level:3},{value:"SetId",id:"setid",level:3},{value:"GetName",id:"getname",level:3},{value:"GetNameOk",id:"getnameok",level:3},{value:"SetName",id:"setname",level:3},{value:"GetNativeIdentity",id:"getnativeidentity",level:3},{value:"GetNativeIdentityOk",id:"getnativeidentityok",level:3},{value:"SetNativeIdentity",id:"setnativeidentity",level:3},{value:"GetUuid",id:"getuuid",level:3},{value:"GetUuidOk",id:"getuuidok",level:3},{value:"SetUuid",id:"setuuid",level:3},{value:"HasUuid",id:"hasuuid",level:3},{value:"SetUuidNil",id:"setuuidnil",level:3},{value:"UnsetUuid",id:"unsetuuid",level:3}];function a(e){let t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"accountuncorrelatedaccount",children:"AccountUncorrelatedAccount"})}),"\n",(0,o.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Name"}),(0,o.jsx)(t.th,{children:"Type"}),(0,o.jsx)(t.th,{children:"Description"}),(0,o.jsx)(t.th,{children:"Notes"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.strong,{children:"Type"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.strong,{children:"map[string]interface"})}),(0,o.jsx)(t.td,{children:"Uncorrelated account's DTO type."}),(0,o.jsx)(t.td,{})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.strong,{children:"Id"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.strong,{children:"string"})}),(0,o.jsx)(t.td,{children:"Uncorrelated account's ID."}),(0,o.jsx)(t.td,{})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.strong,{children:"Name"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.strong,{children:"string"})}),(0,o.jsx)(t.td,{children:"Uncorrelated account's display name."}),(0,o.jsx)(t.td,{})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.strong,{children:"NativeIdentity"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.strong,{children:"string"})}),(0,o.jsx)(t.td,{children:"Unique ID of the account on the source."}),(0,o.jsx)(t.td,{})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.strong,{children:"Uuid"})}),(0,o.jsxs)(t.td,{children:["Pointer to ",(0,o.jsx)(t.strong,{children:"NullableString"})]}),(0,o.jsx)(t.td,{children:"The source's unique identifier for the account. UUID is generated by the source system."}),(0,o.jsx)(t.td,{children:"[optional]"})]})]})]}),"\n",(0,o.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,o.jsx)(t.h3,{id:"newaccountuncorrelatedaccount",children:"NewAccountUncorrelatedAccount"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func NewAccountUncorrelatedAccount(type_ map[string]interface{}, id string, name string, nativeIdentity string, ) *AccountUncorrelatedAccount"})}),"\n",(0,o.jsx)(t.p,{children:"NewAccountUncorrelatedAccount instantiates a new AccountUncorrelatedAccount object\nThis constructor will assign default values to properties that have it defined,\nand makes sure properties required by API are set, but the set of arguments\nwill change when the set of required properties is changed"}),"\n",(0,o.jsx)(t.h3,{id:"newaccountuncorrelatedaccountwithdefaults",children:"NewAccountUncorrelatedAccountWithDefaults"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func NewAccountUncorrelatedAccountWithDefaults() *AccountUncorrelatedAccount"})}),"\n",(0,o.jsx)(t.p,{children:"NewAccountUncorrelatedAccountWithDefaults instantiates a new AccountUncorrelatedAccount object\nThis constructor will only assign default values to properties that have it defined,\nbut it doesn't guarantee that properties required by API are set"}),"\n",(0,o.jsx)(t.h3,{id:"gettype",children:"GetType"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) GetType() map[string]interface{}"})}),"\n",(0,o.jsx)(t.p,{children:"GetType returns the Type field if non-nil, zero value otherwise."}),"\n",(0,o.jsx)(t.h3,{id:"gettypeok",children:"GetTypeOk"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) GetTypeOk() (*map[string]interface{}, bool)"})}),"\n",(0,o.jsx)(t.p,{children:"GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,o.jsx)(t.h3,{id:"settype",children:"SetType"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) SetType(v map[string]interface{})"})}),"\n",(0,o.jsx)(t.p,{children:"SetType sets Type field to given value."}),"\n",(0,o.jsx)(t.h3,{id:"getid",children:"GetId"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) GetId() string"})}),"\n",(0,o.jsx)(t.p,{children:"GetId returns the Id field if non-nil, zero value otherwise."}),"\n",(0,o.jsx)(t.h3,{id:"getidok",children:"GetIdOk"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) GetIdOk() (*string, bool)"})}),"\n",(0,o.jsx)(t.p,{children:"GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,o.jsx)(t.h3,{id:"setid",children:"SetId"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) SetId(v string)"})}),"\n",(0,o.jsx)(t.p,{children:"SetId sets Id field to given value."}),"\n",(0,o.jsx)(t.h3,{id:"getname",children:"GetName"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) GetName() string"})}),"\n",(0,o.jsx)(t.p,{children:"GetName returns the Name field if non-nil, zero value otherwise."}),"\n",(0,o.jsx)(t.h3,{id:"getnameok",children:"GetNameOk"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) GetNameOk() (*string, bool)"})}),"\n",(0,o.jsx)(t.p,{children:"GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,o.jsx)(t.h3,{id:"setname",children:"SetName"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) SetName(v string)"})}),"\n",(0,o.jsx)(t.p,{children:"SetName sets Name field to given value."}),"\n",(0,o.jsx)(t.h3,{id:"getnativeidentity",children:"GetNativeIdentity"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) GetNativeIdentity() string"})}),"\n",(0,o.jsx)(t.p,{children:"GetNativeIdentity returns the NativeIdentity field if non-nil, zero value otherwise."}),"\n",(0,o.jsx)(t.h3,{id:"getnativeidentityok",children:"GetNativeIdentityOk"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) GetNativeIdentityOk() (*string, bool)"})}),"\n",(0,o.jsx)(t.p,{children:"GetNativeIdentityOk returns a tuple with the NativeIdentity field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,o.jsx)(t.h3,{id:"setnativeidentity",children:"SetNativeIdentity"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) SetNativeIdentity(v string)"})}),"\n",(0,o.jsx)(t.p,{children:"SetNativeIdentity sets NativeIdentity field to given value."}),"\n",(0,o.jsx)(t.h3,{id:"getuuid",children:"GetUuid"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) GetUuid() string"})}),"\n",(0,o.jsx)(t.p,{children:"GetUuid returns the Uuid field if non-nil, zero value otherwise."}),"\n",(0,o.jsx)(t.h3,{id:"getuuidok",children:"GetUuidOk"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) GetUuidOk() (*string, bool)"})}),"\n",(0,o.jsx)(t.p,{children:"GetUuidOk returns a tuple with the Uuid field if it's non-nil, zero value otherwise\nand a boolean to check if the value has been set."}),"\n",(0,o.jsx)(t.h3,{id:"setuuid",children:"SetUuid"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) SetUuid(v string)"})}),"\n",(0,o.jsx)(t.p,{children:"SetUuid sets Uuid field to given value."}),"\n",(0,o.jsx)(t.h3,{id:"hasuuid",children:"HasUuid"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) HasUuid() bool"})}),"\n",(0,o.jsx)(t.p,{children:"HasUuid returns a boolean if a field has been set."}),"\n",(0,o.jsx)(t.h3,{id:"setuuidnil",children:"SetUuidNil"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) SetUuidNil(b bool)"})}),"\n",(0,o.jsx)(t.p,{children:"SetUuidNil sets the value for Uuid to be an explicit nil"}),"\n",(0,o.jsx)(t.h3,{id:"unsetuuid",children:"UnsetUuid"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"func (o *AccountUncorrelatedAccount) UnsetUuid()"})}),"\n",(0,o.jsx)(t.p,{children:"UnsetUuid ensures that no value is present for Uuid, not even an explicit nil"})]})}function u(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},250065:function(e,t,n){n.d(t,{Z:()=>r,a:()=>d});var c=n(667294);let o={},i=c.createContext(o);function d(e){let t=c.useContext(i);return c.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),c.createElement(i.Provider,{value:t},e.children)}},758015:function(e){e.exports=JSON.parse('{"id":"tools/sdk/go/Reference/V2025/Models/v2025-account-uncorrelated-account","title":"AccountUncorrelatedAccount","description":"Properties","source":"@site/docs/tools/sdk/go/Reference/V2025/Models/AccountUncorrelatedAccount.md","sourceDirName":"tools/sdk/go/Reference/V2025/Models","slug":"/tools/sdk/go/v2025/models/account-uncorrelated-account","permalink":"/docs/tools/sdk/go/v2025/models/account-uncorrelated-account","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/go/Reference/V2025/Models/AccountUncorrelatedAccount.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"AccountUncorrelatedAccount","permalink":"/docs/tags/account-uncorrelated-account"},{"inline":true,"label":"V2025AccountUncorrelatedAccount","permalink":"/docs/tags/v-2025-account-uncorrelated-account"}],"version":"current","lastUpdatedBy":"darrell-thobe-sp","lastUpdatedAt":1743641987000,"frontMatter":{"id":"v2025-account-uncorrelated-account","title":"AccountUncorrelatedAccount","pagination_label":"AccountUncorrelatedAccount","sidebar_label":"AccountUncorrelatedAccount","sidebar_class_name":"gosdk","keywords":["go","Golang","sdk","AccountUncorrelatedAccount","V2025AccountUncorrelatedAccount"],"slug":"/tools/sdk/go/v2025/models/account-uncorrelated-account","tags":["SDK","Software Development Kit","AccountUncorrelatedAccount","V2025AccountUncorrelatedAccount"]},"sidebar":"openApiSidebar","previous":{"title":"AccountUncorrelated","permalink":"/docs/tools/sdk/go/v2025/models/account-uncorrelated"},"next":{"title":"AccountUncorrelatedIdentity","permalink":"/docs/tools/sdk/go/v2025/models/account-uncorrelated-identity"}}')}}]);