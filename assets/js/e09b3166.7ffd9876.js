"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["364862"],{208731:function(e,t,i){i.r(t),i.d(t,{assets:()=>y,contentTitle:()=>f,default:()=>v,frontMatter:()=>h,metadata:()=>a,toc:()=>g});var a=i(191662),s=i(785893),r=i(250065),n=i(247936),o=i(444039),l=i.n(o),c=i(140218),p=i.n(c),d=i(769141),m=i.n(d);i(261142),i(292415);var u=i(172642);let h={id:"compare-identity-snapshots-access-type",sidebar_label:"Gets a list of differences of specific accesstype for the given identity between 2 snapshots",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"docs/api/v2025/identity-security-cloud-v-2025-api",custom_edit_url:"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to 'Gets a list of differences of specific accesstype for the given identity between 2 snapshots' (compare-identity-snapshots-access-type)"},f=void 0,y={},g=[];function x(e){let t={admonition:"admonition",code:"code",p:"p",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(u.default,{as:"h1",className:"openapi__heading",children:"Gets a list of differences of specific accesstype for the given identity between 2 snapshots"}),"\n",(0,s.jsx)(n.Z,{method:"get",path:"/historical-identities/{id}/compare/{access-type}",context:"endpoint"}),"\n",(0,s.jsx)(t.admonition,{title:"experimental",type:"warning",children:(0,s.jsxs)(t.p,{children:["This API is currently in an experimental state. The API is subject to change based on feedback and further testing. You must include the X-SailPoint-Experimental header and set it to ",(0,s.jsx)(t.code,{children:"true"})," to use this endpoint."]})}),"\n",(0,s.jsxs)(t.p,{children:["This method gets a list of differences of specific accessType for the given identity between 2 snapshots Requires authorization scope of 'idn:identity-history",":read","'"]}),"\n",(0,s.jsx)(u.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(l(),{parameters:[{in:"path",name:"id",schema:{type:"string"},required:!0,"x-sailpoint-resource-operation-id":"listHistoricalIdentities",description:"The identity id",example:"8c190e6787aa4ed9a90bd9d5344523fb"},{in:"path",name:"accessType",schema:{type:"string",enum:["accessProfile","account","app","entitlement","role"]},required:!0,description:"The specific type which needs to be compared",example:"role"},{in:"query",name:"access-associated",schema:{type:"boolean"},description:"Indicates if added or removed access needs to be returned. true - added, false - removed, null - both added & removed",example:"2007-03-01T13:00:00Z"},{in:"query",name:"snapshot1",schema:{type:"string"},description:"The snapshot 1 of identity",example:"2008-03-01T13:00:00Z"},{in:"query",name:"snapshot2",schema:{type:"string"},description:"The snapshot 2 of identity",example:"2009-03-01T13:00:00Z"},{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/parameters/limit.yaml",in:"query",name:"limit",description:"Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.",required:!1,example:250,schema:{type:"integer",format:"int32",minimum:0,maximum:250,default:250}},{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/parameters/offset.yaml",in:"query",name:"offset",description:"Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.",required:!1,example:0,schema:{type:"integer",format:"int32",minimum:0,default:0}},{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/parameters/count.yaml",in:"query",name:"count",description:"If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.",required:!1,example:!0,schema:{type:"boolean",default:!1}},{name:"X-SailPoint-Experimental",in:"header",description:"Use this header to enable this experimental API.",example:!0,schema:{type:"string",default:!0},required:!0}]}),"\n",(0,s.jsx)(p(),{title:"Body",body:void 0}),"\n",(0,s.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"A list of events for the identity",content:{"application/json":{schema:{type:"array",items:{type:"object",title:"Access Item Diff",properties:{id:{type:"string",description:"the id of the access item"},eventType:{type:"string",enum:["ADD","REMOVE"]},displayName:{type:"string",description:"the display name of the access item"},sourceName:{type:"string",description:"the source name of the access item"}},example:{id:"2c91808c7726345b017726a0a2fb013b",eventType:"ADD",displayName:"Test",sourceName:"Source"}}}}}},400:{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/responses/400.yaml",description:"Client Error - Returned if the request body is invalid.",content:{"application/json":{schema:{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/schemas/ErrorResponseDto.yaml",type:"object",title:"Error Response Dto",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",title:"Error Message Dto",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}}}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/schemas/ErrorMessageDto.yaml",type:"object",title:"Error Message Dto",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}}}}}}}}},401:{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/responses/401.yaml",description:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",content:{"application/json":{schema:{type:"object",properties:{error:{description:"A message describing the error",example:"JWT validation failed: JWT is expired"}}}}}},403:{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/responses/403.yaml",description:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",content:{"application/json":{schema:{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/schemas/ErrorResponseDto.yaml",type:"object",title:"Error Response Dto",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",title:"Error Message Dto",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}}}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/schemas/ErrorMessageDto.yaml",type:"object",title:"Error Message Dto",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}}}}}},examples:{403:{summary:"An example of a 403 response object",value:{detailCode:"403 Forbidden",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"The server understood the request but refuses to authorize it."}]}}}}}},404:{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/responses/404.yaml",description:"Not Found - returned if the request URL refers to a resource or object that does not exist",content:{"application/json":{schema:{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/schemas/ErrorResponseDto.yaml",type:"object",title:"Error Response Dto",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",title:"Error Message Dto",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}}}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/schemas/ErrorMessageDto.yaml",type:"object",title:"Error Message Dto",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}}}}}},examples:{404:{summary:"An example of a 404 response object",value:{detailCode:"404 Not found",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"The server did not find a current representation for the target resource."}]}}}}}},500:{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/responses/500.yaml",description:"Internal Server Error - Returned if there is an unexpected error.",content:{"application/json":{schema:{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/schemas/ErrorResponseDto.yaml",type:"object",title:"Error Response Dto",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",title:"Error Message Dto",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}}}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{"x-miro":"/home/runner/work/developer.sailpoint.com/developer.sailpoint.com/static/api-specs/idn/v2025/schemas/ErrorMessageDto.yaml",type:"object",title:"Error Message Dto",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}}}}}},examples:{500:{summary:"An example of a 500 response object",value:{detailCode:"500.0 Internal Fault",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"An internal fault occurred."}]}}}}}}}})]})}function v(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},627777:function(e,t,i){i.r(t),i.d(t,{default:()=>r,setAccept:()=>s,slice:()=>a});let a=(0,i(829829).createSlice)({name:"accept",initialState:{},reducers:{setAccept:(e,t)=>{e.value=t.payload}}}),{setAccept:s}=a.actions,r=a.reducer},371780:function(e,t,i){i.r(t),i.d(t,{default:()=>r,setContentType:()=>s,slice:()=>a});let a=(0,i(829829).createSlice)({name:"contentType",initialState:{},reducers:{setContentType:(e,t)=>{e.value=t.payload}}}),{setContentType:s}=a.actions,r=a.reducer},247936:function(e,t,i){i.d(t,{Z:()=>n});var a=i(785893);i(667294);var s=i(570144),r=i(974968);let n=function(e){let{method:t,path:i,context:n}=e,o=(0,r.useTypedSelector)(e=>e.server.value),l="";return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("pre",{className:"openapi__method-endpoint",children:[(0,a.jsx)("span",{className:"badge badge--"+function(e){switch(e.toLowerCase()){case"get":return"primary";case"post":return"success";case"delete":return"danger";case"put":return"info";case"patch":return"warning";case"head":case"event":return"secondary";default:return}}(t),children:"event"===t?"Webhook":t.toUpperCase()})," ","event"!==t&&(0,a.jsxs)("h2",{className:"openapi__method-endpoint-path",children:["callback"===n?"":(o&&o.variables&&(l=o.url.replace(/\/$/,""),Object.keys(o.variables).forEach(e=>{l=l.replace(`{${e}}`,o.variables?.[e].default??"")})),(0,a.jsx)(s.default,{children:()=>l.length?l:o&&o.url?o.url:void 0})),`${i.replace(/{([a-z0-9-_]+)}/gi,":$1")}`]})]}),(0,a.jsx)("div",{className:"openapi__divider"})]})}},235719:function(e,t,i){i.r(t),i.d(t,{default:()=>h,guard:()=>p,toString:()=>d});var a=i(785893),s=i(667294),r=i(700937),n=i(862199),o=i.n(n),l=i(292415),c=i(467026);function p(e,t){if(e||0===e){var i;return Array.isArray(i=t(e))?i.filter(e=>void 0!==e).join(""):i??""}return""}function d(e){return"string"==typeof e?e:null!=e?Array.isArray(e)?`[${e.join(", ")}]`:e+"":void 0}function m(e,t){return e.format?e.format:e.allOf?"string"==typeof e.allOf[0]&&e.allOf[0].includes("circular")?e.allOf[0]:"object":e.oneOf||e.anyOf?"object":"object"===e.type||"array"===e.type?e.xml?.name??e.type:e.title??e.type}let u=e=>e?.length?`| Enum Value | Description |
| ---- | ----- |
${e.map(e=>`| ${e[0]} | ${e[1]} | `.replaceAll("\n","<br/>")).join("\n")}
    `:"",h=function(e){let t,{param:i,...n}=e,{description:h,example:f,examples:y,name:g,required:x,deprecated:v,enumDescriptions:b}=i,L=i.schema;L&&L?.type||(L={type:"any"}),L&&(t=L.items?L.items.default:L.default);let w=p(L,e=>{var t;return(0,a.jsxs)("span",{className:"openapi-schema__type",children:[" ",e.items?m(e.items,void 0)+"[]":m(e,t)??""]})}),E=p(x,()=>(0,a.jsx)("span",{className:"openapi-schema__required",children:"required"})),j=p(v,()=>(0,a.jsx)("span",{className:"openapi-schema__deprecated",children:"deprecated"})),U=p(function e(t){if(!t)return;if(t.items&&void 0===t.minItems&&void 0===t.maxItems)return e(t.items);let i=[];if(t.items&&t.items.enum&&t.items.enum&&i.push(`[${t.items.enum.map(e=>`\`${e}\``).join(", ")}]`),t.minLength||t.maxLength){let e,a,s="";t.minLength&&t.minLength>1&&(e=`\`>= ${t.minLength} characters\``),t.minLength&&1===t.minLength&&(e="`non-empty`"),t.maxLength&&(a=`\`<= ${t.maxLength} characters\``),e&&!a&&(s+=e),a&&!e&&(s+=a),e&&a&&(s+=`${e} and ${a}`),i.push(s)}if(t.minimum||t.maximum||"number"==typeof t.exclusiveMinimum||"number"==typeof t.exclusiveMaximum){let e,a,s="";"number"==typeof t.exclusiveMinimum?e=`\`> ${t.exclusiveMinimum}\``:t.minimum&&!t.exclusiveMinimum?e=`\`>= ${t.minimum}\``:t.minimum&&!0===t.exclusiveMinimum&&(e=`\`> ${t.minimum}\``),"number"==typeof t.exclusiveMaximum?a=`\`< ${t.exclusiveMaximum}\``:t.maximum&&!t.exclusiveMaximum?a=`\`<= ${t.maximum}\``:t.maximum&&!0===t.exclusiveMaximum&&(a=`\`< ${t.maximum}\``),e&&!a&&(s+=e),a&&!e&&(s+=a),e&&a&&(s+=`${e} and ${a}`),i.push(s)}if(t.pattern&&i.push(`Value must match regular expression \`${t.pattern}\``),t.mapping){let e=Object.keys(t.mapping);i.push(`[${e.map(e=>`\`${e}\``).join(", ")}]`)}if(t.enum&&i.push(`[${t.enum.map(e=>`\`${e}\``).join(", ")}]`),t.minItems&&i.push(`\`>= ${t.minItems}\``),t.maxItems&&i.push(`\`<= ${t.maxItems}\``),0!==i.length)return"**Possible values:** "+i.join(", ")}(L),e=>(0,a.jsx)(r.default,{children:e})),A=p(h,e=>(0,a.jsx)(r.default,{children:e})),T=p(u(b),e=>(0,a.jsx)("div",{style:{marginTop:".5rem"},children:(0,a.jsx)(r.default,{children:e})})),k=p(d(f),e=>(0,a.jsxs)("div",{children:[(0,a.jsx)("strong",{children:"Example: "}),e]})),q=p(y,e=>{let t=Object.entries(e);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("strong",{children:"Examples:"}),(0,a.jsx)(o(),{children:t.map(e=>{let[t,i]=e;return(0,a.jsxs)(l.default,{value:t,label:t,children:[i.summary&&(0,a.jsx)("p",{children:i.summary}),i.description&&(0,a.jsxs)("p",{children:[(0,a.jsx)("strong",{children:"Description: "}),(0,a.jsx)("span",{children:i.description})]}),(0,a.jsxs)("p",{children:[(0,a.jsx)("strong",{children:"Example: "}),(0,a.jsx)("code",{children:i.value})]})]})})})]})});function D(e){return e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}async function I(e){for(let t of e)try{if((await fetch(t,{method:"HEAD"})).ok)return t}catch(e){console.error(`Error checking URL: ${t}`,e)}return null}function R(e){let{operationId:t}=e,[i,r]=(0,s.useState)(null);if((0,s.useEffect)(()=>{!async function(){let e=[`https://developer.sailpoint.com/docs/api/v2025/${D(t)}`,`https://developer.sailpoint.com/docs/api/v2024/${D(t)}`,`https://developer.sailpoint.com/docs/api/v3/${D(t)}`,`https://developer.sailpoint.com/docs/api/beta/${D(t)}`];r(await I(e))}()},[t]),i)return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("text",{children:"Found in "}),(0,a.jsx)("a",{href:i,id:"operationIdLink",target:"_blank",rel:"noopener noreferrer",style:{color:"var(--ifm-color-primary)"},children:t.replace(/([A-Z])/g," $1").replace(/^./,e=>e.toUpperCase()).trim()})]})}return(0,a.jsxs)("div",{className:"openapi-params__list-item",children:[(0,a.jsxs)("span",{className:"openapi-schema__container",children:[(0,a.jsx)("strong",{className:(0,c.Z)("openapi-schema__property",{"openapi-schema__strikethrough":v}),children:g}),w,(x||v)&&(0,a.jsx)("span",{className:"openapi-schema__divider"}),E,j]}),U,A,T,function(){if(i["x-sailpoint-resource-operation-id"])return(0,a.jsx)(R,{operationId:i["x-sailpoint-resource-operation-id"]})}(),function(){if(void 0!==t)return"string"==typeof t?(0,a.jsxs)("div",{children:[(0,a.jsx)("strong",{children:"Default value: "}),(0,a.jsx)("span",{children:(0,a.jsx)("code",{children:t})})]}):(0,a.jsxs)("div",{children:[(0,a.jsx)("strong",{children:"Default value: "}),(0,a.jsx)("span",{children:(0,a.jsx)("code",{children:JSON.stringify(t)})})]})}(),k,q]})}},191662:function(e){e.exports=JSON.parse('{"id":"api/v2025/compare-identity-snapshots-access-type","title":"compare-identity-snapshots-access-type","description":"<Heading","source":"@site/docs/api/v2025/compare-identity-snapshots-access-type.api.mdx","sourceDirName":"api/v2025","slug":"/api/v2025/compare-identity-snapshots-access-type","permalink":"/docs/api/v2025/compare-identity-snapshots-access-type","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'Gets a list of differences of specific accesstype for the given identity between 2 snapshots\' (compare-identity-snapshots-access-type)","tags":[],"version":"current","lastUpdatedBy":null,"lastUpdatedAt":null,"frontMatter":{"id":"compare-identity-snapshots-access-type","sidebar_label":"Gets a list of differences of specific accesstype for the given identity between 2 snapshots","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"get api-method","info_path":"docs/api/v2025/identity-security-cloud-v-2025-api","custom_edit_url":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'Gets a list of differences of specific accesstype for the given identity between 2 snapshots\' (compare-identity-snapshots-access-type)"},"sidebar":"isc_2025_sidebar","previous":{"title":"Gets a difference of count for each access item types for the given identity between 2 snapshots","permalink":"/docs/api/v2025/compare-identity-snapshots"},"next":{"title":"Identity Profiles","permalink":"/docs/api/v2025/identity-profiles"}}')}}]);