"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["877975"],{340190:function(e,d,n){n.r(d),n.d(d,{assets:()=>t,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var s=n(350207),r=n(785893),l=n(250065);let i={id:"sod-policy-read",title:"SodPolicyRead",pagination_label:"SodPolicyRead",sidebar_label:"SodPolicyRead",sidebar_class_name:"powershellsdk",keywords:["powershell","PowerShell","sdk","SodPolicyRead","SodPolicyRead"],slug:"/tools/sdk/powershell/v3/models/sod-policy-read",tags:["SDK","Software Development Kit","SodPolicyRead","SodPolicyRead"]},o="SodPolicyRead",t={},c=[{value:"Properties",id:"properties",level:2},{value:"Examples",id:"examples",level:2}];function a(e){let d={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d.header,{children:(0,r.jsx)(d.h1,{id:"sodpolicyread",children:"SodPolicyRead"})}),"\n",(0,r.jsx)(d.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"Name"}),(0,r.jsx)(d.th,{children:"Type"}),(0,r.jsx)(d.th,{children:"Description"}),(0,r.jsx)(d.th,{children:"Notes"})]})}),(0,r.jsxs)(d.tbody,{children:[(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"Id"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"String"})}),(0,r.jsx)(d.td,{children:"Policy id"}),(0,r.jsx)(d.td,{children:"[optional] [readonly]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"Name"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"String"})}),(0,r.jsx)(d.td,{children:"Policy Business Name"}),(0,r.jsx)(d.td,{children:"[optional]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"Created"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"System.DateTime"})}),(0,r.jsx)(d.td,{children:"The time when this SOD policy is created."}),(0,r.jsx)(d.td,{children:"[optional] [readonly]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"Modified"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"System.DateTime"})}),(0,r.jsx)(d.td,{children:"The time when this SOD policy is modified."}),(0,r.jsx)(d.td,{children:"[optional] [readonly]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"Description"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"String"})}),(0,r.jsx)(d.td,{children:"Optional description of the SOD policy"}),(0,r.jsx)(d.td,{children:"[optional]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"OwnerRef"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.a,{href:"sod-policy-owner-ref",children:(0,r.jsx)(d.strong,{children:"SodPolicyOwnerRef"})})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"[optional]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"ExternalPolicyReference"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"String"})}),(0,r.jsx)(d.td,{children:"Optional External Policy Reference"}),(0,r.jsx)(d.td,{children:"[optional]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"PolicyQuery"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"String"})}),(0,r.jsx)(d.td,{children:"Search query of the SOD policy"}),(0,r.jsx)(d.td,{children:"[optional]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"CompensatingControls"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"String"})}),(0,r.jsx)(d.td,{children:"Optional compensating controls(Mitigating Controls)"}),(0,r.jsx)(d.td,{children:"[optional]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"CorrectionAdvice"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"String"})}),(0,r.jsx)(d.td,{children:"Optional correction advice"}),(0,r.jsx)(d.td,{children:"[optional]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"State"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.strong,{children:"Enum"}),' [  "ENFORCED",    "NOT_ENFORCED" ]']}),(0,r.jsx)(d.td,{children:"whether the policy is enforced or not"}),(0,r.jsx)(d.td,{children:"[optional]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"Tags"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"[]String"})}),(0,r.jsx)(d.td,{children:"tags for this policy object"}),(0,r.jsx)(d.td,{children:"[optional]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"CreatorId"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"String"})}),(0,r.jsx)(d.td,{children:"Policy's creator ID"}),(0,r.jsx)(d.td,{children:"[optional] [readonly]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"ModifierId"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"String"})}),(0,r.jsx)(d.td,{children:"Policy's modifier ID"}),(0,r.jsx)(d.td,{children:"[optional] [readonly]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"ViolationOwnerAssignmentConfig"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.a,{href:"violation-owner-assignment-config",children:(0,r.jsx)(d.strong,{children:"ViolationOwnerAssignmentConfig"})})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"[optional]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"Scheduled"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"Boolean"})}),(0,r.jsx)(d.td,{children:"defines whether a policy has been scheduled or not"}),(0,r.jsx)(d.td,{children:"[optional] [default to $false]"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"Type"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.strong,{children:"Enum"}),' [  "GENERAL",    "CONFLICTING_ACCESS_BASED" ]']}),(0,r.jsx)(d.td,{children:"whether a policy is query based or conflicting access based"}),(0,r.jsx)(d.td,{children:'[optional] [default to "GENERAL"]'})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.strong,{children:"ConflictingAccessCriteria"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.a,{href:"sod-policy-read-all-of-conflicting-access-criteria",children:(0,r.jsx)(d.strong,{children:"SodPolicyReadAllOfConflictingAccessCriteria"})})}),(0,r.jsx)(d.td,{}),(0,r.jsx)(d.td,{children:"[optional]"})]})]})]}),"\n",(0,r.jsx)(d.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsx)(d.li,{children:"Prepare the resource"}),"\n"]}),"\n",(0,r.jsx)(d.pre,{children:(0,r.jsx)(d.code,{className:"language-powershell",children:'$SodPolicyRead = Initialize-SodPolicyRead  -Id 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde `\n -Name policy-xyz `\n -Created 2020-01-01T00:00Z `\n -Modified 2020-01-01T00:00Z `\n -Description This policy ensures compliance of xyz `\n -OwnerRef null `\n -ExternalPolicyReference XYZ policy `\n -PolicyQuery @access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdg) AND @access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdf) `\n -CompensatingControls Have a manager review the transaction decisions for their "out of compliance" employee `\n -CorrectionAdvice Based on the role of the employee, managers should remove access that is not required for their job function. `\n -State ENFORCED `\n -Tags [TAG1, TAG2] `\n -CreatorId 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde `\n -ModifierId 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde `\n -ViolationOwnerAssignmentConfig null `\n -Scheduled true `\n -Type GENERAL `\n -ConflictingAccessCriteria null\n'})}),"\n",(0,r.jsxs)(d.ul,{children:["\n",(0,r.jsx)(d.li,{children:"Convert the resource to JSON"}),"\n"]}),"\n",(0,r.jsx)(d.pre,{children:(0,r.jsx)(d.code,{className:"language-powershell",children:"$SodPolicyRead | ConvertTo-JSON\n"})}),"\n",(0,r.jsx)(d.p,{children:(0,r.jsx)(d.a,{href:"#",children:"[Back to top]"})})]})}function h(e={}){let{wrapper:d}={...(0,l.a)(),...e.components};return d?(0,r.jsx)(d,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},250065:function(e,d,n){n.d(d,{Z:()=>o,a:()=>i});var s=n(667294);let r={},l=s.createContext(r);function i(e){let d=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(d):{...d,...e}},[d,e])}function o(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(l.Provider,{value:d},e.children)}},350207:function(e){e.exports=JSON.parse('{"id":"tools/sdk/powershell/Reference/V3/Models/sod-policy-read","title":"SodPolicyRead","description":"Properties","source":"@site/docs/tools/sdk/powershell/Reference/V3/Models/SodPolicyRead.md","sourceDirName":"tools/sdk/powershell/Reference/V3/Models","slug":"/tools/sdk/powershell/v3/models/sod-policy-read","permalink":"/docs/tools/sdk/powershell/v3/models/sod-policy-read","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/powershell/Reference/V3/Models/SodPolicyRead.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"SodPolicyRead","permalink":"/docs/tags/sod-policy-read"},{"inline":true,"label":"SodPolicyRead","permalink":"/docs/tags/sod-policy-read"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1751054407000,"frontMatter":{"id":"sod-policy-read","title":"SodPolicyRead","pagination_label":"SodPolicyRead","sidebar_label":"SodPolicyRead","sidebar_class_name":"powershellsdk","keywords":["powershell","PowerShell","sdk","SodPolicyRead","SodPolicyRead"],"slug":"/tools/sdk/powershell/v3/models/sod-policy-read","tags":["SDK","Software Development Kit","SodPolicyRead","SodPolicyRead"]},"sidebar":"openApiSidebar","previous":{"title":"SodPolicyOwnerRef","permalink":"/docs/tools/sdk/powershell/v3/models/sod-policy-owner-ref"},"next":{"title":"SodPolicyReadAllOfConflictingAccessCriteria","permalink":"/docs/tools/sdk/powershell/v3/models/sod-policy-read-all-of-conflicting-access-criteria"}}')}}]);