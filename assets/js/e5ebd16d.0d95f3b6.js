"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["55615"],{229842:function(e,i,t){t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>d,metadata:()=>n,toc:()=>c});var n=t(581496),s=t(785893),r=t(250065);let d={id:"public-identities-config",title:"Public_Identities_Config",pagination_label:"Public_Identities_Config",sidebar_label:"Public_Identities_Config",sidebar_class_name:"pythonsdk",keywords:["python","Python","sdk","Public_Identities_Config","Public_Identities_Config"],slug:"/tools/sdk/python/v3/methods/public-identities-config",tags:["SDK","Software Development Kit","Public_Identities_Config","Public_Identities_Config"]},o="sailpoint.v3.PublicIdentitiesConfigApi",l={},c=[{value:"get-public-identity-config",id:"get-public-identity-config",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"Responses",id:"responses",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example",level:3},{value:"update-public-identity-config",id:"update-public-identity-config",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"Responses",id:"responses-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-1",level:3}];function a(e){let i={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"sailpointv3publicidentitiesconfigapi",children:"sailpoint.v3.PublicIdentitiesConfigApi"})}),"\n",(0,s.jsx)(i.p,{children:"Use this API to implement public identity configuration functionality.\nWith this functionality in place, administrators can make up to 5 identity attributes publicly visible so other non-administrator users can see the relevant information they need to make decisions.\nThis can be helpful for approvers making approvals, certification reviewers, managers viewing their direct reports' access, and source owners viewing their tasks."}),"\n",(0,s.jsx)(i.p,{children:"By default, non-administrators can select an identity and view the following attributes: email, lifecycle state, and manager.\nHowever, it may be helpful for a non-administrator reviewer to see other identity attributes like department, region, title, etc.\nAdministrators can use this API to make those necessary identity attributes public to non-administrators."}),"\n",(0,s.jsxs)(i.p,{children:["For example, a non-administrator deciding whether to approve another identity's request for access to the Workday application, whose access may be restricted to members of the HR department, would want to know whether the identity is a member of the HR department.\nIf an administrator has used ",(0,s.jsx)(i.a,{href:"https://developer.sailpoint.com/docs/api/v3/update-public-identity-config/",children:"Update Public Identity Config"}),' to make the "department" attribute public, the approver can see the department and make a decision without requesting any more information.']}),"\n",(0,s.jsxs)(i.p,{children:["All URIs are relative to ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"https://sailpoint.api.identitynow.com/v3",children:"https://sailpoint.api.identitynow.com/v3"})})]}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Method"}),(0,s.jsx)(i.th,{children:"HTTP request"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#get-public-identity-config",children:(0,s.jsx)(i.strong,{children:"get-public-identity-config"})})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"GET"})," ",(0,s.jsx)(i.code,{children:"/public-identities-config"})]}),(0,s.jsx)(i.td,{children:"Get the public identities configuration"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#update-public-identity-config",children:(0,s.jsx)(i.strong,{children:"update-public-identity-config"})})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"PUT"})," ",(0,s.jsx)(i.code,{children:"/public-identities-config"})]}),(0,s.jsx)(i.td,{children:"Update the public identities configuration"})]})]})]}),"\n",(0,s.jsx)(i.h2,{id:"get-public-identity-config",children:"get-public-identity-config"}),"\n",(0,s.jsx)(i.p,{children:"Get the public identities configuration\nReturns the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns."}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://developer.sailpoint.com/docs/api/v3/get-public-identity-config",children:"API Spec"})}),"\n",(0,s.jsx)(i.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(i.p,{children:"This endpoint does not need any parameter."}),"\n",(0,s.jsx)(i.h3,{id:"return-type",children:"Return type"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"../models/public-identity-config",children:(0,s.jsx)(i.strong,{children:"PublicIdentityConfig"})})}),"\n",(0,s.jsx)(i.h3,{id:"responses",children:"Responses"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Code"}),(0,s.jsx)(i.th,{children:"Description"}),(0,s.jsx)(i.th,{children:"Data Type"}),(0,s.jsx)(i.th,{children:"Response headers"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"200"}),(0,s.jsx)(i.td,{children:"Request succeeded."}),(0,s.jsx)(i.td,{children:"PublicIdentityConfig"}),(0,s.jsx)(i.td,{children:"-"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"400"}),(0,s.jsx)(i.td,{children:"Client Error - Returned if the request body is invalid."}),(0,s.jsx)(i.td,{children:"ErrorResponseDto"}),(0,s.jsx)(i.td,{children:"-"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"401"}),(0,s.jsx)(i.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,s.jsx)(i.td,{children:"ListAccessProfiles401Response"}),(0,s.jsx)(i.td,{children:"-"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"403"}),(0,s.jsx)(i.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,s.jsx)(i.td,{children:"ErrorResponseDto"}),(0,s.jsx)(i.td,{children:"-"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"429"}),(0,s.jsx)(i.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,s.jsx)(i.td,{children:"ListAccessProfiles429Response"}),(0,s.jsx)(i.td,{children:"-"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"500"}),(0,s.jsx)(i.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,s.jsx)(i.td,{children:"ErrorResponseDto"}),(0,s.jsx)(i.td,{children:"-"})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"http-request-headers",children:"HTTP request headers"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:'from sailpoint.v3.api.public_identities_config_api import PublicIdentitiesConfigApi\nfrom sailpoint.v3.api_client import ApiClient\nfrom sailpoint.v3.models.public_identity_config import PublicIdentityConfig\nfrom sailpoint.configuration import Configuration\nconfiguration = Configuration()\n\n\nwith ApiClient(configuration) as api_client:\n\n    try:\n        # Get the public identities configuration\n        \n        results = PublicIdentitiesConfigApi(api_client).get_public_identity_config()\n        # Below is a request that includes all optional parameters\n        # results = PublicIdentitiesConfigApi(api_client).get_public_identity_config()\n        print("The response of PublicIdentitiesConfigApi->get_public_identity_config:\\n")\n        print(results.model_dump_json(by_alias=True, indent=4))\n    except Exception as e:\n        print("Exception when calling PublicIdentitiesConfigApi->get_public_identity_config: %s\\n" % e)\n'})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#",children:"[Back to top]"})}),"\n",(0,s.jsx)(i.h2,{id:"update-public-identity-config",children:"update-public-identity-config"}),"\n",(0,s.jsx)(i.p,{children:"Update the public identities configuration\nUpdates the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns."}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://developer.sailpoint.com/docs/api/v3/update-public-identity-config",children:"API Spec"})}),"\n",(0,s.jsx)(i.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Param Type"}),(0,s.jsx)(i.th,{children:"Name"}),(0,s.jsx)(i.th,{children:"Data Type"}),(0,s.jsx)(i.th,{children:"Required"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsx)(i.tbody,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Body"}),(0,s.jsx)(i.td,{children:"public_identity_config"}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"../models/public-identity-config",children:(0,s.jsx)(i.strong,{children:"PublicIdentityConfig"})})}),(0,s.jsx)(i.td,{children:"True"}),(0,s.jsx)(i.td,{})]})})]}),"\n",(0,s.jsx)(i.h3,{id:"return-type-1",children:"Return type"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"../models/public-identity-config",children:(0,s.jsx)(i.strong,{children:"PublicIdentityConfig"})})}),"\n",(0,s.jsx)(i.h3,{id:"responses-1",children:"Responses"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Code"}),(0,s.jsx)(i.th,{children:"Description"}),(0,s.jsx)(i.th,{children:"Data Type"}),(0,s.jsx)(i.th,{children:"Response headers"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"200"}),(0,s.jsx)(i.td,{children:"Request succeeded."}),(0,s.jsx)(i.td,{children:"PublicIdentityConfig"}),(0,s.jsx)(i.td,{children:"-"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"400"}),(0,s.jsx)(i.td,{children:"Client Error - Returned if the request body is invalid."}),(0,s.jsx)(i.td,{children:"ErrorResponseDto"}),(0,s.jsx)(i.td,{children:"-"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"401"}),(0,s.jsx)(i.td,{children:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired."}),(0,s.jsx)(i.td,{children:"ListAccessProfiles401Response"}),(0,s.jsx)(i.td,{children:"-"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"403"}),(0,s.jsx)(i.td,{children:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point."}),(0,s.jsx)(i.td,{children:"ErrorResponseDto"}),(0,s.jsx)(i.td,{children:"-"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"429"}),(0,s.jsx)(i.td,{children:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again."}),(0,s.jsx)(i.td,{children:"ListAccessProfiles429Response"}),(0,s.jsx)(i.td,{children:"-"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"500"}),(0,s.jsx)(i.td,{children:"Internal Server Error - Returned if there is an unexpected error."}),(0,s.jsx)(i.td,{children:"ErrorResponseDto"}),(0,s.jsx)(i.td,{children:"-"})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"http-request-headers-1",children:"HTTP request headers"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"example-1",children:"Example"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:'from sailpoint.v3.api.public_identities_config_api import PublicIdentitiesConfigApi\nfrom sailpoint.v3.api_client import ApiClient\nfrom sailpoint.v3.models.public_identity_config import PublicIdentityConfig\nfrom sailpoint.configuration import Configuration\nconfiguration = Configuration()\n\n\nwith ApiClient(configuration) as api_client:\n    public_identity_config = \'\'\'{\n          "modified" : "2018-06-25T20:22:28.104Z",\n          "attributes" : [ {\n            "name" : "Country",\n            "key" : "country"\n          }, {\n            "name" : "Country",\n            "key" : "country"\n          } ],\n          "modifiedBy" : {\n            "name" : "Thomas Edison",\n            "id" : "2c9180a46faadee4016fb4e018c20639",\n            "type" : "IDENTITY"\n          }\n        }\'\'\' # PublicIdentityConfig | \n\n    try:\n        # Update the public identities configuration\n        new_public_identity_config = PublicIdentityConfig.from_json(public_identity_config)\n        results = PublicIdentitiesConfigApi(api_client).update_public_identity_config(public_identity_config=new_public_identity_config)\n        # Below is a request that includes all optional parameters\n        # results = PublicIdentitiesConfigApi(api_client).update_public_identity_config(new_public_identity_config)\n        print("The response of PublicIdentitiesConfigApi->update_public_identity_config:\\n")\n        print(results.model_dump_json(by_alias=True, indent=4))\n    except Exception as e:\n        print("Exception when calling PublicIdentitiesConfigApi->update_public_identity_config: %s\\n" % e)\n'})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#",children:"[Back to top]"})})]})}function p(e={}){let{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},250065:function(e,i,t){t.d(i,{Z:()=>o,a:()=>d});var n=t(667294);let s={},r=n.createContext(s);function d(e){let i=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(r.Provider,{value:i},e.children)}},581496:function(e){e.exports=JSON.parse('{"id":"tools/sdk/python/Reference/V3/Methods/public-identities-config","title":"Public_Identities_Config","description":"Use this API to implement public identity configuration functionality.","source":"@site/docs/tools/sdk/python/Reference/V3/Methods/PublicIdentitiesConfigApi.md","sourceDirName":"tools/sdk/python/Reference/V3/Methods","slug":"/tools/sdk/python/v3/methods/public-identities-config","permalink":"/docs/tools/sdk/python/v3/methods/public-identities-config","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/python/Reference/V3/Methods/PublicIdentitiesConfigApi.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"Public_Identities_Config","permalink":"/docs/tags/public-identities-config"},{"inline":true,"label":"Public_Identities_Config","permalink":"/docs/tags/public-identities-config"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1747667101000,"frontMatter":{"id":"public-identities-config","title":"Public_Identities_Config","pagination_label":"Public_Identities_Config","sidebar_label":"Public_Identities_Config","sidebar_class_name":"pythonsdk","keywords":["python","Python","sdk","Public_Identities_Config","Public_Identities_Config"],"slug":"/tools/sdk/python/v3/methods/public-identities-config","tags":["SDK","Software Development Kit","Public_Identities_Config","Public_Identities_Config"]},"sidebar":"openApiSidebar","previous":{"title":"Public_Identities","permalink":"/docs/tools/sdk/python/v3/methods/public-identities"},"next":{"title":"Reports_Data_Extraction","permalink":"/docs/tools/sdk/python/v3/methods/reports-data-extraction"}}')}}]);