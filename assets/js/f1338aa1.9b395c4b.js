"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["176170"],{787820:function(e,s,t){t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>a});var r=t(211633),n=t(785893),i=t(250065);let o={id:"password-policies",title:"PasswordPolicies",pagination_label:"PasswordPolicies",sidebar_label:"PasswordPolicies",sidebar_class_name:"gosdk",keywords:["go","Golang","sdk","PasswordPolicies","PasswordPolicies"],slug:"/tools/sdk/go/v3/methods/password-policies",tags:["SDK","Software Development Kit","PasswordPolicies","PasswordPolicies"]},l="PasswordPoliciesAPI",d={},a=[{value:"create-password-policy",id:"create-password-policy",level:2},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Other Parameters",id:"other-parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example",level:3},{value:"delete-password-policy",id:"delete-password-policy",level:2},{value:"Path Parameters",id:"path-parameters-1",level:3},{value:"Other Parameters",id:"other-parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-1",level:3},{value:"get-password-policy-by-id",id:"get-password-policy-by-id",level:2},{value:"Path Parameters",id:"path-parameters-2",level:3},{value:"Other Parameters",id:"other-parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-2",level:3},{value:"list-password-policies",id:"list-password-policies",level:2},{value:"Path Parameters",id:"path-parameters-3",level:3},{value:"Other Parameters",id:"other-parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-3",level:3},{value:"set-password-policy",id:"set-password-policy",level:2},{value:"Path Parameters",id:"path-parameters-4",level:3},{value:"Other Parameters",id:"other-parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3},{value:"Example",id:"example-4",level:3}];function c(e){let s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"passwordpoliciesapi",children:"PasswordPoliciesAPI"})}),"\n",(0,n.jsx)(s.p,{children:"Use these APIs to implement password policies functionality.\nThese APIs allow you to define the policy parameters for choosing passwords."}),"\n",(0,n.jsx)(s.p,{children:"IdentityNow comes with a default policy that you can modify to define the password requirements your users must meet to log in to IdentityNow, such as requiring a minimum password length, including special characters, and disallowing certain patterns.\nIf you have licensed Password Management, you can create additional password policies beyond the default one to manage passwords for supported sources in your org."}),"\n",(0,n.jsxs)(s.p,{children:["In the Identity Security Cloud Admin panel, administrators can use the Password Mgmt dropdown menu to select Sync Groups.\nRefer to ",(0,n.jsx)(s.a,{href:"https://documentation.sailpoint.com/saas/help/pwd/pwd_policies/pwd_policies.html",children:"Managing Password Policies"})," for more information about password policies."]}),"\n",(0,n.jsxs)(s.p,{children:["All URIs are relative to ",(0,n.jsx)(s.em,{children:(0,n.jsx)(s.a,{href:"https://sailpoint.api.identitynow.com/v3",children:"https://sailpoint.api.identitynow.com/v3"})})]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Method"}),(0,n.jsx)(s.th,{children:"HTTP request"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"#create-password-policy",children:(0,n.jsx)(s.strong,{children:"create-password-policy"})})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Post"})," ",(0,n.jsx)(s.code,{children:"/password-policies"})]}),(0,n.jsx)(s.td,{children:"Create password policy"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"#delete-password-policy",children:(0,n.jsx)(s.strong,{children:"delete-password-policy"})})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Delete"})," ",(0,n.jsx)(s.code,{children:"/password-policies/{id}"})]}),(0,n.jsx)(s.td,{children:"Delete password policy by id"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"#get-password-policy-by-id",children:(0,n.jsx)(s.strong,{children:"get-password-policy-by-id"})})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Get"})," ",(0,n.jsx)(s.code,{children:"/password-policies/{id}"})]}),(0,n.jsx)(s.td,{children:"Get password policy by id"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"#list-password-policies",children:(0,n.jsx)(s.strong,{children:"list-password-policies"})})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Get"})," ",(0,n.jsx)(s.code,{children:"/password-policies"})]}),(0,n.jsx)(s.td,{children:"List password policies"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"#set-password-policy",children:(0,n.jsx)(s.strong,{children:"set-password-policy"})})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Put"})," ",(0,n.jsx)(s.code,{children:"/password-policies/{id}"})]}),(0,n.jsx)(s.td,{children:"Update password policy by id"})]})]})]}),"\n",(0,n.jsx)(s.h2,{id:"create-password-policy",children:"create-password-policy"}),"\n",(0,n.jsx)(s.p,{children:"Create password policy\nThis API creates the specified password policy."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/v3/create-password-policy",children:"API Spec"})}),"\n",(0,n.jsx)(s.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,n.jsx)(s.h3,{id:"other-parameters",children:"Other Parameters"}),"\n",(0,n.jsx)(s.p,{children:"Other parameters are passed through a pointer to a apiCreatePasswordPolicyRequest struct via the builder pattern"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Notes"})]})}),(0,n.jsx)(s.tbody,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"passwordPolicyV3Dto"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../models/password-policy-v3-dto",children:(0,n.jsx)(s.strong,{children:"PasswordPolicyV3Dto"})})}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{})]})})]}),"\n",(0,n.jsx)(s.h3,{id:"return-type",children:"Return type"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"../models/password-policy-v3-dto",children:(0,n.jsx)(s.strong,{children:"PasswordPolicyV3Dto"})})}),"\n",(0,n.jsx)(s.h3,{id:"http-request-headers",children:"HTTP request headers"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"example",children:"Example"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    v3 "github.com/sailpoint-oss/golang-sdk/v2/api_v3"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    passwordpolicyv3dto := []byte(`{\n          "validateAgainstAccountName" : true,\n          "minLength" : 8,\n          "description" : "Information about the Password Policy",\n          "requireStrongAuthUntrustedGeographies" : true,\n          "enablePasswdExpiration" : true,\n          "minNumeric" : 8,\n          "lastUpdated" : "2000-01-23T04:56:07.000+00:00",\n          "validateAgainstAccountId" : false,\n          "dateCreated" : "2000-01-23T04:56:07.000+00:00",\n          "accountNameMinWordLength" : 6,\n          "minUpper" : 8,\n          "firstExpirationReminder" : 45,\n          "modified" : "modified",\n          "id" : "2c91808e7d976f3b017d9f5ceae440c8",\n          "requireStrongAuthn" : true,\n          "useDictionary" : false,\n          "minSpecial" : 8,\n          "sourceIds" : [ "2c91808382ffee0b01830de154f14034", "2f98808382ffee0b01830de154f12134" ],\n          "passwordExpiration" : 8,\n          "maxRepeatedChars" : 3,\n          "minCharacterTypes" : 5,\n          "minAlpha" : 5,\n          "created" : "created",\n          "useAccountAttributes" : false,\n          "accountIdMinWordLength" : 4,\n          "minLower" : 8,\n          "useIdentityAttributes" : false,\n          "defaultPolicy" : true,\n          "requireStrongAuthOffNetwork" : true,\n          "name" : "PasswordPolicy Example",\n          "maxLength" : 25\n        }`) // PasswordPolicyV3Dto | \n\n    var passwordPolicyV3Dto v3.PasswordPolicyV3Dto\n    if err := json.Unmarshal(passwordpolicyv3dto, &passwordPolicyV3Dto); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V3.PasswordPoliciesAPI.CreatePasswordPolicy(context.Background()).PasswordPolicyV3Dto(passwordPolicyV3Dto).Execute()\n	  //resp, r, err := apiClient.V3.PasswordPoliciesAPI.CreatePasswordPolicy(context.Background()).PasswordPolicyV3Dto(passwordPolicyV3Dto).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordPoliciesAPI.CreatePasswordPolicy``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `CreatePasswordPolicy`: PasswordPolicyV3Dto\n    fmt.Fprintf(os.Stdout, "Response from `PasswordPoliciesAPI.CreatePasswordPolicy`: %v\\n", resp)\n}\n'})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"#",children:"[Back to top]"})}),"\n",(0,n.jsx)(s.h2,{id:"delete-password-policy",children:"delete-password-policy"}),"\n",(0,n.jsx)(s.p,{children:"Delete password policy by id\nThis API deletes the specified password policy."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/v3/delete-password-policy",children:"API Spec"})}),"\n",(0,n.jsx)(s.h3,{id:"path-parameters-1",children:"Path Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Notes"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"ctx"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"context.Context"})}),(0,n.jsx)(s.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"id"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"string"})}),(0,n.jsx)(s.td,{children:"The ID of password policy to delete."}),(0,n.jsx)(s.td,{})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"other-parameters-1",children:"Other Parameters"}),"\n",(0,n.jsx)(s.p,{children:"Other parameters are passed through a pointer to a apiDeletePasswordPolicyRequest struct via the builder pattern"}),"\n",(0,n.jsx)(s.table,{children:(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Notes"})]})})}),"\n",(0,n.jsx)(s.h3,{id:"return-type-1",children:"Return type"}),"\n",(0,n.jsx)(s.p,{children:"(empty response body)"}),"\n",(0,n.jsx)(s.h3,{id:"http-request-headers-1",children:"HTTP request headers"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"example-1",children:"Example"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `ff808081838d9e9d01838da6a03e0002` // string | The ID of password policy to delete. # string | The ID of password policy to delete.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    r, err := apiClient.V3.PasswordPoliciesAPI.DeletePasswordPolicy(context.Background(), id).Execute()\n	  //r, err := apiClient.V3.PasswordPoliciesAPI.DeletePasswordPolicy(context.Background(), id).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordPoliciesAPI.DeletePasswordPolicy``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    \n}\n'})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"#",children:"[Back to top]"})}),"\n",(0,n.jsx)(s.h2,{id:"get-password-policy-by-id",children:"get-password-policy-by-id"}),"\n",(0,n.jsx)(s.p,{children:"Get password policy by id\nThis API returns the password policy for the specified ID."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/v3/get-password-policy-by-id",children:"API Spec"})}),"\n",(0,n.jsx)(s.h3,{id:"path-parameters-2",children:"Path Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Notes"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"ctx"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"context.Context"})}),(0,n.jsx)(s.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"id"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"string"})}),(0,n.jsx)(s.td,{children:"The ID of password policy to retrieve."}),(0,n.jsx)(s.td,{})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"other-parameters-2",children:"Other Parameters"}),"\n",(0,n.jsx)(s.p,{children:"Other parameters are passed through a pointer to a apiGetPasswordPolicyByIdRequest struct via the builder pattern"}),"\n",(0,n.jsx)(s.table,{children:(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Notes"})]})})}),"\n",(0,n.jsx)(s.h3,{id:"return-type-2",children:"Return type"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"../models/password-policy-v3-dto",children:(0,n.jsx)(s.strong,{children:"PasswordPolicyV3Dto"})})}),"\n",(0,n.jsx)(s.h3,{id:"http-request-headers-2",children:"HTTP request headers"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"example-2",children:"Example"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `ff808081838d9e9d01838da6a03e0005` // string | The ID of password policy to retrieve. # string | The ID of password policy to retrieve.\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V3.PasswordPoliciesAPI.GetPasswordPolicyById(context.Background(), id).Execute()\n	  //resp, r, err := apiClient.V3.PasswordPoliciesAPI.GetPasswordPolicyById(context.Background(), id).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordPoliciesAPI.GetPasswordPolicyById``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetPasswordPolicyById`: PasswordPolicyV3Dto\n    fmt.Fprintf(os.Stdout, "Response from `PasswordPoliciesAPI.GetPasswordPolicyById`: %v\\n", resp)\n}\n'})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"#",children:"[Back to top]"})}),"\n",(0,n.jsx)(s.h2,{id:"list-password-policies",children:"list-password-policies"}),"\n",(0,n.jsx)(s.p,{children:"List password policies\nThis gets list of all Password Policies.\nRequires role of ORG_ADMIN"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/v3/list-password-policies",children:"API Spec"})}),"\n",(0,n.jsx)(s.h3,{id:"path-parameters-3",children:"Path Parameters"}),"\n",(0,n.jsx)(s.h3,{id:"other-parameters-3",children:"Other Parameters"}),"\n",(0,n.jsx)(s.p,{children:"Other parameters are passed through a pointer to a apiListPasswordPoliciesRequest struct via the builder pattern"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Notes"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"limit"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"int32"})}),(0,n.jsxs)(s.td,{children:["Max number of results to return. See ",(0,n.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,n.jsx)(s.td,{children:"[default to 250]"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"offset"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"int32"})}),(0,n.jsxs)(s.td,{children:["Offset into the full result set. Usually specified with ",(0,n.jsx)(s.em,{children:"limit"})," to paginate through the results. See ",(0,n.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,n.jsx)(s.td,{children:"[default to 0]"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"count"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"bool"})}),(0,n.jsxs)(s.td,{children:["If ",(0,n.jsx)(s.em,{children:"true"})," it will populate the ",(0,n.jsx)(s.em,{children:"X-Total-Count"})," response header with the number of results that would be returned if ",(0,n.jsx)(s.em,{children:"limit"})," and ",(0,n.jsx)(s.em,{children:"offset"})," were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send ",(0,n.jsx)(s.strong,{children:"count=true"})," if that value will not be used.  See ",(0,n.jsx)(s.a,{href:"https://developer.sailpoint.com/idn/api/standard-collection-parameters",children:"V3 API Standard Collection Parameters"})," for more information."]}),(0,n.jsx)(s.td,{children:"[default to false]"})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"return-type-3",children:"Return type"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"../models/password-policy-v3-dto",children:(0,n.jsx)(s.strong,{children:"[]PasswordPolicyV3Dto"})})}),"\n",(0,n.jsx)(s.h3,{id:"http-request-headers-3",children:"HTTP request headers"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"example-3",children:"Example"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)\n    offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)\n    count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V3.PasswordPoliciesAPI.ListPasswordPolicies(context.Background()).Execute()\n	  //resp, r, err := apiClient.V3.PasswordPoliciesAPI.ListPasswordPolicies(context.Background()).Limit(limit).Offset(offset).Count(count).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordPoliciesAPI.ListPasswordPolicies``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `ListPasswordPolicies`: []PasswordPolicyV3Dto\n    fmt.Fprintf(os.Stdout, "Response from `PasswordPoliciesAPI.ListPasswordPolicies`: %v\\n", resp)\n}\n'})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"#",children:"[Back to top]"})}),"\n",(0,n.jsx)(s.h2,{id:"set-password-policy",children:"set-password-policy"}),"\n",(0,n.jsx)(s.p,{children:"Update password policy by id\nThis API updates the specified password policy."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://developer.sailpoint.com/docs/api/v3/set-password-policy",children:"API Spec"})}),"\n",(0,n.jsx)(s.h3,{id:"path-parameters-4",children:"Path Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Notes"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"ctx"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"context.Context"})}),(0,n.jsx)(s.td,{children:"context for authentication, logging, cancellation, deadlines, tracing, etc."}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"id"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"string"})}),(0,n.jsx)(s.td,{children:"The ID of password policy to update."}),(0,n.jsx)(s.td,{})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"other-parameters-4",children:"Other Parameters"}),"\n",(0,n.jsx)(s.p,{children:"Other parameters are passed through a pointer to a apiSetPasswordPolicyRequest struct via the builder pattern"}),"\n",(0,n.jsx)(s.table,{children:(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Notes"})]})})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"passwordPolicyV3Dto"})," | ",(0,n.jsx)(s.a,{href:"../models/password-policy-v3-dto",children:(0,n.jsx)(s.strong,{children:"PasswordPolicyV3Dto"})})," |  |"]}),"\n",(0,n.jsx)(s.h3,{id:"return-type-4",children:"Return type"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"../models/password-policy-v3-dto",children:(0,n.jsx)(s.strong,{children:"PasswordPolicyV3Dto"})})}),"\n",(0,n.jsx)(s.h3,{id:"http-request-headers-4",children:"HTTP request headers"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Content-Type"}),": application/json"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"example-4",children:"Example"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    v3 "github.com/sailpoint-oss/golang-sdk/v2/api_v3"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    id := `ff808081838d9e9d01838da6a03e0007` // string | The ID of password policy to update. # string | The ID of password policy to update.\n    passwordpolicyv3dto := []byte(`{\n          "validateAgainstAccountName" : true,\n          "minLength" : 8,\n          "description" : "Information about the Password Policy",\n          "requireStrongAuthUntrustedGeographies" : true,\n          "enablePasswdExpiration" : true,\n          "minNumeric" : 8,\n          "lastUpdated" : "2000-01-23T04:56:07.000+00:00",\n          "validateAgainstAccountId" : false,\n          "dateCreated" : "2000-01-23T04:56:07.000+00:00",\n          "accountNameMinWordLength" : 6,\n          "minUpper" : 8,\n          "firstExpirationReminder" : 45,\n          "modified" : "modified",\n          "id" : "2c91808e7d976f3b017d9f5ceae440c8",\n          "requireStrongAuthn" : true,\n          "useDictionary" : false,\n          "minSpecial" : 8,\n          "sourceIds" : [ "2c91808382ffee0b01830de154f14034", "2f98808382ffee0b01830de154f12134" ],\n          "passwordExpiration" : 8,\n          "maxRepeatedChars" : 3,\n          "minCharacterTypes" : 5,\n          "minAlpha" : 5,\n          "created" : "created",\n          "useAccountAttributes" : false,\n          "accountIdMinWordLength" : 4,\n          "minLower" : 8,\n          "useIdentityAttributes" : false,\n          "defaultPolicy" : true,\n          "requireStrongAuthOffNetwork" : true,\n          "name" : "PasswordPolicy Example",\n          "maxLength" : 25\n        }`) // PasswordPolicyV3Dto | \n\n    var passwordPolicyV3Dto v3.PasswordPolicyV3Dto\n    if err := json.Unmarshal(passwordpolicyv3dto, &passwordPolicyV3Dto); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.V3.PasswordPoliciesAPI.SetPasswordPolicy(context.Background(), id).PasswordPolicyV3Dto(passwordPolicyV3Dto).Execute()\n	  //resp, r, err := apiClient.V3.PasswordPoliciesAPI.SetPasswordPolicy(context.Background(), id).PasswordPolicyV3Dto(passwordPolicyV3Dto).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `PasswordPoliciesAPI.SetPasswordPolicy``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `SetPasswordPolicy`: PasswordPolicyV3Dto\n    fmt.Fprintf(os.Stdout, "Response from `PasswordPoliciesAPI.SetPasswordPolicy`: %v\\n", resp)\n}\n'})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"#",children:"[Back to top]"})})]})}function p(e={}){let{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},250065:function(e,s,t){t.d(s,{Z:()=>l,a:()=>o});var r=t(667294);let n={},i=r.createContext(n);function o(e){let s=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:s},e.children)}},211633:function(e){e.exports=JSON.parse('{"id":"tools/sdk/go/Reference/V3/Methods/password-policies","title":"PasswordPolicies","description":"Use these APIs to implement password policies functionality.","source":"@site/docs/tools/sdk/go/Reference/V3/Methods/PasswordPoliciesAPI.md","sourceDirName":"tools/sdk/go/Reference/V3/Methods","slug":"/tools/sdk/go/v3/methods/password-policies","permalink":"/docs/tools/sdk/go/v3/methods/password-policies","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/go/Reference/V3/Methods/PasswordPoliciesAPI.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"PasswordPolicies","permalink":"/docs/tags/password-policies"},{"inline":true,"label":"PasswordPolicies","permalink":"/docs/tags/password-policies"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1747667177000,"frontMatter":{"id":"password-policies","title":"PasswordPolicies","pagination_label":"PasswordPolicies","sidebar_label":"PasswordPolicies","sidebar_class_name":"gosdk","keywords":["go","Golang","sdk","PasswordPolicies","PasswordPolicies"],"slug":"/tools/sdk/go/v3/methods/password-policies","tags":["SDK","Software Development Kit","PasswordPolicies","PasswordPolicies"]},"sidebar":"openApiSidebar","previous":{"title":"PasswordManagement","permalink":"/docs/tools/sdk/go/v3/methods/password-management"},"next":{"title":"PasswordSyncGroups","permalink":"/docs/tools/sdk/go/v3/methods/password-sync-groups"}}')}}]);