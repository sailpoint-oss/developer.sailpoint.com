"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["708826"],{245750:function(e,n,c){c.r(n),c.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>t,toc:()=>u});var t=c(57564),s=c(785893),a=c(250065);let o={id:"mcp-example-guides",title:"Example Guides",pagination_label:"MCP - Example Guides",sidebar_label:"MCP Example Guides",sidebar_position:4,sidebar_class_name:"mcp",keywords:["mcp"],description:"SailPoint's MCP Server Tools",slug:"/extensibility/mcp-example-guides",tags:["MCP"]},r=void 0,i={},u=[{value:"Basic: access request, no account selection required",id:"basic-access-request-no-account-selection-required",level:2},{value:"list-requestable tool - finding items to request",id:"list-requestable-tool---finding-items-to-request",level:3},{value:"create-access-request",id:"create-access-request",level:3},{value:"Intermediate: access request, account selection required, single source",id:"intermediate-access-request-account-selection-required-single-source",level:2},{value:"list-requestable output, account selection required",id:"list-requestable-output-account-selection-required",level:3},{value:"create-access-request with account selection on a single source",id:"create-access-request-with-account-selection-on-a-single-source",level:3},{value:"Advanced: access request, account selection required, multiple sources",id:"advanced-access-request-account-selection-required-multiple-sources",level:2},{value:"list requestable output, account selection required, multiple sources",id:"list-requestable-output-account-selection-required-multiple-sources",level:3},{value:"create-access-request with account selection on multiple sources",id:"create-access-request-with-account-selection-on-multiple-sources",level:3},{value:"Advanced: access request, account selection required, multiple sources, 0 to many accounts",id:"advanced-access-request-account-selection-required-multiple-sources-0-to-many-accounts",level:2},{value:"list requestable output, account selection required, multiple sources, 0 to many accounts",id:"list-requestable-output-account-selection-required-multiple-sources-0-to-many-accounts",level:3},{value:"create-access-request with account selection on multiple sources, 0 to many accounts",id:"create-access-request-with-account-selection-on-multiple-sources-0-to-many-accounts",level:3}];function d(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Example MPC tool payloads for basic to advanced use cases."}),"\n",(0,s.jsx)(n.h2,{id:"basic-access-request-no-account-selection-required",children:"Basic: access request, no account selection required"}),"\n",(0,s.jsx)(n.h3,{id:"list-requestable-tool---finding-items-to-request",children:"list-requestable tool - finding items to request"}),"\n",(0,s.jsxs)(n.p,{children:["With optional query term ",(0,s.jsx)(n.code,{children:"docusign"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "method": "tools/call",\n  "params": {\n    "name": "list-requestable",\n    "arguments": {\n      "query": "docusign"\n    },\n    "_meta": {\n      "progressToken": 5\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"With no query term:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "method": "tools/call",\n  "params": {\n    "name": "list-requestable",\n    "arguments": {},\n    "_meta": {\n      "progressToken": 6\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Example results:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "requestableObjects": [\n    {\n      "id": "313391df970a4d04abee5f0aac7827b5",\n      "type": "ACCESS_PROFILE",\n      "name": "QA_AccessProfile1",\n      "accounts": [\n        {\n          "sourceId": "c988514fe00348d293187e98de19924b",\n          "sourceName": "QaDocuSign"\n        }\n      ],\n      "accountSelectionRequired": false\n    },\n    {\n      "id": "d4db05e1e1a44d5983aded3501ac132a",\n      "type": "ACCESS_PROFILE",\n      "name": "QA_AccessProfile2",\n      "accounts": [\n        {\n          "sourceId": "c988514fe00348d293187e98de19924b",\n          "sourceName": "QaDocuSign"\n        }\n      ],\n      "accountSelectionRequired": false\n    },\n    {\n      "id": "894eaafd5aa24dfba113e60ebcace88d",\n      "type": "ENTITLEMENT",\n      "name": "QA_Group1",\n      "accounts": [\n        {\n          "sourceId": "c988514fe00348d293187e98de19924b",\n          "sourceName": "QaDocuSign"\n        }\n      ],\n      "accountSelectionRequired": false\n    },\n    {\n      "id": "4f1bb3fb61884c12b852e5413e524047",\n      "type": "ENTITLEMENT",\n      "name": "QA_Group2",\n      "accounts": [\n        {\n          "sourceId": "c988514fe00348d293187e98de19924b",\n          "sourceName": "QaDocuSign"\n        }\n      ],\n      "accountSelectionRequired": false\n    },\n    {\n      "id": "683616954e30427bb112aace2c8f71bb",\n      "type": "ENTITLEMENT",\n      "name": "QA_Group3",\n      "accounts": [\n        {\n          "sourceId": "c988514fe00348d293187e98de19924b",\n          "sourceName": "QaDocuSign"\n        }\n      ],\n      "accountSelectionRequired": false\n    },\n    {\n      "id": "1684f1a2fdb94fdf94bb0b84956e62d7",\n      "type": "ENTITLEMENT",\n      "name": "QA_Group4",\n      "accounts": [\n        {\n          "sourceId": "c988514fe00348d293187e98de19924b",\n          "sourceName": "QaDocuSign"\n        }\n      ],\n      "accountSelectionRequired": false\n    },\n    {\n      "id": "0ece3904a73443d8a418357fc5d57611",\n      "type": "ROLE",\n      "name": "QA_Role1",\n      "accounts": [\n        {\n          "sourceId": "c988514fe00348d293187e98de19924b",\n          "sourceName": "QaDocuSign"\n        }\n      ],\n      "accountSelectionRequired": false\n    },\n    {\n      "id": "211eab6fd20c473aa8610414a1abba62",\n      "type": "ROLE",\n      "name": "QA_Role2",\n      "accounts": [\n        {\n          "sourceId": "c988514fe00348d293187e98de19924b",\n          "sourceName": "QaDocuSign"\n        }\n      ],\n      "accountSelectionRequired": false\n    }\n  ],\n  "accessItemsWithError": null,\n  "resultsCount": 8,\n  "totalCount": 8\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"create-access-request",children:"create-access-request"}),"\n",(0,s.jsxs)(n.p,{children:["We will make a request for the first item returned in the ",(0,s.jsx)(n.code,{children:"list-requestable"})," tool."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'    {\n      "id": "313391df970a4d04abee5f0aac7827b5",\n      "type": "ACCESS_PROFILE",\n      "name": "QA_AccessProfile1",\n      "accounts": [\n        {\n          "sourceId": "c988514fe00348d293187e98de19924b",\n          "sourceName": "QaDocuSign"\n        }\n      ],\n      "accountSelectionRequired": false\n    }\n'})}),"\n",(0,s.jsxs)(n.p,{children:["We can see that this item has ",(0,s.jsx)(n.code,{children:'"accountSelectionRequired": false'})," so we do not need to provide account selections when\nmaking the access request."]}),"\n",(0,s.jsx)(n.p,{children:"Example tool call:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "method": "tools/call",\n  "params": {\n    "name": "create-access-request",\n    "arguments": {\n      "accounts": [],\n      "id": "313391df970a4d04abee5f0aac7827b5",\n      "type": "ACCESS_PROFILE"\n    },\n    "_meta": {\n      "progressToken": 8\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Example results:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "content": [\n    {\n      "type": "text",\n      "text": "{\\"status\\": \\"success\\", \\"accessRequestId\\": \\"09b33e230faf48ab9f81b7f8243f5944\\"}"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"intermediate-access-request-account-selection-required-single-source",children:"Intermediate: access request, account selection required, single source"}),"\n",(0,s.jsxs)(n.p,{children:["Some identities might have multiple accounts configured for a single identity. If so, the output of the ",(0,s.jsx)(n.code,{children:"list-requestable"})," tool\nwill tell us that account selection is required. We will need the results of the ",(0,s.jsx)(n.code,{children:"list-requestable"})," tool output to use the ",(0,s.jsx)(n.code,{children:"create-access-request"})," tool and make the appropriate account selections."]}),"\n",(0,s.jsx)(n.h3,{id:"list-requestable-output-account-selection-required",children:"list-requestable output, account selection required"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "requestableObjects": [\n    {\n      "id": "1e60f364c6a7488c9da58767b99d9f91",\n      "type": "ACCESS_PROFILE",\n      "name": "Docusign",\n      "accounts": [\n        {\n          "sourceId": "d557aca6b2b34d8bafcb967bad2eb362",\n          "sourceName": "Docusign SaaS",\n          "accountsOnSource": [\n            {\n              "nativeIdentity": "4a5c3db6-93d6-4e60-aeb8-6b619b39d2a2",\n              "accountName": "Adam Archer"\n            },\n            {\n              "nativeIdentity": "31d111b0-344e-49d0-909f-5c6ed56c63cc",\n              "accountName": "Support"\n            }\n          ]\n        }\n      ],\n      "accountSelectionRequired": true\n    }\n  ],\n  "accessItemsWithError": null,\n  "resultsCount": 1,\n  "totalCount": 1\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In this response, we can see ",(0,s.jsx)(n.code,{children:'"accountSelectionRequired": true'})," and now we have an ",(0,s.jsx)(n.code,{children:"account"})," field populated\nwith a source ",(0,s.jsx)(n.code,{children:"Docusign SaaS"})," and a list of accounts on the source ",(0,s.jsx)(n.code,{children:"accountsOnSource"}),". We will need to provide\none of those accounts when requesting access. The account provided will be granted access when the\nrequest is processed or approved."]}),"\n",(0,s.jsx)(n.h3,{id:"create-access-request-with-account-selection-on-a-single-source",children:"create-access-request with account selection on a single source"}),"\n",(0,s.jsxs)(n.p,{children:["Here we provide the ",(0,s.jsx)(n.code,{children:"account"})," argument with the ",(0,s.jsx)(n.code,{children:"sourceID"})," found from the ",(0,s.jsx)(n.code,{children:"list-requestable"})," output and a ",(0,s.jsx)(n.code,{children:"nativeIdentifier"}),"\nfrom the selected account. Names are provided in the ",(0,s.jsx)(n.code,{children:"list-requestable"})," output for readability, but only\nIDs are needed when creating the access request."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "method": "tools/call",\n  "params": {\n    "name": "create-access-request",\n    "arguments": {\n      "accounts": [\n        {\n          "nativeIdentifier": "4a5c3db6-93d6-4e60-aeb8-6b619b39d2a2",\n          "sourceID": "d557aca6b2b34d8bafcb967bad2eb362"\n        }\n      ],\n      "id": "1e60f364c6a7488c9da58767b99d9f91",\n      "type": "ACCESS_PROFILE"\n    },\n    "_meta": {\n      "progressToken": 11\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-access-request-account-selection-required-multiple-sources",children:"Advanced: access request, account selection required, multiple sources"}),"\n",(0,s.jsxs)(n.p,{children:["This applies only when requesting access to a ",(0,s.jsx)(n.code,{children:"ROLE"}),". Other types, ",(0,s.jsx)(n.code,{children:"ENTITLEMENTS"})," or ",(0,s.jsx)(n.code,{children:"ACCESS_PROFILES"})," will never have\nmultiple sources. If a ",(0,s.jsx)(n.code,{children:"ROLE"})," has multiple sources, but account selection is NOT required, then the ",(0,s.jsx)(n.code,{children:"create-access-request"}),"\ntool can be called like in the ",(0,s.jsx)(n.a,{href:"#basic-access-request-no-account-selection-required",children:"basic example"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"list-requestable-output-account-selection-required-multiple-sources",children:"list requestable output, account selection required, multiple sources"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "requestableObjects": [\n    {\n      "id": "96de174222334904af51c44d291f062d",\n      "type": "ROLE",\n      "name": "multi_role2",\n      "accounts": [\n        {\n          "sourceId": "1f0b717b629c4f68acad1dddbdc37636",\n          "sourceName": "multi_source_3",\n          "accountsOnSource": [\n            {\n              "nativeIdentity": "adam33.archer33",\n              "accountName": "adam33.archer33"\n            },\n            {\n              "nativeIdentity": "adam31.archer31",\n              "accountName": "adam31.archer31"\n            },\n            {\n              "nativeIdentity": "adam32.archer32",\n              "accountName": "adam32.archer32"\n            }\n          ]\n        },\n        {\n          "sourceId": "0526a35ae98840a5b8b81942cd2042ec",\n          "sourceName": "multi_source_4",\n          "accountsOnSource": [\n            {\n              "nativeIdentity": "adam34.archer34",\n              "accountName": "adam34.archer34"\n            },\n            {\n              "nativeIdentity": "adam35.archer35",\n              "accountName": "adam35.archer35"\n            },\n            {\n              "nativeIdentity": "adam36.archer36",\n              "accountName": "adam36.archer36"\n            }\n          ]\n        }\n      ],\n      "accountSelectionRequired": true\n    }\n  ],\n  "accessItemsWithError": null,\n  "resultsCount": 1,\n  "totalCount": 1\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Here we can see that the ",(0,s.jsx)(n.code,{children:"accounts"})," object contains two sources: ",(0,s.jsx)(n.code,{children:"multi_source_3"})," and ",(0,s.jsx)(n.code,{children:"multi_source_4"})," and that the identity\nhas multiple accounts on each of those sources."]}),"\n",(0,s.jsx)(n.h3,{id:"create-access-request-with-account-selection-on-multiple-sources",children:"create-access-request with account selection on multiple sources"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "method": "tools/call",\n  "params": {\n    "name": "create-access-request",\n    "arguments": {\n      "accounts": [\n        {\n          "nativeIdentifier": "adam33.archer33",\n          "sourceID": "1f0b717b629c4f68acad1dddbdc37636"\n        },\n        {\n          "sourceID": "0526a35ae98840a5b8b81942cd2042ec",\n          "nativeIdentifier": "adam34.archer34"\n        }\n      ],\n      "id": "96de174222334904af51c44d291f062d",\n      "type": "ROLE"\n    },\n    "_meta": {\n      "progressToken": 15\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.code,{children:"accounts"}),", we provided two items, one for each source found in the ",(0,s.jsx)(n.code,{children:"list-requestable"})," output. Each item contains\nthe source ID and native identifier of the selected account. The accounts provided are the accounts that will\nget access when the request is processed or approved."]}),"\n",(0,s.jsx)(n.h2,{id:"advanced-access-request-account-selection-required-multiple-sources-0-to-many-accounts",children:"Advanced: access request, account selection required, multiple sources, 0 to many accounts"}),"\n",(0,s.jsxs)(n.p,{children:["The most complicated example is requesting access to a ",(0,s.jsx)(n.code,{children:"ROLE"})," with many sources that have different account selection needs.\nFor example, the role has three sources. In source 1, the identity has exactly one account.\nIn source 2, the identity has two (or more) accounts. In source 3, the identity has no accounts yet, which occurs\nwhen the identity is requesting access to something that they have never accessed and don't already have an account provisioned."]}),"\n",(0,s.jsx)(n.h3,{id:"list-requestable-output-account-selection-required-multiple-sources-0-to-many-accounts",children:"list requestable output, account selection required, multiple sources, 0 to many accounts"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "requestableObjects": [\n    {\n      "id": "9dedea914e1c4de49cfc787c6586b7f0",\n      "type": "ROLE",\n      "name": "multi_role",\n      "accounts": [\n        {\n          "sourceId": "1f0b717b629c4f68acad1dddbdc37636",\n          "sourceName": "multi_source_3",\n          "accountsOnSource": [\n            {\n              "nativeIdentity": "adam33.archer33",\n              "accountName": "adam33.archer33"\n            },\n            {\n              "nativeIdentity": "adam31.archer31",\n              "accountName": "adam31.archer31"\n            },\n            {\n              "nativeIdentity": "adam32.archer32",\n              "accountName": "adam32.archer32"\n            }\n          ]\n        },\n        {\n          "sourceId": "c6443c52141e4878aff5c0507e3db09b",\n          "sourceName": "multi_source_1"\n        },\n        {\n          "sourceId": "cf49453f8b184c6dacfd9acfe621e1ff",\n          "sourceName": "multi_source_2",\n          "accountsOnSource": [\n            {\n              "nativeIdentity": "adam2.archer2",\n              "accountName": "adam2.archer2"\n            }\n          ]\n        }\n      ],\n      "accountSelectionRequired": true\n    }\n  ],\n  "accessItemsWithError": null,\n  "resultsCount": 1,\n  "totalCount": 1\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Here we can see that the role, ",(0,s.jsx)(n.code,{children:"multi-role"}),", has three sources: ",(0,s.jsx)(n.code,{children:"multi_source_1"}),", ",(0,s.jsx)(n.code,{children:"multi_source_2"}),", and ",(0,s.jsx)(n.code,{children:"multi_source_3"}),".\nThe identity does not yet have an account on ",(0,s.jsx)(n.code,{children:"multi_source_1"}),". The user has exactly one account on ",(0,s.jsx)(n.code,{children:"multi_source_2"}),". The\nuser has three accounts on ",(0,s.jsx)(n.code,{children:"multi_source_3"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"create-access-request-with-account-selection-on-multiple-sources-0-to-many-accounts",children:"create-access-request with account selection on multiple sources, 0 to many accounts"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "method": "tools/call",\n  "params": {\n    "name": "create-access-request",\n    "arguments": {\n      "accounts": [\n        {\n          "nativeIdentifier": "adam33.archer33",\n          "sourceID": "1f0b717b629c4f68acad1dddbdc37636"\n        },\n        {\n          "sourceID": "c6443c52141e4878aff5c0507e3db09b"\n        },\n        {\n          "sourceID": "cf49453f8b184c6dacfd9acfe621e1ff",\n          "nativeIdentifier": "adam2.archer2"\n        }\n      ],\n      "id": "9dedea914e1c4de49cfc787c6586b7f0",\n      "type": "ROLE"\n    },\n    "_meta": {\n      "progressToken": 18\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Here we have selected the ",(0,s.jsx)(n.code,{children:"adam33.archer33"})," account for ",(0,s.jsx)(n.code,{children:"multi_source_3"}),". We have provided no account native identifier for ",(0,s.jsx)(n.code,{children:"multi_source_2"}),"\nbecause the identity doesn't have an account created yet. We have provided the only account native identifier for source\n",(0,s.jsx)(n.code,{children:"multi_source_2"})," because the identity had only one account."]})]})}function l(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},250065:function(e,n,c){c.d(n,{Z:()=>r,a:()=>o});var t=c(667294);let s={},a=t.createContext(s);function o(e){let n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}},57564:function(e){e.exports=JSON.parse('{"id":"extensibility/model-context-protocol/mcp-example-guides","title":"Example Guides","description":"SailPoint\'s MCP Server Tools","source":"@site/docs/extensibility/model-context-protocol/example-guides.mdx","sourceDirName":"extensibility/model-context-protocol","slug":"/extensibility/mcp-example-guides","permalink":"/docs/extensibility/mcp-example-guides","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/extensibility/model-context-protocol/example-guides.mdx","tags":[{"inline":true,"label":"MCP","permalink":"/docs/tags/mcp"}],"version":"current","lastUpdatedBy":"Tyler Mairose","lastUpdatedAt":1757534047000,"sidebarPosition":4,"frontMatter":{"id":"mcp-example-guides","title":"Example Guides","pagination_label":"MCP - Example Guides","sidebar_label":"MCP Example Guides","sidebar_position":4,"sidebar_class_name":"mcp","keywords":["mcp"],"description":"SailPoint\'s MCP Server Tools","slug":"/extensibility/mcp-example-guides","tags":["MCP"]},"sidebar":"openApiSidebar","previous":{"title":"MCP - Available Tools","permalink":"/docs/extensibility/mcp-available-tools"},"next":{"title":"Claude Desktop","permalink":"/docs/extensibility/mcp/integrations/claude-desktop"}}')}}]);