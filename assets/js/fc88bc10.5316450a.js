"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["864432"],{788293:function(e,n,t){t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var r=t(825615),i=t(785893),o=t(250065);let s={id:"beta-org-config",title:"OrgConfig",pagination_label:"OrgConfig",sidebar_label:"OrgConfig",sidebar_class_name:"gosdk",keywords:["go","Golang","sdk","OrgConfig","BetaOrgConfig"],slug:"/tools/sdk/go/beta/methods/org-config",tags:["SDK","Software Development Kit","OrgConfig","BetaOrgConfig"]},a="OrgConfigAPI",l={},d=[{value:"get-org-config",id:"get-org-config",level:2},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Other Parameters",id:"other-parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example",level:3},{value:"get-valid-time-zones",id:"get-valid-time-zones",level:2},{value:"Path Parameters",id:"path-parameters-1",level:3},{value:"Other Parameters",id:"other-parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-1",level:3},{value:"patch-org-config",id:"patch-org-config",level:2},{value:"Path Parameters",id:"path-parameters-2",level:3},{value:"Other Parameters",id:"other-parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-2",level:3}];function c(e){let n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"orgconfigapi",children:"OrgConfigAPI"})}),"\n",(0,i.jsx)(n.p,{children:"Use this API to implement organization configuration functionality.\nAdministrators can use this functionality to manage organization settings, such as time zones."}),"\n",(0,i.jsxs)(n.p,{children:["All URIs are relative to ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.a,{href:"https://sailpoint.api.identitynow.com/beta",children:"https://sailpoint.api.identitynow.com/beta"})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{children:"HTTP request"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#get-org-config",children:(0,i.jsx)(n.strong,{children:"get-org-config"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Get"})," ",(0,i.jsx)(n.code,{children:"/org-config"})]}),(0,i.jsx)(n.td,{children:"Get org configuration settings"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#get-valid-time-zones",children:(0,i.jsx)(n.strong,{children:"get-valid-time-zones"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Get"})," ",(0,i.jsx)(n.code,{children:"/org-config/valid-time-zones"})]}),(0,i.jsx)(n.td,{children:"Get list of time zones"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#patch-org-config",children:(0,i.jsx)(n.strong,{children:"patch-org-config"})})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Patch"})," ",(0,i.jsx)(n.code,{children:"/org-config"})]}),(0,i.jsx)(n.td,{children:"Patch an org configuration property"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"get-org-config",children:"get-org-config"}),"\n",(0,i.jsx)(n.p,{children:"Get org configuration settings\nGet org configuration with only external (org admin) accessible properties for the current org."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-org-config",children:"API Spec"})}),"\n",(0,i.jsx)(n.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,i.jsx)(n.p,{children:"This endpoint does not need any parameter."}),"\n",(0,i.jsx)(n.h3,{id:"other-parameters",children:"Other Parameters"}),"\n",(0,i.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiGetOrgConfigRequest struct via the builder pattern"}),"\n",(0,i.jsx)(n.h3,{id:"return-type",children:"Return type"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"../models/org-config",children:(0,i.jsx)(n.strong,{children:"OrgConfig"})})}),"\n",(0,i.jsx)(n.h3,{id:"http-request-headers",children:"HTTP request headers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.OrgConfigAPI.GetOrgConfig(context.Background()).Execute()\n	  //resp, r, err := apiClient.Beta.OrgConfigAPI.GetOrgConfig(context.Background()).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `OrgConfigAPI.GetOrgConfig``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetOrgConfig`: OrgConfig\n    fmt.Fprintf(os.Stdout, "Response from `OrgConfigAPI.GetOrgConfig`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(n.h2,{id:"get-valid-time-zones",children:"get-valid-time-zones"}),"\n",(0,i.jsx)(n.p,{children:"Get list of time zones\nGet a list of valid time zones that can be set in org configurations."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/beta/get-valid-time-zones",children:"API Spec"})}),"\n",(0,i.jsx)(n.h3,{id:"path-parameters-1",children:"Path Parameters"}),"\n",(0,i.jsx)(n.p,{children:"This endpoint does not need any parameter."}),"\n",(0,i.jsx)(n.h3,{id:"other-parameters-1",children:"Other Parameters"}),"\n",(0,i.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiGetValidTimeZonesRequest struct via the builder pattern"}),"\n",(0,i.jsx)(n.h3,{id:"return-type-1",children:"Return type"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"[]string"})}),"\n",(0,i.jsx)(n.h3,{id:"http-request-headers-1",children:"HTTP request headers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Content-Type"}),": Not defined"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  \n    \n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.OrgConfigAPI.GetValidTimeZones(context.Background()).Execute()\n	  //resp, r, err := apiClient.Beta.OrgConfigAPI.GetValidTimeZones(context.Background()).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `OrgConfigAPI.GetValidTimeZones``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `GetValidTimeZones`: []string\n    fmt.Fprintf(os.Stdout, "Response from `OrgConfigAPI.GetValidTimeZones`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#",children:"[Back to top]"})}),"\n",(0,i.jsx)(n.h2,{id:"patch-org-config",children:"patch-org-config"}),"\n",(0,i.jsxs)(n.p,{children:["Patch an org configuration property\nPatch configuration of the current org using ",(0,i.jsx)(n.a,{href:"http://jsonpatch.com/",children:"http://jsonpatch.com/"})," syntax.  Commonly used for changing the time zone of an org."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://developer.sailpoint.com/docs/api/beta/patch-org-config",children:"API Spec"})}),"\n",(0,i.jsx)(n.h3,{id:"path-parameters-2",children:"Path Parameters"}),"\n",(0,i.jsx)(n.h3,{id:"other-parameters-2",children:"Other Parameters"}),"\n",(0,i.jsx)(n.p,{children:"Other parameters are passed through a pointer to a apiPatchOrgConfigRequest struct via the builder pattern"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Notes"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"jsonPatchOperation"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../models/json-patch-operation",children:(0,i.jsx)(n.strong,{children:"[]JsonPatchOperation"})})}),(0,i.jsxs)(n.td,{children:["A list of schema attribute update operations according to the ",(0,i.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc6902",children:"JSON Patch"})," standard."]}),(0,i.jsx)(n.td,{})]})})]}),"\n",(0,i.jsx)(n.h3,{id:"return-type-2",children:"Return type"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"../models/org-config",children:(0,i.jsx)(n.strong,{children:"OrgConfig"})})}),"\n",(0,i.jsx)(n.h3,{id:"http-request-headers-2",children:"HTTP request headers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Content-Type"}),": application/json-patch+json"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accept"}),": application/json"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-2",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n	"context"\n	"fmt"\n	"os"\n  "encoding/json"\n    beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"\n	sailpoint "github.com/sailpoint-oss/golang-sdk/v2"\n)\n\nfunc main() {\n    jsonpatchoperation := []byte(`[{op=replace, path=/timeZone, value=America/Toronto}]`) // []JsonPatchOperation | A list of schema attribute update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\n\n    var jsonPatchOperation []beta.JsonPatchOperation\n    if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {\n      fmt.Println("Error:", err)\n      return\n    }\n    \n\n    configuration := sailpoint.NewDefaultConfiguration()\n    apiClient := sailpoint.NewAPIClient(configuration)\n    resp, r, err := apiClient.Beta.OrgConfigAPI.PatchOrgConfig(context.Background()).JsonPatchOperation(jsonPatchOperation).Execute()\n	  //resp, r, err := apiClient.Beta.OrgConfigAPI.PatchOrgConfig(context.Background()).JsonPatchOperation(jsonPatchOperation).Execute()\n    if err != nil {\n	    fmt.Fprintf(os.Stderr, "Error when calling `OrgConfigAPI.PatchOrgConfig``: %v\\n", err)\n	    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n    }\n    // response from `PatchOrgConfig`: OrgConfig\n    fmt.Fprintf(os.Stdout, "Response from `OrgConfigAPI.PatchOrgConfig`: %v\\n", resp)\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#",children:"[Back to top]"})})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},250065:function(e,n,t){t.d(n,{Z:()=>a,a:()=>s});var r=t(667294);let i={},o=r.createContext(i);function s(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}},825615:function(e){e.exports=JSON.parse('{"id":"tools/sdk/go/Reference/Beta/Methods/beta-org-config","title":"OrgConfig","description":"Use this API to implement organization configuration functionality.","source":"@site/docs/tools/sdk/go/Reference/Beta/Methods/OrgConfigAPI.md","sourceDirName":"tools/sdk/go/Reference/Beta/Methods","slug":"/tools/sdk/go/beta/methods/org-config","permalink":"/docs/tools/sdk/go/beta/methods/org-config","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/edit/main/docs/tools/sdk/go/Reference/Beta/Methods/OrgConfigAPI.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"},{"inline":true,"label":"Software Development Kit","permalink":"/docs/tags/software-development-kit"},{"inline":true,"label":"OrgConfig","permalink":"/docs/tags/org-config"},{"inline":true,"label":"BetaOrgConfig","permalink":"/docs/tags/beta-org-config"}],"version":"current","lastUpdatedBy":"developer-relations-sp","lastUpdatedAt":1747667177000,"frontMatter":{"id":"beta-org-config","title":"OrgConfig","pagination_label":"OrgConfig","sidebar_label":"OrgConfig","sidebar_class_name":"gosdk","keywords":["go","Golang","sdk","OrgConfig","BetaOrgConfig"],"slug":"/tools/sdk/go/beta/methods/org-config","tags":["SDK","Software Development Kit","OrgConfig","BetaOrgConfig"]},"sidebar":"openApiSidebar","previous":{"title":"OAuthClients","permalink":"/docs/tools/sdk/go/beta/methods/o-auth-clients"},"next":{"title":"PasswordConfiguration","permalink":"/docs/tools/sdk/go/beta/methods/password-configuration"}}')}}]);