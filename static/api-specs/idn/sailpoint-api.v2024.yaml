openapi: 3.0.1
info:
  title: Identity Security Cloud V2024 API
  description: Use these APIs to interact with the Identity Security Cloud platform
    to achieve repeatable, automated processes with greater scalability. We encourage
    you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss
    to connect with other developers using our APIs.
  termsOfService: https://developer.sailpoint.com/discuss/tos
  contact:
    name: Developer Relations
    url: https://developer.sailpoint.com/discuss/api-help
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: v2024
servers:
- url: https://{tenant}.api.identitynow.com/v2024
  description: This is the production API server.
  variables:
    tenant:
      default: sailpoint
      description: This is the name of your tenant, typically your company's name.
- url: https://{apiUrl}/v2024
  description: This is the V2024 API server.
  variables:
    apiUrl:
      default: sailpoint.api.identitynow.com
      description: This is the api url of your tenant
tags:
  - name: Access Model Metadata
    description: |
      Use this API to create and manage metadata attributes for your Access Model.
      Access Model Metadata allows you to add contextual information to your ISC Access Model items using pre-defined metadata for risk, regulations, privacy levels, etc., or by creating your own metadata attributes to reflect the unique needs of your organization. This release of the API includes support for entitlement metadata. Support for role and access profile metadata will be introduced in a subsequent release.
      
      Common usages for Access Model metadata include:
      
      - Organizing and categorizing access items to make it easier for your users to search for and find the access rights they want to request, certify, or manage.
      
      - Providing richer information about access that is being acted on to allow stakeholders to make better decisions when approving, certifying, or managing access rights.
      
      - Identifying access that may requires additional approval requirements or be subject to more frequent review.
  - name: Access Profiles
    description: |
      Use this API to implement and customize access profile functionality. 
      With this functionality in place, administrators can create access profiles and configure them for use throughout Identity Security Cloud, enabling users to get the access they need quickly and securely.
      
      Access profiles group entitlements, which represent access rights on sources. 

      For example, an Active Directory source in Identity Security Cloud can have multiple entitlements: the first, 'Employees,' may represent the access all employees have at the organization, and a second, 'Developers,' may represent the access all developers have at the organization.
      
      An administrator can then create a broader set of access in the form of an access profile, 'AD Developers' grouping the 'Employees' entitlement with the 'Developers' entitlement.
      
      When users only need Active Directory employee access, they can request access to the 'Employees' entitlement.
      
      When users need both Active Directory employee and developer access, they can request access to the 'AD Developers' access profile.
      
      Identity Security Cloud uses access profiles in many features, including the following:
      
      - Provisioning: When you use the Provisioning Service, lifecycle states and roles both grant access to users in the form of access profiles.
      
      - Certifications: You can approve or revoke access profiles in certification campaigns, just like entitlements. 
      
      - Access Requests: You can assign access profiles to applications, and when a user requests access to the app associated with an access profile and someone approves the request, access is granted to both the application and its associated access profile.

      - Roles: You can group one or more access profiles into a role to quickly assign access items based on an identity's role. 
      
      In Identity Security Cloud, administrators can use the Access drop-down menu and select Access Profiles to view, configure, and delete existing access profiles, as well as create new ones. 
      Administrators can enable and disable an access profile, and they can also make the following configurations: 
      
      - Manage Entitlements: Manage the profile's access by adding and removing entitlements. 
      
      - Access Requests: Configure access profiles to be requestable and establish an approval process for any requests that the access profile be granted or revoked. 
      Do not configure an access profile to be requestable without first establishing a secure access request approval process for the access profile.
      
      - Multiple Account Options: Define the logic Identity Security Cloud uses to provision access to an identity with multiple accounts on the source. 

      Refer to [Managing Access Profiles](https://documentation.sailpoint.com/saas/help/access/access-profiles.html) for more information about access profiles.
  - name: Access Request Approvals
    description: |
      Use this API to implement and customize access request approval functionality. 
      With this functionality in place, administrators can delegate qualified users to review users' requests for access or managers' requests to revoke team members' access to applications, entitlements, or roles.      
      This enables more qualified users to review access requests and the others to spend their time on other tasks.  

      In Identity Security Cloud, users can request access to applications, entitlements, and roles, and managers can request that team members' access be revoked.   
      For applications and entitlements, administrators can set access profiles to require approval from the access profile owner, the application owner, the source owner, the requesting user's manager, or a governance group for access to be granted or revoked.   
      For roles, administrators can also set roles to allow access requests and require approval from the role owner, the requesting user's manager, or a governance group for access to be granted or revoked.   
      If the administrator designates a governance group as the required approver, any governance group member can approve the requests.
         
      When a user submits an access request, Identity Security Cloud sends the first required approver in the queue an email notification, based on the access request configuration's approval and reminder escalation configuration.

      In Approvals in Identity Security Cloud, required approvers can view pending access requests under the Requested tab and approve or deny them, or the approvers can reassign the requests to different reviewers for approval.   
      If the required approver approves the request and is the only reviewer required, Identity Security Cloud grants or revokes access, based on the request.   
      If multiple reviewers are required, Identity Security Cloud sends the request to the next reviewer in the queue, based on the access request configuration's approval reminder and escalation configuration.   
      The required approver can then view any completed access requests under the Reviewed tab.   

      Refer to [Access Requests](https://documentation.sailpoint.com/saas/help/requests/index.html) for more information about access request approvals.
  - name: Access Request Identity Metrics
    description: |
      Use this API to implement access request identity metrics functionality.
      With this functionality in place, access request reviewers can see relevant details about the requested access item and associated source activity. 
      This allows reviewers to see how many of the identities who share a manager with the access requester have this same type of access and how many of them have had activity in the related source. 
      This additional context about whether the access has been granted before and how often it has been used can help those approving access requests make more informed decisions.
  - name: Access Requests
    description: |
      Use this API to implement and customize access request functionality. 
      With this functionality in place, users can request access to applications, entitlements, or roles, and managers can request that team members' access be revoked.
      This allows users to get access to the tools they need quickly and securely, and it allows managers to take away access to those tools. 

      Identity Security Cloud's Access Request service allows end users to request access that requires approval before it can be granted to users and enables qualified users to review those requests and approve or deny them.

      In the Request Center in Identity Security Cloud, users can view available applications, roles, and entitlements and request access to them. 
      If the requested tools requires approval, the requests appear as 'Pending' under the My Requests tab until the required approver approves, rejects, or cancels them. 

      Users can use My Requests to track and/or cancel the requests.

      In My Team on the Identity Security Cloud Home, managers can submit requests to revoke their team members' access. 
      They can use the My Requests tab under Request Center to track and/or cancel the requests.

      Refer to [Requesting Access](https://documentation.sailpoint.com/saas/user-help/requests/requesting_access.html) for more information about access requests.
  - name: Account Activities
    description: |
      Use this API to implement account activity tracking functionality.
      With this functionality in place, users can track source account activity in Identity Security Cloud, which greatly improves traceability in the system. 

      An account activity refers to a log of each action performed on a source account. This is useful for auditing the changes performed on an account throughout its life. 
      In Identity Security Cloud's Search, users can search for account activities and select the activity's row to get an overview of the activity's account action and view its progress, its involved sources, and its most basic metadata, such as the identity requesting the option and the recipient. 

      Account activity includes most actions Identity Security Cloud completes on source accounts. Users can search in Identity Security Cloud for the following account action types: 

      - Access Request: These include any access requests the source account is involved in. 

      - Account Attribute Updates: These include updates to a single attribute on an account on a source. 

      - Account State Update: These include locking or unlocking actions on an account on a source. 

      - Certification: These include actions removing an entitlement from an account on a source as a result of the entitlement's revocation during a certification.

      - Cloud Automated `Lifecyclestate`: These include automated lifecycle state changes that result in a source account's correlated identity being assigned to a different lifecycle state. 
      Identity Security Cloud replaces the `Lifecyclestate` variable with the name of the lifecycle state it has moved the account's identity to. 

      - Identity Attribute Update: These include updates to a source account's correlated identity attributes as the result of a provisioning action. 
      When you update an identity attribute that also updates an identity's lifecycle state, the cloud automated `Lifecyclestate` event also displays.
      Account Activity does not include attribute updates that occur as a result of aggregation.

      - Identity Refresh: These include correlated identity refreshes that occur for an account on a source whenever the account's correlated identity profile gets a new role or updates. 
      These also include refreshes that occur whenever Identity Security Cloud assigns an application to the account's correlated identity based on the application's being assigned to All Users From Source or Specific Users From Source. 

      - Lifecycle State Refresh: These include the actions that took place when a lifecycle state changed. This event only occurs after a cloud automated `Lifecyclestate` change or a lifecycle state change. 

      - Lifecycle State Change: These include the account activities that result from an identity's manual assignment to a null lifecycle state.

      - Password Change: These include password changes on sources.

      Refer to [Account Activity](https://documentation.sailpoint.com/saas/help/search/index.html#account-activity) for more information about account activities.
  - name: Account Aggregations
    description: |
      Use this API to implement account aggregation progress tracking functionality.
      With this functionality in place, administrators can view in-progress account aggregations, their statuses, and their relevant details.

      An account aggregation refers to the process Identity Security Cloud uses to gather and load account data from a source into Identity Security Cloud.

      Whenever Identity Security Cloud is in the process of aggregating a source, it adds an entry to the Aggregation Activity Log, along with its relevant details.
      To view aggregation activity, administrators can select the Connections drop-down menu, select Sources, and select the relevant source, select its Import Data tab, and select Account Aggregation.
      In Account Aggregation, administrators can view the account aggregations' statuses and details in the Account Activity Log.

      Refer to [Loading Account Data](https://documentation.sailpoint.com/saas/help/accounts/loading_data.html) for more information about account aggregations.
  - name: Account Usages
    description: |
      Use this API to implement account usage insight functionality.
      With this functionality in place, administrators can gather information and insights about how their tenants' source accounts are being used.
      This allows organizations to get the information they need to start optimizing and securing source account usage.
  - name: Accounts
    description: |
      Use this API to implement and customize account functionality.
      With this functionality in place, administrators can manage users' access across sources in Identity Security Cloud. 

      In Identity Security Cloud, an account refers to a user's account on a supported source.
      This typically includes a unique identifier for the user, a unique password, a set of permissions associated with the source and a set of attributes. Identity Security Cloud loads accounts through the creation of sources in Identity Security Cloud.

      Administrators can correlate users' identities with the users' accounts on the different sources they use. 
      This allows Identity Security Cloud to govern the access of identities and all their correlated accounts securely and cohesively. 

      To view the accounts on a source and their correlated identities, administrators can use the Connections drop-down menu, select Sources, select the relevant source, and select its Account tab. 

      To view and edit source account statuses for an identity in Identity Security Cloud, administrators can use the Identities drop-down menu, select Identity List, select the relevant identity, and select its Accounts tab. 
      Administrators can toggle an account's Actions to aggregate the account, enable/disable it, unlock it, or remove it from the identity. 

      Accounts can have the following statuses: 

      - Enabled: The account is enabled. The user can access it.

      - Disabled: The account is disabled, and the user cannot access it, but the identity is not disabled in Identity Security Cloud. This can occur when an administrator disables the account or when the user's lifecycle state changes. 

      - Locked: The account is locked. This may occur when someone has entered an incorrect password for the account too many times.

      - Pending: The account is currently updating. This status typically lasts seconds. 

      Administrators can select the source account to view its attributes, entitlements, and the last time the account's password was changed.

      Refer to [Managing User Accounts](https://documentation.sailpoint.com/saas/help/common/users/user_access.html#managing-user-accounts) for more information about accounts.
  - name: Application Discovery
    description: |
      Use this API to implement application discovery functionality. 
      With this functionality in place, you can discover applications within your Okta connector and receive connector recommendations by manually uploading application names.
  - name: Approvals
    description: |
      Use this API to implement approval functionality. With this functionality in place, you can get generic approvals and modify them. 
      
      The main advantages this API has vs [Access Request Approvals](https://developer.sailpoint.com/docs/api/v2024/access-request-approvals) are that you can use it to get generic approvals individually or in batches and make changes to those approvals. 
  - name: Apps 
    description: |
      Use this API to implement source application functionality. 
      With this functionality in place, you can create, customize, and manage applications within sources.
  - name: Auth Profile
    description: |
      Use this API to implement Auth Profile functionality. 
      With this functionality in place, users can read authentication profiles and make changes to them. 
      
      An authentication profile represents an identity profile's authentication configuration. 
      When the identity profile is created, its authentication profile is also created. 
      An authentication profile includes information like its authentication profile type (`BLOCK`, `MFA`, `NON_PTA`, PTA`) and settings controlling whether or not it blocks access from off network or untrusted geographies. 
  - name: Auth Users
    description: |
      Use this API to implement user authentication system functionality. 
      With this functionality in place, users can get a user's authentication system details, including their capabilities, and modify those capabilities. 
      The user's capabilities refer to their access to different systems, or authorization, within the tenant, like access to certifications (CERT_ADMIN) or reports (REPORT_ADMIN). 
      These capabilities also determine a user's access to the different APIs. 
      This API provides users with a way to determine a user's access and make quick and easy changes to that access. 
  - name: Branding
    description: |
      Use this API to implement and customize branding functionality. 
      With this functionality in place, administrators can get and manage existing branding items, and they can also create new branding items and configure them for use throughout Identity Security Cloud. 
      The Branding APIs provide administrators with a way to customize branding items. 
      This customization includes details like their colors, logos, and other information. 
      Refer to [Certifications](https://documentation.sailpoint.com/saas/user-help/certifications.html) for more information about certifications.
  - name: Certification Campaign Filters
    description: |
      Use this API to implement the certification campaign filter functionality. These filters can be used to create a certification campaign that includes a subset of your entitlements or users to certify.
      
      For example, if for a certification campaign an organization wants to certify only specific users or entitlements, then those can be included/excluded on the basis of campaign filters.
      
      For more information about creating a campaign filter, refer to [Creating a Campaign Filter](https://documentation.sailpoint.com/saas/help/certs/campaign_filters.html#creating-a-campaign-filter)
      
      You can create campaign filters using any of the following criteria types:
      
      - Access Profile : This criteria type includes or excludes access profiles from a campaign.
      
      - Account Attribute : This criteria type includes or excludes certification items that match a specified value in an account attribute.
      
      - Entitlement : This criteria type includes or excludes entitlements from a campaign.
      
      - Identity : This criteria type includes or excludes specific identities from your campaign.
      
      - Identity Attribute : This criteria type includes or excludes identities based on whether they have an identity attribute that matches criteria you've chosen.
      
      - Role : This criteria type includes or excludes roles, as opposed to identities.
      
      - Source : This criteria type includes or excludes entitlements from a source you select.
      
      For more information about these criteria types, refer to [Types of Campaign Filters](https://documentation.sailpoint.com/saas/help/certs/campaign_filters.html#types-of-campaign-filters)
      
      Once the campaign filter is created, it can be linked while creating the campaign. The generated campaign will have the items to review as per the campaign filter.
      
      For example, An inclusion campaign filter is created with a source of Source 1, an operation of Equals, and an entitlement of Entitlement 1. When this filter is selected, only users who have Entitlement 1 are included in the campaign, and only Entitlement 1 is shown in the certification.
  - name: Certification Campaigns
    description: |
      Use this API to implement certification campaign functionality.
      With this functionality in place, administrators can create, customize, and manage certification campaigns for their organizations' use. 
      Certification campaigns provide Identity Security Cloud users with an interactive review process they can use to identify and verify access to systems. 
      Campaigns help organizations reduce risk of inappropriate access and satisfy audit requirements. 

      A certification refers to Identity Security Cloud's mechanism for reviewing a user's access to entitlements (sets of permissions) and approving or removing that access. 
      These certifications serve as a way of showing that a user's access has been reviewed and approved. 
      Multiple certifications by different reviewers are often required to approve a user's access. 
      A set of multiple certifications is called a certification campaign. 

      For example, an organization may use a Manager Certification campaign as a way of showing that a user's access has been reviewed and approved by multiple managers. 
      Once this campaign has been completed, Identity Security Cloud would provision all the access the user needs, nothing more. 

      Identity Security Cloud provides two simple campaign types users can create without using search queries, Manager and Source Owner campaigns:

      You can create these types of campaigns without using any search queries in Identity Security Cloud: 
      
      - ManagerCampaign: Identity Security Cloud provides this campaign type as a way to ensure that an identity's access is certified by their managers. 
      You only need to provide a name and description to create one. 
      
      - Source Owner Campaign: Identity Security Cloud provides this campaign type as a way to ensure that an identity's access to a source is certified by its source owners. 
      You only need to provide a name and description to create one. 
      You can specify the sources whose owners you want involved or just run it across all sources. 

      For more information about these campaign types, refer to [Starting a Manager or Source Owner Campaign](https://documentation.sailpoint.com/saas/help/certs/starting_campaign.html).

      One useful way to create certification campaigns in Identity Security Cloud is to use a specific search and then run a campaign on the results returned by that search. 
      This allows you to be much more specific about whom you are certifying in your campaigns and what access you are certifying in your campaigns. 
      For example, you can search for all identities who are managed by "Amanda.Ross" and also have the access to the "Accounting" role and then run a certification campaign based on that search to ensure that the returned identities are appropriately certified. 
      
      You can use Identity Security Cloud search queries to create these types of campaigns: 

      - Identities: Use this campaign type to review and revoke access items for specific identities. 
      You can either build a search query and create a campaign certifying all identities returned by that query, or you can search for individual identities and add those identities to the certification campaign. 

      - Access Items: Use this campaign type to review and revoke a set of roles, access profiles, or entitlements from the identities that have them. 
      You can either build a search query and create a campaign certifying all access items returned by that query, or you can search for individual access items and add those items to the certification campaign. 

      - Role Composition: Use this campaign type to review a role's composition, including its title, description, and membership criteria. 
      You can either build a search query and create a campaign certifying all roles returned by that query, or you can search for individual roles and add those roles to the certification campaign. 

      - Uncorrelated Accounts: Use this campaign type to certify source accounts that aren't linked to an authoritative identity in Identity Security Cloud. 
      You can use this campaign type to view all the uncorrelated accounts for a source and certify them. 

      For more information about search-based campaigns, refer to [Starting a Campaign from Search](https://documentation.sailpoint.com/saas/help/certs/starting_search_campaign.html).

      Once you have generated your campaign, it becomes available for preview. 
      An administrator can review the campaign and make changes, or if it's ready and accurate, activate it. 
      
      Once the campaign is active, organization administrators or certification administrators can designate other Identity Security Cloud users as certification reviewers. 
      Those reviewers can view any of the certifications they either need to review (active) or have already reviewed (completed).

      When a certification campaign is in progress, certification reviewers see the listed active certifications whose involved identities they can review. 
      Reviewers can then make decisions to grant or revoke access, as well as reassign the certification to another reviewer. If the reviewer chooses this option, they must provide a reason for reassignment in the form of a comment.

      Once a reviewer has made decisions on all the certification's involved access items, he or she must "Sign Off" to complete the review process.
      Doing so converts the certification into read-only status, preventing any further changes to the review decisions and deleting the work item (task) from the reviewer's list of work items. 

      Once all the reviewers have signed off, the certification campaign either completes or, if any reviewers decided to revoke access for any of the involved identities, it moves into a remediation phase. 
      In the remediation phase, identities' entitlements are altered to remove any entitlements marked for revocation.
      In this situation, the certification campaign completes once all the remediation requests are completed. 

      The end of a certification campaign is determined by its deadline, its completion status, or by an administrator's decision. 

      For more information about certifications and certification campaigns, refer to [Certifications](https://documentation.sailpoint.com/saas/user-help/certifications.html).
  - name: Certification Summaries
    description: |
      Use this API to implement certification summary functionality. 
      With this functionality in place, administrators and designated certification reviewers can review summaries of identity certification campaigns and draw conclusions about the campaigns' scope, security, and effectiveness. 
      Implementing certification summary functionality improves organizations' ability to review their [certifications](https://documentation.sailpoint.com/saas/user-help/certifications.html) and helps them satisfy audit and regulatory requirements by enabling them to trace access changes and the decisions made in their review processes. 

      A certification refers to Identity Security Cloud's mechanism for reviewing a user's access to entitlements (sets of permissions) and approving or removing that access. 
      These certifications serve as a way of showing that a user's access has been reviewed and approved. 
      Multiple certifications by different reviewers are often required to approve a user's access. 
      A set of multiple certifications is called a certification campaign. 

      For example, an organization may use a Manager Certification as a way of showing that a user's access has been reviewed and approved by their manager, or if the certification is part of a campaign, that the user's access has been reviewed and approved by multiple managers. 
      Once this certification has been completed, Identity Security Cloud  would provision all the access the user needs, nothing more. 

      Certification summaries provide information about identity certification campaigns such as the identities involved, the number of decisions made, and the access changed. 
      For example, an administrator or designated certification reviewer can examine the Manager Certification campaign to get an overview of how many entitlement decisions are made in that campaign as opposed to role decisions, which identities would be affected by changes to the campaign, and how those identities' access would be affected.
  - name: Certifications
    description: |
      Use this API to implement certification functionality. 
      With this functionality in place, administrators and designated certification reviewers can review users' access certifications and decide whether to approve access, revoke it, or reassign the review to another reviewer. 
      Implementing certifications improves organizations' data security by reducing inappropriate access through a distributed review process and helping them satisfy audit and regulatory requirements. 

      A certification refers to Identity Security Cloud's mechanism for reviewing a user's access to entitlements (sets of permissions) and approving or removing that access. 
      These serve as a way of showing that a user's access has been reviewed and approved. 
      Multiple certifications by different reviewers are often required to approve a user's access. 
      A set of multiple certifications is called a certification campaign.

      For example, an organization may use a Manager Certification as a way of showing that a user's access has been reviewed and approved by their manager, or if the certification is part of a campaign, that the user's access has been reviewed and approved by multiple managers. 
      Once this certification has been completed, Identity Security Cloud  would provision all the access the user needs, nothing more. 

      Organization administrators or certification administrators can designate other Identity Security Cloud users as certification reviewers. 
      Those reviewers can select the 'Certifications' tab to view any of the certifications they either need to review or have already reviewed under the 'Active' and 'Completed' tabs, respectively. 

      When a certification campaign is in progress, certification reviewers will see certifications listed under 'Active,' where they can review the involved identities. 
      Under the 'Decision' column on the right, next to each access item, reviewers can select the checkmark to approve access, select the 'X' to revoke access, or they can toggle the 'More Options' menu to reassign the certification to another reviewer and provide a reason for reassignment in the form of a comment. 

      Once a reviewer has made decisions on all the certification's involved access items, he or she must select 'Sign Off' to complete the review process.
      Doing so converts the certification into read-only status, preventing any further changes to the review decisions and deleting the work item (task) from the reviewer's list of work items. 

      Once all the reviewers have signed off, the certification campaign either completes or, if any reviewers decided to revoke access for any of the involved identities, it moves into a remediation phase. In the remediation phase, identities' entitlements are altered to remove any entitlements marked for revocation.
      In this situation, the certification campaign completes once all the remediation requests are completed.
  - name: Configuration Hub
    description: |
      Use this API to implement and customize configuration settings management. With this functionality, you can access the Configuration Hub actions and build your own automated pipeline for Identity Security Cloud configuration change delivery and deployment.
      
      Common usages for Configuration Hub includes:
  
      - Upload configuration file - Configuration files can be managed and deployed using Configuration Hub by uploading a JSON file which contains configuration data.
      - Manage object mapping - Create rules to map and substitute attributes when migrating configurations.
      - Manage backups for configuration settings
      - Manage configuration drafts
      - Upload configurations and manage object mappings between tenants.
      
      Refer to [Using the SailPoint Configuration Hub](https://documentation.sailpoint.com/saas/help/confighub/config_hub.html) for more information about Configuration Hub.
  - name: Connector Customizers
    description: |
      Saas Connectivity Customizers are cloud-based connector customizers. The customizers allow you to customize the out of the box connectors in a similar way to how you can use rules to customize VA (virtual appliance) based connectors.
      
      Use these APIs to implement connector customizers functionality.
  - name: Connector Rule Management
    description: |
      Use this API to implement connector rule management functionality. 
      With this functionality in place, administrators can implement connector-executed rules in a programmatic, scalable way. 

      In Identity Security Cloud (ISC), [rules](https://developer.sailpoint.com/docs/extensibility/rules) serve as a flexible configuration framework you can leverage to perform complex or advanced configurations. 
      [Connector-executed rules](https://developer.sailpoint.com/docs/extensibility/rules/connector-rules) are rules that are executed in the ISC virtual appliance (VA), usually extensions of the [connector](https://documentation.sailpoint.com/connectors/isc/landingpages/help/landingpages/isc_landing.html) itself, the bridge between the data source and ISC. 

      This API allows administrators to view existing connector-executed rules, make changes to them, delete them, and create new ones from the available types.
  - name: Connectors
    description: |
      Use this API to implement connector functionality.
      With this functionality in place, administrators can view available connectors.

      Connectors are the bridges Identity Security Cloud uses to communicate with and aggregate data from sources.
      For example, if it is necessary to set up a connection between Identity Security Cloud and the Active Directory source, a connector can bridge the two and enable Identity Security Cloud to synchronize data between the systems.
      This ensures account entitlements and states are correct throughout the organization.

      In Identity Security Cloud, administrators can use the Connections drop-down menu and select Sources to view the available source connectors.

      Refer to [Identity Security Cloud Connectors](https://documentation.sailpoint.com/connectors/identitynow/landingpages/help/landingpages/identitynow_connectivity_landing.html) for more information about the connectors available in Identity Security Cloud.

      Refer to [SaaS Connectivity](https://developer.sailpoint.com/docs/connectivity/saas-connectivity/) for more information about the SaaS custom connectors that do not need VAs (virtual appliances) to communicate with their sources.

      Refer to [Managing Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html) for more information about using connectors in Identity Security Cloud.
  - name: Custom Forms
    description: |
      Use this API to build and manage custom forms.
      With this functionality in place, administrators can create and view form definitions and form instances.

      Forms are composed of sections and fields. Sections split the form into logical groups of fields and fields are the data collection points within the form. Configure conditions to modify elements of the form as the responder provides input. Create form inputs to pass information from a calling feature, like a workflow, to your form.

      Forms can be used within workflows as an action or as a trigger. The Form Action allows you to assign a form as a step in a running workflow, suspending the workflow until the form is submitted or times out, and the workflow resumes. The Form Submitted Trigger initiates a workflow when a form is submitted. The trigger can be configured to initiate on submission of a full form, a form element with any value, or a form element with a particular value.
      
      Refer to [Forms](https://documentation.sailpoint.com/saas/help/forms/index.html) for more information about using forms in Identity Security Cloud.
  - name: Custom Password Instructions
    description: |
      Use this API to implement custom password instruction functionality.
      With this functionality in place, administrators can create custom password instructions to help users reset their passwords, change them, unlock their accounts, or recover their usernames.
      This allows administrators to emphasize password policies or provide organization-specific instructions.

      Administrators must first use [Update Password Org Config](https://developer.sailpoint.com/docs/api/v2024/put-password-org-config/) to set `customInstructionsEnabled` to `true`.

      Once they have enabled custom instructions, they can use [Create Custom Password Instructions](https://developer.sailpoint.com/docs/api/v2024/create-custom-password-instructions/) to create custom page content for the specific pageId they select.

      For example, an administrator can use the pageId forget-username:user-email to set the custom text for the case when users forget their usernames and must enter their emails.

      Refer to [Creating Custom Instruction Text](https://documentation.sailpoint.com/saas/help/pwd/pwd_reset.html#creating-custom-instruction-text) for more information about creating custom password instructions.
  - name: Data Segmentation
    description: |
      This service is responsible for creating segments that will determine how access is delegated to identities
      withing the organization.
  - name: Dimensions
    description:
      Use this API to implement and customize dynamic role functionality.
      With this functionality in place, administrators can create dimensions and configure them for use throughout Identity Security Cloud.
      Identity Security Cloud can use established criteria to automatically assign the dimensions to qualified users. This enables users to get all the access they need quickly and securely and administrators to spend their time on other tasks.
      Entitlements represent the most granular level of access in Identity Security Cloud.
      
      Access profiles represent the next level and often group entitlements.
      Dimension represent access selectively based on the evaluation of contextual information that is available or provided. Each Dimension include context attributes and access selection expressions which map criteria to access right assignments. Each dimension can contain up to 5 context attributes.
      Dynamic Access Roles represent the broadest level of access and often group access profiles ,entitlements and dimensions.Each Dynamic Access Role may contain one or more Dimensions.
  - name: Discovered Applications
    description: |
      Use this API to retrieve all the available discovered apps for a given tenant id.
  - name: Entitlements
    description: |
      Use this API to implement and customize entitlement functionality.
      With this functionality in place, administrators can view entitlements and configure them for use throughout Identity Security Cloud in certifications, access profiles, and roles.
      Administrators in Identity Security Cloud can then grant users access to the entitlements or configure them so users themselves can request access to the entitlements whenever they need them.
      With a good approval process, this entitlement functionality allows users to gain the specific access they need on sources quickly and securely.

      Entitlements represent access rights on sources.
      Entitlements are the most granular form of access in Identity Security Cloud.
      Entitlements are often grouped into access profiles, and access profiles themselves are often grouped into roles, the broadest form of access in Identity Security Cloud.

      For example, an Active Directory source in Identity Security Cloud can have multiple entitlements: the first, 'Employees,' may represent the access all employees have at the organization, and a second, 'Developers,' may represent the access all developers have at the organization.

      An administrator can then create a broader set of access in the form of an access profile, 'AD Developers' grouping the 'Employees' entitlement with the 'Developers' entitlement.

      An administrator can then create an even broader set of access in the form of a role grouping the 'AD Developers' access profile with another profile, 'GitHub Developers,' grouping entitlements for the GitHub source.

      When users only need Active Directory employee access, they can request access to the 'Employees' entitlement.

      When users need both Active Directory employee and developer access, they can request access to the 'AD Developers' access profile.

      When users need both the 'AD Developers' access profile and the 'GitHub Developers' access profile, they can request access to the role grouping both.

      Administrators often use roles and access profiles within those roles to manage access so that users can gain access more quickly, but the hierarchy of access all starts with entitlements.

      Anywhere entitlements appear, you can select them to find more information about the following:

      - Cloud Access Details: These provide details about the cloud access entitlements on cloud-enabled sources.

      - Permissions: Permissions represent individual units of read/write/admin access to a system.

      - Relationships: These list each entitlement's parent and child relationships.

      - Type: This is the entitlement's type. Some sources support multiple types, each with a different attribute schema.

      Identity Security Cloud uses entitlements in many features, including the following:

      - Certifications: Entitlements can be revoked from an identity that no longer needs them.

      - Roles: Roles can group access profiles which themselves group entitlements. You can grant and revoke access on a broad level with roles. Role membership criteria can grant roles to identities based on whether they have certain entitlements or attributes.

      - Access Profiles: Access profiles group entitlements.
      They are the most important units of access in Identity Security Cloud.
      Identity Security Cloud uses them in provisioning, certifications, and access requests, and administrators can configure them to grant very broad or very granular access.

      You cannot delete entitlements directly from Identity Security Cloud.
      Entitlements are deleted based on their inclusion in aggregations.

      Refer to [Deleting Entitlements](https://documentation.sailpoint.com/saas/help/access/entitlements.html#deleting-entitlements) more information about deleting entitlements.

      Refer to [Entitlements](https://documentation.sailpoint.com/saas/help/access/entitlements.html) for more information about entitlements.
  - name: Global Tenant Security Settings
    description: |
      Use this API to implement and customize global tenant security settings.
      With this functionality in place, administrators can manage the global security settings that a tenant/org has.
      This API can be used to configure the networks and Geographies allowed to access Identity Security Cloud URLs.
  - name: Governance Groups
    description: |
      Use this API to implement and customize Governance Group functionality. With this functionality in place, administrators can create Governance Groups and configure them for use throughout Identity Security Cloud.

      A governance group is a group of users that can make governance decisions about access. If your organization has the Access Request or Certifications service, you can configure governance groups to review access requests or certifications. A governance group can determine whether specific access is appropriate for a user.

      Refer to [Creating and Managing Governance Groups](https://documentation.sailpoint.com/saas/help/common/users/governance_groups.html) for more information about how to build Governance Groups in the visual builder in the Identity Security Cloud UI.
  - name: IAI Access Request Recommendations
  - name: IAI Common Access
  - name: IAI Message Catalogs
  - name: IAI Outliers
  - name: IAI Peer Group Strategies
  - name: IAI Recommendations
  - name: IAI Role Mining
  - name: Icons
    description: |
      Use this API to implement functionality related to object icons (application icons for example). 
      With this functionality in place, administrators can set or remove an icon for specific object type for use throughout Identity Security Cloud.
  - name: Identities
    description: |
      Use this API to implement identity functionality.
      With this functionality in place, administrators can synchronize an identity's attributes with its various source attributes.

      Identity Security Cloud uses identities as users' authoritative accounts. Identities can own other accounts, entitlements, and attributes.

      An identity has a variety of attributes, such as an account name, an email address, a job title, and more.
      These identity attributes can be correlated with different attributes on different sources.
      For example, the identity John.Smith can own an account in the GitHub source with the account name John-Smith-Org, and Identity Security Cloud knows they are the same person with the same access and attributes.

      In Identity Security Cloud, administrators often set up these synchronizations to get triggered automatically with a change or to run on a schedule.
      To manually synchronize attributes for an identity, administrators can use the Identities drop-down menu and select Identity List to view the list of identities.
      They can then select the identity they want to manually synchronize and use the hamburger menu to select 'Synchronize Attributes.'
      Doing so immediately begins the attribute synchronization and analyzes all accounts for the selected identity.

      Refer to [Synchronizing Attributes](https://documentation.sailpoint.com/saas/help/provisioning/attr_sync.html) for more information about synchronizing attributes.
  - name: Identity Attributes
  - name: Identity History
  - name: Identity Profiles
    description: |
      Use this API to implement identity profile functionality. 
      With this functionality in place, administrators can view identity profiles and their configurations. 

      Identity profiles represent the configurations that can be applied to identities as a way of granting them a set of security and access, as well as defining the mappings between their identity attributes and their source attributes.  

      In Identity Security Cloud, administrators can use the Identities drop-down menu and select Identity Profiles to view the list of identity profiles. 
      This list shows some details about each identity profile, along with its status. 
      They can select an identity profile to view its settings, its mappings between identity attributes and correlating source account attributes, and its provisioning settings. 

      Refer to [Creating Identity Profiles](https://documentation.sailpoint.com/saas/help/setup/identity_profiles.html) for more information about identity profiles.
  - name: Lifecycle States
    description: |
      Use this API to implement and customize lifecycle state functionality.
      With this functionality in place, administrators can create and configure custom lifecycle states for use across their organizations, which is key to controlling which users have access, when they have access, and the access they have.

      A lifecycle state describes a user's status in a company. For example, two lifecycle states come by default with Identity Security Cloud: 'Active' and 'Inactive.' 
      When an active employee takes an extended leave of absence from a company, his or her lifecycle state may change to 'Inactive,' for security purposes. 
      The inactive employee would lose access to all the applications, sources, and sensitive data during the leave of absence, but when the employee returns and becomes active again, all that access would be restored. 
      This saves administrators the time that would otherwise be spent provisioning the employee's access to each individual tool, reviewing the employee's certification history, etc. 

      Administrators can create a variety of custom lifecycle states. Refer to [Planning New Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#planning-new-lifecycle-states) for some custom lifecycle state ideas.

      Administrators must define the criteria for being in each lifecycle state, and they must define how Identity Security Cloud manages users' access to apps and sources for each lifecycle state.

      In Identity Security Cloud, administrators can manage lifecycle states by going to Admin > Identities > Identity Profile, selecting the identity profile whose lifecycle states they want to manage, selecting the 'Provisioning' tab, and using the left panel to either select the lifecycle state they want to modify or create a new lifecycle state. 

      In the 'Provisioning' tab, administrators can make the following access changes to an identity profile's lifecycle state: 

      - Enable/disable the lifecycle state for the identity profile.

      - Enable/disable source accounts for the identity profile's lifecycle state.

      - Add existing access profiles to grant to the identity profiles in that lifecycle state.

      - Create a new access profile to grant to the identity profile in that lifecycle state.

      Access profiles granted in a previous lifecycle state are automatically revoked when the identity moves to a new lifecycle state. 
      To maintain access across multiple lifecycle states, administrators must grant the access profiles in each lifecycle state. 
      For example, if an administrator wants users with the 'HR Employee' identity profile to maintain their building access in both the 'Active' and 'Leave of Absence' lifecycle states, the administrator must grant the access profile for that building access to both lifecycle states.

      During scheduled refreshes, Identity Security Cloud evaluates lifecycle states to determine whether their assigned identities have the access defined in the lifecycle states' access profiles. 
      If the identities are missing access, Identity Security Cloud provisions that access. 

      Administrators can also use the 'Provisioning' tab to configure email notifications for Identity Security Cloud to send whenever an identity with that identity profile has a lifecycle state change. 
      Refer to [Configuring Lifecycle State Notifications](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#configuring-lifecycle-state-notifications) for more information on how to do so.

      An identity's lifecycle state can have four different statuses: the lifecycle state's status can be 'Active,' it can be 'Not Set,' it can be 'Not Valid,' or it 'Does Not Match Technical Name Case.' 
      Refer to [Moving Identities into Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#moving-identities-into-lifecycle-states) for more information about these different lifecycle state statuses. 

      Refer to [Setting Up Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html) for more information about lifecycle states.
  - name: Machine Account Classify
  - name: Machine Account Mappings
  - name: Machine Accounts
  - name: Machine Classification Config
  - name: Machine Identities
  - name: Machine Mapping Metadata
  - name: Managed Clients
    description: |
      Use this API to implement managed client functionality. 
      With this functionality in place, administrators can modify and delete existing managed clients, create new ones, and view and make changes to their log configurations. 
  - name: Managed Cluster Types
    description: |
      Use this API to implement managed cluster types functionality. 
      With this functionality in place, administrators can modify and delete existing managed cluster types and create new ones.
  - name: Managed Clusters
    description: |
      Use this API to implement managed cluster functionality. 
      With this functionality in place, administrators can modify and delete existing managed clients, get their statuses, and create new ones. 
  - name: Manual Discover Applications
    description: |
      Use this API to manually upload application names to be correlated to an ISC connector.
  - name: Manual Discover Applications Template
    description: |
      Use this API to download the CSV template to send to the application discovery service.
  - name: MFA Configuration
    description: Configure and test multifactor authentication (MFA) methods
  - name: MFA Controller
    description: This API used for multifactor authentication functionality belong to gov-multi-auth service. This controller allow you to verify authentication by specified method
  - name: Multi-Host Integration
    description: |
      Use this API to build a Multi-Host Integration.
      Multi-Host Integration will help customers to configure and manage similar type of target system in Identity Security Cloud.
      In Identity Security Cloud, administrators can create a Multi-Host Integration by going to Admin > Connections > Multi-Host Sources and selecting 'Create.'
  - name: Non-Employee Lifecycle Management
    description: |
      Use this API to implement non-employee lifecycle management functionality. 
      With this functionality in place, administrators can create non-employee records and configure them for use in their organizations. 
      This allows organizations to provide secure access to non-employees and control that access. 

      The 'non-employee' term refers to any consultant, contractor, intern, or other user in an organization who is not a full-time permanent employee. 
      Organizations can track non-employees' access and activity in Identity Security Cloud by creating and maintaining non-employee sources. 
      Organizations can have a maximum of 50 non-employee sources. 

      By using SailPoint's Non-Employee Lifecycle Management functionality, you agree to the following:

      - SailPoint is not responsible for storing sensitive data. 
      You may only add account attributes to non-employee identities that are necessary for business operations and are consistent with your contractual limitations on data that may be sent or stored in Identity Security Cloud.

      - You are responsible for regularly downloading your list of non-employee accounts for all the sources you create and storing this list of accounts in a managed location to maintain an authoritative system of record and backup data for these accounts.

      To manage non-employees in Identity Security Cloud, administrators must create a non-employee source and add accounts to the source. 

      To create a non-employee source in Identity Security Cloud, administrators must use the Admin panel to go to Connections > Sources.
      They must then specify 'Non-Employee' in the 'Source Type' field. 
      Refer to [Creating a Non-Employee Source](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html#creating-a-non-employee-source) for more details about how to create non-employee sources.

      To add accounts to a non-employee source in Identity Security Cloud, administrators can select the non-employee source and add the accounts. 
      They can also use the 'Manage Non-Employees' widget on their user dashboards to reach the list of sources and then select the non-employee source they want to add the accounts to. 

      Administrators can either add accounts individually or in bulk. Each non-employee source can have a maximum of 20,000 accounts. 
      To add accounts in bulk, they must select the 'Bulk Upload' option and upload a CSV file. 
      Refer to [Adding Accounts](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html#adding-accounts) for more details about how to add accounts to non-employee sources.

      Once administrators have created the non-employee source and added accounts to it, they can create identity profiles to generate identities for the non-employee accounts and manage the non-employee identities the same way they would any other identities. 

      Refer to [Managing Non-Employee Sources and Accounts](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html) for more information about non-employee lifecycle management.
  - name: Notifications
  - name: OAuth Clients
    description: |
      Use this API to implement OAuth client functionality.   
      With this functionality in place, users with the appropriate security scopes can create and configure OAuth clients to use as a way to obtain authorization to use the Identity Security Cloud REST API.
      Refer to [Authentication](https://developer.sailpoint.com/docs/api/authentication/) for more information about OAuth and how it works with the Identity Security Cloud REST API.
  - name: Org Config
    description: |
      Use this API to implement organization configuration functionality. 
      Administrators can use this functionality to manage organization settings, such as time zones. 
  - name: Password Configuration
    description: |
      Use this API to implement organization password configuration functionality. 
      With this functionality in place, organization administrators can create organization-specific password configurations. 

      These configurations include details like custom password instructions, as well as digit token length and duration. 

      Refer to [Configuring User Authentication for Password Resets](https://documentation.sailpoint.com/saas/help/pwd/pwd_reset.html) for more information about organization password configuration functionality.
  - name: Password Dictionary
    description: |
      Use this API to implement password dictionary functionality.  
      With this functionality in place, administrators can create password dictionaries to prevent users from using certain words or characters in their passwords. 

      A password dictionary is a list of words or characters that users are prevented from including in their passwords. 
      This can help protect users from themselves and force them to create passwords that are not easy to break. 

      A password dictionary must meet the following requirements to for the API to handle them correctly: 

      - It must be in .txt format.

      - All characters must be UTF-8 characters. 

      - Each line must contain a single word or character with no spaces or whitespace characters.

      - It must contain at least one line other than the locale string.

      - Each line must not exceed 128 characters.

      - The file must not exceed 2500 lines. 

      Administrators should also consider the following when they create their dictionaries: 

      - Lines starting with a # represent comments.

      - All words in the password dictionary are case-insensitive. 
      For example, adding the word "password" to the dictionary also disallows the following: PASSWORD, Password, and PassWord.

      - The dictionary uses substring matching. 
      For example, adding the word "spring" to the dictionary also disallows the following: Spring124, 345SprinG, and 8spring.
      Users can then select 'Change Password' to update their passwords. 

      Administrators must do the following to create a password dictionary: 

      - Create the text file that will contain the prohibited password values.

      - If the dictionary is not in English, they must add a locale string to the top line: locale:`languageCode`_`countryCode`

      The languageCode value refers to the language's 2-letter ISO 639-1 code.
      The countryCode value refers to the country's 2-letter ISO 3166-1 code.
      
      Refer to this list https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html to see all the available ISO 639-1 language codes and ISO 3166-1 country codes.

      - Upload the .txt file to Identity Security Cloud with [Update Password Dictionary](https://developer.sailpoint.com/docs/api/v2024/put-password-dictionary). Uploading a new file always overwrites the previous dictionary file.

      Administrators can then specify which password policies check new passwords against the password dictionary by doing the following: In the Admin panel, they can use the Password Mgmt dropdown menu to select Policies, select the policy, and select the 'Prevent use of words in this site's password dictionary' checkbox beside it.

      Refer to [Configuring Advanced Password Management Options](https://documentation.sailpoint.com/saas/help/pwd/adv_config.html) for more information about password dictionaries.
  - name: Password Management
    description: |
      Use this API to implement password management functionality.  
      With this functionality in place, users can manage their identity passwords for all their applications.

      In Identity Security Cloud, users can select their names in the upper right corner of the page and use the drop-down menu to select Password Manager. 
      Password Manager lists the user's identity's applications, possibly grouped to share passwords. 
      Users can then select 'Change Password' to update their passwords. 

      Grouping passwords allows users to update their passwords more broadly, rather than requiring them to update each password individually. 
      Password Manager may list the applications and sources in the following groups:

      - Password Group: This refers to a group of applications that share a password. 
      For example, a user can use the same password for Google Drive, Google Mail, and YouTube. 
      Updating the password for the password group updates the password for all its included applications.

      - Multi-Application Source: This refers to a source with multiple applications that share a password. 
      For example, a user can have a source, G Suite, that includes the Google Calendar, Google Drive, and Google Mail applications. 
      Updating the password for the multi-application source updates the password for all its included applications. 

      - Applications: These are applications that do not share passwords with other applications.

      An organization may require some authentication for users to update their passwords. 
      Users may be required to answer security questions or use a third-party authenticator before they can confirm their updates. 

      Refer to [Managing Passwords](https://documentation.sailpoint.com/saas/user-help/accounts/passwords.html) for more information about password management.
  - name: Password Policies
    description: |
      Use these APIs to implement password policies functionality.
      These APIs allow you to define the policy parameters for choosing passwords.
      
      IdentityNow comes with a default policy that you can modify to define the password requirements your users must meet to log in to IdentityNow, such as requiring a minimum password length, including special characters, and disallowing certain patterns.
      If you have licensed Password Management, you can create additional password policies beyond the default one to manage passwords for supported sources in your org.
      
      In the Identity Security Cloud Admin panel, administrators can use the Password Mgmt dropdown menu to select Sync Groups.
      Refer to [Managing Password Policies](https://documentation.sailpoint.com/saas/help/pwd/pwd_policies/pwd_policies.html) for more information about password policies.
  - name: Password Sync Groups
    description: |
      Use this API to implement password sync group functionality. 
      With this functionality in place, administrators can group sources into password sync groups so that all their applications share the same password. 
      This allows users to update the password for all the applications in a sync group if they want, rather than updating each password individually. 

      A password sync group is a group of applications that shares a password. 
      Administrators create these groups by grouping the applications' sources. 
      For example, an administrator can group the ActiveDirectory, GitHub, and G Suite sources together so that all those sources' applications can also be grouped to share a password. 
      A user can then update his or her password for ActiveDirectory, GitHub, Gmail, Google Drive, and Google Calendar all at once, rather then updating each one individually.

      The following are required for administrators to create a password sync group in Identity Security Cloud: 

      - At least two direct connect sources connected to Identity Security Cloud and configured for Password Management.

      - Each authentication source in a sync group must have at least one application. Refer to [Adding and Resetting Application Passwords](https://documentation.sailpoint.com/saas/help/pwd/adv_config.html#adding-and-resetting-application-passwords) for more information about adding applications to sources.

      - At least one password policy. Refer to [Managing Password Policies](https://documentation.sailpoint.com/saas/help/pwd/policies.html) for more information about password policies. 

      In the Admin panel in Identity Security Cloud, administrators can use the Password Mgmt dropdown menu to select Sync Groups. 
      To create a sync group, administrators must provide a name, choose a password policy to be enforced across the sources in the sync group, and select the sources to include in the sync group. 

      Administrators can also delete sync groups in Identity Security Cloud, but they should know the following before they do: 

      - Passwords related to the associated sources will become independent, so changing one will not change the others anymore. 

      - Passwords for the sources' connected applications will also become independent. 

      - Password policies assigned to the sync group are then assigned directly to the associated sources. 
      To change the password policy for a source, administrators must edit it directly. 

      Once the password sync group has been created, users can update the password for the group in Password Manager.

      Refer to [Managing Password Sync Groups](https://documentation.sailpoint.com/saas/help/pwd/sync_grps.html) for more information about password sync groups.
  - name: Personal Access Tokens
    description: |
      Use this API to implement personal access token (PAT) functionality. 
      With this functionality in place, users can use PATs as an alternative to passwords for authentication in Identity Security Cloud. 

      PATs embed user information into the client ID and secret. 
      This replaces the API clients' need to store and provide a username and password to establish a connection, improving Identity Security Cloud organizations' integration security. 

      In Identity Security Cloud, users can do the following to create and manage their PATs: Select the dropdown menu under their names, select Preferences, and then select Personal Access Tokens. 
      They must then provide a description about the token's purpose. 
      They can then select 'Create Token' at the bottom of the page to generate and view the Secret and Client ID. 

      Refer to [Managing Personal Access Tokens](https://documentation.sailpoint.com/saas/help/common/generate_tokens.html) for more information about PATs.
  - name: Public Identities
    description: |
      Use this API in conjunction with [Public Identites Config](https://developer.sailpoint.com/docs/api/v2024/public-identities-config/) to enable non-administrators to view identities' publicly visible attributes. 
      With this functionality in place, non-administrators can view identity attributes other than the default attributes (email, lifecycle state, and manager), depending on which identity attributes their organization administrators have made public. 
      This can be helpful for access approvers, certification reviewers, managers viewing their direct reports' access, and source owners viewing their tasks.
  - name: Public Identities Config
    description: |
      Use this API to implement public identity configuration functionality. 
      With this functionality in place, administrators can make up to 5 identity attributes publicly visible so other non-administrator users can see the relevant information they need to make decisions. 
      This can be helpful for approvers making approvals, certification reviewers, managers viewing their direct reports' access, and source owners viewing their tasks.

      By default, non-administrators can select an identity and view the following attributes: email, lifecycle state, and manager. 
      However, it may be helpful for a non-administrator reviewer to see other identity attributes like department, region, title, etc.
      Administrators can use this API to make those necessary identity attributes public to non-administrators. 

      For example, a non-administrator deciding whether to approve another identity's request for access to the Workday application, whose access may be restricted to members of the HR department, would want to know whether the identity is a member of the HR department. 
      If an administrator has used [Update Public Identity Config](https://developer.sailpoint.com/docs/api/v2024/update-public-identity-config/) to make the "department" attribute public, the approver can see the department and make a decision without requesting any more information.
  - name: Reports Data Extraction
    description: |
      Use this API to implement reports lifecycle managing and monitoring.
      With this functionality in place, users can run reports, view their results, and cancel reports in progress. 
      This can be potentially helpful for auditing purposes. 
  - name: Requestable Objects
    description: |
      Use this API to implement requestable object functionality. 
      With this functionality in place, administrators can determine which access items can be requested with the [Access Request APIs](https://developer.sailpoint.com/docs/api/v2024/access-requests/), along with their statuses. 
      This can be helpful for administrators who are implementing and customizing access request functionality as a way of checking which items are requestable as they are created, assigned, and made available.
  - name: Role Insights
  - name: Roles
    description: |
      Use this API to implement and customize role functionality.
      With this functionality in place, administrators can create roles and configure them for use throughout Identity Security Cloud. 
      Identity Security Cloud can use established criteria to automatically assign the roles to qualified users. This enables users to get all the access they need quickly and securely and administrators to spend their time on other tasks.

      Entitlements represent the most granular level of access in Identity Security Cloud. 
      Access profiles represent the next level and often group entitlements. 
      Roles represent the broadest level of access and often group access profiles. 

      For example, an Active Directory source in Identity Security Cloud can have multiple entitlements: the first, 'Employees,' may represent the access all employees have at the organization, and a second, 'Developers,' may represent the access all developers have at the organization.
      
      An administrator can then create a broader set of access in the form of an access profile, 'AD Developers' grouping the 'Employees' entitlement with the 'Developers' entitlement.
      
      An administrator can then create an even broader set of access in the form of a role grouping the 'AD Developers' access profile with another profile, 'GitHub Developers,' grouping entitlements for the GitHub source.
      
      When users only need Active Directory employee access, they can request access to the 'Employees' entitlement.
      
      When users need both Active Directory employee and developer access, they can request access to the 'AD Developers' access profile.
      
      When users need both the 'AD Developers' access profile and the 'GitHub Developers' access profile, they can request access to the role grouping both. 
      
      Roles often represent positions within organizations. 
      For example, an organization's accountant can access all the tools the organization's accountants need with the 'Accountant' role. 
      If the accountant switches to engineering, a qualified member of the organization can quickly revoke the accountant's 'Accountant' access and grant access to the 'Engineer' role instead, granting access to all the tools the organization's engineers need.

      In Identity Security Cloud, adminstrators can use the Access drop-down menu and select Roles to view, configure, and delete existing roles, as well as create new ones. 
      Administrators can enable and disable the role, and they can also make the following configurations: 

      - Manage Access: Manage the role's access by adding or removing access profiles.

      - Define Assignment: Define the criteria Identity Security Cloud uses to assign the role to identities. 
      Use the first option, 'Standard Criteria,' to provide specific criteria for assignment like specific account attributes, entitlements, or identity attributes. 
      Use the second, 'Identity List,' to specify the identities for assignment.

      - Access Requests: Configure roles to be requestable and establish an approval process for any requests that the role be granted or revoked. 
      Do not configure a role to be requestable without establishing a secure access request approval process for that role first. 

      Refer to [Working with Roles](https://documentation.sailpoint.com/saas/help/access/roles.html) for more information about roles.
  - name: Saved Search
    description: |
      Use this API to implement saved search functionality. 
      With saved search functionality in place, users can save search queries and then view those saved searches, as well as rerun them. 

      Search queries in Identity Security Cloud can grow very long and specific, which can make reconstructing them difficult or tedious, so it can be especially helpful to save search queries. 
      It also opens the possibility to configure Identity Security Cloud to run the saved queries on a schedule, which is essential to detecting user information and access changes throughout an organization's tenant and across all its sources. 
      Refer to [Scheduled Search](https://developer.sailpoint.com/docs/api/v2024/scheduled-search/) for more information about running saved searches on a schedule. 
      
      In Identity Security Cloud, users can save searches under a name, and then they can access that saved search and run it again when they want. 

      Refer to [Managing Saved Searches](https://documentation.sailpoint.com/saas/help/search/saved-searches.html) for more information about saving searches and using them.
  - name: Scheduled Search
    description: |
      Use this API to implement scheduled search functionality. 
      With scheduled search functionality in place, users can run saved search queries on their tenants on a schedule, and Identity Security Cloud emails them the search results. 
      Users can also share these search results with other users by email by adding those users as subscribers, or those users can subscribe themselves. 

      One of the greatest benefits of saving searches is the ability to run those searches on a schedule. 
      This is essential for organizations to constantly detect any changes to user information or access throughout their tenants and across all their sources. 
      For example, the manager Amanda Ross can schedule a saved search "manager.name:amanda.ross AND attributes.location:austin" on a schedule to regularly stay aware of changes with the Austin employees reporting to her.
      Identity Security Cloud emails her the search results when the search runs, so she can work on other tasks instead of actively running this search.
      
      In Identity Security Cloud, scheduling a search involves a subscription. 
      Users can create a subscription for a saved search and schedule it to run daily, weekly, or monthly (you can only use one schedule option at a time). 
      The user can add other identities as subscribers so when the scheduled search runs, the subscribers and the user all receive emails. 
      
      By default, subscriptions exclude detailed results from the emails, for security purposes. 
      Including detailed results about user access in an email may expose sensitive information.
      However, the subscription creator can choose to include the information in the emails.  

      By default, Identity Security Cloud sends emails to the subscribers even when the searches do not return new results. 
      However, the subscription creator can choose to suppress these empty emails. 

      Users can also subscribe to saved searches that already have existing subscriptions so they receive emails when the searches run. 
      A saved search can have up to 10 subscriptions configured at a time. 

      The subscription creator can enable, disable, or delete the subscription. 

      Refer to [Subscribing to Saved Searches](https://documentation.sailpoint.com/saas/help/search/saved-searches.html#subscribing-to-saved-searches) for more information about scheduling searches and subscribing to them.
  - name: Search
    description: |
      Use this API to implement search functionality. 
      With search functionality in place, users can search their tenants for nearly any information from throughout their organizations. 

      Identity Security Cloud enables organizations to store user data from across all their connected sources and manage the users' access, so the ability to query and filter that data is essential.  
      Its search goes through all those sources and finds the results quickly and specifically. 

      The search query is flexible - it can be very broad or very narrow. 
      The search only returns results for searchable objects it is filtering for. 
      The following objects are searchable: identities, roles, access profiles, entitlements, events, and account activities. 
      By default, no filter is applied, so a search for "Ad" returns both the identity "Adam.Archer" as well as the role "Administrator."

      Users can further narrow their results by using Identity Security Cloud's specific syntax and punctuation to structure their queries. 
      For example, the query "attributes.location:austin AND NOT manager.name:amanda.ross" returns all results associated with the Austin location, but it excludes those associated with the manager Amanda Ross.
      Refer to [Building a Search Query](https://documentation.sailpoint.com/saas/help/search/building-query.html) for more information about how to construct specific search queries. 

      Refer to [Using Search](https://documentation.sailpoint.com/saas/help/search/index.html) for more information about Identity Security Cloud's search and its different possibilities. 

      The search feature uses Elasticsearch as a datastore and query engine. 
      The power of Elasticsearch makes this feature suitable for ad-hoc reporting.
      However, data from the operational databases (ex. identities, roles, events, etc) has to be ingested into Elasticsearch. 
      This ingestion process introduces a latency from when the operational data is created to when it is available in search. 
      Depending on the system load, this can take a few seconds to a few minutes. 
      Please keep this latency in mind when you use search.
  - name: Search Attribute Configuration 
    description: |
      Use this API to implement search attribute configuration functionality, along with [Search](https://developer.sailpoint.com/docs/api/v2024/search).
      With this functionality in place, administrators can create custom search attributes that and run extended searches based on those attributes to further narrow down their searches and get the information and insights they want. 

      Identity Security Cloud (ISC) enables organizations to store user data from across all their connected sources and manage the users' access, so the ability to query and filter that data is essential.  
      Its search goes through all those sources and finds the results quickly and specifically. 

      The search query is flexible - it can be very broad or very narrow. 
      The search only returns results for searchable objects it is filtering for. 
      The following objects are searchable: identities, roles, access profiles, entitlements, events, and account activities. 
      By default, no filter is applied, so a search for "Ad" returns both the identity "Adam.Archer" as well as the role "Administrator."

      Users can further narrow their results by using ISC's specific syntax and punctuation to structure their queries. 
      For example, the query "attributes.location:austin AND NOT manager.name:amanda.ross" returns all results associated with the Austin location, but it excludes those associated with the manager Amanda Ross.
      Refer to [Building a Search Query](https://documentation.sailpoint.com/saas/help/search/building-query.html) for more information about how to construct specific search queries. 

      Refer to [Using Search](https://documentation.sailpoint.com/saas/help/search/index.html) for more information about ISC's search and its different possibilities. 

      With Search Attribute Configuration, administrators can create, manage, and run searches based on the attributes they want to search. 
  - name: Segments
    description: |
      Use this API to implement and customize access request segment functionality. 
      With this functionality in place, administrators can create and manage access request segments. 
      Segments provide organizations with a way to make the access their users have even more granular - this can simply the access request process for the organization's users and improves security by reducing the risk of overprovisoning access. 

      Segments represent sets of identities, all grouped by specified identity attributes, who are only able to see and access the access items associated with their segments.
      For example, administrators could group all their organization's London office employees into one segment, "London Office Employees," by their shared location. 
      The administrators could then define the access items the London employees would need, and the identities in the "London Office Employees" would then only be able to see and access those items.

      In Identity Security Cloud, administrators can use the 'Access' drop-down menu and select 'Segments' to reach the 'Access Requests Segments' page. 
      This page lists all the existing access request segments, along with their statuses, enabled or disabled. 
      Administrators can use this page to create, edit, enable, disable, and delete segments. 
      To create a segment, an administrator must provide a name, define the identities grouped in the segment, and define the items the identities in the segment can access.
      These items can be access profiles, roles, or entitlements. 

      When administrators use the API to create and manage segments, they use a JSON expression in the `visibilityCriteria` object to define the segment's identities and access items. 

      Refer to [Managing Access Request Segments](https://documentation.sailpoint.com/saas/help/requests/segments.html) for more information about segments in Identity Security Cloud.
  - name: Service Desk Integration
    description: |
      Use this API to build an integration between Identity Security Cloud and a service desk ITSM (IT service management) solution. 
      Once an administrator builds this integration between Identity Security Cloud and a service desk, users can use Identity Security Cloud to raise and track tickets that are synchronized between Identity Security Cloud and the service desk. 
      
      In Identity Security Cloud, administrators can create a service desk integration (sometimes also called an SDIM, or Service Desk Integration Module) by going to Admin > Connections > Service Desk and selecting 'Create.'

      To create a Generic Service Desk integration, for example, administrators must provide the required information on the General Settings page, the Connectivity and Authentication information, Ticket Creation information, Status Mapping information, and Requester Source information on the Configure page. 
      Refer to [Integrating SailPoint with Generic Service Desk](https://documentation.sailpoint.com/connectors/generic_sd/help/integrating_generic_service_desk/intro.html) for more information about the process of setting up a Generic Service Desk in Identity Security Cloud.

      Administrators can create various service desk integrations, all with their own nuances. 
      The following service desk integrations are available: 

      - [Atlassian Cloud Jira Service Management](https://documentation.sailpoint.com/connectors/atlassian/jira_cloud/help/integrating_jira_cloud_sd/introduction.html)

      - [Atlassian Server Jira Service Management](https://documentation.sailpoint.com/connectors/atlassian/jira_server/help/integrating_jira_server_sd/introduction.html)

      - [BMC Helix ITSM Service Desk](https://documentation.sailpoint.com/connectors/bmc/helix_ITSM_sd/help/integrating_bmc_helix_itsm_sd/intro.html)

      - [BMC Helix Remedyforce Service Desk](https://documentation.sailpoint.com/connectors/bmc/helix_remedyforce_sd/help/integrating_bmc_helix_remedyforce_sd/intro.html)

      - [Generic Service Desk](https://documentation.sailpoint.com/connectors/generic_sd/help/integrating_generic_service_desk/intro.html)

      - [ServiceNow Service Desk](https://documentation.sailpoint.com/connectors/servicenow/sdim/help/integrating_servicenow_sdim/intro.html)

      - [Zendesk Service Desk](https://documentation.sailpoint.com/connectors/zendesk/help/integrating_zendesk_sd/introduction.html)
  - name: SIM Integrations
    description: |
      Use this API to administer IdentityNow's Service Integration Module, or SIM integration with ServiceNow, so that it converts IdentityNow provisioning actions into tickets in ServiceNow.
      
      ServiceNow is a software platform that supports IT service management and automates common business processes for requesting and fulfilling service requests across a business enterprise.
      
      You must have an IdentityNow ServiceNow ServiceDesk license to use this integration. Contact your Customer Success Manager for more information.
      
      Service Desk integration for IdentityNow and in deprecation - not available for new implementation, as of July 21st, 2021. As per SailPoint’s [support policy](https://community.sailpoint.com/t5/Connector-Directory/SailPoint-Support-Policy-for-Connectivity/ta-p/79422), all existing SailPoint IdentityNow customers using this legacy integration will be supported until July 2022.
  - name: SOD Policies
    description: |
      Use this API to implement and manage "separation of duties" (SOD) policies. 
      With SOD policy functionality in place, administrators can organize the access in their tenants to prevent individuals from gaining conflicting or excessive access. 

      "Separation of duties" refers to the concept that people shouldn't have conflicting sets of access - all their access should be configured in a way that protects your organization's assets and data.  
      For example, people who record monetary transactions shouldn't be able to issue payment for those transactions.
      Any changes to major system configurations should be approved by someone other than the person requesting the change. 

      Organizations can use "separation of duties" (SOD) policies to enforce and track their internal security rules throughout their tenants.
      These SOD policies limit each user's involvement in important processes and protects the organization from individuals gaining excessive access. 

      To create SOD policies in Identity Security Cloud, administrators use 'Search' and then access 'Policies'.
      To create a policy, they must configure two lists of access items. Each access item can only be added to one of the two lists.
      They can search for the entitlements they want to add to these access lists.

      >Note: You can have a maximum of 500 policies of any type (including general policies) in your organization. In each access-based SOD policy, you can have a maximum of 50 entitlements in each access list.  

      Once a SOD policy is in place, if an identity has access items on both lists, a SOD violation will trigger. 
      These violations are included in SOD violation reports that other users will see in emails at regular intervals if they're subscribed to the SOD policy.
      The other users can then better help to enforce these SOD policies. 

      To create a subscription to a SOD policy in Identity Security Cloud, administrators use 'Search' and then access 'Layers'.
      They can create a subscription to the policy and schedule it to run at a regular interval. 

      Refer to [Managing Policies](https://documentation.sailpoint.com/saas/help/sod/manage-policies.html) for more information about SOD policies. 

      Refer to [Subscribe to a SOD Policy](https://documentation.sailpoint.com/saas/help/sod/policy-violations.html#subscribe-to-an-sod-policy) for more information about SOD policy subscriptions.
  - name: SOD Violations
    description: |
      Use this API to check for current "separation of duties" (SOD) policy violations as well as potential future SOD policy violations. 
      With SOD violation functionality in place, administrators can get information about current SOD policy violations and predict whether an access change will trigger new violations, which helps to prevent them from occurring at all. 

      "Separation of duties" refers to the concept that people shouldn't have conflicting sets of access - all their access should be configured in a way that protects your organization's assets and data.  
      For example, people who record monetary transactions shouldn't be able to issue payment for those transactions.
      Any changes to major system configurations should be approved by someone other than the person requesting the change. 

      Organizations can use "separation of duties" (SOD) policies to enforce and track their internal security rules throughout their tenants.
      These SOD policies limit each user's involvement in important processes and protects the organization from individuals gaining excessive access. 

      Once a SOD policy is in place, if an identity has conflicting access items, a SOD violation will trigger. 
      These violations are included in SOD violation reports that other users will see in emails at regular intervals if they're subscribed to the SOD policy.
      The other users can then better help to enforce these SOD policies.

      Administrators can use the SOD violations APIs to check a set of identities for any current SOD violations, and they can use them to check whether adding an access item would potentially trigger a SOD violation. 
      This second option is a good way to prevent SOD violations from triggering at all. 

      Refer to [Handling Policy Violations](https://documentation.sailpoint.com/saas/help/sod/policy-violations.html) for more information about SOD policy violations. 
  - name: Source Usages
    description: |
      Use this API to implement source usage insight functionality.
      With this functionality in place, administrators can gather information and insights about how their tenants' sources are being used.
      This allows organizations to get the information they need to start optimizing and securing source usage.
  - name: Sources
    description: |
      Use this API to implement and customize source functionality. 
      With source functionality in place, organizations can use Identity Security Cloud to connect their various sources and user data sets and manage access across all those different sources in a secure, scalable way. 

      [Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html) refer to the Identity Security Cloud representations for external applications, databases, and directory management systems that maintain their own sets of users, like Dropbox, GitHub, and Workday, for example.
      Organizations may use hundreds, if not thousands, of different source systems, and any one employee within an organization likely has a different user record on each source, often with different permissions on many of those records. 
      Connecting these sources to Identity Security Cloud makes it possible to manage user access across them all.
      Then, if a new hire starts at an organization, Identity Security Cloud can grant the new hire access to all the sources they need.
      If an employee moves to a new department and needs access to new sources but no longer needs access to others, Identity Security Cloud can grant the necessary access and revoke the unnecessary access for all the employee's various sources. 
      If an employee leaves the company, Identity Security Cloud can revoke access to all the employee's various source accounts immediately. 
      These are just a few examples of the many ways that source functionality makes identity governance easier, more efficient, and more secure. 

      In Identity Security Cloud, administrators can create configure, manage, and edit sources, and they can designate other users as source admins to be able to do so.
      They can also designate users as source sub-admins, who can perform the same source actions but only on sources associated with their governance groups.
      Admins go to Connections > Sources to see a list of the existing source representations in their organizations. 
      They can create new sources or select existing ones. 

      To create a new source, the following must be specified: Source Name, Description, Source Owner, and Connection Type.
      Refer to [Configuring a Source](https://documentation.sailpoint.com/saas/help/accounts/loading_data.html#configuring-a-source) for more information about the source configuration process. 
      
      Identity Security Cloud connects with its sources either by a direct communication with the source server (connection information specific to the source must be provided) or a flat file feed, a CSV file containing all the relevant information about the accounts to be loaded in.
      Different sources use different connectors to share data with Identity Security Cloud, and each connector's setup process is specific to that connector. 
      SailPoint has built a number of connectors to come out of the box and connect to the most common sources, and SailPoint actively maintains these connectors.
      Refer to [Identity Security Cloud Connectors](https://documentation.sailpoint.com/connectors/identitynow/landingpages/help/landingpages/identitynow_connectivity_landing.html) for more information about these SailPoint supported connectors. 
      Refer to the following links for more information about two useful connectors: 

      - [JDBC Connector](https://documentation.sailpoint.com/connectors/jdbc/help/integrating_jdbc/introduction.html): This customizable connector an directly connect to databases that support JDBC (Java Database Connectivity).

      - [Web Services Connector](https://documentation.sailpoint.com/connectors/webservices/help/integrating_webservices/introduction.html): This connector can directly connect to databases that support Web Services. 

      Refer to [SaaS Connectivity](https://developer.sailpoint.com/docs/connectivity/saas-connectivity/) for more information about SailPoint's new connectivity framework that makes it easy to build and manage custom connectors to SaaS sources. 

      When admins select existing sources, they can view the following information about the source:

      - Associated connections (any associated identity profiles, apps, or references to the source in a transform).

      - Associated user accounts. These accounts are linked to their identities - this provides a more complete picture of each user's access across sources.

      - Associated entitlements (sets of access rights on sources).

      - Associated access profiles (groupings of entitlements). 

      The user account data and the entitlements update with each data aggregation from the source. 
      Organizations generally run scheduled, automated data aggregations to ensure that their data is always in sync between their sources and their Identity Security Cloud tenants so an access change on a source is detected quickly in Identity Security Cloud.
      Admins can view a history of these aggregations, and they can also run manual imports. 
      Refer to [Loading Account Data](https://documentation.sailpoint.com/saas/help/accounts/loading_data.html) for more information about manual and scheduled aggregations. 

      Admins can also make changes to determine which user account data Identity Security Cloud collects from the source and how it correlates that account data with identity data. 
      To define which account attributes the source shares with Identity Security Cloud, admins can edit the account schema on the source.
      Refer to [Managing Source Account Schemas](https://documentation.sailpoint.com/saas/help/accounts/schema.html) for more information about source account schemas and how to edit them. 
      To define the mapping between the source account attributes and their correlating identity attributes, admins can edit the correlation configuration on the source. 
      Refer to [Assigning Source Accounts to Identities](https://documentation.sailpoint.com/saas/help/accounts/correlation.html) for more information about this correlation process between source accounts and identities.

      Admins can also delete sources, but they must first ensure that the sources no longer have any active connections: the source must not be associated with any identity profile or any app, and it must not be referenced by any transform.
      Refer to [Deleting Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html#deleting-sources) for more information about deleting sources. 

      Well organized, mapped out connections between sources and Identity Security Cloud are essential to achieving comprehensive identity access governance across all the source systems organizations need. 
      Refer to [Managing Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html) for more information about all the different things admins can do with sources once they are connected.
  - name: SP-Config
    description: Import and export configuration for some objects between tenants.
  - name: Suggested Entitlement Description
    description: |
      Use this API to implement Suggested Entitlement Description (SED) functionality. 
      SED functionality leverages the power of LLM to generate suggested entitlement descriptions. 
      Refer to [GenAI Entitlement Descriptions](https://documentation.sailpoint.com/saas/help/access/entitlements.html#genai-entitlement-descriptions) to learn more about SED in Identity Security Cloud (ISC). 
  - name: Tagged Objects
    description: |
      Use this API to implement object tagging functionality. 
      With object tagging functionality in place, any user in an organization can use tags as a way to group objects together and find them more quickly when the user searches Identity Security Cloud. 

      In Identity Security Cloud, users can search their tenants for information and add tags objects they find.
      Tagging an object provides users with a way of grouping objects together and makes it easier to find these objects in the future. 

      For example, if a user is searching for an entitlement that grants a risky level of access to Active Directory, it's possible that the user may have to search through hundreds of entitlements to find the correct one. 
      Once the user finds that entitlement, the user can add a tag to the entitlement, "AD_RISKY" to make it easier to find the entitlement again.
      The user can add the same tag to multiple objects the user wants to group together for an easy future search, and the user can also do so in bulk.
      When the user wants to find that tagged entitlement again, the user can search for "tags:AD_RISKY" to find all objects with that tag. 

      With the API, you can tag even more different object types than you can in Identity Security Cloud (access profiles, entitlements, identities, and roles). 
      You can use the API to tag all these objects:

      - Access profiles 

      - Applications 

      - Certification campaigns

      - Entitlements

      - Identities 

      - Roles 

      - SOD (separation of duties) policies

      - Sources 

      You can also use the API to directly find, create, and manage tagged objects without using search queries. 

      There are limits to tags: 

      - You can have up to 500 different tags in your tenant.

      - You can apply up to 30 tags to one object. 

      - You can have up to 10,000 tag associations, pairings of 1 tag to 1 object, in your tenant. 

      Because of these limits, it is recommended that you work with your governance experts and security teams to establish a list of tags that are most expressive of governance objects and access managed by Identity Security Cloud. 

      These are the types of information often expressed in tags: 

      - Affected departments

      - Compliance and regulatory categories 

      - Remediation urgency levels 

      - Risk levels 

      Refer to [Tagging Items in Search](https://documentation.sailpoint.com/saas/help/search/index.html?h=tags#tagging-items-in-search) for more information about tagging objects in Identity Security Cloud. 
  - name: Task Management
  - name: Tenant
    description: API for reading tenant details.
  - name: Tenant Context
    description: |
      The purpose of this API is to manage key-value pairs specific to a tenant's context, enabling dynamic configuration and personalized settings per tenant.
      Context key-value pairs will consist of common terms and acronyms used within your organization.
  - name: Transforms
    description: |
      The purpose of this API is to expose functionality for the manipulation of Transform objects.
      Transforms are a form of configurable objects which define an easy way to manipulate attribute data without having
      to write code. 

      Refer to [Transforms](https://developer.sailpoint.com/docs/extensibility/transforms/) for more information about transforms.
  - name: Triggers
    description: |
      Event Triggers provide real-time updates to changes in Identity Security Cloud so you can take action as soon as an event occurs, rather than poll an API endpoint for updates. Identity Security Cloud provides a user interface within the admin console to create and manage trigger subscriptions.  These endpoints allow for programatically creating and managing trigger subscriptions.

      There are two types of event triggers:
        * `FIRE_AND_FORGET`: This trigger type will send a payload to each subscriber without needing a response.  Each trigger of this type has a limit of **50 subscriptions**.
        * `REQUEST_RESPONSE`: This trigger type will send a payload to a subscriber and expect a response back.  Each trigger of this type may only have **one subscription**.

      ## Available Event Triggers
      Production ready event triggers that are available in all tenants.

      | Name | ID | Type | Trigger condition |
      |-|-|-|-|
      | [Access Request Dynamic Approval](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/access-request-dynamic-approval/) | idn:access-request-dynamic-approver | REQUEST_RESPONSE |After an access request is submitted. Expects the subscriber to respond with the ID of an identity or workgroup to add to the approval workflow. |
      | [Access Request Decision](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/access-request-decision/) | idn:access-request-post-approval | FIRE_AND_FORGET | After an access request is approved. |
      | [Access Request Submitted](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/access-request-submitted/) | idn:access-request-pre-approval | REQUEST_RESPONSE | After an access request is submitted. Expects the subscriber to respond with an approval decision. |
      | [Account Aggregation Completed](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/account-aggregation-completed/) | idn:account-aggregation-completed | FIRE_AND_FORGET | After an account aggregation completed, terminated, failed. |
      | Account Attributes Changed | idn:account-attributes-changed | FIRE_AND_FORGET | After an account aggregation, and one or more account attributes have changed. |
      | Account Correlated | idn:account-correlated | FIRE_AND_FORGET | After an account is added to an identity. |
      | Accounts Collected for Aggregation |  idn:aggregation-accounts-collected | FIRE_AND_FORGET | New, changed, and deleted accounts have been gathered during an aggregation and are being processed. |
      | Account Uncorrelated | idn:account-uncorrelated | FIRE_AND_FORGET | After an account is removed from an identity. |
      | Campaign Activated | idn:campaign-activated | FIRE_AND_FORGET | After a campaign is activated. |
      | Campaign Ended | idn:campaign-ended | FIRE_AND_FORGET | After a campaign ends. |
      | Campaign Generated | idn:campaign-generated | FIRE_AND_FORGET | After a campaign finishes generating. |
      | Certification Signed Off | idn:certification-signed-off | FIRE_AND_FORGET | After a certification is signed off by its reviewer. |
      | [Identity Attributes Changed](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/account-aggregation-completed/) | idn:identity-attributes-changed | FIRE_AND_FORGET | After One or more identity attributes changed. |
      | [Identity Created](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/identity-created/) | idn:identity-created | FIRE_AND_FORGET | After an identity is created. |
      | [Provisioning Action Completed](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/provisioning-completed/) |  idn:post-provisioning | FIRE_AND_FORGET | After a provisioning action completed on a source. |
      | [Scheduled Search](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/scheduled-search/) |  idn:saved-search-complete | FIRE_AND_FORGET | After a scheduled search completed. |
      | [Source Created](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/source-created/) | idn:source-created | FIRE_AND_FORGET | After a source is created. |
      | [Source Deleted](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/source-deleted/) | idn:source-deleted | FIRE_AND_FORGET | After a source is deleted. |
      | [Source Updated](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/source-updated/) | idn:source-updated | FIRE_AND_FORGET | After configuration changes have been made to a source. |
      | [VA Cluster Status Change](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/va-cluster-status-change/) | idn:va-cluster-status-change | FIRE_AND_FORGET | After the status of a VA cluster has changed. |

      ## Early Access Event Triggers
      Triggers that are in-development and not ready for production use.  Please contact support to enable these triggers in your tenant.

      | Name | ID | Type | Trigger condition |
      |-|-|-|-|
      | [Identity Deleted](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/identity-deleted/) | idn:identity-deleted | FIRE_AND_FORGET | After an identity is deleted. |
      | [Source Account Created](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/source-account-created/) | idn:source-account-created | FIRE_AND_FORGET | After a source account is created. |
      | [Source Account Deleted](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/source-account-deleted/) | idn:source-account-deleted | FIRE_AND_FORGET | After a source account is deleted. |
      | [Source Account Updated](https://developer.sailpoint.com/docs/extensibility/event-triggers/triggers/source-account-updated/) | idn:source-account-updated | FIRE_AND_FORGET | After a source account is changed. |
  - name: UI Metadata
    description: API for managing UI Metadata.
      Use this API to manage metadata about your User Interface.
      
      For example you can set the iFrameWhitelist parameter to permit another domain to encapsulate IDN within an iframe or set the usernameEmptyText to change the placeholder text for Username on your tenant's login screen.
  - name: Vendor Connector Mappings
    description: |
      Vendors use ISC connectors to connect their source data to ISC, but the data in their source and the data in ISC may be stored in different formats. 
      Connector mappings allow vendors to match their data on both sides of the connection. 
      The vendors can then track and manage access across their sources from ISC. 
      This API allows you to create and manage these vendor connector mappings. 
  - name: Work Items
    description: |
      Use this API to implement work item functionality. 
      With this functionality in place, users can manage their work items (tasks). 

      Work items refer to the tasks users see in Identity Security Cloud's Task Manager. 
      They can see the pending work items they need to complete, as well as the work items they have already completed. 
      Task Manager lists the work items along with the involved sources, identities, accounts, and the timestamp when the work item was created. 
      For example, a user may see a pending 'Create an Account' work item for the identity Fred.Astaire in GitHub for Fred's GitHub account, fred-astaire-sp. 
      Once the user completes the work item, the work item will be listed with his or her other completed work items. 

      To complete work items, users can use their dashboards and select the 'My Tasks' widget. 
      The widget will list any work items they need to complete, and they can select the work item from the list to review its details. 
      When they complete the work item, they can select 'Mark Complete' to add it to their list of completed work items. 

      Refer to [Task Manager](https://documentation.sailpoint.com/saas/user-help/task_manager.html) for more information about work items, including the different types of work items users may need to complete.
  - name: Work Reassignment
    description: |
      Use this API to implement work reassignment functionality.

      Work Reassignment allows access request reviews, certifications, and manual provisioning tasks assigned to a user to be reassigned to a different user. This is primarily used for:

      - Temporarily redirecting work for users who are out of office, such as on vacation or sick leave
      - Permanently redirecting work for users who should not be assigned these tasks at all, such as senior executives or service identities
      
      Users can define reassignments for themselves, managers can add them for their team members, and administrators can configure them on any user’s behalf. Work assigned during the specified reassignment timeframes will be automatically reassigned to the designated user as it is created.
      
      Refer to [Work Reassignment](https://documentation.sailpoint.com/saas/help/users/work_reassignment.html) for more information about this topic.
  - name: Workflows
    description: |
      Workflows allow administrators to create custom automation scripts directly within Identity Security Cloud.  
      These automation scripts respond to [event triggers](https://developer.sailpoint.com/docs/extensibility/event-triggers/#how-to-get-started-with-event-triggers) and 
      perform a series of actions to perform tasks that are either too cumbersome or not available in the Identity Security Cloud UI.  
      
      Workflows can be configured via a graphical user interface within Identity Security Cloud, or by creating and uploading a JSON formatted script to the Workflow service.  
      
      The Workflows API collection provides the necessary functionality to create, manage, and test your workflows via REST.
x-webhooks:
  AccessRequestDecision:
    $ref: './v2024/webhooks/access-request-decision.yaml'
  AccessRequestDynamicApproval:
    $ref: './v2024/webhooks/access-request-dynamic-approval.yaml'    
  AccessRequestSubmitted:
    $ref: './v2024/webhooks/access-request-submitted.yaml'
  AccountAggregationCompleted:
    $ref: './v2024/webhooks/account-aggregation-completed.yaml'
  CampaignActivated:
    $ref: './v2024/webhooks/campaign-activated.yaml'
  CampaignEnded:
    $ref: './v2024/webhooks/campaign-ended.yaml'
  CampaignGenerated:
    $ref: './v2024/webhooks/campaign-generated.yaml'
  CertificationSignedOff:
    $ref: './v2024/webhooks/certification-signed-off.yaml'
  FormSubmitted:
    $ref: './v2024/webhooks/form-submitted.yaml'
  IdentityAttributesChanged:
    $ref: './v2024/webhooks/identity-attributes-changed.yaml'
  IdentityCreated:
    $ref: './v2024/webhooks/identity-created.yaml'
  NativeChangeAccountCreated:
    $ref: './v2024/webhooks/native-change-account-created.yaml'
  NativeChangeAccountDeleted:
    $ref: './v2024/webhooks/native-change-account-deleted.yaml'
  NativeChangeAccountUpdated:
    $ref: './v2024/webhooks/native-change-account-updated.yaml'
  OutlierDetected:
    $ref: './v2024/webhooks/outlier-detected.yaml'
  ProvisioningCompleted:
    $ref: './v2024/webhooks/provisioning-completed.yaml'
  ScheduledSearch:
    $ref: './v2024/webhooks/scheduled-search.yaml'
  SourceCreated:
    $ref: './v2024/webhooks/source-created.yaml'
  SourceDeleted:
    $ref: './v2024/webhooks/source-deleted.yaml'
  SourceUpdated:
    $ref: './v2024/webhooks/source-updated.yaml'
  VaClusterStatusChange:
    $ref: './v2024/webhooks/va-cluster-status-change.yaml'
  IdentityDeleted:
    $ref: './v2024/webhooks/identity-deleted.yaml'
  SourceAccountCreated:
    $ref: './v2024/webhooks/source-account-created.yaml'
  SourceAccountDeleted:
    $ref: './v2024/webhooks/source-account-deleted.yaml'
  SourceAccountUpdated:
    $ref: './v2024/webhooks/source-account-updated.yaml'
paths:
  /access-profiles:
    $ref: ./v2024/paths/access-profiles.yaml
  /access-profiles/{id}:
    $ref: ./v2024/paths/access-profile.yaml
  /access-profiles/bulk-delete:
    $ref: ./v2024/paths/access-profile-bulk-delete.yaml
  /access-profiles/{id}/entitlements:
    $ref: ./v2024/paths/access-profile-entitlements.yaml
  /access-requests:
    $ref: ./v2024/paths/access-requests.yaml
  /access-requests/cancel:
    $ref: ./v2024/paths/access-request-cancel.yaml
  /access-requests/close:
    $ref: ./v2024/paths/access-request-close.yaml
  /access-requests/bulk-cancel:
    $ref: ./v2024/paths/bulk-cancel-access-request.yaml
  /access-requests/accounts-selection:
    $ref: ./v2024/paths/access-requests-accounts-selection.yaml
  /access-request-config:
    $ref: ./v2024/paths/access-request-config.yaml
  /access-request-status:
    $ref: ./v2024/paths/access-request-status.yaml
  /access-request-administration:
    $ref: ./v2024/paths/access-request-status-administrator.yaml
  /access-request-approvals/pending:
    $ref: ./v2024/paths/pending-access-request-approvals.yaml
  /access-request-approvals/completed:
    $ref: ./v2024/paths/completed-access-request-approvals.yaml
  /access-request-approvals/{approvalId}/approve:
    $ref: ./v2024/paths/approve-access-request-approval.yaml
  /access-request-approvals/{approvalId}/reject:
    $ref: ./v2024/paths/reject-access-request-approval.yaml
  /access-request-approvals/{approvalId}/forward:
    $ref: ./v2024/paths/forward-access-request-approval.yaml
  /access-request-approvals/approval-summary:
    $ref: ./v2024/paths/access-request-approval-summary.yaml
  /access-request-approvals/bulk-approve:
   $ref: ./v2024/paths/access-request-bulk-approve.yaml
  /access-request-approvals/{accessRequestId}/approvers:
    $ref: ./v2024/paths/access-request-approvers-list.yaml
  /accounts:
    $ref: ./v2024/paths/accounts.yaml
  /accounts/{id}:
    $ref: ./v2024/paths/account.yaml
  /accounts/{id}/entitlements:
    $ref: ./v2024/paths/accounts-id-entitlements.yaml
  /accounts/{id}/reload:
    $ref: ./v2024/paths/accounts-id-reload.yaml
  /accounts/{id}/enable:
    $ref: ./v2024/paths/accounts-id-enable.yaml
  /accounts/{id}/disable:
    $ref: ./v2024/paths/accounts-id-disable.yaml
  /accounts/{id}/unlock:
    $ref: ./v2024/paths/accounts-id-unlock.yaml
  /accounts/{id}/remove:
    $ref: ./v2024/paths/remove-account.yaml
  /account-activities:
    $ref: ./v2024/paths/account-activity-list.yaml
  /account-activities/{id}:
    $ref: ./v2024/paths/account-activity-get-one.yaml
  /account-aggregations/{id}/status:
    $ref: ./v2024/paths/account-aggregation-status.yaml
  /auth-org/network-config:
    $ref: ./v2024/paths/auth-org-network-config.yaml
  /auth-org/lockout-config:
    $ref: "./v2024/paths/auth-org-lockout-config.yaml"
  /auth-org/service-provider-config:
    $ref: "./v2024/paths/auth-org-service-provider-config.yaml"
  /auth-org/session-config:
    $ref: "./v2024/paths/auth-org-session-config.yaml"
  /auth-users/{id}:
    $ref: ./v2024/paths/auth-user.yaml
  /brandings:
    $ref: ./v2024/paths/brandings.yaml
  /brandings/{name}:
    $ref: ./v2024/paths/branding.yaml
  /campaigns:
    $ref: ./v2024/paths/campaigns.yaml
  /campaigns/{id}:
    $ref: ./v2024/paths/campaign.yaml
  /campaigns/{id}/reassign:
    $ref: ./v2024/paths/campaign-admin-cert-reassign.yaml
  /campaigns/{id}/activate:
    $ref: ./v2024/paths/campaign-activate.yaml
  /campaigns/{id}/complete:
    $ref: ./v2024/paths/campaign-complete.yaml
  /campaigns/delete:
    $ref: ./v2024/paths/campaigns-delete.yaml
  /campaigns/{id}/run-remediation-scan:
    $ref: ./v2024/paths/campaign-run-remediation-scan.yaml
  /campaigns/{id}/reports:
    $ref: ./v2024/paths/campaign-reports.yaml
  /campaigns/{id}/run-report/{type}:
    $ref: ./v2024/paths/campaign-run-report.yaml
  /campaigns/reports-configuration:
    $ref: ./v2024/paths/campaign-reports-configuration.yaml
  /campaign-filters:
    $ref: ./v2024/paths/campaign-filters.yaml
  /campaign-filters/{id}:
    $ref: ./v2024/paths/campaign-filter.yaml
  /campaign-filters/delete:
    $ref: ./v2024/paths/campaign-filters-delete.yaml
  /campaign-templates:
    $ref: ./v2024/paths/campaign-templates.yaml
  /campaign-templates/{id}:
    $ref: ./v2024/paths/campaign-template.yaml
  /campaign-templates/{id}/schedule:
    $ref: ./v2024/paths/campaign-template-schedule.yaml
  /campaign-templates/{id}/generate:
    $ref: ./v2024/paths/campaign-template-generate.yaml
  /certifications:
    $ref: ./v2024/paths/identity-certifications.yaml
  /certifications/{id}:
    $ref: ./v2024/paths/identity-certification.yaml
  /certifications/{id}/access-review-items:
    $ref: ./v2024/paths/identity-certifications-access-review-items.yaml
  /certifications/{id}/decide:
    $ref: ./v2024/paths/identity-certifications-decide.yaml
  /certifications/{id}/reassign:
    $ref: ./v2024/paths/identity-certifications-reassign.yaml
  /certifications/{id}/sign-off:
    $ref: ./v2024/paths/identity-certifications-sign-off.yaml
  /certifications/{id}/decision-summary:
    $ref: ./v2024/paths/identity-certifications-decision-summary.yaml
  /certifications/{id}/identity-summaries:
    $ref: ./v2024/paths/identity-certifications-identity-summaries.yaml
  /certifications/{id}/access-summaries/{type}:
    $ref: ./v2024/paths/identity-certifications-access-summaries.yaml
  /certifications/{id}/identity-summaries/{identitySummaryId}:
    $ref: ./v2024/paths/identity-certifications-identity-summary.yaml
  /certifications/{certificationId}/access-review-items/{itemId}/permissions:
    $ref: ./v2024/paths/identity-certifications-item-permissions.yaml
  /certifications/{id}/reviewers:
    $ref: ./v2024/paths/certifications-reviewers.yaml
  /certifications/{id}/reassign-async:
    $ref: ./v2024/paths/certifications-reassign-async.yaml
  /certification-tasks/{id}:
    $ref: ./v2024/paths/certification-task.yaml
  /certification-tasks:
    $ref: ./v2024/paths/certification-tasks.yaml
  /connector-customizers:
    $ref: ./v2024/paths/connector-customizers.yaml
  /connector-customizers/{id}:
    $ref: ./v2024/paths/connector-customizers-id.yaml
  /connector-customizers/{id}/versions:
    $ref: ./v2024/paths/connector-customizers-versions.yaml
  /configuration-hub/object-mappings/{sourceOrg}:
    $ref: ./v2024/paths/configuration-hub/object-mapping.yaml
  /configuration-hub/object-mappings/{sourceOrg}/{objectMappingId}:
    $ref: ./v2024/paths/configuration-hub/object-mapping-delete.yaml
  /configuration-hub/object-mappings/{sourceOrg}/bulk-create:
    $ref: ./v2024/paths/configuration-hub/object-mapping-bulk-create.yaml
  /configuration-hub/object-mappings/{sourceOrg}/bulk-patch:
    $ref: ./v2024/paths/configuration-hub/object-mapping-bulk-update.yaml
  /configuration-hub/scheduled-actions:
    $ref: ./v2024/paths/configuration-hub/scheduled-actions.yaml
  /configuration-hub/scheduled-actions/{id}:
    $ref: ./v2024/paths/configuration-hub/scheduled-actions-id.yaml
  /configuration-hub/backups/uploads:
    $ref: ./v2024/paths/configuration-hub/backup-uploads.yaml
  /configuration-hub/backups/uploads/{id}:
    $ref: ./v2024/paths/configuration-hub/backup-uploads-id.yaml
  /configuration-hub/backups:
    $ref: ./v2024/paths/configuration-hub/backup.yaml
  /configuration-hub/backups/{id}:
    $ref: ./v2024/paths/configuration-hub/backup-id.yaml
  /configuration-hub/drafts:
    $ref: ./v2024/paths/configuration-hub/draft.yaml
  /configuration-hub/drafts/{id}:
    $ref: ./v2024/paths/configuration-hub/draft-id.yaml
  /configuration-hub/deploys:
    $ref: ./v2024/paths/configuration-hub/deploy.yaml
  /configuration-hub/deploys/{id}:
    $ref: ./v2024/paths/configuration-hub/deploy-id.yaml
  /connectors/{scriptName}:
    $ref: ./v2024/paths/connector.yaml
  /connectors:
    $ref: ./v2024/paths/connectors.yaml
  /connectors/{scriptName}/source-config:
    $ref: ./v2024/paths/connectors-source-config.yaml
  /connectors/{scriptName}/translations/{locale}:
    $ref: ./v2024/paths/connectors-translations.yaml
  /connectors/{scriptName}/source-template:
    $ref: ./v2024/paths/connectors-source-template.yaml
  /connectors/{scriptName}/correlation-config:
    $ref: ./v2024/paths/connectors-correlation-config.yaml
  /connector-rules:
    $ref: ./v2024/paths/connector-rules.yaml
  /connector-rules/{id}:
    $ref: ./v2024/paths/connector-rule.yaml
  /connector-rules/validate:
    $ref: ./v2024/paths/connector-rule-validate.yaml
  /data-segments/membership/{identityId}:
    $ref: "./v2024/paths/data-segment-membership.yaml"
  /data-segments/user-enabled/{identityId}:
    $ref: "./v2024/paths/data-segment-user-enabled.yaml"
  /data-segments/{segmentId}:
    $ref: "./v2024/paths/data-segment.yaml"
  /data-segments:
    $ref: "./v2024/paths/data-segments.yaml"
  /identities:
    $ref: ./v2024/paths/identities.yaml
  /identities/{id}:
    $ref: ./v2024/paths/identity.yaml
  /identities-accounts/{id}/enable:
    $ref: ./v2024/paths/identity-accounts-id-enable.yaml
  /identities-accounts/{id}/disable:
    $ref: ./v2024/paths/identity-accounts-id-disable.yaml
  /identities-accounts/enable:
    $ref: ./v2024/paths/identities-accounts-enable.yaml
  /identities-accounts/disable:
    $ref: ./v2024/paths/identities-accounts-disable.yaml
  /identities/{identityId}/ownership:
    $ref: ./v2024/paths/identity-ownership.yaml
  /identities/{id}/reset:
    $ref: ./v2024/paths/identity-reset.yaml
  /identities/{identityId}/role-assignments:
    $ref: ./v2024/paths/identities-role-assignments.yaml
  /identities/{identityId}/role-assignments/{assignmentId}:
    $ref: ./v2024/paths/identities-role-assignment.yaml
  /identities/{identity-id}/set-lifecycle-state:
    $ref: ./v2024/paths/identity-set-lifecycle-state.yaml
  /identity-profiles/{identity-profile-id}/lifecycle-states:
    $ref: ./v2024/paths/identity-profile-lifecycle-states.yaml
  /identity-profiles/{identity-profile-id}/lifecycle-states/{lifecycle-state-id}:
    $ref: ./v2024/paths/identity-profile-lifecycle-state.yaml
  /identity-profiles:
    $ref: ./v2024/paths/identity-profiles.yaml
  /identity-profiles/bulk-delete:
    $ref: ./v2024/paths/identity-profiles-bulk-delete.yaml
  /identity-profiles/export:
    $ref: ./v2024/paths/identity-profiles-export.yaml
  /identity-profiles/import:
    $ref: ./v2024/paths/identity-profiles-import.yaml
  /identity-profiles/{identity-profile-id}:
    $ref: ./v2024/paths/identity-profile.yaml
  /identity-profiles/{identity-profile-id}/default-identity-attribute-config:
    $ref: ./v2024/paths/identity-profile-default-config.yaml
  /identity-profiles/{identity-profile-id}/process-identities:
    $ref: ./v2024/paths/identity-profile-process-identities.yaml
  /managed-clients:
    $ref: ./v2024/paths/managed-clients.yaml
  /managed-clients/{id}:
    $ref: ./v2024/paths/managed-client.yaml
  /managed-clients/{id}/status:
    $ref: ./v2024/paths/managed-client-status.yaml
  /managed-clusters:
    $ref: ./v2024/paths/managed-clusters.yaml
  /managed-clusters/{id}:
    $ref: ./v2024/paths/managed-cluster.yaml
  /managed-clusters/{id}/log-config:
    $ref: './v2024/paths/managed-cluster-log-config.yaml'
  /managed-clusters/{id}/manualUpgrade:
    $ref: './v2024/paths/managed-cluster-manualUpgrade.yaml'
  /managed-cluster-types:
    $ref: ./v2024/paths/managed-cluster-types.yaml
  /managed-cluster-types/{id}:
    $ref: ./v2024/paths/managed-cluster-types-path.yaml
  /mfa/okta-verify/config:
    $ref: ./v2024/paths/mfa-okta-config.yaml
  /mfa/duo-web/config:
    $ref: ./v2024/paths/mfa-duo-config.yaml
  /mfa/kba/config:
    $ref: ./v2024/paths/mfa-kba-config.yaml
  /mfa/kba/config/answers:
    $ref: ./v2024/paths/mfa-kba-config-answers.yaml
  /mfa/{method}/test:
    $ref: ./v2024/paths/mfa-config-test.yaml
  /multihosts:
    $ref: './v2024/paths/multi-host-integration.yaml'
  /multihosts/types:
    $ref: './v2024/paths/multi-host-integration-types.yaml'
  /multihosts/{multihostId}:
    $ref: './v2024/paths/multi-host-integrations.yaml'
  /multihosts/{multihostId}/sources/testConnection:
    $ref: './v2024/paths/multi-host-integration-test-connection.yaml'
  /multihosts/{multihostId}/sources/{sourceId}/testConnection:
    $ref: './v2024/paths/multi-host-integration-test-connection-source.yaml'
  /multihosts/{multihostId}/sources:
    $ref: './v2024/paths/multi-host-integration-list-sources.yaml'
  /multihosts/{multiHostId}/sources/errors:
    $ref: './v2024/paths/multi-host-integration-sources-creation-error.yaml'
  /multihosts/{multihostId}/acctAggregationGroups:
    $ref: './v2024/paths/multi-host-integration-get-acct-agg-groups.yaml'
  /multihosts/{multiHostId}/entitlementAggregationGroups:
    $ref: './v2024/paths/multi-host-integration-get-entitlement-agg-groups.yaml'
  /non-employee-records:
    $ref: ./v2024/paths/non-employee-records.yaml
  /non-employee-records/{id}:
    $ref: ./v2024/paths/non-employee-record.yaml
  /non-employee-records/bulk-delete:
    $ref: ./v2024/paths/non-employee-records-bulk-delete.yaml
  /non-employee-requests:
    $ref: ./v2024/paths/non-employee-requests.yaml
  /non-employee-requests/{id}:
    $ref: ./v2024/paths/non-employee-request.yaml
  /non-employee-requests/summary/{requested-for}:
    $ref: ./v2024/paths/non-employee-request-summary-get.yaml
  /non-employee-sources:
    $ref: ./v2024/paths/non-employee-sources.yaml
  /non-employee-sources/{sourceId}:
    $ref: ./v2024/paths/non-employee-source.yaml
  /non-employee-sources/{id}/non-employees/download:
    $ref: ./v2024/paths/non-employee-sources-export-non-employees.yaml
  /non-employee-sources/{id}/non-employee-bulk-upload:
    $ref: ./v2024/paths/non-employee-sources-bulk-upload-non-employees.yaml
  /non-employee-sources/{id}/non-employee-bulk-upload/status:
    $ref: ./v2024/paths/non-employee-sources-bulk-upload-status.yaml
  /non-employee-sources/{id}/schema-attributes-template/download:
    $ref: ./v2024/paths/non-employee-sources-export-schema-attributes-template.yaml
  /non-employee-approvals:
    $ref: ./v2024/paths/non-employee-approval-list.yaml
  /non-employee-approvals/{id}:
    $ref: ./v2024/paths/non-employee-approve-get.yaml
  /non-employee-approvals/{id}/approve:
    $ref: ./v2024/paths/non-employee-approve-request.yaml
  /non-employee-approvals/{id}/reject:
    $ref: ./v2024/paths/non-employee-reject-request.yaml
  /non-employee-approvals/summary/{requested-for}:
    $ref: ./v2024/paths/non-employee-approval-summary.yaml
  /non-employee-sources/{sourceId}/schema-attributes:
    $ref: ./v2024/paths/non-employee-sources-schema-attributes.yaml
  /non-employee-sources/{sourceId}/schema-attributes/{attributeId}:
    $ref: ./v2024/paths/non-employee-sources-schema-attribute.yaml
  /oauth-clients:
    $ref: ./v2024/paths/oauth-clients.yaml
  /oauth-clients/{id}:
    $ref: ./v2024/paths/oauth-client.yaml
  /password-sync-groups:
    $ref: ./v2024/paths/password-sync-groups.yaml
  /password-sync-groups/{id}:
    $ref: ./v2024/paths/password-sync-group.yaml
  /password-policies/{id}:
    $ref: ./v2024/paths/password-policy.yaml
  /password-policies:
    $ref: ./v2024/paths/password-policies.yaml
  /personal-access-tokens:
    $ref: ./v2024/paths/personal-access-tokens.yaml
  /personal-access-tokens/{id}:
    $ref: ./v2024/paths/personal-access-token.yaml
  /public-identities:
    $ref: ./v2024/paths/public-identities.yaml
  /public-identities-config:
    $ref: ./v2024/paths/public-identities-config.yaml
  /requestable-objects:
    $ref: ./v2024/paths/requestable-object-list.yaml
  /roles:
    $ref: ./v2024/paths/roles.yaml
  /roles/{id}:
    $ref: ./v2024/paths/role.yaml
  /roles/bulk-delete:
    $ref: ./v2024/paths/role-bulk-delete.yaml
  /roles/{id}/assigned-identities:
    $ref: ./v2024/paths/role-assigned-identities.yaml
  /roles/{roleId}/dimensions:
    $ref: './v2024/paths/dimensions.yaml'
  /roles/{roleId}/dimensions/{dimensionId}:
    $ref: './v2024/paths/dimension.yaml'
  /roles/{roleId}/dimensions/bulk-delete:
    $ref: './v2024/paths/dimension-bulk-delete.yaml'
  /roles/{roleId}/dimensions/{dimensionId}/access-profiles:
    $ref: './v2024/paths/dimension-access-profiles.yaml'
  /roles/{roleId}/dimensions/{dimensionId}/entitlements:
    $ref: './v2024/paths/dimension-entitlements.yaml'
  /saved-searches:
    $ref: ./v2024/paths/saved-searches.yaml
  /saved-searches/{id}:
    $ref: ./v2024/paths/saved-searches-id.yaml
  /saved-searches/{id}/execute:
    $ref: ./v2024/paths/saved-searches-execute.yaml
  /scheduled-searches:
    $ref: ./v2024/paths/scheduled-searches.yaml
  /scheduled-searches/{id}:
    $ref: ./v2024/paths/scheduled-searches-id.yaml
  /scheduled-searches/{id}/unsubscribe:
    $ref: ./v2024/paths/scheduled-searches-unsubscribe.yaml
  /search:
    $ref: ./v2024/paths/search-post.yaml
  /search/count:
    $ref: ./v2024/paths/search-count.yaml
  /search/aggregate:
    $ref: ./v2024/paths/search-aggregate.yaml
  /search/{index}/{id}:
    $ref: ./v2024/paths/search-get.yaml
  /segments:
    $ref: ./v2024/paths/segments.yaml
  /segments/{id}:
    $ref: ./v2024/paths/segment.yaml
  /service-desk-integrations:
    $ref: ./v2024/paths/service-desk-integrations.yaml
  /service-desk-integrations/{id}:
    $ref: ./v2024/paths/service-desk-integration.yaml
  /service-desk-integrations/types:
    $ref: ./v2024/paths/service-desk-integration-types.yaml
  /service-desk-integrations/templates/{scriptName}:
    $ref: ./v2024/paths/service-desk-integration-template.yaml
  /service-desk-integrations/status-check-configuration:
    $ref: ./v2024/paths/service-desk-integration-configuration.yaml
  /query-password-info:
    $ref: ./v2024/paths/query-password-info.yaml
  /set-password:
    $ref: ./v2024/paths/set-password.yaml
  /password-change-status/{id}:
    $ref: ./v2024/paths/password-change-status.yaml
  /password-dictionary:
    $ref: ./v2024/paths/password-dictionary.yaml
  /password-org-config:
    $ref: ./v2024/paths/password-org-config.yaml
  /reports/{taskResultId}/result:
    $ref: ./v2024/paths/reports-result.yaml
  /reports/run:
    $ref: ./v2024/paths/reports-run.yaml
  /reports/{id}/cancel:
    $ref: ./v2024/paths/reports-cancel.yaml
  /reports/{taskResultId}:
    $ref: ./v2024/paths/reports-get-file.yaml
  /sod-policies:
    $ref: ./v2024/paths/sod-policies.yaml
  /sod-policies/{id}:
    $ref: ./v2024/paths/sod-policy.yaml
  /sod-policies/{id}/evaluate:
    $ref: ./v2024/paths/sod-policy-evaluate.yaml
  /sod-policies/{id}/schedule:
    $ref: ./v2024/paths/sod-schedule.yaml
  /sod-policies/{id}/violation-report/run:
    $ref: ./v2024/paths/sod-report-run.yaml
  /sod-policies/{id}/violation-report:
    $ref: ./v2024/paths/sod-violation-report.yaml
  /sod-policies/sod-violation-report-status/{reportResultId}:
    $ref: ./v2024/paths/sod-violation-report-status.yaml
  /sod-violations/predict:
    $ref: ./v2024/paths/sod-violations-predict.yaml
  /sod-violations/check:
    $ref: ./v2024/paths/sod-violations-check.yaml
  /sod-violation-report/run:
    $ref: ./v2024/paths/sod-all-report-run.yaml
  /sod-violation-report:
    $ref: ./v2024/paths/sod-all-report-status.yaml
  /sod-violation-report/{reportResultId}/download:
    $ref: ./v2024/paths/sod-download-default-report.yaml
  /sod-violation-report/{reportResultId}/download/{fileName}:
    $ref: ./v2024/paths/sod-download-custom-report.yaml
  /sources:
    $ref: ./v2024/paths/sources.yaml
  /sources/{id}:
    $ref: ./v2024/paths/source.yaml
  /sources/{sourceId}/provisioning-policies:
    $ref: ./v2024/paths/provisioning-policies.yaml
  /sources/{sourceId}/provisioning-policies/{usageType}:
    $ref: ./v2024/paths/provisioning-policy.yaml
  /sources/{sourceId}/provisioning-policies/bulk-update:
    $ref: ./v2024/paths/provisioning-policies-bulk-update.yaml
  /sources/{sourceId}/schemas:
    $ref: ./v2024/paths/schemas.yaml
  /sources/{sourceId}/schedules:
    $ref: ./v2024/paths/source-schedules.yaml
  /sources/{sourceId}/schedules/{scheduleType}:
    $ref: ./v2024/paths/source-schedule.yaml
  /sources/{sourceId}/schemas/{schemaId}:
    $ref: ./v2024/paths/schema.yaml
  /sources/{sourceId}/source-health:
    $ref: ./v2024/paths/source-health.yaml
  /sources/{id}/schemas/accounts:
    $ref: ./v2024/paths/source-accounts-schema.yaml
  /sources/{id}/schemas/entitlements:
    $ref: ./v2024/paths/source-entitlements-schema.yaml
  /sources/{sourceId}/upload-connector-file:
    $ref: ./v2024/paths/source-upload-connector-file.yaml
  /sources/{sourceId}/connections:
    $ref: "./v2024/paths/source-connections.yaml"
  /sources/{id}/correlation-config:
    $ref: ./v2024/paths/correlation-config.yaml
  /sources/{sourceId}/password-policies:
    $ref: ./v2024/paths/sources-policy-holders.yaml
  /sources/{sourceId}/connector/check-connection:
    $ref: ./v2024/paths/source-connector-check-connection.yaml
  /sources/{sourceId}/connector/peek-resource-objects:
    $ref: ./v2024/paths/source-connector-peek-resource-objects.yaml
  /sources/{sourceId}/connector/ping-cluster:
    $ref: ./v2024/paths/source-connector-ping-cluster.yaml
  /sources/{sourceId}/connector/test-configuration:
    $ref: ./v2024/paths/source-connector-test-configuration.yaml
  /sources/{id}/connectors/source-config:
    $ref: ./v2024/paths/source-connectors-source-config.yaml
  /sources/{sourceId}/native-change-detection-config:
    $ref: ./v2024/paths/native-change-detection-config.yaml
  /sources/{id}/remove-accounts:
    $ref: ./v2024/paths/remove-accounts.yaml
  /sources/{id}/load-accounts:
    $ref: ./v2024/paths/load-accounts.yaml
  /sources/{id}/load-uncorrelated-accounts:
    $ref: ./v2024/paths/load-uncorrelated-accounts.yaml
  /tagged-objects:
    $ref: ./v2024/paths/tagged-objects.yaml
  /tagged-objects/{type}:
    $ref: ./v2024/paths/tagged-objects-type.yaml
  /tagged-objects/{type}/{id}:
    $ref: ./v2024/paths/tagged-object.yaml
  /tagged-objects/bulk-add:
    $ref: ./v2024/paths/bulk-add-tagged-objects.yaml
  /tagged-objects/bulk-remove:
    $ref: ./v2024/paths/bulk-remove-tagged-objects.yaml
  /transforms:
    $ref: ./v2024/paths/transforms.yaml
  /transforms/{id}:
    $ref: ./v2024/paths/transform.yaml
  /work-items:
    $ref: ./v2024/paths/work-items.yaml
  /work-items/completed:
    $ref: ./v2024/paths/work-items-completed.yaml
  /work-items/count:
    $ref: ./v2024/paths/work-items-count.yaml
  /work-items/completed/count:
    $ref: ./v2024/paths/work-items-completed-count.yaml
  /work-items/summary:
    $ref: ./v2024/paths/work-items-summary.yaml
  /work-items/{id}:
    $ref: ./v2024/paths/work-item.yaml
  /work-items/{id}/approve/{approvalItemId}:
    $ref: ./v2024/paths/work-items-approve-approval-item.yaml
  /work-items/{id}/reject/{approvalItemId}:
    $ref: ./v2024/paths/work-items-reject-approval-item.yaml
  /work-items/bulk-approve/{id}:
    $ref: ./v2024/paths/work-items-bulk-approve-approval-item.yaml
  /work-items/bulk-reject/{id}:
    $ref: ./v2024/paths/work-items-bulk-reject-approval-item.yaml
  /work-items/{id}/submit-account-selection:
    $ref: ./v2024/paths/work-items-account-selection.yaml
  /workflows:
    $ref: ./v2024/paths/workflows/workflows.yaml
  /workflows/{id}:
    $ref: ./v2024/paths/workflows/workflow.yaml
  /workflows/{id}/test:
    $ref: ./v2024/paths/workflows/workflow-test.yaml
  /workflows/{id}/executions:
    $ref: ./v2024/paths/workflows/workflow-executions.yaml
  /workflow-executions/{id}:
    $ref: ./v2024/paths/workflows/workflow-execution.yaml
  /workflow-executions/{id}/history:
    $ref: ./v2024/paths/workflows/workflow-execution-history.yaml
  /workflow-executions/{id}/cancel:
    $ref: ./v2024/paths/workflows/workflow-execution-cancel.yaml
  /workflow-library:
    $ref: ./v2024/paths/workflows/workflow-library.yaml
  /workflow-library/actions:
    $ref: ./v2024/paths/workflows/workflow-library-actions.yaml
  /workflow-library/triggers:
    $ref: ./v2024/paths/workflows/workflow-library-triggers.yaml
  /workflow-library/operators:
    $ref: ./v2024/paths/workflows/workflow-library-operators.yaml
  /workflows/{id}/external/oauth-clients:
    $ref: ./v2024/paths/workflows/workflow-external-oauth-client.yaml
  /workflows/execute/external/{id}:
    $ref: ./v2024/paths/workflows/workflow-external-execute.yaml
  /workflows/execute/external/{id}/test:
    $ref: ./v2024/paths/workflows/workflow-external-execute-test.yaml
  /source-usages/{sourceId}/status:
    $ref: ./v2024/paths/source-usage-status.yaml
  /source-usages/{sourceId}/summaries:
    $ref: ./v2024/paths/source-usages.yaml
  /account-usages/{accountId}/summaries:
    $ref: ./v2024/paths/account-usages.yaml
  /identity-profiles/identity-preview:
    $ref: ./v2024/paths/identity-profiles-identity-preview.yaml
  /work-items/{id}/forward:
    $ref: ./v2024/paths/work-item-forward.yaml
  /accounts/search-attribute-config:
    $ref: ./v2024/paths/searchAttributeConfig.yaml
  /accounts/search-attribute-config/{name}:
    $ref: ./v2024/paths/searchAttributeConfig-get-patch-delete.yaml

  # V2024 Public Preview Endpoints (Requires: X-SailPoint-Experimental header)
  /access-model-metadata/attributes:
    $ref: ./v2024/paths/access-model-metadata-list.yaml
  /access-model-metadata/attributes/{key}:
    $ref: ./v2024/paths/access-model-metadata.yaml
  /access-model-metadata/attributes/{key}/values:
    $ref: ./v2024/paths/access-model-metadata-value-list.yaml
  /access-model-metadata/attributes/{key}/values/{value}:
    $ref: ./v2024/paths/access-model-metadata-value.yaml
  /access-profiles/bulk-update-requestable:
    $ref: ./v2024/paths/access-profile-bulk-update-requestable.yaml
  /ai-access-request-recommendations:
    $ref: ./v2024/paths/ai-access-request-recommendations.yaml
  /ai-access-request-recommendations/config:
    $ref: ./v2024/paths/ai-access-request-recommendations-config.yaml
  /ai-access-request-recommendations/ignored-items:
    $ref: ./v2024/paths/ai-access-request-recommendations-ignored.yaml
  /ai-access-request-recommendations/requested-items:
    $ref: ./v2024/paths/ai-access-request-recommendations-requested.yaml
  /ai-access-request-recommendations/viewed-items:
    $ref: ./v2024/paths/ai-access-request-recommendations-viewed.yaml
  /ai-access-request-recommendations/viewed-items/bulk-create:
    $ref: ./v2024/paths/ai-access-request-recommendations-viewed-bulk-create.yaml
  /auth-profiles:
    $ref: ./v2024/paths/auth-profiles.yaml
  /auth-profiles/{id}:
    $ref: ./v2024/paths/auth-profile.yaml
  /custom-password-instructions:
    $ref: ./v2024/paths/custom-password-instructions.yaml
  /custom-password-instructions/{pageId}:
    $ref: ./v2024/paths/custom-password-instruction.yaml
  /entitlements:
    $ref: ./v2024/paths/entitlements.yaml
  /entitlements/{id}:
    $ref: ./v2024/paths/ears-entitlement.yaml
  /entitlements/{id}/parents:
    $ref: ./v2024/paths/ears-entitlement-parents.yaml
  /entitlements/{id}/children:
    $ref: ./v2024/paths/ears-entitlement-children.yaml
  /entitlements/bulk-update:
    $ref: ./v2024/paths/ears-entitlement-bulk-update.yaml
  /entitlements/{id}/entitlement-request-config:
    $ref: ./v2024/paths/entitlement-request-config.yaml
  /entitlements/reset/sources/{id}:
    $ref: ./v2024/paths/reset-entitlements.yaml
  /entitlements/{id}/access-model-metadata/{attributeKey}/values/{attributeValue}:
    $ref: ./v2024/paths/entitlement-access-model-metadata.yaml
  /entitlements/aggregate/sources/{id}:
    $ref: ./v2024/paths/load-entitlements-by-sources.yaml
  /generate-password-reset-token/digit:
    $ref: ./v2024/paths/password-reset-digit-token.yaml
  /historical-identities:
    $ref: ./v2024/paths/historical-identities.yaml
  /historical-identities/{id}:
    $ref: ./v2024/paths/historical-identity.yaml
  /historical-identities/{id}/access-items:
    $ref: ./v2024/paths/historical-identity-access-items.yaml
  /historical-identities/{id}/snapshots:
    $ref: ./v2024/paths/historical-identity-snapshots.yaml
  /historical-identities/{id}/snapshot-summary:
    $ref: ./v2024/paths/historical-identity-snapshot-summary.yaml
  /historical-identities/{id}/snapshots/{date}:
    $ref: ./v2024/paths/historical-identity-snapshot-date.yaml
  /historical-identities/{id}/snapshots/{date}/access-items:
    $ref: ./v2024/paths/historical-identity-snapshot-date-access-items.yaml
  /common-access:
    $ref: ./v2024/paths/common-access.yaml
  /common-access/update-status:
    $ref: ./v2024/paths/common-access-update-status.yaml
  /historical-identities/{id}/events:
    $ref: ./v2024/paths/historical-identity-events.yaml
  /historical-identities/{id}/start-date:
    $ref: ./v2024/paths/historical-identity-start-date.yaml
  /historical-identities/{id}/compare:
    $ref: ./v2024/paths/historical-identity-compare.yaml
  /historical-identities/{id}/compare/{access-type}:
    $ref: ./v2024/paths/historical-identity-compare-type.yaml
  /identities/{identityId}/synchronize-attributes:
    $ref: ./v2024/paths/identity-synchronize-attributes.yaml
  /identities/invite:
    $ref: ./v2024/paths/identities-invite.yaml
  /identities/{id}/verification/account/send:
    $ref: ./v2024/paths/identity-send-account-verification.yaml
  /identities/process:
    $ref: ./v2024/paths/identities-process.yaml
  /identity-attributes:
    $ref: ./v2024/paths/identity-attributes.yaml
  /identity-attributes/{name}:
    $ref: ./v2024/paths/identity-attribute.yaml
  /identity-attributes/bulk-delete:
    $ref: ./v2024/paths/identity-attributes-bulk-delete.yaml
  /mail-from-attributes:
    $ref: ./v2024/paths/mail-from-attributes.yaml
  /mail-from-attributes/{identity}:
    $ref: ./v2024/paths/mail-from-attribute.yaml
  /generic-approvals:
    $ref: ./v2024/paths/approvals.yaml
  /generic-approvals/{id}:
    $ref: ./v2024/paths/approval.yaml
  /machine-accounts:
    $ref: ./v2024/paths/machine-accounts.yaml
  /machine-accounts/{id}:
    $ref: ./v2024/paths/machine-account.yaml
  /sources/{sourceId}/machine-classification-config:
    $ref: "./v2024/paths/machine-classification-config.yaml"
  /sources/{sourceId}/machine-account-mappings:
    $ref: "./v2024/paths/machine-account-mapping.yaml"
  /sources/{sourceId}/machine-mappings:
    $ref: "./v2024/paths/machine-mappings.yaml"
  /accounts/{id}/classify:
    $ref: "./v2024/paths/machine-account-classify.yaml"
  /machine-identities:
    $ref: ./v2024/paths/machine-identities.yaml
  /machine-identities/{id}:
    $ref: ./v2024/paths/machine-identity.yaml
  /notification-template-defaults:
    $ref: ./v2024/paths/notification-template-defaults.yaml
  /notification-templates:
    $ref: ./v2024/paths/notification-templates.yaml
  /notification-templates/{id}:
    $ref: ./v2024/paths/notification-template.yaml
  /notification-templates/bulk-delete:
    $ref: ./v2024/paths/notification-templates-bulk-delete.yaml
  /org-config:
    $ref: ./v2024/paths/org-config.yaml
  /org-config/valid-time-zones:
    $ref: ./v2024/paths/org-config-valid-time-zones.yaml
  /outlier-summaries:
    $ref: ./v2024/paths/outlier-summaries.yaml
  /outlier-summaries/latest:
    $ref: ./v2024/paths/outlier-summaries-latest.yaml
  /outliers:
    $ref: ./v2024/paths/outliers.yaml
  /outliers/{outlierId}/contributing-features:
    $ref: ./v2024/paths/outliers-contributing-features.yaml
  /outliers/{outlierId}/feature-details/{contributingFeatureName}/access-items:
    $ref: ./v2024/paths/outliers-contributing-feature-access-items.yaml
  /outliers/ignore:
    $ref: ./v2024/paths/outliers-ignore.yaml
  /outliers/unignore:
    $ref: ./v2024/paths/outliers-unignore.yaml
  /outliers/export:
    $ref: ./v2024/paths/outliers-export.yaml
  /outlier-feature-summaries/{outlierFeatureId}:
    $ref: ./v2024/paths/outlier-feature-summaries.yaml
  /peer-group-strategies/{strategy}/identity-outliers:
    $ref: ./v2024/paths/peer-group-strategies.yaml
  /notification-template-context:
    $ref: ./v2024/paths/notification-template-context.yaml
  /notification-preferences/{key}:
    $ref: ./v2024/paths/notification-preferences.yaml
  /reassignment-configurations/types:
    $ref: ./v2024/paths/reassignment-configuration-types.yaml
  /reassignment-configurations:
    $ref: ./v2024/paths/reassignment-configurations.yaml
  /reassignment-configurations/{identityId}:
    $ref: ./v2024/paths/reassignment-configuration.yaml
  /reassignment-configurations/{identityId}/{configType}:
    $ref: ./v2024/paths/reassignment-configuration-config-type.yaml
  /reassignment-configurations/{identityId}/evaluate/{configType}:
    $ref: ./v2024/paths/reassignment-configuration-evaluate.yaml
  /reassignment-configurations/tenant-config:
    $ref: ./v2024/paths/tenant-configuration.yaml
  /recommendations/request:
    $ref: ./v2024/paths/recommendations-request.yaml
  /recommendations/config:
    $ref: ./v2024/paths/recommendations-config.yaml
  /role-insights/requests:
    $ref: ./v2024/paths/role-insights-requests.yaml
  /role-insights/requests/{id}:
    $ref: ./v2024/paths/role-insights-request.yaml
  /role-insights/summary:
    $ref: ./v2024/paths/role-insights-summary.yaml
  /role-insights:
    $ref: ./v2024/paths/role-insights.yaml
  /role-insights/{insightId}:
    $ref: ./v2024/paths/role-insight.yaml
  /role-insights/{insightId}/entitlement-changes:
    $ref: ./v2024/paths/role-insights-entitlement-changes.yaml
  /role-insights/{insightId}/entitlement-changes/download:
    $ref: ./v2024/paths/role-insights-entitlement-changes-download.yaml
  /role-insights/{insightId}/current-entitlements:
    $ref: ./v2024/paths/role-insights-current-entitlements.yaml
  /role-insights/{insightId}/entitlement-changes/{entitlementId}/identities:
    $ref: ./v2024/paths/role-insights-entitlement-changes-identities.yaml
  /role-mining-sessions:
    $ref: ./v2024/paths/role-mining-sessions.yaml
  /role-mining-sessions/{sessionId}:
    $ref: ./v2024/paths/role-mining-session.yaml
  /role-mining-sessions/{sessionId}/status:
    $ref: ./v2024/paths/role-mining-session-status.yaml
  /role-mining-sessions/{sessionId}/potential-role-summaries:
    $ref: ./v2024/paths/role-mining-session-potential-role-summaries.yaml
  /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}:
    $ref: ./v2024/paths/role-mining-session-potential-role-summary.yaml
  /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}/applications:
    $ref: ./v2024/paths/role-mining-session-potential-role-applications.yaml
  /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}/entitlements:
    $ref: ./v2024/paths/role-mining-session-potential-role-entitlements.yaml
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/entitlement-popularities:
    $ref: ./v2024/paths/role-mining-potential-role-entitlement-popularities.yaml
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/entitlement-popularity-distribution:
    $ref: ./v2024/paths/role-mining-potential-role-entitlement-popularity-distribution.yaml
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/edit-entitlements:
    $ref: ./v2024/paths/role-mining-potential-role-edit-entitlements.yaml
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/identities:
    $ref: ./v2024/paths/role-mining-potential-role-identities.yaml
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export:
    $ref: ./v2024/paths/role-mining-session-potential-role-export.yaml
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async:
    $ref: ./v2024/paths/role-mining-session-potential-role-export-async.yaml
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async/{exportId}:
    $ref: ./v2024/paths/role-mining-session-potential-role-export-status.yaml
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async/{exportId}/download:
    $ref: ./v2024/paths/role-mining-session-potential-role-export-download.yaml
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/provision:
    $ref: ./v2024/paths/role-mining-potential-role-provision.yaml
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/excluded-entitlements:
    $ref: ./v2024/paths/role-mining-potential-role-excluded-entitlements.yaml
  /role-mining-potential-roles:
    $ref: ./v2024/paths/role-mining-potential-role-summaries.yaml
  /role-mining-potential-roles/{potentialRoleId}:
    $ref: ./v2024/paths/role-mining-potential-role.yaml
  /role-mining-potential-roles/saved:
    $ref: ./v2024/paths/role-mining-potential-roles-draft.yaml
  /role-mining-potential-roles/{potentialRoleId}/sources/{sourceId}/identityUsage:
    $ref: ./v2024/paths/role-mining-potential-role-source-identity-usage.yaml
  /roles/{id}/entitlements:
    $ref: ./v2024/paths/role-entitlements.yaml
  /send-test-notification:
    $ref: ./v2024/paths/send-test-notification.yaml
  /sim-integrations/{id}:
    $ref: ./v2024/paths/sim-integrations.yaml
  /sim-integrations/{id}/beforeProvisioningRule:
    $ref: ./v2024/paths/sim-integrations-before-provisioning-rule.yaml
  /sim-integrations:
    $ref: ./v2024/paths/sim-integrations-value-list.yaml
  /sp-config/export:
    $ref: ./v2024/paths/sp-config-export.yaml
  /sp-config/export/{id}:
    $ref: ./v2024/paths/sp-config-export-status.yaml
  /sp-config/export/{id}/download:
    $ref: ./v2024/paths/sp-config-export-download.yaml
  /sp-config/import:
    $ref: ./v2024/paths/sp-config-import.yaml
  /sp-config/import/{id}:
    $ref: ./v2024/paths/sp-config-import-status.yaml
  /sp-config/import/{id}/download:
    $ref: ./v2024/paths/sp-config-import-download.yaml
  /sp-config/config-objects:
    $ref: ./v2024/paths/sp-config-objects.yaml
  /sources/{id}/attribute-sync-config:
    $ref: ./v2024/paths/attr-sync-config-source.yaml
  /sources/{id}/synchronize-attributes:
    $ref: ./v2024/paths/source-synchronize-attributes.yaml
  /sources/{id}/entitlement-request-config:
    $ref: ./v2024/paths/sources-entitlement-request-config.yaml
  /sources/{sourceId}/load-entitlements:
    $ref: ./v2024/paths/load-entitlements.yaml
  /task-status/{id}:
    $ref: ./v2024/paths/task-status.yaml
  /task-status:
    $ref: ./v2024/paths/task-status-list.yaml
  /task-status/pending-tasks:
    $ref: ./v2024/paths/task-status-pending.yaml
  /tenant:
    $ref: ./v2024/paths/tenant.yaml
  /tenant-context:
    $ref: ./v2024/paths/tenant-context.yaml
  /triggers:
    $ref: ./v2024/paths/triggers.yaml
  /trigger-subscriptions:
    $ref: ./v2024/paths/trigger-subscriptions.yaml
  /trigger-subscriptions/{id}:
    $ref: ./v2024/paths/trigger-subscription.yaml
  /trigger-subscriptions/validate-filter:
    $ref: ./v2024/paths/trigger-subscriptions-validate-filter.yaml
  /trigger-invocations/status:
    $ref: ./v2024/paths/trigger-invocations-status.yaml
  /trigger-invocations/{id}/complete:
    $ref: ./v2024/paths/trigger-invocations-complete.yaml
  /trigger-invocations/test:
    $ref: ./v2024/paths/trigger-invocations-test.yaml
  /ui-metadata/tenant:
    $ref: ./v2024/paths/ui-metadata/tenant-ui-metadata.yaml
  /verified-from-addresses:
    $ref: ./v2024/paths/verified-from-addresses.yaml
  /verified-from-addresses/{id}:
    $ref: ./v2024/paths/verified-from-address.yaml
  /verified-domains:
    $ref: ./v2024/paths/verified-domains.yaml
  /workgroups:
    $ref: ./v2024/paths/workgroups/workgroups.yaml
  /workgroups/{id}:
    $ref: ./v2024/paths/workgroups/workgroup.yaml
  /workgroups/bulk-delete:
    $ref: ./v2024/paths/workgroups/workgroups-bulk-delete.yaml
  /workgroups/{workgroupId}/connections:
    $ref: ./v2024/paths/workgroups/connections.yaml
  /workgroups/{workgroupId}/members:
    $ref: ./v2024/paths/workgroups/workgroup-members.yaml
  /workgroups/{workgroupId}/members/bulk-add:
    $ref: ./v2024/paths/workgroups/bulk-add-workgroup-members.yaml
  /workgroups/{workgroupId}/members/bulk-delete:
    $ref: ./v2024/paths/workgroups/bulk-delete-workgroup-members.yaml
  /form-definitions:
    $ref: ./v2024/paths/form-definitions.yaml
  /form-definitions/{formDefinitionID}:
    $ref: ./v2024/paths/form-definition.yaml
  /form-definitions/{formDefinitionID}/data-source:
    $ref: ./v2024/paths/form-definition-data-source.yaml
  /form-definitions/export:
    $ref: ./v2024/paths/form-definitions-export.yaml
  /form-definitions/forms-action-dynamic-schema:
    $ref: ./v2024/paths/form-definition-forms-action-dynamic-schema.yaml
  /form-definitions/import:
    $ref: ./v2024/paths/form-definitions-import.yaml
  /form-definitions/{formDefinitionID}/upload:
    $ref: ./v2024/paths/form-definition-files.yaml
  /form-definitions/{formDefinitionID}/file/{fileID}:
    $ref: ./v2024/paths/form-definition-file.yaml
  /form-instances:
    $ref: ./v2024/paths/form-instances.yaml
  /form-instances/{formInstanceID}:
    $ref: ./v2024/paths/form-instance.yaml
  /form-instances/{formInstanceID}/data-source/{formElementID}:
    $ref: ./v2024/paths/form-instance-data-source.yaml
  /form-instances/{formInstanceID}/file/{fileID}:
    $ref: ./v2024/paths/form-instance-file.yaml
  /form-definitions/predefined-select-options:
    $ref: ./v2024/paths/form-definitions-predefined-select-options.yaml
  /access-request-identity-metrics/{identityId}/requested-objects/{requestedObjectId}/type/{type}:
    $ref: ./v2024/paths/access-request-identity-metrics.yaml
  /icons/{objectType}/{objectId}:
    $ref: ./v2024/paths/icon.yaml
  /suggested-entitlement-description-batches/{batchId}/stats:
    $ref: ./v2024/paths/suggested-entitlement-description-batches-stats.yaml
  /suggested-entitlement-description-batches:
    $ref: ./v2024/paths/suggested-entitlement-description-batches.yaml
  /suggested-entitlement-description-approvals:
    $ref: ./v2024/paths/suggested-entitlement-description-approvals.yaml
  /suggested-entitlement-description-assignments:
    $ref: ./v2024/paths/suggested-entitlement-description-assignments.yaml
  /suggested-entitlement-descriptions:
    $ref: ./v2024/paths/suggested-entitlement-descriptions.yaml
  /discovered-applications:
    $ref: "./v2024/paths/discovered-applications.yaml"
  /manual-discover-applications-template:
    $ref: "./v2024/paths/manual-discover-applications-template.yaml"
  /manual-discover-applications:
    $ref: "./v2024/paths/manual-discover-applications.yaml"
  /vendor-connector-mappings:
    $ref: "./v2024/paths/vendor-connector-mappings.yaml"
  /source-apps/{id}:
    $ref: './v2024/paths/ears-source-app.yaml'
  /source-apps/bulk-update:
    $ref: './v2024/paths/ears-source-app-bulk-update.yaml'
  /source-apps/assigned:
    $ref: './v2024/paths/ears-source-apps-assigned.yaml'
  /source-apps:
    $ref: './v2024/paths/ears-source-apps.yaml'
  /source-apps/all:
    $ref: './v2024/paths/ears-source-apps-all.yaml'
  /source-apps/{id}/access-profiles:
    $ref: './v2024/paths/ears-source-app-access-profiles.yaml'
  /source-apps/{id}/access-profiles/bulk-remove:
    $ref: './v2024/paths/ears-source-app-access-profiles-bulk-remove.yaml'
  /user-apps/{id}:
    $ref: './v2024/paths/ears-user-app.yaml'
  /user-apps/{id}/available-accounts:
    $ref: './v2024/paths/ears-user-app-available-accounts.yaml'
  /user-apps:
    $ref: './v2024/paths/ears-user-apps.yaml'
  /user-apps/all:
    $ref: './v2024/paths/ears-user-apps-all.yaml'
  /roles/{id}/access-model-metadata/{attributeKey}/values/{attributeValue}:
    $ref: './v2024/paths/role-access-model-metadata/role-id-access-model-metadata.yaml'
  /roles/access-model-metadata/bulk-update/ids:
    $ref: './v2024/paths/role-access-model-metadata/role-bulk-update-ids.yaml'
  /roles/access-model-metadata/bulk-update/filter:
    $ref: './v2024/paths/role-access-model-metadata/role-bulk-update-filter.yaml'
  /roles/access-model-metadata/bulk-update/query:
    $ref: './v2024/paths/role-access-model-metadata/role-bulk-update-query.yaml'
  /roles/access-model-metadata/bulk-update/id:
    $ref: './v2024/paths/role-access-model-metadata/role-bulk-update-status-id.yaml'
  /roles/access-model-metadata/bulk-update:
    $ref: './v2024/paths/role-access-model-metadata/role-bulk-update-status.yaml'
  /roles/filter:
    $ref: './v2024/paths/role-access-model-metadata/role-filter.yaml'
security:
- userAuth:
  - "sp:scopes:all"
components:
  securitySchemes:
    userAuth:
      type: oauth2
      x-displayName: Personal Access Token
      description: |
        OAuth2 Bearer token (JWT) generated using either a [personal access token (PAT)](https://developer.sailpoint.com/docs/api/authentication/#generate-a-personal-access-token) or through the [authorization code flow](https://developer.sailpoint.com/docs/api/authentication/#request-access-token-with-authorization-code-grant-flow).

        Personal access tokens are associated with a user in Identity Security Cloud and relies on the user's [user level](https://documentation.sailpoint.com/saas/help/common/users/index.html) (ex. Admin, Helpdesk, etc.) to determine a base level of access.
        
        See [Identity Security Cloud REST API Authentication](https://developer.sailpoint.com/docs/api/authentication/) for more information.
      flows:
        clientCredentials:
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
          scopes:
            "sp:scopes:default": "default scope"
            "sp:scopes:all": "access to all scopes"
        authorizationCode:
          authorizationUrl: https://tenant.login.sailpoint.com/oauth/authorize
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
          scopes:
            "sp:scopes:default": "default scope"
            "sp:scopes:all": "access to all scopes"
    applicationAuth:
      type: oauth2
      x-displayName: Client Credentials
      description: |
        OAuth2 Bearer token (JWT) generated using [client credentials flow](https://developer.sailpoint.com/docs/api/authentication/#request-access-token-with-client-credentials-grant-flow).

        Client credentials refers to tokens that are not associated with a user in Identity Security Cloud.

        See [Identity Security Cloud REST API Authentication](https://developer.sailpoint.com/docs/api/authentication/) for more information.
      flows:
        clientCredentials:
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
          scopes:
            "sp:scopes:default": "default scope"
            "sp:scopes:all": "access to all scopes"
  schemas:
    AccessRequest:
      $ref: ./v2024/schemas/AccessRequest.yaml
    AccessRequestItem:
      $ref: ./v2024/schemas/AccessRequestItem.yaml
    AccessProfileDocument:
      $ref: ./v2024/schemas/search/model/access/profile/AccessProfileDocument.yaml
    AccessProfileSummary:
      $ref: ./v2024/schemas/search/model/access/AccessProfileSummary.yaml
    AccessReviewReassignment:
      $ref: ./v2024/schemas/ReviewReassign.yaml
    Account:
      $ref: ./v2024/schemas/Account.yaml
    AccountActivity:
      $ref: ./v2024/schemas/AccountActivity.yaml
    AccountActivitySearchedItem:
      $ref: ./v2024/schemas/search/model/account/activity/AccountActivityDocument.yaml
    AccountAttributes:
      $ref: ./v2024/schemas/AccountAttributes.yaml
    AccountsAsyncResult:
      $ref: ./v2024/schemas/AccountsAsyncResult.yaml
    AccountToggleRequest:
      $ref: ./v2024/schemas/AccountToggleRequest.yaml
    AccountUnlockRequest:
      $ref: ./v2024/schemas/AccountUnlockRequest.yaml
    ApprovalItems:
      $ref: ./v2024/schemas/ApprovalItemDetails.yaml
    Campaign:
      $ref: ./v2024/schemas/CampaignReference.yaml
    Certification:
      $ref: ./v2024/schemas/IdentityCertificationDto.yaml
    CertificationReference:
      $ref: ./v2024/schemas/CertificationReference.yaml
    EntitlementDocument:
      $ref: ./v2024/schemas/search/model/entitlement/EntitlementDocument.yaml
    EntitlementSummary:
      $ref: ./v2024/schemas/search/model/access/AccessProfileEntitlement.yaml
    Event:
      $ref: ./v2024/schemas/search/model/event/EventDocument.yaml
    IdentityDocument:
      $ref: ./v2024/schemas/search/model/identity/IdentityDocument.yaml
    IdentityProfile:
      $ref: ./v2024/schemas/IdentityProfile.yaml
    IdentityReferenceWithNameAndEmail:
      $ref: ./v2024/schemas/IdentityReferenceWithNameAndEmail.yaml
    ProvisioningConfig:
      $ref: ./v2024/schemas/ProvisioningConfig.yaml
    ProvisioningPolicy:
      $ref: ./v2024/schemas/ProvisioningPolicyDto.yaml
    QueuedCheckConfigDetails:
      $ref: ./v2024/schemas/QueuedCheckConfigDetails.yaml
    Reassignment:
      $ref: ./v2024/schemas/Reassignment.yaml
    ReassignmentReference:
      $ref: ./v2024/schemas/ReassignReference.yaml
    RemediationItems:
      $ref: ./v2024/schemas/RemediationItemDetails.yaml
    RequestableObject:
      $ref: ./v2024/schemas/RequestableObject.yaml
    RequestableObjectType:
      $ref: ./v2024/schemas/RequestableObjectType.yaml
    RequestableObjectRequestStatus:
      $ref: ./v2024/schemas/RequestableObjectRequestStatus.yaml
    Reviewer:
      $ref: ./v2024/schemas/Reviewer.yaml
    RoleDocument:
      $ref: ./v2024/schemas/search/model/role/RoleDocument.yaml
    RoleSummary:
      $ref: ./v2024/schemas/search/model/access/AccessProfileRole.yaml
    SearchDocument:
      $ref: ./v2024/schemas/search/documents/SearchDocument.yaml
    SavedSearch:
      $ref: ./v2024/schemas/search/saved/SavedSearch.yaml
    Schedule:
      $ref: ./v2024/schemas/schedule/Schedule.yaml
    ScheduledSearch:
      $ref: ./v2024/schemas/search/scheduled/ScheduledSearch.yaml
    ServiceDeskIntegrationDto:
      $ref: ./v2024/schemas/ServiceDeskIntegrationDto.yaml
    ServiceDeskIntegrationTemplateDto:
      $ref: ./v2024/schemas/ServiceDeskIntegrationTemplateDto.yaml
    ServiceDeskIntegrationTemplateType:
      $ref: ./v2024/schemas/ServiceDeskIntegrationTemplateType.yaml
    Source:
      $ref: ./v2024/schemas/Source.yaml
    SourceHealthDto:
      $ref: ./v2024/schemas/SourceHealthDto.yaml
    SourceSchedule:
      $ref: ./v2024/schemas/sources/Schedule.yaml
    Transform:
      $ref: ./v2024/schemas/Transform.yaml
    WorkItems:
      $ref: ./v2024/schemas/WorkItems.yaml
    WorkItemsCount:
      $ref: ./v2024/schemas/WorkItemsCount.yaml
    WorkItemsSummary:
      $ref: ./v2024/schemas/WorkItemsSummary.yaml
    AccountUsage:
      $ref: ./v2024/schemas/AccountUsage.yaml
    SourceUsage:
      $ref: ./v2024/schemas/SourceUsage.yaml
    SourceUsageStatus:
      $ref: ./v2024/schemas/SourceUsageStatus.yaml
    BrandingItem:
      $ref: ./v2024/schemas/BrandingItem.yaml
    BrandingItemCreate:
      $ref: ./v2024/schemas/BrandingItemCreate.yaml
    RoleBulkUpdateResponse:
      $ref: "./v2024/schemas/role-metadata/RoleBulkUpdateResponse.yaml"
    RoleGetAllBulkUpdateResponse:
      $ref: "./v2024/schemas/role-metadata/RoleGetAllBulkUpdateResponse.yaml"
    RoleListFilterDTO:
      $ref: "./v2024/schemas/role-metadata/RoleListFilterDTO.yaml"
    RoleMetadataBulkUpdateByFilterRequest:
      $ref: "./v2024/schemas/role-metadata/RoleMetadataBulkUpdateByFilterRequest.yaml"
    RoleMetadataBulkUpdateByIdRequest:
      $ref: "./v2024/schemas/role-metadata/RoleMetadataBulkUpdateByIdRequest.yaml"
    RoleMetadataBulkUpdateByQueryRequest:
      $ref: "./v2024/schemas/role-metadata/RoleMetadataBulkUpdateByQueryRequest.yaml"
