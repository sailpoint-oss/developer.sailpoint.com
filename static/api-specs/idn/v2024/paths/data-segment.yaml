get:
  operationId: getDataSegment
  security:
    - userAuth: [ idn:data-segments:read ]
    - applicationAuth: [ idn:data-segments:read ]
  x-sailpoint-userLevels:
    - ORG_ADMIN
  tags:
    - Data Segmentation
  summary: Get segment by id
  description: >-
    This API returns the segment specified by the given ID.

  parameters:
    - in: path
      name: id
      schema:
        type: string
      required: true
      description: The segment ID to retrieve.
      example: ef38f943-47e9-4562-b5bb-8424a56397d8
    - name: X-SailPoint-Experimental
      in: header
      description: Use this header to enable this experimental API.
      example: true
      schema:
        type: string
        default: true
      required: true
  responses:
    '200':
      description: Segment
      content:
        application/json:
          schema:
            $ref: '../schemas/data-segment/Data-Segment.yaml'
    '400':
      $ref: '../responses/400.yaml'
    '401':
      $ref: '../responses/401.yaml'
    '403':
      $ref: '../responses/403.yaml'
    '404':
      $ref: '../responses/404.yaml'
    '429':
      $ref: '../responses/429.yaml'
    '500':
      $ref: '../responses/500.yaml'
post:
  operationId: publishDataSegment
  security:
    - userAuth: [ idn:data-segments:write ]
    - applicationAuth: [ idn:data-segments:write ]
  x-sailpoint-userLevels:
    - ORG_ADMIN
  tags:
    - Data Segmentation
  summary: Publish segment by id
  description: >-
    This will publish the segment so that it starts applying the segmentation to the desired users if enabled
  parameters:
    - in: query
      name: publishAll
      schema:
        type: boolean
        default: true
      required: false
      description: This flag decides whether you want to publish all unpublished or a list of specific segment ids
      example: true
    - name: X-SailPoint-Experimental
      in: header
      description: Use this header to enable this experimental API.
      example: true
      schema:
        type: string
        default: true
      required: true
  requestBody:
    required: true
    description: A list of segment ids that you wish to publish
    content:
      application/json:
        schema:
          type: array
          items:
            type: string
  responses:
    '200':
      description: Segments published
    '400':
      $ref: '../responses/400.yaml'
    '401':
      $ref: '../responses/401.yaml'
    '403':
      $ref: '../responses/403.yaml'
    '404':
      $ref: '../responses/404.yaml'
    '429':
      $ref: '../responses/429.yaml'
    '500':
      $ref: '../responses/500.yaml'
patch:
  operationId: patchDataSegment
  security:
    - userAuth: [ idn:data-segments:write ]
    - applicationAuth: [ idn:data-segments:write ]
  x-sailpoint-userLevels:
    - ORG_ADMIN
  tags:
    - Data Segmentation
  summary: Update segment
  description: >-
    Use this API to update segment fields by using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

  parameters:
    - in: path
      name: id
      schema:
        type: string
      required: true
      description: The segment ID to modify.
      example: ef38f943-47e9-4562-b5bb-8424a56397d8
    - name: X-SailPoint-Experimental
      in: header
      description: Use this header to enable this experimental API.
      example: true
      schema:
        type: string
        default: true
      required: true
  requestBody:
    required: true
    description: |
      A list of segment update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

      The following fields are patchable:
      * name
      * description
      * membership
      * memberFilter
      * memberSelection
      * scopes
      * enabled
    content:
      application/json-patch+json:
        schema:
          type: array
          items:
            type: object
        examples:
            Set Visibility Criteria:
                description: Set the member filter
                value:
                  - op: "replace"
                    path: "/memberFilter"
                    value:
                      expression:
                        operator: "AND"
                        children:
                          - operator: "EQUALS"
                            attribute: "location"
                            value:
                              type: "STRING"
                              value: "Philadelphia"
                          - operator: "EQUALS"
                            attribute: "department"
                            value:
                              type: "STRING"
                              value: "HR"
                            
  responses:
    '200':
      description: >-
        Indicates the PATCH operation succeeded, and returns the segment's new representation.
      content:
        application/json:
          schema:
            $ref: '../schemas/data-segment/Data-Segment.yaml'
    '400':
      $ref: '../responses/400.yaml'
    '401':
      $ref: '../responses/401.yaml'
    '403':
      $ref: '../responses/403.yaml'
    '404':
      $ref: '../responses/404.yaml'
    '429':
      $ref: '../responses/429.yaml'
    '500':
      $ref: '../responses/500.yaml'
delete:
  operationId: deleteDataSegment
  security:
    - userAuth: [ idn:data-segments:write ]
    - applicationAuth: [ idn:data-segments:write ]
  x-sailpoint-userLevels:
    - ORG_ADMIN
  tags:
    - Data Segmentation
  summary: Delete segment by id
  description: >-
    This API deletes the segment specified by the given ID.

  parameters:
    - in: path
      name: id
      schema:
        type: string
      required: true
      description: The segment ID to delete.
      example: ef38f943-47e9-4562-b5bb-8424a56397d8
    - in: query
      name: published
      schema:
        type: boolean
        default: false
      required: false
      description: This determines which version of the segment to delete
      example: false
    - name: X-SailPoint-Experimental
      in: header
      description: Use this header to enable this experimental API.
      example: true
      schema:
        type: string
        default: true
      required: true
  responses:
    '204':
      description: No content.
    '400':
      $ref: '../responses/400.yaml'
    '401':
      $ref: '../responses/401.yaml'
    '403':
      $ref: '../responses/403.yaml'
    '404':
      $ref: '../responses/404.yaml'
    '429':
      $ref: '../responses/429.yaml'
    '500':
      $ref: '../responses/500.yaml'