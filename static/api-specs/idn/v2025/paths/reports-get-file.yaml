get:
  tags:
    - Reports Data Extraction
  description: >-
    Gets a report in file format.
  operationId: getReport
  summary: "Get report file"
  security:
    - userAuth: [sp:report:read]
  parameters:
    - in: path
      name: taskResultId
      schema:
        type: string
      required: true
      x-sailpoint-resource-operation-id: startReport
      description: Unique identifier of the task result which handled report
      example: ef38f94347e94562b5bb8424a56397d8
    - in: query
      name: fileFormat
      schema:
        type: string
        enum:
          - csv
          - pdf
      required: true
      description: Output format of the requested report file
      example: csv
    - in: query
      name: name
      required: false
      schema:
        type: string
      example: 'Identities Details Report'
      description: preferred Report file name, by default will be used report name from task result.
    - in: query
      name: auditable
      required: false
      schema:
        type: boolean
        default: false
      example: true
      description: >-
        Enables auditing for current report download.
        Will create an audit event and sent it to the REPORT cloud-audit kafka topic. 
        Event will be created if there is any result present by requested taskResultId.
  responses:
    '200':
      description: Report file in selected format. CSV by default.
      content:
        application/csv:
          schema:
            type: string
            format: binary
        application/pdf:
          schema:
            type: string
            format: binary
      headers:
        Content-disposition:
          description: The requested report's filename
          schema:
            type: string
          example: 'attachment;filename=\"fileName"'
    '400':
      $ref: '../responses/400.yaml'
    '401':
      $ref: '../responses/401.yaml'
    '403':
      $ref: '../responses/403.yaml'
    '404':
      description: Not Found - returned if the request URL refers to a resource or object that does not exist
      content:
        application/json:
          schema:
            $ref: '../schemas/ErrorResponseDto.yaml'
          examples:
            "404":
              summary: An example of a 404 response object
              value:
                detailCode: "404 Not found"
                trackingId: "b21b1f7ce4da4d639f2c62a57171b427"
                messages:
                  - locale: "en-US"
                    localeOrigin: "DEFAULT"
                    text: "<h1>File Not Found - 404 Error</h1> The requested file was not found."
    '429':
      $ref: '../responses/429.yaml'
    '500':
      $ref: '../responses/500.yaml'
