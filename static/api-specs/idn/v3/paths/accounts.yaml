get:
  operationId: listAccounts
  tags:
    - Accounts
  summary: Accounts List
  description: >-
    This returns a list of accounts.  

    A token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or HELPDESK authority is required to call this API.
  security:
    - UserContextAuth: [idn:accounts:read]
  parameters:
    - $ref: "../parameters/limit.yaml"
    - $ref: "../parameters/offset.yaml"
    - $ref: "../parameters/count.yaml"
    - in: query
      name: filters
      schema:
        type: string
      example: identityId eq "2c9180858082150f0180893dbaf44201"
      description: >-
        Filter results using the standard syntax described in [V3 API Standard
        Collection
        Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)


        Filtering is supported for the following fields and operators:


        **id**: *eq, in, sw*


        **identityId**: *eq, in, sw*


        **name**: *eq, in, sw*


        **nativeIdentity**: *eq, in, sw*


        **sourceId**: *eq, in, sw*


        **uncorrelated**: *eq*


        **entitlements**: *eq*


        **origin**: *eq, in*


        **manuallyCorrelated**: *eq*


        **identity.name**: *eq, in, sw*


        **identity.correlated**: *eq*


        **identity.identityState**: *eq, in*
        

        **source.displayableName**: *eq, in*


        **source.authoritative**: *eq*


        **source.connectionType**: *eq, in*
      required: false
    - in: query
      name: sorters
      required: false
      schema:
        type: string
        format: comma-separated
      example: id,name
      description: >-
        Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)


        Sorting is supported for the following fields: **id, name, created, modified, sourceId, identityId, identity.id, nativeIdentity, uuid, manuallyCorrelated, entitlements, origin, identity.name, identity.identityState, identity.correlated, source.displayableName, source.authoritative, source.connectionType**
  responses:
    "200":
      description: List of account objects
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "../schemas/Account.yaml"
    "400":
      $ref: "../responses/400.yaml"
    "401":
      $ref: "../responses/401.yaml"
    "403":
      $ref: "../responses/403.yaml"
    "429":
      $ref: "../responses/429.yaml"
    "500":
      $ref: "../responses/500.yaml"
post:
  operationId: createAccount
  tags:
    - Accounts
  summary: Create Account
  description: |
    This API submits an account creation task and returns the task ID.  

    You must include the `sourceId` where the account will be created in the `attributes` object.

    This endpoint creates an account on the source record in your ISC tenant.
    This is useful for Flat File (`DelimitedFile`) type sources because it allows you to aggregate new accounts without needing to import a new CSV file every time. 

    However, if you use this endpoint to create an account for a Direct Connection type source, you must ensure that the account also exists on the target source. 
    The endpoint doesn't actually provision the account on the target source, which means that if the account doesn't also exist on the target source, an aggregation between the source and your tenant will remove it from your tenant. 

    By providing the account ID of an existing account in the request body, this API will function as a PATCH operation and update the account.

    A token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
  security:
    - UserContextAuth: [idn:accounts:manage]
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../schemas/AccountAttributesCreate.yaml"
  responses:
    "202":
      description: Async task details
      content:
        application/json:
          schema:
            $ref: "../schemas/AccountsAsyncResult.yaml"
    "400":
      $ref: "../responses/400.yaml"
    "401":
      $ref: "../responses/401.yaml"
    "403":
      $ref: "../responses/403.yaml"
    "429":
      $ref: "../responses/429.yaml"
    "500":
      $ref: "../responses/500.yaml"