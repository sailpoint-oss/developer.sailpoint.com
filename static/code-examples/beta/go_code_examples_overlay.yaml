- path: /access-model-metadata/attributes/{key}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-model-metadata#get-access-model-metadata-attribute
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          key := `iscPrivacy` // string | Technical name of the Attribute. # string | Technical name of the Attribute.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessModelMetadataAPI.GetAccessModelMetadataAttribute(context.Background(), key).Execute()
          //resp, r, err := apiClient.Beta.AccessModelMetadataAPI.GetAccessModelMetadataAttribute(context.Background(), key).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessModelMetadataAPI.GetAccessModelMetadataAttribute``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccessModelMetadataAttribute`: AttributeDTO
          fmt.Fprintf(os.Stdout, "Response from `AccessModelMetadataAPI.GetAccessModelMetadataAttribute`: %v\n", resp)
        }
- path: /access-model-metadata/attributes/{key}/values/{value}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-model-metadata#get-access-model-metadata-attribute-value
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          key := `iscPrivacy` // string | Technical name of the Attribute. # string | Technical name of the Attribute.
          value := `public` // string | Technical name of the Attribute value. # string | Technical name of the Attribute value.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessModelMetadataAPI.GetAccessModelMetadataAttributeValue(context.Background(), key, value).Execute()
          //resp, r, err := apiClient.Beta.AccessModelMetadataAPI.GetAccessModelMetadataAttributeValue(context.Background(), key, value).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessModelMetadataAPI.GetAccessModelMetadataAttributeValue``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccessModelMetadataAttributeValue`: AttributeValueDTO
          fmt.Fprintf(os.Stdout, "Response from `AccessModelMetadataAPI.GetAccessModelMetadataAttributeValue`: %v\n", resp)
        }
- path: /access-model-metadata/attributes
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-model-metadata#list-access-model-metadata-attribute
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          filters := `name eq "Privacy"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *eq*  **type**: *eq*  **status**: *eq*  **objectTypes**: *eq*  Supported composite operators: *and* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *eq*  **type**: *eq*  **status**: *eq*  **objectTypes**: *eq*  Supported composite operators: *and* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessModelMetadataAPI.ListAccessModelMetadataAttribute(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AccessModelMetadataAPI.ListAccessModelMetadataAttribute(context.Background()).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessModelMetadataAPI.ListAccessModelMetadataAttribute``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListAccessModelMetadataAttribute`: []AttributeDTO
          fmt.Fprintf(os.Stdout, "Response from `AccessModelMetadataAPI.ListAccessModelMetadataAttribute`: %v\n", resp)
        }
- path: /access-model-metadata/attributes/{key}/values
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-model-metadata#list-access-model-metadata-attribute-value
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          key := `iscPrivacy` // string | Technical name of the Attribute. # string | Technical name of the Attribute.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessModelMetadataAPI.ListAccessModelMetadataAttributeValue(context.Background(), key).Execute()
          //resp, r, err := apiClient.Beta.AccessModelMetadataAPI.ListAccessModelMetadataAttributeValue(context.Background(), key).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessModelMetadataAPI.ListAccessModelMetadataAttributeValue``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListAccessModelMetadataAttributeValue`: []AttributeValueDTO
          fmt.Fprintf(os.Stdout, "Response from `AccessModelMetadataAPI.ListAccessModelMetadataAttributeValue`: %v\n", resp)
        }
- path: /access-profiles
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-profiles#create-access-profile
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           accessprofile := []byte(`{
          "owner" : {
            "name" : "support",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          },
          "entitlements" : [ {
            "name" : "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local",
            "id" : "2c91809773dee32014e13e122092014e",
            "type" : "ENTITLEMENT"
          }, {
            "name" : "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local",
            "id" : "2c91809773dee32014e13e122092014e",
            "type" : "ENTITLEMENT"
          } ],
          "created" : "2021-03-01T22:32:58.104Z",
          "description" : "Collection of entitlements to read/write the employee database",
          "source" : {
            "name" : "ODS-AD-SOURCE",
            "id" : "2c91809773dee3610173fdb0b6061ef4",
            "type" : "SOURCE"
          },
          "enabled" : true,
          "revocationRequestConfig" : {
            "approvalSchemes" : [ {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            } ]
          },
          "segments" : [ "f7b1b8a3-5fed-4fd4-ad29-82014e137e19", "29cb6c06-1da8-43ea-8be4-b3125f248f2a" ],
          "accessRequestConfig" : {
            "commentsRequired" : true,
            "reauthorizationRequired" : true,
            "approvalSchemes" : [ {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            } ],
            "denialCommentsRequired" : true
          },
          "name" : "Employee-database-read-write",
          "provisioningCriteria" : {
            "children" : [ {
              "children" : [ {
                "children" : "children",
                "attribute" : "email",
                "operation" : "EQUALS",
                "value" : "carlee.cert1c9f9b6fd@mailinator.com"
              }, {
                "children" : "children",
                "attribute" : "email",
                "operation" : "EQUALS",
                "value" : "carlee.cert1c9f9b6fd@mailinator.com"
              } ],
              "attribute" : "email",
              "operation" : "EQUALS",
              "value" : "carlee.cert1c9f9b6fd@mailinator.com"
            }, {
              "children" : [ {
                "children" : "children",
                "attribute" : "email",
                "operation" : "EQUALS",
                "value" : "carlee.cert1c9f9b6fd@mailinator.com"
              }, {
                "children" : "children",
                "attribute" : "email",
                "operation" : "EQUALS",
                "value" : "carlee.cert1c9f9b6fd@mailinator.com"
              } ],
              "attribute" : "email",
              "operation" : "EQUALS",
              "value" : "carlee.cert1c9f9b6fd@mailinator.com"
            } ],
            "attribute" : "email",
            "operation" : "EQUALS",
            "value" : "carlee.cert1c9f9b6fd@mailinator.com"
          },
          "modified" : "2021-03-02T20:22:28.104Z",
          "id" : "2c91808a7190d06e01719938fcd20792",
          "requestable" : true
        }`) // AccessProfile | 

          
          var accessProfile beta.AccessProfile
          if err := json.Unmarshal(accessprofile, &accessProfile); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessProfilesAPI.CreateAccessProfile(context.Background()).AccessProfile(accessProfile).Execute()
          //resp, r, err := apiClient.Beta.AccessProfilesAPI.CreateAccessProfile(context.Background()).AccessProfile(accessProfile).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessProfilesAPI.CreateAccessProfile``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateAccessProfile`: AccessProfile
          fmt.Fprintf(os.Stdout, "Response from `AccessProfilesAPI.CreateAccessProfile`: %v\n", resp)
        }
- path: /access-profiles/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-profiles#delete-access-profile
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121919ecca` // string | ID of the Access Profile to delete # string | ID of the Access Profile to delete

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.AccessProfilesAPI.DeleteAccessProfile(context.Background(), id).Execute()
          //r, err := apiClient.Beta.AccessProfilesAPI.DeleteAccessProfile(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessProfilesAPI.DeleteAccessProfile``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /access-profiles/bulk-delete
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-profiles#delete-access-profiles-in-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           accessprofilebulkdeleterequest := []byte(`{
          "accessProfileIds" : [ "2c9180847812e0b1017817051919ecca", "2c9180887812e0b201781e129f151816" ],
          "bestEffortOnly" : true
        }`) // AccessProfileBulkDeleteRequest | 

          
          var accessProfileBulkDeleteRequest beta.AccessProfileBulkDeleteRequest
          if err := json.Unmarshal(accessprofilebulkdeleterequest, &accessProfileBulkDeleteRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessProfilesAPI.DeleteAccessProfilesInBulk(context.Background()).AccessProfileBulkDeleteRequest(accessProfileBulkDeleteRequest).Execute()
          //resp, r, err := apiClient.Beta.AccessProfilesAPI.DeleteAccessProfilesInBulk(context.Background()).AccessProfileBulkDeleteRequest(accessProfileBulkDeleteRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessProfilesAPI.DeleteAccessProfilesInBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteAccessProfilesInBulk`: AccessProfileBulkDeleteResponse
          fmt.Fprintf(os.Stdout, "Response from `AccessProfilesAPI.DeleteAccessProfilesInBulk`: %v\n", resp)
        }
- path: /access-profiles/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-profiles#get-access-profile
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180837ca6693d017ca8d097500149` // string | ID of the Access Profile # string | ID of the Access Profile

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessProfilesAPI.GetAccessProfile(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AccessProfilesAPI.GetAccessProfile(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessProfilesAPI.GetAccessProfile``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccessProfile`: AccessProfile
          fmt.Fprintf(os.Stdout, "Response from `AccessProfilesAPI.GetAccessProfile`: %v\n", resp)
        }
- path: /access-profiles/{id}/entitlements
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-profiles#get-access-profile-entitlements
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121919ecca` // string | ID of the access profile containing the entitlements. # string | ID of the access profile containing the entitlements.
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `attribute eq "memberOf"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **attribute**: *eq, sw*  **value**: *eq, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **source.id**: *eq, in*  Filtering is not supported for access profiles and entitlements that have the '+' symbol in their names.   (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **attribute**: *eq, sw*  **value**: *eq, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **source.id**: *eq, in*  Filtering is not supported for access profiles and entitlements that have the '+' symbol in their names.   (optional)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, attribute, value, created, modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, attribute, value, created, modified** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessProfilesAPI.GetAccessProfileEntitlements(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AccessProfilesAPI.GetAccessProfileEntitlements(context.Background(), id).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessProfilesAPI.GetAccessProfileEntitlements``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccessProfileEntitlements`: []Entitlement
          fmt.Fprintf(os.Stdout, "Response from `AccessProfilesAPI.GetAccessProfileEntitlements`: %v\n", resp)
        }
- path: /access-profiles
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-profiles#list-access-profiles
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          forSubadmin := `8c190e6787aa4ed9a90bd9d5344523fb` // string | Filters the returned list according to what is visible to the indicated ROLE_SUBADMIN or SOURCE_SUBADMIN identity. The value of the parameter is either an identity ID or the special value **me**, which is shorthand for the calling identity's ID.  If you specify an identity that isn't a subadmin, the API returns a 400 Bad Request error. (optional) # string | Filters the returned list according to what is visible to the indicated ROLE_SUBADMIN or SOURCE_SUBADMIN identity. The value of the parameter is either an identity ID or the special value **me**, which is shorthand for the calling identity's ID.  If you specify an identity that isn't a subadmin, the API returns a 400 Bad Request error. (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `name eq "SailPoint Support"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **created**: *gt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **requestable**: *eq*  **source.id**: *eq, in*  Filtering is not supported for access profiles and entitlements that have the '+' symbol in their names.  (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **created**: *gt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **requestable**: *eq*  **source.id**: *eq, in*  Filtering is not supported for access profiles and entitlements that have the '+' symbol in their names.  (optional)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional)
          forSegmentIds := `0b5c9f25-83c6-4762-9073-e38f7bb2ae26,2e8d8180-24bc-4d21-91c6-7affdb473b0d` // string | Filters access profiles to only those assigned to the segment(s) with the specified IDs. If segmentation is currently unavailable, specifying this parameter results in an error. (optional) # string | Filters access profiles to only those assigned to the segment(s) with the specified IDs. If segmentation is currently unavailable, specifying this parameter results in an error. (optional)
          includeUnsegmented := false // bool | Indicates whether the response list should contain unsegmented access profiles. If `for-segment-ids` is absent or empty, specifying *include-unsegmented* as `false` results in an error. (optional) (default to true) # bool | Indicates whether the response list should contain unsegmented access profiles. If `for-segment-ids` is absent or empty, specifying *include-unsegmented* as `false` results in an error. (optional) (default to true)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessProfilesAPI.ListAccessProfiles(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AccessProfilesAPI.ListAccessProfiles(context.Background()).ForSubadmin(forSubadmin).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).ForSegmentIds(forSegmentIds).IncludeUnsegmented(includeUnsegmented).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessProfilesAPI.ListAccessProfiles``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListAccessProfiles`: []AccessProfile
          fmt.Fprintf(os.Stdout, "Response from `AccessProfilesAPI.ListAccessProfiles`: %v\n", resp)
        }
- path: /access-profiles/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-profiles#patch-access-profile
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121919ecca` // string | ID of the Access Profile to patch # string | ID of the Access Profile to patch
          jsonpatchoperation := []byte(`[{op=add, path=/entitlements, value=[{id=2c9180857725c14301772a93bb77242d, type=ENTITLEMENT, name=AD User Group}]}]`) // []JsonPatchOperation | 

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessProfilesAPI.PatchAccessProfile(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.AccessProfilesAPI.PatchAccessProfile(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessProfilesAPI.PatchAccessProfile``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchAccessProfile`: AccessProfile
          fmt.Fprintf(os.Stdout, "Response from `AccessProfilesAPI.PatchAccessProfile`: %v\n", resp)
        }
- path: /access-profiles/bulk-update-requestable
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-profiles#update-access-profiles-in-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          accessprofilebulkupdaterequestinner := []byte(`[{id=464ae7bf-791e-49fd-b746-06a2e4a89635, requestable=false}]`) // []AccessProfileBulkUpdateRequestInner | 

          
          var accessProfileBulkUpdateRequestInner []beta.AccessProfileBulkUpdateRequestInner
          if err := json.Unmarshal(accessprofilebulkupdaterequestinner, &accessProfileBulkUpdateRequestInner); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessProfilesAPI.UpdateAccessProfilesInBulk(context.Background()).AccessProfileBulkUpdateRequestInner(accessProfileBulkUpdateRequestInner).Execute()
          //resp, r, err := apiClient.Beta.AccessProfilesAPI.UpdateAccessProfilesInBulk(context.Background()).AccessProfileBulkUpdateRequestInner(accessProfileBulkUpdateRequestInner).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessProfilesAPI.UpdateAccessProfilesInBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateAccessProfilesInBulk`: []AccessProfileUpdateItem
          fmt.Fprintf(os.Stdout, "Response from `AccessProfilesAPI.UpdateAccessProfilesInBulk`: %v\n", resp)
        }
- path: /access-request-approvals/{approvalId}/approve
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-request-approvals#approve-access-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          approvalId := `2c91808b7294bea301729568c68c002e` // string | Approval ID. # string | Approval ID.
           commentdto := []byte(`{
          "author" : {
            "name" : "Adam Kennedy",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "created" : "2017-07-11T18:45:37.098Z",
          "comment" : "This is a comment."
        }`) // CommentDto | Reviewer's comment.

          
          var commentDto beta.CommentDto
          if err := json.Unmarshal(commentdto, &commentDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessRequestApprovalsAPI.ApproveAccessRequest(context.Background(), approvalId).CommentDto(commentDto).Execute()
          //resp, r, err := apiClient.Beta.AccessRequestApprovalsAPI.ApproveAccessRequest(context.Background(), approvalId).CommentDto(commentDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessRequestApprovalsAPI.ApproveAccessRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ApproveAccessRequest`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `AccessRequestApprovalsAPI.ApproveAccessRequest`: %v\n", resp)
        }
- path: /access-request-approvals/{approvalId}/forward
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-request-approvals#forward-access-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          approvalId := `2c91808b7294bea301729568c68c002e` // string | Approval ID. # string | Approval ID.
           forwardapprovaldto := []byte(`{
          "newOwnerId" : "newOwnerId",
          "comment" : "comment"
        }`) // ForwardApprovalDto | Information about the forwarded approval.

          
          var forwardApprovalDto beta.ForwardApprovalDto
          if err := json.Unmarshal(forwardapprovaldto, &forwardApprovalDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessRequestApprovalsAPI.ForwardAccessRequest(context.Background(), approvalId).ForwardApprovalDto(forwardApprovalDto).Execute()
          //resp, r, err := apiClient.Beta.AccessRequestApprovalsAPI.ForwardAccessRequest(context.Background(), approvalId).ForwardApprovalDto(forwardApprovalDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessRequestApprovalsAPI.ForwardAccessRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ForwardAccessRequest`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `AccessRequestApprovalsAPI.ForwardAccessRequest`: %v\n", resp)
        }
- path: /access-request-approvals/approval-summary
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-request-approvals#get-access-request-approval-summary
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          ownerId := `2c91808568c529c60168cca6f90c1313` // string | The ID of the owner or approver identity of the approvals. If present, the value returns approval summary for the specified identity.    * ORG_ADMIN users can call this with any identity ID value.    * ORG_ADMIN user can also fetch all the approvals in the org, when owner-id is not used.    * Non ORG_ADMIN users can only specify *me* or pass their own identity ID value. (optional) # string | The ID of the owner or approver identity of the approvals. If present, the value returns approval summary for the specified identity.    * ORG_ADMIN users can call this with any identity ID value.    * ORG_ADMIN user can also fetch all the approvals in the org, when owner-id is not used.    * Non ORG_ADMIN users can only specify *me* or pass their own identity ID value. (optional)
          fromDate := `from-date=2020-03-19T19:59:11Z` // string | This is the date and time the results will be shown from. It must be in a valid ISO-8601 format. (optional) # string | This is the date and time the results will be shown from. It must be in a valid ISO-8601 format. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessRequestApprovalsAPI.GetAccessRequestApprovalSummary(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AccessRequestApprovalsAPI.GetAccessRequestApprovalSummary(context.Background()).OwnerId(ownerId).FromDate(fromDate).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessRequestApprovalsAPI.GetAccessRequestApprovalSummary``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccessRequestApprovalSummary`: ApprovalSummary
          fmt.Fprintf(os.Stdout, "Response from `AccessRequestApprovalsAPI.GetAccessRequestApprovalSummary`: %v\n", resp)
        }
- path: /access-request-approvals/completed
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-request-approvals#list-completed-approvals
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          ownerId := `ownerId_example` // string | If present, the value returns only completed approvals for the specified identity.    * ORG_ADMIN users can call this with any identity ID value.    * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.    * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value. (optional) # string | If present, the value returns only completed approvals for the specified identity.    * ORG_ADMIN users can call this with any identity ID value.    * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.    * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value. (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `filters_example` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **requestedFor.id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **modified**: *gt, lt, ge, le, eq, in, ne, sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **requestedFor.id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **modified**: *gt, lt, ge, le, eq, in, ne, sw* (optional)
          sorters := `sorters_example` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, modified** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessRequestApprovalsAPI.ListCompletedApprovals(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AccessRequestApprovalsAPI.ListCompletedApprovals(context.Background()).OwnerId(ownerId).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessRequestApprovalsAPI.ListCompletedApprovals``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListCompletedApprovals`: []CompletedApproval
          fmt.Fprintf(os.Stdout, "Response from `AccessRequestApprovalsAPI.ListCompletedApprovals`: %v\n", resp)
        }
- path: /access-request-approvals/pending
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-request-approvals#list-pending-approvals
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          ownerId := `ownerId_example` // string | If present, the value returns only pending approvals for the specified identity.    * ORG_ADMIN users can call this with any identity ID value.    * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.    * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value. (optional) # string | If present, the value returns only pending approvals for the specified identity.    * ORG_ADMIN users can call this with any identity ID value.    * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.    * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value. (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `filters_example` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **requestedFor.id**: *eq, in*  **modified**: *gt, lt, ge, le, eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **requestedFor.id**: *eq, in*  **modified**: *gt, lt, ge, le, eq, in* (optional)
          sorters := `sorters_example` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, modified** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessRequestApprovalsAPI.ListPendingApprovals(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AccessRequestApprovalsAPI.ListPendingApprovals(context.Background()).OwnerId(ownerId).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessRequestApprovalsAPI.ListPendingApprovals``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListPendingApprovals`: []PendingApproval
          fmt.Fprintf(os.Stdout, "Response from `AccessRequestApprovalsAPI.ListPendingApprovals`: %v\n", resp)
        }
- path: /access-request-approvals/{approvalId}/reject
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-request-approvals#reject-access-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          approvalId := `2c91808b7294bea301729568c68c002e` // string | Approval ID. # string | Approval ID.
           commentdto := []byte(`{
          "author" : {
            "name" : "Adam Kennedy",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "created" : "2017-07-11T18:45:37.098Z",
          "comment" : "This is a comment."
        }`) // CommentDto | Reviewer's comment.

          
          var commentDto beta.CommentDto
          if err := json.Unmarshal(commentdto, &commentDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessRequestApprovalsAPI.RejectAccessRequest(context.Background(), approvalId).CommentDto(commentDto).Execute()
          //resp, r, err := apiClient.Beta.AccessRequestApprovalsAPI.RejectAccessRequest(context.Background(), approvalId).CommentDto(commentDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessRequestApprovalsAPI.RejectAccessRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `RejectAccessRequest`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `AccessRequestApprovalsAPI.RejectAccessRequest`: %v\n", resp)
        }
- path: /access-request-identity-metrics/{identityId}/requested-objects/{requestedObjectId}/type/{type}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-request-identity-metrics#get-access-request-identity-metrics
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityId := `7025c863-c270-4ba6-beea-edf3cb091573` // string | Manager's identity ID. # string | Manager's identity ID.
          requestedObjectId := `2db501be-f0fb-4cc5-a695-334133c52891` // string | Requested access item's ID. # string | Requested access item's ID.
          type_ := `ENTITLEMENT` // string | Requested access item's type. # string | Requested access item's type.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessRequestIdentityMetricsAPI.GetAccessRequestIdentityMetrics(context.Background(), identityId, requestedObjectId, type_).Execute()
          //resp, r, err := apiClient.Beta.AccessRequestIdentityMetricsAPI.GetAccessRequestIdentityMetrics(context.Background(), identityId, requestedObjectId, type_).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessRequestIdentityMetricsAPI.GetAccessRequestIdentityMetrics``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccessRequestIdentityMetrics`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `AccessRequestIdentityMetricsAPI.GetAccessRequestIdentityMetrics`: %v\n", resp)
        }
- path: /access-requests/cancel
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-requests#cancel-access-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           cancelaccessrequest := []byte(`{
          "accountActivityId" : "2c9180835d2e5168015d32f890ca1581",
          "comment" : "I requested this role by mistake."
        }`) // CancelAccessRequest | 

          
          var cancelAccessRequest beta.CancelAccessRequest
          if err := json.Unmarshal(cancelaccessrequest, &cancelAccessRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessRequestsAPI.CancelAccessRequest(context.Background()).CancelAccessRequest(cancelAccessRequest).Execute()
          //resp, r, err := apiClient.Beta.AccessRequestsAPI.CancelAccessRequest(context.Background()).CancelAccessRequest(cancelAccessRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessRequestsAPI.CancelAccessRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CancelAccessRequest`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `AccessRequestsAPI.CancelAccessRequest`: %v\n", resp)
        }
- path: /access-requests/close
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-requests#close-access-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           closeaccessrequest := []byte(`{
          "executionStatus" : "Terminated",
          "accessRequestIds" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
          "completionStatus" : "Failure",
          "message" : "The IdentityNow Administrator manually closed this request."
        }`) // CloseAccessRequest | 

          
          var closeAccessRequest beta.CloseAccessRequest
          if err := json.Unmarshal(closeaccessrequest, &closeAccessRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessRequestsAPI.CloseAccessRequest(context.Background()).CloseAccessRequest(closeAccessRequest).Execute()
          //resp, r, err := apiClient.Beta.AccessRequestsAPI.CloseAccessRequest(context.Background()).CloseAccessRequest(closeAccessRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessRequestsAPI.CloseAccessRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CloseAccessRequest`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `AccessRequestsAPI.CloseAccessRequest`: %v\n", resp)
        }
- path: /access-requests
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-requests#create-access-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           accessrequest := []byte(`{
          "requestedFor" : "2c918084660f45d6016617daa9210584",
          "clientMetadata" : {
            "requestedAppId" : "2c91808f7892918f0178b78da4a305a1",
            "requestedAppName" : "test-app"
          },
          "requestType" : "GRANT_ACCESS",
          "requestedItems" : [ {
            "clientMetadata" : {
              "requestedAppName" : "test-app",
              "requestedAppId" : "2c91808f7892918f0178b78da4a305a1"
            },
            "removeDate" : "2020-07-11T21:23:15Z",
            "comment" : "Requesting access profile for John Doe",
            "id" : "2c9180835d2e5168015d32f890ca1581",
            "type" : "ACCESS_PROFILE",
            "assignmentId" : "ee48a191c00d49bf9264eb0a4fc3a9fc",
            "nativeIdentity" : "CN=User db3377de14bf,OU=YOURCONTAINER, DC=YOURDOMAIN"
          }, {
            "clientMetadata" : {
              "requestedAppName" : "test-app",
              "requestedAppId" : "2c91808f7892918f0178b78da4a305a1"
            },
            "removeDate" : "2020-07-11T21:23:15Z",
            "comment" : "Requesting access profile for John Doe",
            "id" : "2c9180835d2e5168015d32f890ca1581",
            "type" : "ACCESS_PROFILE",
            "assignmentId" : "ee48a191c00d49bf9264eb0a4fc3a9fc",
            "nativeIdentity" : "CN=User db3377de14bf,OU=YOURCONTAINER, DC=YOURDOMAIN"
          } ],
          "requestedForWithRequestedItems" : [ {
            "identityId" : "cb89bc2f1ee6445fbea12224c526ba3a",
            "requestedItems" : [ {
              "clientMetadata" : {
                "requestedAppName" : "test-app",
                "requestedAppId" : "2c91808f7892918f0178b78da4a305a1"
              },
              "removeDate" : "2020-07-11T21:23:15Z",
              "accountSelection" : [ {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              }, {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              } ],
              "comment" : "Requesting access profile for John Doe",
              "id" : "2c9180835d2e5168015d32f890ca1581",
              "type" : "ACCESS_PROFILE"
            }, {
              "clientMetadata" : {
                "requestedAppName" : "test-app",
                "requestedAppId" : "2c91808f7892918f0178b78da4a305a1"
              },
              "removeDate" : "2020-07-11T21:23:15Z",
              "accountSelection" : [ {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              }, {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              } ],
              "comment" : "Requesting access profile for John Doe",
              "id" : "2c9180835d2e5168015d32f890ca1581",
              "type" : "ACCESS_PROFILE"
            } ]
          }, {
            "identityId" : "cb89bc2f1ee6445fbea12224c526ba3a",
            "requestedItems" : [ {
              "clientMetadata" : {
                "requestedAppName" : "test-app",
                "requestedAppId" : "2c91808f7892918f0178b78da4a305a1"
              },
              "removeDate" : "2020-07-11T21:23:15Z",
              "accountSelection" : [ {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              }, {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              } ],
              "comment" : "Requesting access profile for John Doe",
              "id" : "2c9180835d2e5168015d32f890ca1581",
              "type" : "ACCESS_PROFILE"
            }, {
              "clientMetadata" : {
                "requestedAppName" : "test-app",
                "requestedAppId" : "2c91808f7892918f0178b78da4a305a1"
              },
              "removeDate" : "2020-07-11T21:23:15Z",
              "accountSelection" : [ {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              }, {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              } ],
              "comment" : "Requesting access profile for John Doe",
              "id" : "2c9180835d2e5168015d32f890ca1581",
              "type" : "ACCESS_PROFILE"
            } ]
          } ]
        }`) // AccessRequest | 

          
          var accessRequest beta.AccessRequest
          if err := json.Unmarshal(accessrequest, &accessRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessRequestsAPI.CreateAccessRequest(context.Background()).AccessRequest(accessRequest).Execute()
          //resp, r, err := apiClient.Beta.AccessRequestsAPI.CreateAccessRequest(context.Background()).AccessRequest(accessRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessRequestsAPI.CreateAccessRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateAccessRequest`: AccessRequestResponse
          fmt.Fprintf(os.Stdout, "Response from `AccessRequestsAPI.CreateAccessRequest`: %v\n", resp)
        }
- path: /access-request-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-requests#get-access-request-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessRequestsAPI.GetAccessRequestConfig(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AccessRequestsAPI.GetAccessRequestConfig(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessRequestsAPI.GetAccessRequestConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccessRequestConfig`: AccessRequestConfig
          fmt.Fprintf(os.Stdout, "Response from `AccessRequestsAPI.GetAccessRequestConfig`: %v\n", resp)
        }
- path: /access-request-status
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-requests#list-access-request-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          requestedFor := `2c9180877b2b6ea4017b2c545f971429` // string | Filter the results by the identity the requests were made for. *me* indicates the current user. Mutually exclusive with *regarding-identity*. (optional) # string | Filter the results by the identity the requests were made for. *me* indicates the current user. Mutually exclusive with *regarding-identity*. (optional)
          requestedBy := `2c9180877b2b6ea4017b2c545f971429` // string | Filter the results by the identity who made the requests. *me* indicates the current user. Mutually exclusive with *regarding-identity*. (optional) # string | Filter the results by the identity who made the requests. *me* indicates the current user. Mutually exclusive with *regarding-identity*. (optional)
          regardingIdentity := `2c9180877b2b6ea4017b2c545f971429` // string | Filter the results by the specified identity who is either the requester or target of the requests. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*. (optional) # string | Filter the results by the specified identity who is either the requester or target of the requests. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*. (optional)
          assignedTo := `2c9180877b2b6ea4017b2c545f971429` // string | Filter the results by the specified identity who is the owner of the Identity Request Work Item. *me* indicates the current user. (optional) # string | Filter the results by the specified identity who is the owner of the Identity Request Work Item. *me* indicates the current user. (optional)
          count := false // bool | If this is true, the *X-Total-Count* response header populates with the number of results that would be returned if limit and offset were ignored. (optional) (default to false) # bool | If this is true, the *X-Total-Count* response header populates with the number of results that would be returned if limit and offset were ignored. (optional) (default to false)
          limit := 100 // int32 | Max number of results to return. (optional) (default to 250) # int32 | Max number of results to return. (optional) (default to 250)
          offset := 10 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. Defaults to 0 if not specified. (optional) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. Defaults to 0 if not specified. (optional)
          filters := `accountActivityItemId eq "2c918086771c86df0177401efcdf54c0"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **accessRequestId**: *eq, in, ge, gt, le, lt, ne, sw*  **accountActivityItemId**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **created**: *eq, in, ge, gt, le, lt, ne, isnull, sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **accessRequestId**: *eq, in, ge, gt, le, lt, ne, sw*  **accountActivityItemId**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **created**: *eq, in, ge, gt, le, lt, ne, isnull, sw* (optional)
          sorters := `created` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, modified, accountActivityItemId, name** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, modified, accountActivityItemId, name** (optional)
          requestState := `request-state=EXECUTING` // string | Filter the results by the state of the request. The only valid value is *EXECUTING*. (optional) # string | Filter the results by the state of the request. The only valid value is *EXECUTING*. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessRequestsAPI.ListAccessRequestStatus(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AccessRequestsAPI.ListAccessRequestStatus(context.Background()).RequestedFor(requestedFor).RequestedBy(requestedBy).RegardingIdentity(regardingIdentity).AssignedTo(assignedTo).Count(count).Limit(limit).Offset(offset).Filters(filters).Sorters(sorters).RequestState(requestState).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessRequestsAPI.ListAccessRequestStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListAccessRequestStatus`: []RequestedItemStatus
          fmt.Fprintf(os.Stdout, "Response from `AccessRequestsAPI.ListAccessRequestStatus`: %v\n", resp)
        }
- path: /access-request-config
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/access-requests#set-access-request-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           accessrequestconfig := []byte(`{
          "requestOnBehalfOfConfig" : {
            "allowRequestOnBehalfOfEmployeeByManager" : true,
            "allowRequestOnBehalfOfAnyoneByAnyone" : true
          },
          "approvalReminderAndEscalationConfig" : {
            "fallbackApproverRef" : {
              "name" : "Alison Ferguso",
              "id" : "5168015d32f890ca15812c9180835d2e",
              "type" : "IDENTITY",
              "email" : "alison.ferguso@identitysoon.com"
            },
            "maxReminders" : 1,
            "daysUntilEscalation" : 0,
            "daysBetweenReminders" : 0
          },
          "autoApprovalEnabled" : true,
          "entitlementRequestConfig" : {
            "requestCommentsRequired" : false,
            "deniedCommentsRequired" : false,
            "allowEntitlementRequest" : true,
            "grantRequestApprovalSchemes" : "entitlementOwner, sourceOwner, manager, workgroup:2c918084660f45d6016617daa9210584"
          },
          "reauthorizationEnabled" : true,
          "approvalsMustBeExternal" : true
        }`) // AccessRequestConfig | 

          
          var accessRequestConfig beta.AccessRequestConfig
          if err := json.Unmarshal(accessrequestconfig, &accessRequestConfig); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccessRequestsAPI.SetAccessRequestConfig(context.Background()).AccessRequestConfig(accessRequestConfig).Execute()
          //resp, r, err := apiClient.Beta.AccessRequestsAPI.SetAccessRequestConfig(context.Background()).AccessRequestConfig(accessRequestConfig).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccessRequestsAPI.SetAccessRequestConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SetAccessRequestConfig`: AccessRequestConfig
          fmt.Fprintf(os.Stdout, "Response from `AccessRequestsAPI.SetAccessRequestConfig`: %v\n", resp)
        }
- path: /account-activities/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/account-activities#get-account-activity
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The account activity id # string | The account activity id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountActivitiesAPI.GetAccountActivity(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AccountActivitiesAPI.GetAccountActivity(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountActivitiesAPI.GetAccountActivity``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccountActivity`: CancelableAccountActivity
          fmt.Fprintf(os.Stdout, "Response from `AccountActivitiesAPI.GetAccountActivity`: %v\n", resp)
        }
- path: /account-activities
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/account-activities#list-account-activities
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          requestedFor := `requestedFor_example` // string | The identity that the activity was requested for. *me* indicates the current user. Mutually exclusive with *regarding-identity*. (optional) # string | The identity that the activity was requested for. *me* indicates the current user. Mutually exclusive with *regarding-identity*. (optional)
          requestedBy := `requestedBy_example` // string | The identity that requested the activity. *me* indicates the current user. Mutually exclusive with *regarding-identity*. (optional) # string | The identity that requested the activity. *me* indicates the current user. Mutually exclusive with *regarding-identity*. (optional)
          regardingIdentity := `regardingIdentity_example` // string | The specified identity will be either the requester or target of the account activity. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*. (optional) # string | The specified identity will be either the requester or target of the account activity. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*. (optional)
          type_ := `type__example` // string | The type of account activity. (optional) # string | The type of account activity. (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `filters_example` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **type**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **created**: *gt, lt, ge, le, eq, in, ne, isnull, sw*  **modified**: *gt, lt, ge, le, eq, in, ne, isnull, sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **type**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **created**: *gt, lt, ge, le, eq, in, ne, isnull, sw*  **modified**: *gt, lt, ge, le, eq, in, ne, isnull, sw* (optional)
          sorters := `sorters_example` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **type, created, modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **type, created, modified** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountActivitiesAPI.ListAccountActivities(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AccountActivitiesAPI.ListAccountActivities(context.Background()).RequestedFor(requestedFor).RequestedBy(requestedBy).RegardingIdentity(regardingIdentity).Type_(type_).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountActivitiesAPI.ListAccountActivities``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListAccountActivities`: []CancelableAccountActivity
          fmt.Fprintf(os.Stdout, "Response from `AccountActivitiesAPI.ListAccountActivities`: %v\n", resp)
        }
- path: /account-aggregations/{id}/status
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/account-aggregations#get-account-aggregation-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808477a6b0c60177a81146b8110b` // string | The account aggregation id # string | The account aggregation id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountAggregationsAPI.GetAccountAggregationStatus(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AccountAggregationsAPI.GetAccountAggregationStatus(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountAggregationsAPI.GetAccountAggregationStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccountAggregationStatus`: AccountAggregationStatus
          fmt.Fprintf(os.Stdout, "Response from `AccountAggregationsAPI.GetAccountAggregationStatus`: %v\n", resp)
        }
- path: /account-usages/{accountId}/summaries
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/account-usages#get-usages-by-account-id
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          accountId := `ef38f94347e94562b5bb8424a56397d8` // string | ID of IDN account # string | ID of IDN account
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          sorters := `-date` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **date** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **date** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountUsagesAPI.GetUsagesByAccountId(context.Background(), accountId).Execute()
          //resp, r, err := apiClient.Beta.AccountUsagesAPI.GetUsagesByAccountId(context.Background(), accountId).Limit(limit).Offset(offset).Count(count).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountUsagesAPI.GetUsagesByAccountId``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetUsagesByAccountId`: []AccountUsage
          fmt.Fprintf(os.Stdout, "Response from `AccountUsagesAPI.GetUsagesByAccountId`: %v\n", resp)
        }
- path: /accounts
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#create-account
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           accountattributescreate := []byte(`{
          "attributes" : {
            "sourceId" : "34bfcbe116c9407464af37acbaf7a4dc",
            "city" : "Austin",
            "displayName" : "John Doe",
            "userName" : "jdoe",
            "sAMAccountName" : "jDoe",
            "mail" : "john.doe@sailpoint.com"
          }
        }`) // AccountAttributesCreate | 

          
          var accountAttributesCreate beta.AccountAttributesCreate
          if err := json.Unmarshal(accountattributescreate, &accountAttributesCreate); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.CreateAccount(context.Background()).AccountAttributesCreate(accountAttributesCreate).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.CreateAccount(context.Background()).AccountAttributesCreate(accountAttributesCreate).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.CreateAccount``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateAccount`: AccountsAsyncResult
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.CreateAccount`: %v\n", resp)
        }
- path: /accounts/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#delete-account
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | Account ID. # string | Account ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.DeleteAccount(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.DeleteAccount(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.DeleteAccount``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteAccount`: AccountsAsyncResult
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.DeleteAccount`: %v\n", resp)
        }
- path: /accounts/{id}/remove
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#delete-account-async
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c350d6aa4f104c61b062cb632421ad10` // string | The account id # string | The account id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.DeleteAccountAsync(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.DeleteAccountAsync(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.DeleteAccountAsync``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteAccountAsync`: TaskResultDto
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.DeleteAccountAsync`: %v\n", resp)
        }
- path: /accounts/{id}/disable
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#disable-account
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The account id # string | The account id
           accounttogglerequest := []byte(`{
          "forceProvisioning" : false,
          "externalVerificationId" : "3f9180835d2e5168015d32f890ca1581"
        }`) // AccountToggleRequest | 

          
          var accountToggleRequest beta.AccountToggleRequest
          if err := json.Unmarshal(accounttogglerequest, &accountToggleRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.DisableAccount(context.Background(), id).AccountToggleRequest(accountToggleRequest).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.DisableAccount(context.Background(), id).AccountToggleRequest(accountToggleRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.DisableAccount``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DisableAccount`: AccountsAsyncResult
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.DisableAccount`: %v\n", resp)
        }
- path: /identities-accounts/{id}/disable
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#disable-account-for-identity
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808384203c2d018437e631158309` // string | The identity id. # string | The identity id.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.DisableAccountForIdentity(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.DisableAccountForIdentity(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.DisableAccountForIdentity``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DisableAccountForIdentity`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.DisableAccountForIdentity`: %v\n", resp)
        }
- path: /identities-accounts/disable
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#disable-accounts-for-identities
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           identitiesaccountsbulkrequest := []byte(`{
          "identityIds" : [ "2c91808384203c2d018437e631158308", "2c9180858082150f0180893dbaf553fe" ]
        }`) // IdentitiesAccountsBulkRequest | 

          
          var identitiesAccountsBulkRequest beta.IdentitiesAccountsBulkRequest
          if err := json.Unmarshal(identitiesaccountsbulkrequest, &identitiesAccountsBulkRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.DisableAccountsForIdentities(context.Background()).IdentitiesAccountsBulkRequest(identitiesAccountsBulkRequest).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.DisableAccountsForIdentities(context.Background()).IdentitiesAccountsBulkRequest(identitiesAccountsBulkRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.DisableAccountsForIdentities``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DisableAccountsForIdentities`: []BulkIdentitiesAccountsResponse
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.DisableAccountsForIdentities`: %v\n", resp)
        }
- path: /accounts/{id}/enable
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#enable-account
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The account id # string | The account id
           accounttogglerequest := []byte(`{
          "forceProvisioning" : false,
          "externalVerificationId" : "3f9180835d2e5168015d32f890ca1581"
        }`) // AccountToggleRequest | 

          
          var accountToggleRequest beta.AccountToggleRequest
          if err := json.Unmarshal(accounttogglerequest, &accountToggleRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.EnableAccount(context.Background(), id).AccountToggleRequest(accountToggleRequest).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.EnableAccount(context.Background(), id).AccountToggleRequest(accountToggleRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.EnableAccount``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `EnableAccount`: AccountsAsyncResult
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.EnableAccount`: %v\n", resp)
        }
- path: /identities-accounts/{id}/enable
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#enable-account-for-identity
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808384203c2d018437e631158309` // string | The identity id. # string | The identity id.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.EnableAccountForIdentity(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.EnableAccountForIdentity(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.EnableAccountForIdentity``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `EnableAccountForIdentity`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.EnableAccountForIdentity`: %v\n", resp)
        }
- path: /identities-accounts/enable
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#enable-accounts-for-identities
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           identitiesaccountsbulkrequest := []byte(`{
          "identityIds" : [ "2c91808384203c2d018437e631158308", "2c9180858082150f0180893dbaf553fe" ]
        }`) // IdentitiesAccountsBulkRequest | 

          
          var identitiesAccountsBulkRequest beta.IdentitiesAccountsBulkRequest
          if err := json.Unmarshal(identitiesaccountsbulkrequest, &identitiesAccountsBulkRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.EnableAccountsForIdentities(context.Background()).IdentitiesAccountsBulkRequest(identitiesAccountsBulkRequest).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.EnableAccountsForIdentities(context.Background()).IdentitiesAccountsBulkRequest(identitiesAccountsBulkRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.EnableAccountsForIdentities``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `EnableAccountsForIdentities`: []BulkIdentitiesAccountsResponse
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.EnableAccountsForIdentities`: %v\n", resp)
        }
- path: /accounts/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#get-account
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | Account ID. # string | Account ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.GetAccount(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.GetAccount(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.GetAccount``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccount`: Account
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.GetAccount`: %v\n", resp)
        }
- path: /accounts/{id}/entitlements
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#get-account-entitlements
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The account id # string | The account id
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.GetAccountEntitlements(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.GetAccountEntitlements(context.Background(), id).Offset(offset).Limit(limit).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.GetAccountEntitlements``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccountEntitlements`: []Entitlement
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.GetAccountEntitlements`: %v\n", resp)
        }
- path: /accounts
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#list-accounts
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          detailLevel := `FULL` // string | This value determines whether the API provides `SLIM` or increased level of detail (`FULL`) for each account in the returned list. `FULL` is the default behavior. (optional) # string | This value determines whether the API provides `SLIM` or increased level of detail (`FULL`) for each account in the returned list. `FULL` is the default behavior. (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `identityId eq "2c9180858082150f0180893dbaf44201"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in, sw*  **identityId**: *eq, in, sw*  **name**: *eq, in, sw*  **nativeIdentity**: *eq, in, sw*  **sourceId**: *eq, in, sw*  **uncorrelated**: *eq*  **entitlements**: *eq*  **origin**: *eq, in*  **manuallyCorrelated**: *eq*  **hasEntitlements**: *eq*  **identity.name**: *eq, in, sw*  **identity.correlated**: *eq*  **identity.identityState**: *eq, in*  **source.displayableName**: *eq, in*  **source.authoritative**: *eq*  **source.connectionType**: *eq, in*  **recommendation.method**: *eq, in, isnull*  **created**: *eq, ge, gt, le*  **modified**: *eq, ge, gt, le, lt* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in, sw*  **identityId**: *eq, in, sw*  **name**: *eq, in, sw*  **nativeIdentity**: *eq, in, sw*  **sourceId**: *eq, in, sw*  **uncorrelated**: *eq*  **entitlements**: *eq*  **origin**: *eq, in*  **manuallyCorrelated**: *eq*  **hasEntitlements**: *eq*  **identity.name**: *eq, in, sw*  **identity.correlated**: *eq*  **identity.identityState**: *eq, in*  **source.displayableName**: *eq, in*  **source.authoritative**: *eq*  **source.connectionType**: *eq, in*  **recommendation.method**: *eq, in, isnull*  **created**: *eq, ge, gt, le*  **modified**: *eq, ge, gt, le, lt* (optional)
          sorters := `id,name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, sourceId, identityId, nativeIdentity, uuid, manuallyCorrelated, hasEntitlements, entitlements, origin, identity.name, identity.identityState, identity.correlated, source.displayableName, source.authoritative, source.connectionType, sourceOwner.name** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, sourceId, identityId, nativeIdentity, uuid, manuallyCorrelated, hasEntitlements, entitlements, origin, identity.name, identity.identityState, identity.correlated, source.displayableName, source.authoritative, source.connectionType, sourceOwner.name** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.ListAccounts(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.ListAccounts(context.Background()).DetailLevel(detailLevel).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.ListAccounts``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListAccounts`: []Account
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.ListAccounts`: %v\n", resp)
        }
- path: /accounts/{id}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#put-account
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | Account ID. # string | Account ID.
           accountattributes := []byte(`{
          "attributes" : {
            "city" : "Austin",
            "displayName" : "John Doe",
            "userName" : "jdoe",
            "sAMAccountName" : "jDoe",
            "mail" : "john.doe@sailpoint.com"
          }
        }`) // AccountAttributes | 

          
          var accountAttributes beta.AccountAttributes
          if err := json.Unmarshal(accountattributes, &accountAttributes); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.PutAccount(context.Background(), id).AccountAttributes(accountAttributes).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.PutAccount(context.Background(), id).AccountAttributes(accountAttributes).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.PutAccount``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutAccount`: AccountsAsyncResult
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.PutAccount`: %v\n", resp)
        }
- path: /accounts/{id}/reload
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#submit-reload-account
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The account id # string | The account id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.SubmitReloadAccount(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.SubmitReloadAccount(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.SubmitReloadAccount``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SubmitReloadAccount`: AccountsAsyncResult
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.SubmitReloadAccount`: %v\n", resp)
        }
- path: /accounts/{id}/unlock
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#unlock-account
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The account ID. # string | The account ID.
           accountunlockrequest := []byte(`{
          "forceProvisioning" : false,
          "externalVerificationId" : "3f9180835d2e5168015d32f890ca1581",
          "unlockIDNAccount" : false
        }`) // AccountUnlockRequest | 

          
          var accountUnlockRequest beta.AccountUnlockRequest
          if err := json.Unmarshal(accountunlockrequest, &accountUnlockRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.UnlockAccount(context.Background(), id).AccountUnlockRequest(accountUnlockRequest).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.UnlockAccount(context.Background(), id).AccountUnlockRequest(accountUnlockRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.UnlockAccount``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UnlockAccount`: AccountsAsyncResult
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.UnlockAccount`: %v\n", resp)
        }
- path: /accounts/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/accounts#update-account
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | Account ID. # string | Account ID.
          requestbody := []byte(`{Uncorrelate account={description=Remove account from Identity, value=[{op=remove, path=/identityId}]}, Reassign account={description=Move account from one Identity to another Identity, value=[{op=replace, path=/identityId, value=2c9180857725c14301772a93bb77242d}]}, Add account attribute={description=Add flat file account's attribute, value=[{op=add, path=/attributes/familyName, value=Smith}]}, Replace account attribute={description=Replace flat file account's attribute, value=[{op=replace, path=/attributes/familyName, value=Smith}]}, Remove account attribute={description=Remove flat file account's attribute, value=[{op=remove, path=/attributes/familyName}]}}`) // []map[string]interface{} | A list of account update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          
          var requestBody []beta.RequestBody
          if err := json.Unmarshal(requestbody, &requestBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AccountsAPI.UpdateAccount(context.Background(), id).RequestBody(requestBody).Execute()
          //resp, r, err := apiClient.Beta.AccountsAPI.UpdateAccount(context.Background(), id).RequestBody(requestBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AccountsAPI.UpdateAccount``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateAccount`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `AccountsAPI.UpdateAccount`: %v\n", resp)
        }
- path: /discovered-applications/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/application-discovery#get-discovered-application-by-id
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `123e4567-e89b-12d3-a456-426655440000` // string | Discovered application's ID. # string | Discovered application's ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.ApplicationDiscoveryAPI.GetDiscoveredApplicationByID(context.Background(), id).Execute()
          //r, err := apiClient.Beta.ApplicationDiscoveryAPI.GetDiscoveredApplicationByID(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ApplicationDiscoveryAPI.GetDiscoveredApplicationByID``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /discovered-applications
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/application-discovery#get-discovered-applications
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          detail := `FULL` // string | Determines whether slim, or increased level of detail is provided for each discovered application in the returned list. SLIM is the default behavior. (optional) # string | Determines whether slim, or increased level of detail is provided for each discovered application in the returned list. SLIM is the default behavior. (optional)
          filter := `name eq "Okta" and description co "Okta" and discoverySource in ("csv", "Okta Saas")` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)       Filtering is supported for the following fields and operators:  **name**: *eq, sw, co*  **description**: *eq, sw, co*  **createdAtStart**: *eq, le, ge*  **createdAtEnd**: *eq, le, ge*  **discoveredAtStart**: *eq, le, ge*  **discoveredAtEnd**: *eq, le, ge*  **discoverySource**: *eq, in*  (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)       Filtering is supported for the following fields and operators:  **name**: *eq, sw, co*  **description**: *eq, sw, co*  **createdAtStart**: *eq, le, ge*  **createdAtEnd**: *eq, le, ge*  **discoveredAtStart**: *eq, le, ge*  **discoveredAtEnd**: *eq, le, ge*  **discoverySource**: *eq, in*  (optional)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, description, discoveredAt, discoverySource** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, description, discoveredAt, discoverySource** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ApplicationDiscoveryAPI.GetDiscoveredApplications(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.ApplicationDiscoveryAPI.GetDiscoveredApplications(context.Background()).Limit(limit).Offset(offset).Detail(detail).Filter(filter).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ApplicationDiscoveryAPI.GetDiscoveredApplications``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetDiscoveredApplications`: []GetDiscoveredApplications200ResponseInner
          fmt.Fprintf(os.Stdout, "Response from `ApplicationDiscoveryAPI.GetDiscoveredApplications`: %v\n", resp)
        }
- path: /manual-discover-applications-template
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/application-discovery#get-manual-discover-applications-csv-template
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ApplicationDiscoveryAPI.GetManualDiscoverApplicationsCsvTemplate(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.ApplicationDiscoveryAPI.GetManualDiscoverApplicationsCsvTemplate(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ApplicationDiscoveryAPI.GetManualDiscoverApplicationsCsvTemplate``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetManualDiscoverApplicationsCsvTemplate`: ManualDiscoverApplicationsTemplate
          fmt.Fprintf(os.Stdout, "Response from `ApplicationDiscoveryAPI.GetManualDiscoverApplicationsCsvTemplate`: %v\n", resp)
        }
- path: /discovered-applications/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/application-discovery#patch-discovered-application-by-id
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `123e4567-e89b-12d3-a456-426655440000` // string | Discovered application's ID. # string | Discovered application's ID.
          jsonpatchoperations := []byte(`[{op=replace, path=/dismissed, value=true}]`) // []JsonPatchOperations |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.ApplicationDiscoveryAPI.PatchDiscoveredApplicationByID(context.Background(), id).Execute()
          //r, err := apiClient.Beta.ApplicationDiscoveryAPI.PatchDiscoveredApplicationByID(context.Background(), id).JsonPatchOperations(jsonPatchOperations).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ApplicationDiscoveryAPI.PatchDiscoveredApplicationByID``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /manual-discover-applications
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/application-discovery#send-manual-discover-applications-csv-template
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          file := BINARY_DATA_HERE // *os.File | The CSV file to upload containing `application_name` and `description` columns. Each row represents an application to be discovered. # *os.File | The CSV file to upload containing `application_name` and `description` columns. Each row represents an application to be discovered.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.ApplicationDiscoveryAPI.SendManualDiscoverApplicationsCsvTemplate(context.Background()).File(file).Execute()
          //r, err := apiClient.Beta.ApplicationDiscoveryAPI.SendManualDiscoverApplicationsCsvTemplate(context.Background()).File(file).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ApplicationDiscoveryAPI.SendManualDiscoverApplicationsCsvTemplate``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /generic-approvals/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/approvals#get-approval
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `38453251-6be2-5f8f-df93-5ce19e295837` // string | ID of the approval that to be returned. # string | ID of the approval that to be returned.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ApprovalsAPI.GetApproval(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.ApprovalsAPI.GetApproval(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ApprovalsAPI.GetApproval``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetApproval`: Approval
          fmt.Fprintf(os.Stdout, "Response from `ApprovalsAPI.GetApproval`: %v\n", resp)
        }
- path: /generic-approvals
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/approvals#get-approvals
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          mine := true // bool | Returns the list of approvals for the current caller. (optional) # bool | Returns the list of approvals for the current caller. (optional)
          requesterId := `17e633e7d57e481569df76323169deb6a` // string | Returns the list of approvals for a given requester ID. (optional) # string | Returns the list of approvals for a given requester ID. (optional)
          filters := `filters=status eq PENDING` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **status**: *eq*  **referenceType**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **status**: *eq*  **referenceType**: *eq* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ApprovalsAPI.GetApprovals(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.ApprovalsAPI.GetApprovals(context.Background()).Mine(mine).RequesterId(requesterId).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ApprovalsAPI.GetApprovals``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetApprovals`: []Approval
          fmt.Fprintf(os.Stdout, "Response from `ApprovalsAPI.GetApprovals`: %v\n", resp)
        }
- path: /source-apps
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#create-source-app
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           sourceappcreatedto := []byte(`{
          "name" : "my app",
          "description" : "the source app for engineers",
          "accountSource" : {
            "name" : "ODS-AD-Source",
            "id" : "2c9180827ca885d7017ca8ce28a000eb",
            "type" : "SOURCE"
          },
          "matchAllAccounts" : true
        }`) // SourceAppCreateDto | 

          
          var sourceAppCreateDto beta.SourceAppCreateDto
          if err := json.Unmarshal(sourceappcreatedto, &sourceAppCreateDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AppsAPI.CreateSourceApp(context.Background()).SourceAppCreateDto(sourceAppCreateDto).Execute()
          //resp, r, err := apiClient.Beta.AppsAPI.CreateSourceApp(context.Background()).SourceAppCreateDto(sourceAppCreateDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.CreateSourceApp``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateSourceApp`: SourceApp
          fmt.Fprintf(os.Stdout, "Response from `AppsAPI.CreateSourceApp`: %v\n", resp)
        }
- path: /source-apps/{id}/access-profiles/bulk-remove
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#delete-access-profiles-from-source-app-by-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121e121518` // string | ID of the source app # string | ID of the source app
          requestbody := []byte(``) // []string | 
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)

          
          var requestBody []beta.RequestBody
          if err := json.Unmarshal(requestbody, &requestBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AppsAPI.DeleteAccessProfilesFromSourceAppByBulk(context.Background(), id).RequestBody(requestBody).Execute()
          //resp, r, err := apiClient.Beta.AppsAPI.DeleteAccessProfilesFromSourceAppByBulk(context.Background(), id).RequestBody(requestBody).Limit(limit).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.DeleteAccessProfilesFromSourceAppByBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteAccessProfilesFromSourceAppByBulk`: []AccessProfileDetails
          fmt.Fprintf(os.Stdout, "Response from `AppsAPI.DeleteAccessProfilesFromSourceAppByBulk`: %v\n", resp)
        }
- path: /source-apps/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#delete-source-app
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180835d191a86015d28455b4a2329` // string | source app ID. # string | source app ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AppsAPI.DeleteSourceApp(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AppsAPI.DeleteSourceApp(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.DeleteSourceApp``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteSourceApp`: SourceApp
          fmt.Fprintf(os.Stdout, "Response from `AppsAPI.DeleteSourceApp`: %v\n", resp)
        }
- path: /source-apps/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#get-source-app
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121e121518` // string | ID of the source app # string | ID of the source app

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AppsAPI.GetSourceApp(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AppsAPI.GetSourceApp(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.GetSourceApp``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSourceApp`: SourceApp
          fmt.Fprintf(os.Stdout, "Response from `AppsAPI.GetSourceApp`: %v\n", resp)
        }
- path: /source-apps/{id}/access-profiles
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#list-access-profiles-for-source-app
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121e121518` // string | ID of the source app # string | ID of the source app
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          filters := `name eq "developer access profile"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AppsAPI.ListAccessProfilesForSourceApp(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AppsAPI.ListAccessProfilesForSourceApp(context.Background(), id).Limit(limit).Offset(offset).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.ListAccessProfilesForSourceApp``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListAccessProfilesForSourceApp`: []AccessProfileDetails
          fmt.Fprintf(os.Stdout, "Response from `AppsAPI.ListAccessProfilesForSourceApp`: %v\n", resp)
        }
- path: /source-apps/all
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#list-all-source-app
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, owner.id, accountSource.id** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, owner.id, accountSource.id** (optional)
          filters := `enabled eq true` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, co, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **accountSource.id**: *eq, in*  **enabled**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, co, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **accountSource.id**: *eq, in*  **enabled**: *eq* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AppsAPI.ListAllSourceApp(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AppsAPI.ListAllSourceApp(context.Background()).Limit(limit).Count(count).Offset(offset).Sorters(sorters).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.ListAllSourceApp``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListAllSourceApp`: []SourceApp
          fmt.Fprintf(os.Stdout, "Response from `AppsAPI.ListAllSourceApp`: %v\n", resp)
        }
- path: /user-apps/all
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#list-all-user-apps
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          filters := `name eq "user app name"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq*  **ownerId**: *eq*  **ownerName**: *eq, sw*  **ownerAlias**: *eq, sw*  **accountId**: *eq*  **sourceAppId**: *eq* # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq*  **ownerId**: *eq*  **ownerName**: *eq, sw*  **ownerAlias**: *eq, sw*  **accountId**: *eq*  **sourceAppId**: *eq*
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AppsAPI.ListAllUserApps(context.Background()).Filters(filters).Execute()
          //resp, r, err := apiClient.Beta.AppsAPI.ListAllUserApps(context.Background()).Filters(filters).Limit(limit).Count(count).Offset(offset).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.ListAllUserApps``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListAllUserApps`: []UserApp
          fmt.Fprintf(os.Stdout, "Response from `AppsAPI.ListAllUserApps`: %v\n", resp)
        }
- path: /source-apps/assigned
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#list-assigned-source-app
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, accountSource.id** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, accountSource.id** (optional)
          filters := `name eq "source app name"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, co, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **accountSource.id**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, co, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **accountSource.id**: *eq, in* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AppsAPI.ListAssignedSourceApp(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AppsAPI.ListAssignedSourceApp(context.Background()).Limit(limit).Count(count).Offset(offset).Sorters(sorters).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.ListAssignedSourceApp``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListAssignedSourceApp`: []SourceApp
          fmt.Fprintf(os.Stdout, "Response from `AppsAPI.ListAssignedSourceApp`: %v\n", resp)
        }
- path: /user-apps/{id}/available-accounts
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#list-available-accounts-for-user-app
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121e121518` // string | ID of the user app # string | ID of the user app
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AppsAPI.ListAvailableAccountsForUserApp(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AppsAPI.ListAvailableAccountsForUserApp(context.Background(), id).Limit(limit).Count(count).Offset(offset).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.ListAvailableAccountsForUserApp``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListAvailableAccountsForUserApp`: []AppAccountDetails
          fmt.Fprintf(os.Stdout, "Response from `AppsAPI.ListAvailableAccountsForUserApp`: %v\n", resp)
        }
- path: /source-apps
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#list-available-source-apps
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, owner.id, accountSource.id** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, owner.id, accountSource.id** (optional)
          filters := `name eq "source app name"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, co, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **accountSource.id**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, co, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **accountSource.id**: *eq, in* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AppsAPI.ListAvailableSourceApps(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AppsAPI.ListAvailableSourceApps(context.Background()).Limit(limit).Count(count).Offset(offset).Sorters(sorters).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.ListAvailableSourceApps``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListAvailableSourceApps`: []SourceApp
          fmt.Fprintf(os.Stdout, "Response from `AppsAPI.ListAvailableSourceApps`: %v\n", resp)
        }
- path: /user-apps
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#list-owned-user-apps
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          filters := `name eq "user app name"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq*  **ownerName**: *eq, sw*  **ownerAlias**: *eq, sw*  **accountId**: *eq*  **sourceAppId**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq*  **ownerName**: *eq, sw*  **ownerAlias**: *eq, sw*  **accountId**: *eq*  **sourceAppId**: *eq* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AppsAPI.ListOwnedUserApps(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AppsAPI.ListOwnedUserApps(context.Background()).Limit(limit).Count(count).Offset(offset).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.ListOwnedUserApps``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListOwnedUserApps`: []UserApp
          fmt.Fprintf(os.Stdout, "Response from `AppsAPI.ListOwnedUserApps`: %v\n", resp)
        }
- path: /source-apps/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#patch-source-app
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121e121518` // string | ID of the source app to patch # string | ID of the source app to patch
          jsonpatchoperation := []byte(`[{op=replace, path=/enabled, value=true}, {op=replace, path=/matchAllAccounts, value=true}]`) // []JsonPatchOperation |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AppsAPI.PatchSourceApp(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AppsAPI.PatchSourceApp(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.PatchSourceApp``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchSourceApp`: SourceAppPatchDto
          fmt.Fprintf(os.Stdout, "Response from `AppsAPI.PatchSourceApp`: %v\n", resp)
        }
- path: /user-apps/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#patch-user-app
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121e121518` // string | ID of the user app to patch # string | ID of the user app to patch
          jsonpatchoperation := []byte(``) // []JsonPatchOperation |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AppsAPI.PatchUserApp(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AppsAPI.PatchUserApp(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.PatchUserApp``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchUserApp`: UserApp
          fmt.Fprintf(os.Stdout, "Response from `AppsAPI.PatchUserApp`: %v\n", resp)
        }
- path: /source-apps/bulk-update
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/apps#update-source-apps-in-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           sourceappbulkupdaterequest := []byte(`{
          "appIds" : [ "2c91808a7624751a01762f19d665220d", "2c91808a7624751a01762f19d67c220e", "2c91808a7624751a01762f19d692220f" ],
          "jsonPatch" : [ {
            "op" : "replace",
            "path" : "/enabled",
            "value" : false
          }, {
            "op" : "replace",
            "path" : "/matchAllAccounts",
            "value" : false
          } ]
        }`) // SourceAppBulkUpdateRequest |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.AppsAPI.UpdateSourceAppsInBulk(context.Background()).Execute()
          //r, err := apiClient.Beta.AppsAPI.UpdateSourceAppsInBulk(context.Background()).SourceAppBulkUpdateRequest(sourceAppBulkUpdateRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AppsAPI.UpdateSourceAppsInBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /auth-profiles/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/auth-profile#get-profile-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121919ecca` // string | ID of the Auth Profile to get. # string | ID of the Auth Profile to get.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AuthProfileAPI.GetProfileConfig(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.AuthProfileAPI.GetProfileConfig(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AuthProfileAPI.GetProfileConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetProfileConfig`: AuthProfile
          fmt.Fprintf(os.Stdout, "Response from `AuthProfileAPI.GetProfileConfig`: %v\n", resp)
        }
- path: /auth-profiles
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/auth-profile#get-profile-config-list
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AuthProfileAPI.GetProfileConfigList(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.AuthProfileAPI.GetProfileConfigList(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AuthProfileAPI.GetProfileConfigList``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetProfileConfigList`: []AuthProfileSummary
          fmt.Fprintf(os.Stdout, "Response from `AuthProfileAPI.GetProfileConfigList`: %v\n", resp)
        }
- path: /auth-profiles/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/auth-profile#patch-profile-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121919ecca` // string | ID of the Auth Profile to patch. # string | ID of the Auth Profile to patch.
          jsonpatchoperation := []byte(``) // []JsonPatchOperation | 

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.AuthProfileAPI.PatchProfileConfig(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.AuthProfileAPI.PatchProfileConfig(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `AuthProfileAPI.PatchProfileConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchProfileConfig`: AuthProfile
          fmt.Fprintf(os.Stdout, "Response from `AuthProfileAPI.PatchProfileConfig`: %v\n", resp)
        }
- path: /campaigns/{id}/complete
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#complete-campaign
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | Campaign ID. # string | Campaign ID.
           completecampaignoptions := []byte(`{
          "autoCompleteAction" : "REVOKE"
        }`) // CompleteCampaignOptions | Optional. Default behavior is for the campaign to auto-approve upon completion, unless autoCompleteAction=REVOKE (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.CompleteCampaign(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.CompleteCampaign(context.Background(), id).CompleteCampaignOptions(completeCampaignOptions).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.CompleteCampaign``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CompleteCampaign`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.CompleteCampaign`: %v\n", resp)
        }
- path: /campaigns
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#create-campaign
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           campaign := []byte(`{
          "totalCertifications" : 100,
          "sourcesWithOrphanEntitlements" : [ {
            "name" : "Source with orphan entitlements",
            "id" : "2c90ad2a70ace7d50170acf22ca90010",
            "type" : "SOURCE"
          }, {
            "name" : "Source with orphan entitlements",
            "id" : "2c90ad2a70ace7d50170acf22ca90010",
            "type" : "SOURCE"
          } ],
          "recommendationsEnabled" : true,
          "sunsetCommentsRequired" : true,
          "created" : "2020-03-03T22:15:13.611Z",
          "machineAccountCampaignInfo" : {
            "reviewerType" : "ACCOUNT_OWNER",
            "sourceIds" : [ "0fbe863c063c4c88a35fd7f17e8a3df5" ]
          },
          "description" : "Everyone needs to be reviewed by their manager",
          "type" : "MANAGER",
          "sourceOwnerCampaignInfo" : {
            "sourceIds" : [ "0fbe863c063c4c88a35fd7f17e8a3df5" ]
          },
          "emailNotificationEnabled" : false,
          "alerts" : [ {
            "level" : "ERROR",
            "localizations" : [ {
              "localeOrigin" : "DEFAULT",
              "text" : "The request was syntactically correct but its content is semantically invalid.",
              "locale" : "en-US"
            }, {
              "localeOrigin" : "DEFAULT",
              "text" : "The request was syntactically correct but its content is semantically invalid.",
              "locale" : "en-US"
            } ]
          }, {
            "level" : "ERROR",
            "localizations" : [ {
              "localeOrigin" : "DEFAULT",
              "text" : "The request was syntactically correct but its content is semantically invalid.",
              "locale" : "en-US"
            }, {
              "localeOrigin" : "DEFAULT",
              "text" : "The request was syntactically correct but its content is semantically invalid.",
              "locale" : "en-US"
            } ]
          } ],
          "filter" : {
            "name" : "Test Filter",
            "id" : "0fbe863c063c4c88a35fd7f17e8a3df5",
            "type" : "CAMPAIGN_FILTER"
          },
          "searchCampaignInfo" : {
            "identityIds" : [ "0fbe863c063c4c88a35fd7f17e8a3df5" ],
            "query" : "Search Campaign query description",
            "description" : "Search Campaign description",
            "reviewer" : {
              "name" : "William Wilson",
              "id" : "2c91808568c529c60168cca6f90c1313",
              "type" : "IDENTITY"
            },
            "type" : "ACCESS",
            "accessConstraints" : [ {
              "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
              "type" : "ENTITLEMENT",
              "operator" : "SELECTED"
            }, {
              "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
              "type" : "ENTITLEMENT",
              "operator" : "SELECTED"
            }, {
              "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
              "type" : "ENTITLEMENT",
              "operator" : "SELECTED"
            }, {
              "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
              "type" : "ENTITLEMENT",
              "operator" : "SELECTED"
            }, {
              "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
              "type" : "ENTITLEMENT",
              "operator" : "SELECTED"
            } ]
          },
          "autoRevokeAllowed" : false,
          "name" : "Manager Campaign",
          "mandatoryCommentRequirement" : "NO_DECISIONS",
          "modified" : "2020-03-03T22:20:12.674Z",
          "roleCompositionCampaignInfo" : {
            "remediatorRef" : {
              "name" : "Role Admin",
              "id" : "2c90ad2a70ace7d50170acf22ca90010",
              "type" : "IDENTITY"
            },
            "roleIds" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
            "query" : "Search Query",
            "description" : "Role Composition Description",
            "reviewer" : {
              "name" : "William Wilson",
              "id" : "2c91808568c529c60168cca6f90c1313",
              "type" : "IDENTITY"
            }
          },
          "completedCertifications" : 10,
          "id" : "2c9079b270a266a60170a2779fcb0007",
          "deadline" : "2020-03-15T10:00:01.456Z",
          "status" : "ACTIVE",
          "correlatedStatus" : "CORRELATED"
        }`) // Campaign | 

          
          var campaign beta.Campaign
          if err := json.Unmarshal(campaign, &campaign); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.CreateCampaign(context.Background()).Campaign(campaign).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.CreateCampaign(context.Background()).Campaign(campaign).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.CreateCampaign``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateCampaign`: Campaign
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.CreateCampaign`: %v\n", resp)
        }
- path: /campaign-templates
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#create-campaign-template
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            "time"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           campaigntemplate := []byte(`{
          "ownerRef" : {
            "name" : "Mister Manager",
            "id" : "2c918086676d3e0601677611dbde220f",
            "type" : "IDENTITY",
            "email" : "mr.manager@example.com"
          },
          "deadlineDuration" : "P2W",
          "created" : "2020-03-05T22:44:00.364Z",
          "scheduled" : false,
          "name" : "Manager Campaign Template",
          "description" : "Template for the annual manager campaign.",
          "modified" : "2020-03-05T22:52:09.969Z",
          "campaign" : {
            "totalCertifications" : 100,
            "sourcesWithOrphanEntitlements" : [ {
              "name" : "Source with orphan entitlements",
              "id" : "2c90ad2a70ace7d50170acf22ca90010",
              "type" : "SOURCE"
            }, {
              "name" : "Source with orphan entitlements",
              "id" : "2c90ad2a70ace7d50170acf22ca90010",
              "type" : "SOURCE"
            } ],
            "recommendationsEnabled" : true,
            "sunsetCommentsRequired" : true,
            "created" : "2020-03-03T22:15:13.611Z",
            "machineAccountCampaignInfo" : {
              "reviewerType" : "ACCOUNT_OWNER",
              "sourceIds" : [ "0fbe863c063c4c88a35fd7f17e8a3df5" ]
            },
            "description" : "Everyone needs to be reviewed by their manager",
            "type" : "MANAGER",
            "sourceOwnerCampaignInfo" : {
              "sourceIds" : [ "0fbe863c063c4c88a35fd7f17e8a3df5" ]
            },
            "emailNotificationEnabled" : false,
            "alerts" : [ {
              "level" : "ERROR",
              "localizations" : [ {
                "localeOrigin" : "DEFAULT",
                "text" : "The request was syntactically correct but its content is semantically invalid.",
                "locale" : "en-US"
              }, {
                "localeOrigin" : "DEFAULT",
                "text" : "The request was syntactically correct but its content is semantically invalid.",
                "locale" : "en-US"
              } ]
            }, {
              "level" : "ERROR",
              "localizations" : [ {
                "localeOrigin" : "DEFAULT",
                "text" : "The request was syntactically correct but its content is semantically invalid.",
                "locale" : "en-US"
              }, {
                "localeOrigin" : "DEFAULT",
                "text" : "The request was syntactically correct but its content is semantically invalid.",
                "locale" : "en-US"
              } ]
            } ],
            "filter" : {
              "name" : "Test Filter",
              "id" : "0fbe863c063c4c88a35fd7f17e8a3df5",
              "type" : "CAMPAIGN_FILTER"
            },
            "searchCampaignInfo" : {
              "identityIds" : [ "0fbe863c063c4c88a35fd7f17e8a3df5" ],
              "query" : "Search Campaign query description",
              "description" : "Search Campaign description",
              "reviewer" : {
                "name" : "William Wilson",
                "id" : "2c91808568c529c60168cca6f90c1313",
                "type" : "IDENTITY"
              },
              "type" : "ACCESS",
              "accessConstraints" : [ {
                "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
                "type" : "ENTITLEMENT",
                "operator" : "SELECTED"
              }, {
                "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
                "type" : "ENTITLEMENT",
                "operator" : "SELECTED"
              }, {
                "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
                "type" : "ENTITLEMENT",
                "operator" : "SELECTED"
              }, {
                "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
                "type" : "ENTITLEMENT",
                "operator" : "SELECTED"
              }, {
                "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
                "type" : "ENTITLEMENT",
                "operator" : "SELECTED"
              } ]
            },
            "autoRevokeAllowed" : false,
            "name" : "Manager Campaign",
            "mandatoryCommentRequirement" : "NO_DECISIONS",
            "modified" : "2020-03-03T22:20:12.674Z",
            "roleCompositionCampaignInfo" : {
              "remediatorRef" : {
                "name" : "Role Admin",
                "id" : "2c90ad2a70ace7d50170acf22ca90010",
                "type" : "IDENTITY"
              },
              "roleIds" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
              "query" : "Search Query",
              "description" : "Role Composition Description",
              "reviewer" : {
                "name" : "William Wilson",
                "id" : "2c91808568c529c60168cca6f90c1313",
                "type" : "IDENTITY"
              }
            },
            "completedCertifications" : 10,
            "id" : "2c9079b270a266a60170a2779fcb0007",
            "deadline" : "2020-03-15T10:00:01.456Z",
            "status" : "ACTIVE",
            "correlatedStatus" : "CORRELATED"
          },
          "id" : "2c9079b270a266a60170a277bb960008"
        }`) // CampaignTemplate | 

          
          var campaignTemplate beta.CampaignTemplate
          if err := json.Unmarshal(campaigntemplate, &campaignTemplate); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.CreateCampaignTemplate(context.Background()).CampaignTemplate(campaignTemplate).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.CreateCampaignTemplate(context.Background()).CampaignTemplate(campaignTemplate).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.CreateCampaignTemplate``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateCampaignTemplate`: CampaignTemplate
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.CreateCampaignTemplate`: %v\n", resp)
        }
- path: /campaign-templates/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#delete-campaign-template
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180835d191a86015d28455b4a2329` // string | ID of the campaign template being deleted. # string | ID of the campaign template being deleted.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.CertificationCampaignsAPI.DeleteCampaignTemplate(context.Background(), id).Execute()
          //r, err := apiClient.Beta.CertificationCampaignsAPI.DeleteCampaignTemplate(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.DeleteCampaignTemplate``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /campaign-templates/{id}/schedule
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#delete-campaign-template-schedule
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `04bedce387bd47b2ae1f86eb0bb36dee` // string | ID of the campaign template whose schedule is being deleted. # string | ID of the campaign template whose schedule is being deleted.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.CertificationCampaignsAPI.DeleteCampaignTemplateSchedule(context.Background(), id).Execute()
          //r, err := apiClient.Beta.CertificationCampaignsAPI.DeleteCampaignTemplateSchedule(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.DeleteCampaignTemplateSchedule``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /campaigns/delete
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#delete-campaigns
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           deletecampaignsrequest := []byte(`{
          "ids" : [ "2c9180887335cee10173490db1776c26", "2c9180836a712436016a7125a90c0021" ]
        }`) // DeleteCampaignsRequest | IDs of the campaigns to delete.

          
          var deleteCampaignsRequest beta.DeleteCampaignsRequest
          if err := json.Unmarshal(deletecampaignsrequest, &deleteCampaignsRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.DeleteCampaigns(context.Background()).DeleteCampaignsRequest(deleteCampaignsRequest).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.DeleteCampaigns(context.Background()).DeleteCampaignsRequest(deleteCampaignsRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.DeleteCampaigns``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteCampaigns`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.DeleteCampaigns`: %v\n", resp)
        }
- path: /campaigns
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#get-active-campaigns
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          detail := `FULL` // string | Determines whether slim, or increased level of detail is provided for each campaign in the returned list. Slim is the default behavior. (optional) # string | Determines whether slim, or increased level of detail is provided for each campaign in the returned list. Slim is the default behavior. (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `name eq "Manager Campaign"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **status**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **status**: *eq, in* (optional)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetActiveCampaigns(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetActiveCampaigns(context.Background()).Detail(detail).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.GetActiveCampaigns``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetActiveCampaigns`: []GetActiveCampaigns200ResponseInner
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.GetActiveCampaigns`: %v\n", resp)
        }
- path: /campaigns/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#get-campaign
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808571bcfcf80171c23e4b4221fc` // string | ID of the campaign to be retrieved. # string | ID of the campaign to be retrieved.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetCampaign(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetCampaign(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.GetCampaign``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetCampaign`: Slimcampaign
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.GetCampaign`: %v\n", resp)
        }
- path: /campaigns/{id}/reports
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#get-campaign-reports
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808571bcfcf80171c23e4b4221fc` // string | ID of the campaign whose reports are being fetched. # string | ID of the campaign whose reports are being fetched.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetCampaignReports(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetCampaignReports(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.GetCampaignReports``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetCampaignReports`: []CampaignReport
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.GetCampaignReports`: %v\n", resp)
        }
- path: /campaigns/reports-configuration
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#get-campaign-reports-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetCampaignReportsConfig(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetCampaignReportsConfig(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.GetCampaignReportsConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetCampaignReportsConfig`: CampaignReportsConfig
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.GetCampaignReportsConfig`: %v\n", resp)
        }
- path: /campaign-templates/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#get-campaign-template
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180835d191a86015d28455b4a2329` // string | Requested campaign template's ID. # string | Requested campaign template's ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetCampaignTemplate(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetCampaignTemplate(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.GetCampaignTemplate``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetCampaignTemplate`: CampaignTemplate
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.GetCampaignTemplate`: %v\n", resp)
        }
- path: /campaign-templates/{id}/schedule
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#get-campaign-template-schedule
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `04bedce387bd47b2ae1f86eb0bb36dee` // string | ID of the campaign template whose schedule is being fetched. # string | ID of the campaign template whose schedule is being fetched.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetCampaignTemplateSchedule(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetCampaignTemplateSchedule(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.GetCampaignTemplateSchedule``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetCampaignTemplateSchedule`: Schedule
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.GetCampaignTemplateSchedule`: %v\n", resp)
        }
- path: /campaign-templates
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#get-campaign-templates
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional)
          filters := `name eq "manager template"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *eq, ge, gt, in, le, lt, ne, sw*  **id**: *eq, ge, gt, in, le, lt, ne, sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *eq, ge, gt, in, le, lt, ne, sw*  **id**: *eq, ge, gt, in, le, lt, ne, sw* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetCampaignTemplates(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.GetCampaignTemplates(context.Background()).Limit(limit).Offset(offset).Count(count).Sorters(sorters).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.GetCampaignTemplates``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetCampaignTemplates`: []CampaignTemplate
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.GetCampaignTemplates`: %v\n", resp)
        }
- path: /campaigns/{id}/reassign
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#move
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The certification campaign ID # string | The certification campaign ID
           adminreviewreassign := []byte(`{
          "certificationIds" : [ "af3859464779471211bb8424a563abc1", "af3859464779471211bb8424a563abc2", "af3859464779471211bb8424a563abc3" ],
          "reason" : "reassigned for some reason",
          "reassignTo" : {
            "id" : "ef38f94347e94562b5bb8424a56397d8",
            "type" : "IDENTITY"
          }
        }`) // AdminReviewReassign | 

          
          var adminReviewReassign beta.AdminReviewReassign
          if err := json.Unmarshal(adminreviewreassign, &adminReviewReassign); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.Move(context.Background(), id).AdminReviewReassign(adminReviewReassign).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.Move(context.Background(), id).AdminReviewReassign(adminReviewReassign).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.Move``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `Move`: CertificationTask
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.Move`: %v\n", resp)
        }
- path: /campaign-templates/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#patch-campaign-template
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180835d191a86015d28455b4a2329` // string | ID of the campaign template being modified. # string | ID of the campaign template being modified.
          jsonpatchoperation := []byte(`[{op=replace, path=/description, value=Updated description!}, {op=replace, path=/campaign/filter/id, value=ff80818155fe8c080155fe8d925b0316}]`) // []JsonPatchOperation | A list of campaign update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.  The following fields are patchable: * name * description * deadlineDuration * campaign (all fields that are allowed during create) 

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.PatchCampaignTemplate(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.PatchCampaignTemplate(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.PatchCampaignTemplate``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchCampaignTemplate`: CampaignTemplate
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.PatchCampaignTemplate`: %v\n", resp)
        }
- path: /campaigns/reports-configuration
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#set-campaign-reports-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           campaignreportsconfig := []byte(`{
          "identityAttributeColumns" : [ "firstname", "lastname" ]
        }`) // CampaignReportsConfig | Campaign report configuration.

          
          var campaignReportsConfig beta.CampaignReportsConfig
          if err := json.Unmarshal(campaignreportsconfig, &campaignReportsConfig); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.SetCampaignReportsConfig(context.Background()).CampaignReportsConfig(campaignReportsConfig).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.SetCampaignReportsConfig(context.Background()).CampaignReportsConfig(campaignReportsConfig).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.SetCampaignReportsConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SetCampaignReportsConfig`: CampaignReportsConfig
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.SetCampaignReportsConfig`: %v\n", resp)
        }
- path: /campaign-templates/{id}/schedule
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#set-campaign-template-schedule
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `04bedce387bd47b2ae1f86eb0bb36dee` // string | ID of the campaign template being scheduled. # string | ID of the campaign template being scheduled.
           schedule := []byte(`{
          "hours" : {
            "values" : [ "1" ],
            "interval" : 2,
            "type" : "LIST"
          },
          "months" : {
            "values" : [ "1" ],
            "interval" : 2,
            "type" : "LIST"
          },
          "timeZoneId" : "CST",
          "days" : {
            "values" : [ "1" ],
            "interval" : 2,
            "type" : "LIST"
          },
          "expiration" : "2000-01-23T04:56:07.000+00:00",
          "type" : "WEEKLY"
        }`) // Schedule |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.CertificationCampaignsAPI.SetCampaignTemplateSchedule(context.Background(), id).Execute()
          //r, err := apiClient.Beta.CertificationCampaignsAPI.SetCampaignTemplateSchedule(context.Background(), id).Schedule(schedule).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.SetCampaignTemplateSchedule``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /campaigns/{id}/activate
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#start-campaign
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | Campaign ID. # string | Campaign ID.
           activatecampaignoptions := []byte(`{
          "timeZone" : "-05:00"
        }`) // ActivateCampaignOptions | Optional. If no timezone is specified, the standard UTC timezone is used (i.e. UTC+00:00). Although this can take any timezone, the intended value is the caller's timezone. The activation time calculated from the given timezone may cause the campaign deadline time to be modified, but it will remain within the original date. The timezone must be in a valid ISO 8601 format. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.StartCampaign(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.StartCampaign(context.Background(), id).ActivateCampaignOptions(activateCampaignOptions).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.StartCampaign``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `StartCampaign`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.StartCampaign`: %v\n", resp)
        }
- path: /campaigns/{id}/run-remediation-scan
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#start-campaign-remediation-scan
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808571bcfcf80171c23e4b4221fc` // string | ID of the campaign the remediation scan is being run for. # string | ID of the campaign the remediation scan is being run for.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.StartCampaignRemediationScan(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.StartCampaignRemediationScan(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.StartCampaignRemediationScan``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `StartCampaignRemediationScan`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.StartCampaignRemediationScan`: %v\n", resp)
        }
- path: /campaigns/{id}/run-report/{type}
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#start-campaign-report
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808571bcfcf80171c23e4b4221fc` // string | ID of the campaign the report is being run for. # string | ID of the campaign the report is being run for.
          type_ :=  // ReportType | Type of report to run. # ReportType | Type of report to run.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.StartCampaignReport(context.Background(), id, type_).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.StartCampaignReport(context.Background(), id, type_).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.StartCampaignReport``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `StartCampaignReport`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.StartCampaignReport`: %v\n", resp)
        }
- path: /campaign-templates/{id}/generate
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#start-generate-campaign-template
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180835d191a86015d28455b4a2329` // string | ID of the campaign template to use for generation. # string | ID of the campaign template to use for generation.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.StartGenerateCampaignTemplate(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.StartGenerateCampaignTemplate(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.StartGenerateCampaignTemplate``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `StartGenerateCampaignTemplate`: CampaignReference
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.StartGenerateCampaignTemplate`: %v\n", resp)
        }
- path: /campaigns/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certification-campaigns#update-campaign
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808571bcfcf80171c23e4b4221fc` // string | ID of the campaign being modified. # string | ID of the campaign being modified.
          requestbody := []byte(`[{op=replace, path=/name, value=This field has been updated!}, {op=copy, from=/name, path=/description}]`) // []map[string]interface{} | A list of campaign update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard. The fields that can be patched differ based on the status of the campaign.  When the campaign is in the *STAGED* status, you can patch these fields: * name * description * recommendationsEnabled * deadline * emailNotificationEnabled * autoRevokeAllowed  When the campaign is in the *ACTIVE* status, you can patch these fields: * deadline 

          
          var requestBody []beta.RequestBody
          if err := json.Unmarshal(requestbody, &requestBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationCampaignsAPI.UpdateCampaign(context.Background(), id).RequestBody(requestBody).Execute()
          //resp, r, err := apiClient.Beta.CertificationCampaignsAPI.UpdateCampaign(context.Background(), id).RequestBody(requestBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationCampaignsAPI.UpdateCampaign``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateCampaign`: Slimcampaign
          fmt.Fprintf(os.Stdout, "Response from `CertificationCampaignsAPI.UpdateCampaign`: %v\n", resp)
        }
- path: /certifications/{certificationId}/access-review-items/{itemId}/permissions
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certifications#get-identity-certification-item-permissions
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          certificationId := `ef38f94347e94562b5bb8424a56397d8` // string | The certification ID # string | The certification ID
          itemId := `2c91808671bcbab40171bd945d961227` // string | The certification item ID # string | The certification item ID
          filters := `target eq "SYS.OBJAUTH2"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **target**: *eq, sw*  **rights**: *ca*  All field values (second filter operands) are case-insensitive for this API.  Only a single *and* or *or* composite filter operator may be used. It must also be used between a target filter and a rights filter, not between 2 filters for the same field.  For example, the following is valid: `?filters=rights+ca+(%22CREATE%22)+and+target+eq+%22SYS.OBJAUTH2%22`  The following is invalid: `?filters=rights+ca+(%22CREATE%22)+and+rights+ca+(%SELECT%22)` (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **target**: *eq, sw*  **rights**: *ca*  All field values (second filter operands) are case-insensitive for this API.  Only a single *and* or *or* composite filter operator may be used. It must also be used between a target filter and a rights filter, not between 2 filters for the same field.  For example, the following is valid: `?filters=rights+ca+(%22CREATE%22)+and+target+eq+%22SYS.OBJAUTH2%22`  The following is invalid: `?filters=rights+ca+(%22CREATE%22)+and+rights+ca+(%SELECT%22)` (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationsAPI.GetIdentityCertificationItemPermissions(context.Background(), certificationId, itemId).Execute()
          //resp, r, err := apiClient.Beta.CertificationsAPI.GetIdentityCertificationItemPermissions(context.Background(), certificationId, itemId).Filters(filters).Limit(limit).Offset(offset).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationsAPI.GetIdentityCertificationItemPermissions``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentityCertificationItemPermissions`: []PermissionDto
          fmt.Fprintf(os.Stdout, "Response from `CertificationsAPI.GetIdentityCertificationItemPermissions`: %v\n", resp)
        }
- path: /certifications/{id}/tasks-pending
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certifications#get-identity-certification-pending-tasks
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `id_example` // string | The identity campaign certification ID # string | The identity campaign certification ID

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationsAPI.GetIdentityCertificationPendingTasks(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.CertificationsAPI.GetIdentityCertificationPendingTasks(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationsAPI.GetIdentityCertificationPendingTasks``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentityCertificationPendingTasks`: []IdentityCertificationTask
          fmt.Fprintf(os.Stdout, "Response from `CertificationsAPI.GetIdentityCertificationPendingTasks`: %v\n", resp)
        }
- path: /certifications/{id}/tasks/{taskId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certifications#get-identity-certification-task-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `id_example` // string | The identity campaign certification ID # string | The identity campaign certification ID
          taskId := `taskId_example` // string | The certification task ID # string | The certification task ID

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationsAPI.GetIdentityCertificationTaskStatus(context.Background(), id, taskId).Execute()
          //resp, r, err := apiClient.Beta.CertificationsAPI.GetIdentityCertificationTaskStatus(context.Background(), id, taskId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationsAPI.GetIdentityCertificationTaskStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentityCertificationTaskStatus`: IdentityCertificationTask
          fmt.Fprintf(os.Stdout, "Response from `CertificationsAPI.GetIdentityCertificationTaskStatus`: %v\n", resp)
        }
- path: /certifications/{id}/reviewers
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certifications#list-certification-reviewers
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The certification ID # string | The certification ID
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `name eq "Bob"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **email**: *eq, sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **email**: *eq, sw* (optional)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, email** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, email** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationsAPI.ListCertificationReviewers(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.CertificationsAPI.ListCertificationReviewers(context.Background(), id).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationsAPI.ListCertificationReviewers``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListCertificationReviewers`: []IdentityReferenceWithNameAndEmail
          fmt.Fprintf(os.Stdout, "Response from `CertificationsAPI.ListCertificationReviewers`: %v\n", resp)
        }
- path: /certifications
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certifications#list-certifications
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          reviewerIdentitiy := `reviewerIdentitiy_example` // string | The ID of reviewer identity. *me* indicates the current user. (optional) # string | The ID of reviewer identity. *me* indicates the current user. (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `filters_example` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **phase**: *eq*  **completed**: *eq, ne*  **campaignRef.campaignType**: *eq, in*  **campaignRef.id**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **phase**: *eq*  **completed**: *eq, ne*  **campaignRef.campaignType**: *eq, in*  **campaignRef.id**: *eq, in* (optional)
          sorters := `sorters_example` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, due, signed** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, due, signed** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationsAPI.ListCertifications(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.CertificationsAPI.ListCertifications(context.Background()).ReviewerIdentitiy(reviewerIdentitiy).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationsAPI.ListCertifications``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListCertifications`: []CertificationDto
          fmt.Fprintf(os.Stdout, "Response from `CertificationsAPI.ListCertifications`: %v\n", resp)
        }
- path: /certifications/{id}/reassign-async
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/certifications#submit-reassign-certs-async
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The identity campaign certification ID # string | The identity campaign certification ID
           reviewreassign := []byte(`{
          "reason" : "reassigned for some reason",
          "reassignTo" : "ef38f94347e94562b5bb8424a56397d8",
          "reassign" : [ {
            "id" : "ef38f94347e94562b5bb8424a56397d8",
            "type" : "ITEM"
          }, {
            "id" : "ef38f94347e94562b5bb8424a56397d8",
            "type" : "ITEM"
          } ]
        }`) // ReviewReassign | 

          
          var reviewReassign beta.ReviewReassign
          if err := json.Unmarshal(reviewreassign, &reviewReassign); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CertificationsAPI.SubmitReassignCertsAsync(context.Background(), id).ReviewReassign(reviewReassign).Execute()
          //resp, r, err := apiClient.Beta.CertificationsAPI.SubmitReassignCertsAsync(context.Background(), id).ReviewReassign(reviewReassign).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CertificationsAPI.SubmitReassignCertsAsync``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SubmitReassignCertsAsync`: IdentityCertificationTask
          fmt.Fprintf(os.Stdout, "Response from `CertificationsAPI.SubmitReassignCertsAsync`: %v\n", resp)
        }
- path: /connector-rules
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/connector-rule-management#create-connector-rule
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           connectorrulecreaterequest := []byte(`{
          "sourceCode" : {
            "version" : "1.0",
            "script" : "return \"Mr. \" + firstName;"
          },
          "signature" : {
            "output" : {
              "name" : "firstName",
              "description" : "the first name of the identity",
              "type" : "String"
            },
            "input" : [ {
              "name" : "firstName",
              "description" : "the first name of the identity",
              "type" : "String"
            }, {
              "name" : "firstName",
              "description" : "the first name of the identity",
              "type" : "String"
            } ]
          },
          "name" : "WebServiceBeforeOperationRule",
          "description" : "This rule does that",
          "attributes" : { },
          "type" : "BuildMap"
        }`) // ConnectorRuleCreateRequest | The connector rule to create

          
          var connectorRuleCreateRequest beta.ConnectorRuleCreateRequest
          if err := json.Unmarshal(connectorrulecreaterequest, &connectorRuleCreateRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ConnectorRuleManagementAPI.CreateConnectorRule(context.Background()).ConnectorRuleCreateRequest(connectorRuleCreateRequest).Execute()
          //resp, r, err := apiClient.Beta.ConnectorRuleManagementAPI.CreateConnectorRule(context.Background()).ConnectorRuleCreateRequest(connectorRuleCreateRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ConnectorRuleManagementAPI.CreateConnectorRule``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateConnectorRule`: ConnectorRuleResponse
          fmt.Fprintf(os.Stdout, "Response from `ConnectorRuleManagementAPI.CreateConnectorRule`: %v\n", resp)
        }
- path: /connector-rules/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/connector-rule-management#delete-connector-rule
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | ID of the connector rule to delete # string | ID of the connector rule to delete

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.ConnectorRuleManagementAPI.DeleteConnectorRule(context.Background(), id).Execute()
          //r, err := apiClient.Beta.ConnectorRuleManagementAPI.DeleteConnectorRule(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ConnectorRuleManagementAPI.DeleteConnectorRule``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /connector-rules/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/connector-rule-management#get-connector-rule
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | ID of the connector rule to retrieve # string | ID of the connector rule to retrieve

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ConnectorRuleManagementAPI.GetConnectorRule(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.ConnectorRuleManagementAPI.GetConnectorRule(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ConnectorRuleManagementAPI.GetConnectorRule``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetConnectorRule`: ConnectorRuleResponse
          fmt.Fprintf(os.Stdout, "Response from `ConnectorRuleManagementAPI.GetConnectorRule`: %v\n", resp)
        }
- path: /connector-rules
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/connector-rule-management#get-connector-rule-list
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ConnectorRuleManagementAPI.GetConnectorRuleList(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.ConnectorRuleManagementAPI.GetConnectorRuleList(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ConnectorRuleManagementAPI.GetConnectorRuleList``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetConnectorRuleList`: []ConnectorRuleResponse
          fmt.Fprintf(os.Stdout, "Response from `ConnectorRuleManagementAPI.GetConnectorRuleList`: %v\n", resp)
        }
- path: /connector-rules/{id}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/connector-rule-management#update-connector-rule
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | ID of the connector rule to update # string | ID of the connector rule to update
           connectorruleupdaterequest := []byte(`{
          "sourceCode" : {
            "version" : "1.0",
            "script" : "return \"Mr. \" + firstName;"
          },
          "signature" : {
            "output" : {
              "name" : "firstName",
              "description" : "the first name of the identity",
              "type" : "String"
            },
            "input" : [ {
              "name" : "firstName",
              "description" : "the first name of the identity",
              "type" : "String"
            }, {
              "name" : "firstName",
              "description" : "the first name of the identity",
              "type" : "String"
            } ]
          },
          "name" : "WebServiceBeforeOperationRule",
          "description" : "This rule does that",
          "attributes" : { },
          "id" : "8113d48c0b914f17b4c6072d4dcb9dfe",
          "type" : "BuildMap"
        }`) // ConnectorRuleUpdateRequest | The connector rule with updated data (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ConnectorRuleManagementAPI.UpdateConnectorRule(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.ConnectorRuleManagementAPI.UpdateConnectorRule(context.Background(), id).ConnectorRuleUpdateRequest(connectorRuleUpdateRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ConnectorRuleManagementAPI.UpdateConnectorRule``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateConnectorRule`: ConnectorRuleResponse
          fmt.Fprintf(os.Stdout, "Response from `ConnectorRuleManagementAPI.UpdateConnectorRule`: %v\n", resp)
        }
- path: /connector-rules/validate
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/connector-rule-management#validate-connector-rule
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           sourcecode := []byte(`{
          "version" : "1.0",
          "script" : "return \"Mr. \" + firstName;"
        }`) // SourceCode | The code to validate

          
          var sourceCode beta.SourceCode
          if err := json.Unmarshal(sourcecode, &sourceCode); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ConnectorRuleManagementAPI.ValidateConnectorRule(context.Background()).SourceCode(sourceCode).Execute()
          //resp, r, err := apiClient.Beta.ConnectorRuleManagementAPI.ValidateConnectorRule(context.Background()).SourceCode(sourceCode).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ConnectorRuleManagementAPI.ValidateConnectorRule``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ValidateConnectorRule`: ConnectorRuleValidationResponse
          fmt.Fprintf(os.Stdout, "Response from `ConnectorRuleManagementAPI.ValidateConnectorRule`: %v\n", resp)
        }
- path: /connectors
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/connectors#get-connector-list
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          filters := `directConnect eq "true"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **type**: *eq*  **directConnect**: *eq*  **category**: *eq*  **features**: *ca* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **type**: *eq*  **directConnect**: *eq*  **category**: *eq*  **features**: *ca* (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          locale := `de` // string | The locale to apply to the config. If no viable locale is given, it will default to \"en\" (optional) # string | The locale to apply to the config. If no viable locale is given, it will default to \"en\" (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ConnectorsAPI.GetConnectorList(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.ConnectorsAPI.GetConnectorList(context.Background()).Filters(filters).Limit(limit).Offset(offset).Count(count).Locale(locale).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ConnectorsAPI.GetConnectorList``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetConnectorList`: []V3ConnectorDto
          fmt.Fprintf(os.Stdout, "Response from `ConnectorsAPI.GetConnectorList`: %v\n", resp)
        }
- path: /form-definitions
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#create-form-definition
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           createformdefinitionrequest := []byte(`{
          "owner" : {
            "name" : "Grant Smith",
            "id" : "2c9180867624cbd7017642d8c8c81f67",
            "type" : "IDENTITY"
          },
          "formConditions" : [ {
            "ruleOperator" : "AND",
            "effects" : [ {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            }, {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            } ],
            "rules" : [ {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            }, {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            } ]
          }, {
            "ruleOperator" : "AND",
            "effects" : [ {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            }, {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            } ],
            "rules" : [ {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            }, {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            } ]
          } ],
          "formInput" : [ {
            "description" : "A single dynamic scalar value (i.e. number, string, date, etc.) that can be passed into the form for use in conditional logic",
            "id" : "00000000-0000-0000-0000-000000000000",
            "label" : "input1",
            "type" : "STRING"
          }, {
            "description" : "A single dynamic scalar value (i.e. number, string, date, etc.) that can be passed into the form for use in conditional logic",
            "id" : "00000000-0000-0000-0000-000000000000",
            "label" : "input1",
            "type" : "STRING"
          } ],
          "name" : "My form",
          "description" : "My form description",
          "usedBy" : [ {
            "name" : "Access Request Form",
            "id" : "61940a92-5484-42bc-bc10-b9982b218cdf",
            "type" : "WORKFLOW"
          }, {
            "name" : "Access Request Form",
            "id" : "61940a92-5484-42bc-bc10-b9982b218cdf",
            "type" : "WORKFLOW"
          } ],
          "formElements" : [ {
            "id" : "00000000-0000-0000-0000-000000000000",
            "validations" : [ {
              "validationType" : "REQUIRED"
            }, {
              "validationType" : "REQUIRED"
            } ],
            "elementType" : "TEXT",
            "config" : {
              "label" : "Department"
            },
            "key" : "department"
          }, {
            "id" : "00000000-0000-0000-0000-000000000000",
            "validations" : [ {
              "validationType" : "REQUIRED"
            }, {
              "validationType" : "REQUIRED"
            } ],
            "elementType" : "TEXT",
            "config" : {
              "label" : "Department"
            },
            "key" : "department"
          } ]
        }`) // CreateFormDefinitionRequest | Body is the request payload to create form definition request (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.CreateFormDefinition(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.CreateFormDefinition(context.Background()).CreateFormDefinitionRequest(createFormDefinitionRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.CreateFormDefinition``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateFormDefinition`: FormDefinitionResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.CreateFormDefinition`: %v\n", resp)
        }
- path: /form-definitions/template
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#create-form-definition-by-template
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           createformdefinitionrequest := []byte(`{
          "owner" : {
            "name" : "Grant Smith",
            "id" : "2c9180867624cbd7017642d8c8c81f67",
            "type" : "IDENTITY"
          },
          "formConditions" : [ {
            "ruleOperator" : "AND",
            "effects" : [ {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            }, {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            } ],
            "rules" : [ {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            }, {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            } ]
          }, {
            "ruleOperator" : "AND",
            "effects" : [ {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            }, {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            } ],
            "rules" : [ {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            }, {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            } ]
          } ],
          "formInput" : [ {
            "description" : "A single dynamic scalar value (i.e. number, string, date, etc.) that can be passed into the form for use in conditional logic",
            "id" : "00000000-0000-0000-0000-000000000000",
            "label" : "input1",
            "type" : "STRING"
          }, {
            "description" : "A single dynamic scalar value (i.e. number, string, date, etc.) that can be passed into the form for use in conditional logic",
            "id" : "00000000-0000-0000-0000-000000000000",
            "label" : "input1",
            "type" : "STRING"
          } ],
          "name" : "My form",
          "description" : "My form description",
          "usedBy" : [ {
            "name" : "Access Request Form",
            "id" : "61940a92-5484-42bc-bc10-b9982b218cdf",
            "type" : "WORKFLOW"
          }, {
            "name" : "Access Request Form",
            "id" : "61940a92-5484-42bc-bc10-b9982b218cdf",
            "type" : "WORKFLOW"
          } ],
          "formElements" : [ {
            "id" : "00000000-0000-0000-0000-000000000000",
            "validations" : [ {
              "validationType" : "REQUIRED"
            }, {
              "validationType" : "REQUIRED"
            } ],
            "elementType" : "TEXT",
            "config" : {
              "label" : "Department"
            },
            "key" : "department"
          }, {
            "id" : "00000000-0000-0000-0000-000000000000",
            "validations" : [ {
              "validationType" : "REQUIRED"
            }, {
              "validationType" : "REQUIRED"
            } ],
            "elementType" : "TEXT",
            "config" : {
              "label" : "Department"
            },
            "key" : "department"
          } ]
        }`) // CreateFormDefinitionRequest | Body is the request payload to create form definition request (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.CreateFormDefinitionByTemplate(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.CreateFormDefinitionByTemplate(context.Background()).CreateFormDefinitionRequest(createFormDefinitionRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.CreateFormDefinitionByTemplate``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateFormDefinitionByTemplate`: FormDefinitionResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.CreateFormDefinitionByTemplate`: %v\n", resp)
        }
- path: /form-definitions/forms-action-dynamic-schema
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#create-form-definition-dynamic-schema
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           body := []byte(`{
          "description" : "A description",
          "attributes" : {
            "formDefinitionId" : "00000000-0000-0000-0000-000000000000"
          },
          "id" : "00000000-0000-0000-0000-000000000000",
          "type" : "action",
          "versionNumber" : 1
        }`) // FormDefinitionDynamicSchemaRequest | Body is the request payload to create a form definition dynamic schema (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.CreateFormDefinitionDynamicSchema(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.CreateFormDefinitionDynamicSchema(context.Background()).Body(body).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.CreateFormDefinitionDynamicSchema``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateFormDefinitionDynamicSchema`: FormDefinitionDynamicSchemaResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.CreateFormDefinitionDynamicSchema`: %v\n", resp)
        }
- path: /form-definitions/{formDefinitionID}/upload
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#create-form-definition-file-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          formDefinitionID := `00000000-0000-0000-0000-000000000000` // string | FormDefinitionID  String specifying FormDefinitionID # string | FormDefinitionID  String specifying FormDefinitionID
          file := BINARY_DATA_HERE // *os.File | File specifying the multipart # *os.File | File specifying the multipart

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.CreateFormDefinitionFileRequest(context.Background(), formDefinitionID).File(file).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.CreateFormDefinitionFileRequest(context.Background(), formDefinitionID).File(file).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.CreateFormDefinitionFileRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateFormDefinitionFileRequest`: FormDefinitionFileUploadResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.CreateFormDefinitionFileRequest`: %v\n", resp)
        }
- path: /form-instances
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#create-form-instance
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           body := []byte(`{
          "formInput" : {
            "input1" : "Sales"
          },
          "standAloneForm" : false,
          "createdBy" : {
            "id" : "00000000-0000-0000-0000-000000000000",
            "type" : "WORKFLOW_EXECUTION"
          },
          "recipients" : [ {
            "id" : "00000000-0000-0000-0000-000000000000",
            "type" : "IDENTITY"
          }, {
            "id" : "00000000-0000-0000-0000-000000000000",
            "type" : "IDENTITY"
          } ],
          "expire" : "2023-08-12T20:14:57.74486Z",
          "formDefinitionId" : "00000000-0000-0000-0000-000000000000",
          "state" : "ASSIGNED",
          "ttl" : 1571827560
        }`) // CreateFormInstanceRequest | Body is the request payload to create a form instance (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.CreateFormInstance(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.CreateFormInstance(context.Background()).Body(body).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.CreateFormInstance``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateFormInstance`: FormInstanceResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.CreateFormInstance`: %v\n", resp)
        }
- path: /form-definitions/{formDefinitionID}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#delete-form-definition
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          formDefinitionID := `00000000-0000-0000-0000-000000000000` // string | Form definition ID # string | Form definition ID

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.DeleteFormDefinition(context.Background(), formDefinitionID).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.DeleteFormDefinition(context.Background(), formDefinitionID).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.DeleteFormDefinition``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteFormDefinition`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.DeleteFormDefinition`: %v\n", resp)
        }
- path: /form-definitions/export
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#export-form-definitions-by-tenant
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          offset := 0 // int64 | Offset  Integer specifying the offset of the first result from the beginning of the collection. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). The offset value is record-based, not page-based, and the index starts at 0. (optional) (default to 0) # int64 | Offset  Integer specifying the offset of the first result from the beginning of the collection. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). The offset value is record-based, not page-based, and the index starts at 0. (optional) (default to 0)
          limit := 250 // int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 250) # int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 250)
          filters := `name sw "my form"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *eq, gt, sw, in*  **description**: *eq, gt, sw, in*  **created**: *eq, gt, sw, in*  **modified**: *eq, gt, sw, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *eq, gt, sw, in*  **description**: *eq, gt, sw, in*  **created**: *eq, gt, sw, in*  **modified**: *eq, gt, sw, in* (optional)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, description, created, modified** (optional) (default to "name") # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, description, created, modified** (optional) (default to "name")

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.ExportFormDefinitionsByTenant(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.ExportFormDefinitionsByTenant(context.Background()).Offset(offset).Limit(limit).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.ExportFormDefinitionsByTenant``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ExportFormDefinitionsByTenant`: []ExportFormDefinitionsByTenant200ResponseInner
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.ExportFormDefinitionsByTenant`: %v\n", resp)
        }
- path: /form-definitions/{formDefinitionID}/file/{fileID}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#get-file-from-s3
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          formDefinitionID := `00000000-0000-0000-0000-000000000000` // string | FormDefinitionID  Form definition ID # string | FormDefinitionID  Form definition ID
          fileID := `00000031N0J7R2B57M8YG73J7M.png` // string | FileID  String specifying the hashed name of the uploaded file we are retrieving. # string | FileID  String specifying the hashed name of the uploaded file we are retrieving.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.GetFileFromS3(context.Background(), formDefinitionID, fileID).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.GetFileFromS3(context.Background(), formDefinitionID, fileID).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.GetFileFromS3``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetFileFromS3`: *os.File
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.GetFileFromS3`: %v\n", resp)
        }
- path: /form-definitions/{formDefinitionID}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#get-form-definition-by-key
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          formDefinitionID := `00000000-0000-0000-0000-000000000000` // string | Form definition ID # string | Form definition ID

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.GetFormDefinitionByKey(context.Background(), formDefinitionID).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.GetFormDefinitionByKey(context.Background(), formDefinitionID).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.GetFormDefinitionByKey``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetFormDefinitionByKey`: FormDefinitionResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.GetFormDefinitionByKey`: %v\n", resp)
        }
- path: /form-instances/{formInstanceID}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#get-form-instance-by-key
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          formInstanceID := `00000000-0000-0000-0000-000000000000` // string | Form instance ID # string | Form instance ID

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.GetFormInstanceByKey(context.Background(), formInstanceID).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.GetFormInstanceByKey(context.Background(), formInstanceID).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.GetFormInstanceByKey``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetFormInstanceByKey`: FormInstanceResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.GetFormInstanceByKey`: %v\n", resp)
        }
- path: /form-instances/{formInstanceID}/file/{fileID}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#get-form-instance-file
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          formInstanceID := `00000000-0000-0000-0000-000000000000` // string | FormInstanceID  Form instance ID # string | FormInstanceID  Form instance ID
          fileID := `00000031N0J7R2B57M8YG73J7M.png` // string | FileID  String specifying the hashed name of the uploaded file we are retrieving. # string | FileID  String specifying the hashed name of the uploaded file we are retrieving.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.GetFormInstanceFile(context.Background(), formInstanceID, fileID).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.GetFormInstanceFile(context.Background(), formInstanceID, fileID).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.GetFormInstanceFile``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetFormInstanceFile`: *os.File
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.GetFormInstanceFile`: %v\n", resp)
        }
- path: /form-definitions/import
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#import-form-definitions
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          body := []byte(`[{version=1, self={name=All fields not required, id=05ed4edb-d0a9-41d9-ad0c-2f6e486ec4aa, type=FORM_DEFINITION}, object={id=05ed4edb-d0a9-41d9-ad0c-2f6e486ec4aa, name=All fields not required, description=description, owner={type=IDENTITY, id=3447d8ec2602455ab6f1e8408a0f0150}, usedBy=[{type=WORKFLOW, id=5008594c-dacc-4295-8fee-41df60477304}, {type=WORKFLOW, id=97e75a75-c179-4fbc-a2da-b5fa4aaa8743}], formInput=[{type=STRING, label=input1, description=A single dynamic scalar value (i.e. number, string, date, etc) that can be passed into the form for use in conditional logic}], formElements=[{id=3069272797630701, elementType=SECTION, config={label=First Section, formElements=[{id=3069272797630700, elementType=TEXT, key=firstName, config={label=First Name}}, {id=3498415402897539, elementType=TEXT, key=lastName, config={label=Last Name}}]}}], formConditions=[{ruleOperator=AND, rules=[{sourceType=INPUT, source=Department, operator=EQ, valueType=STRING, value=Sales}], effects=[{effectType=HIDE, config={element=2614088730489570}}]}], created=2022-10-04T19:27:04.456Z, modified=2022-11-16T20:45:02.172Z}}]`) // []ImportFormDefinitionsRequestInner | Body is the request payload to import form definitions (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.ImportFormDefinitions(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.ImportFormDefinitions(context.Background()).Body(body).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.ImportFormDefinitions``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ImportFormDefinitions`: ImportFormDefinitions202Response
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.ImportFormDefinitions`: %v\n", resp)
        }
- path: /form-definitions/{formDefinitionID}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#patch-form-definition
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          formDefinitionID := `00000000-0000-0000-0000-000000000000` // string | Form definition ID # string | Form definition ID
          body := []byte(`[{op=replace, path=/description, value=test-description}]`) // []map[string]map[string]interface{} | Body is the request payload to patch a form definition, check: https://jsonpatch.com (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.PatchFormDefinition(context.Background(), formDefinitionID).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.PatchFormDefinition(context.Background(), formDefinitionID).Body(body).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.PatchFormDefinition``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchFormDefinition`: FormDefinitionResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.PatchFormDefinition`: %v\n", resp)
        }
- path: /form-instances/{formInstanceID}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#patch-form-instance
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          formInstanceID := `00000000-0000-0000-0000-000000000000` // string | Form instance ID # string | Form instance ID
          body := []byte(`[{op=replace, path=/state, value=SUBMITTED}, {op=replace, path=/formData, value={a-key-1=a-value-1, a-key-2=true, a-key-3=1}}]`) // []map[string]map[string]interface{} | Body is the request payload to patch a form instance, check: https://jsonpatch.com (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.PatchFormInstance(context.Background(), formInstanceID).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.PatchFormInstance(context.Background(), formInstanceID).Body(body).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.PatchFormInstance``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchFormInstance`: FormInstanceResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.PatchFormInstance`: %v\n", resp)
        }
- path: /form-definitions
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#search-form-definitions-by-tenant
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          offset := 250 // int64 | Offset  Integer specifying the offset of the first result from the beginning of the collection. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). The offset value is record-based, not page-based, and the index starts at 0. (optional) (default to 0) # int64 | Offset  Integer specifying the offset of the first result from the beginning of the collection. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). The offset value is record-based, not page-based, and the index starts at 0. (optional) (default to 0)
          limit := 250 // int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 250) # int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 250)
          filters := `name sw "my form"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *eq, gt, sw, in*  **description**: *eq, gt, sw, in*  **created**: *eq, gt, sw, in*  **modified**: *eq, gt, sw, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *eq, gt, sw, in*  **description**: *eq, gt, sw, in*  **created**: *eq, gt, sw, in*  **modified**: *eq, gt, sw, in* (optional)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, description, created, modified** (optional) (default to "name") # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, description, created, modified** (optional) (default to "name")

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.SearchFormDefinitionsByTenant(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.SearchFormDefinitionsByTenant(context.Background()).Offset(offset).Limit(limit).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.SearchFormDefinitionsByTenant``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SearchFormDefinitionsByTenant`: ListFormDefinitionsByTenantResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.SearchFormDefinitionsByTenant`: %v\n", resp)
        }
- path: /form-instances/{formInstanceID}/data-source/{formElementID}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#search-form-element-data-by-element-id
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          formInstanceID := `00000000-0000-0000-0000-000000000000` // string | Form instance ID # string | Form instance ID
          formElementID := `1` // string | Form element ID # string | Form element ID
          limit := 250 // int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 250) # int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 250)
          filters := `value eq "ID01"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **value**: *eq, ne, in*  Supported composite operators: *not*  Only a single *not* may be used, and it can only be used with the `in` operator. The `not` composite operator must be used in front of the field. For example, the following is valid: `not value in (\"ID01\")` (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **value**: *eq, ne, in*  Supported composite operators: *not*  Only a single *not* may be used, and it can only be used with the `in` operator. The `not` composite operator must be used in front of the field. For example, the following is valid: `not value in (\"ID01\")` (optional)
          query := `support` // string | String that is passed to the underlying API to filter other (non-ID) fields.  For example, for access  profile data sources, this string will be passed to the access profile api and used with a \"starts with\" filter against  several fields. (optional) # string | String that is passed to the underlying API to filter other (non-ID) fields.  For example, for access  profile data sources, this string will be passed to the access profile api and used with a \"starts with\" filter against  several fields. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.SearchFormElementDataByElementID(context.Background(), formInstanceID, formElementID).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.SearchFormElementDataByElementID(context.Background(), formInstanceID, formElementID).Limit(limit).Filters(filters).Query(query).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.SearchFormElementDataByElementID``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SearchFormElementDataByElementID`: ListFormElementDataByElementIDResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.SearchFormElementDataByElementID`: %v\n", resp)
        }
- path: /form-instances
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#search-form-instances-by-tenant
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.SearchFormInstancesByTenant(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.SearchFormInstancesByTenant(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.SearchFormInstancesByTenant``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SearchFormInstancesByTenant`: []FormInstanceResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.SearchFormInstancesByTenant`: %v\n", resp)
        }
- path: /form-definitions/predefined-select-options
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#search-pre-defined-select-options
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.SearchPreDefinedSelectOptions(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.SearchPreDefinedSelectOptions(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.SearchPreDefinedSelectOptions``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SearchPreDefinedSelectOptions`: ListPredefinedSelectOptionsResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.SearchPreDefinedSelectOptions`: %v\n", resp)
        }
- path: /form-definitions/{formDefinitionID}/data-source
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-forms#show-preview-data-source
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          formDefinitionID := `00000000-0000-0000-0000-000000000000` // string | Form definition ID # string | Form definition ID
          limit := 10 // int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 10) # int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 10)
          filters := `value eq "ID01"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **value**: *eq, ne, in*  Supported composite operators: *not*  Only a single *not* may be used, and it can only be used with the `in` operator. The `not` composite operator must be used in front of the field. For example, the following is valid: `not value in (\"ID01\")` (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **value**: *eq, ne, in*  Supported composite operators: *not*  Only a single *not* may be used, and it can only be used with the `in` operator. The `not` composite operator must be used in front of the field. For example, the following is valid: `not value in (\"ID01\")` (optional)
          query := `ac` // string | String that is passed to the underlying API to filter other (non-ID) fields.  For example, for access  profile data sources, this string will be passed to the access profile api and used with a \"starts with\" filter against  several fields. (optional) # string | String that is passed to the underlying API to filter other (non-ID) fields.  For example, for access  profile data sources, this string will be passed to the access profile api and used with a \"starts with\" filter against  several fields. (optional)
           formelementpreviewrequest := []byte(`{
          "dataSource" : {
            "config" : {
              "indices" : [ "identities" ],
              "query" : "*",
              "aggregationBucketField" : "attributes.cloudStatus.exact",
              "objectType" : "IDENTITY"
            },
            "dataSourceType" : "STATIC"
          }
        }`) // FormElementPreviewRequest | Body is the request payload to create a form definition dynamic schema (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomFormsAPI.ShowPreviewDataSource(context.Background(), formDefinitionID).Execute()
          //resp, r, err := apiClient.Beta.CustomFormsAPI.ShowPreviewDataSource(context.Background(), formDefinitionID).Limit(limit).Filters(filters).Query(query).FormElementPreviewRequest(formElementPreviewRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomFormsAPI.ShowPreviewDataSource``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ShowPreviewDataSource`: PreviewDataSourceResponse
          fmt.Fprintf(os.Stdout, "Response from `CustomFormsAPI.ShowPreviewDataSource`: %v\n", resp)
        }
- path: /custom-password-instructions
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-password-instructions#create-custom-password-instructions
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           custompasswordinstruction := []byte(`{
          "pageContent" : "Please enter a new password. Your password must be at least 8 characters long and contain at least one number and one letter.",
          "pageId" : "change-password:enter-password",
          "locale" : "en"
        }`) // CustomPasswordInstruction | 

          
          var customPasswordInstruction beta.CustomPasswordInstruction
          if err := json.Unmarshal(custompasswordinstruction, &customPasswordInstruction); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomPasswordInstructionsAPI.CreateCustomPasswordInstructions(context.Background()).CustomPasswordInstruction(customPasswordInstruction).Execute()
          //resp, r, err := apiClient.Beta.CustomPasswordInstructionsAPI.CreateCustomPasswordInstructions(context.Background()).CustomPasswordInstruction(customPasswordInstruction).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomPasswordInstructionsAPI.CreateCustomPasswordInstructions``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateCustomPasswordInstructions`: CustomPasswordInstruction
          fmt.Fprintf(os.Stdout, "Response from `CustomPasswordInstructionsAPI.CreateCustomPasswordInstructions`: %v\n", resp)
        }
- path: /custom-password-instructions/{pageId}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-password-instructions#delete-custom-password-instructions
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          pageId := `mfa:select` // string | The page ID of custom password instructions to delete. # string | The page ID of custom password instructions to delete.
          locale := `locale_example` // string | The locale for the custom instructions, a BCP47 language tag. The default value is \\\"default\\\". (optional) # string | The locale for the custom instructions, a BCP47 language tag. The default value is \\\"default\\\". (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.CustomPasswordInstructionsAPI.DeleteCustomPasswordInstructions(context.Background(), pageId).Execute()
          //r, err := apiClient.Beta.CustomPasswordInstructionsAPI.DeleteCustomPasswordInstructions(context.Background(), pageId).Locale(locale).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomPasswordInstructionsAPI.DeleteCustomPasswordInstructions``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /custom-password-instructions/{pageId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/custom-password-instructions#get-custom-password-instructions
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          pageId := `mfa:select` // string | The page ID of custom password instructions to query. # string | The page ID of custom password instructions to query.
          locale := `locale_example` // string | The locale for the custom instructions, a BCP47 language tag. The default value is \\\"default\\\". (optional) # string | The locale for the custom instructions, a BCP47 language tag. The default value is \\\"default\\\". (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.CustomPasswordInstructionsAPI.GetCustomPasswordInstructions(context.Background(), pageId).Execute()
          //resp, r, err := apiClient.Beta.CustomPasswordInstructionsAPI.GetCustomPasswordInstructions(context.Background(), pageId).Locale(locale).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `CustomPasswordInstructionsAPI.GetCustomPasswordInstructions``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetCustomPasswordInstructions`: CustomPasswordInstruction
          fmt.Fprintf(os.Stdout, "Response from `CustomPasswordInstructionsAPI.GetCustomPasswordInstructions`: %v\n", resp)
        }
- path: /entitlements/{id}/access-model-metadata/{attributeKey}/values/{attributeValue}
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/entitlements#create-access-model-metadata-for-entitlement
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808c74ff913f0175097daa9d59cd` // string | The entitlement id. # string | The entitlement id.
          attributeKey := `iscPrivacy` // string | Technical name of the Attribute. # string | Technical name of the Attribute.
          attributeValue := `public` // string | Technical name of the Attribute Value. # string | Technical name of the Attribute Value.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.EntitlementsAPI.CreateAccessModelMetadataForEntitlement(context.Background(), id, attributeKey, attributeValue).Execute()
          //resp, r, err := apiClient.Beta.EntitlementsAPI.CreateAccessModelMetadataForEntitlement(context.Background(), id, attributeKey, attributeValue).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `EntitlementsAPI.CreateAccessModelMetadataForEntitlement``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateAccessModelMetadataForEntitlement`: Entitlement
          fmt.Fprintf(os.Stdout, "Response from `EntitlementsAPI.CreateAccessModelMetadataForEntitlement`: %v\n", resp)
        }
- path: /entitlements/{id}/access-model-metadata/{attributeKey}/values/{attributeValue}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/entitlements#delete-access-model-metadata-from-entitlement
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808c74ff913f0175097daa9d59cd` // string | The entitlement id. # string | The entitlement id.
          attributeKey := `iscPrivacy` // string | Technical name of the Attribute. # string | Technical name of the Attribute.
          attributeValue := `public` // string | Technical name of the Attribute Value. # string | Technical name of the Attribute Value.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.EntitlementsAPI.DeleteAccessModelMetadataFromEntitlement(context.Background(), id, attributeKey, attributeValue).Execute()
          //r, err := apiClient.Beta.EntitlementsAPI.DeleteAccessModelMetadataFromEntitlement(context.Background(), id, attributeKey, attributeValue).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `EntitlementsAPI.DeleteAccessModelMetadataFromEntitlement``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /entitlements/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/entitlements#get-entitlement
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808874ff91550175097daaec161c` // string | The entitlement ID # string | The entitlement ID

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.EntitlementsAPI.GetEntitlement(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.EntitlementsAPI.GetEntitlement(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `EntitlementsAPI.GetEntitlement``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetEntitlement`: Entitlement
          fmt.Fprintf(os.Stdout, "Response from `EntitlementsAPI.GetEntitlement`: %v\n", resp)
        }
- path: /entitlements/{id}/entitlement-request-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/entitlements#get-entitlement-request-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808874ff91550175097daaec161c` // string | Entitlement Id # string | Entitlement Id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.EntitlementsAPI.GetEntitlementRequestConfig(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.EntitlementsAPI.GetEntitlementRequestConfig(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `EntitlementsAPI.GetEntitlementRequestConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetEntitlementRequestConfig`: EntitlementRequestConfig
          fmt.Fprintf(os.Stdout, "Response from `EntitlementsAPI.GetEntitlementRequestConfig`: %v\n", resp)
        }
- path: /entitlements/aggregate/sources/{id}
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/entitlements#import-entitlements-by-source
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | Source Id # string | Source Id
          csvFile := BINARY_DATA_HERE // *os.File | The CSV file containing the source entitlements to aggregate. (optional) # *os.File | The CSV file containing the source entitlements to aggregate. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.EntitlementsAPI.ImportEntitlementsBySource(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.EntitlementsAPI.ImportEntitlementsBySource(context.Background(), id).CsvFile(csvFile).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `EntitlementsAPI.ImportEntitlementsBySource``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ImportEntitlementsBySource`: LoadEntitlementTask
          fmt.Fprintf(os.Stdout, "Response from `EntitlementsAPI.ImportEntitlementsBySource`: %v\n", resp)
        }
- path: /entitlements/{id}/children
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/entitlements#list-entitlement-children
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808874ff91550175097daaec161c` // string | Entitlement Id # string | Entitlement Id
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, type, attribute, value, source.id** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, type, attribute, value, source.id** (optional)
          filters := `attribute eq "memberOf"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw*  **type**: *eq, in*  **attribute**: *eq, in*  **value**: *eq, in, sw*  **source.id**: *eq, in*  **requestable**: *eq*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw*  **type**: *eq, in*  **attribute**: *eq, in*  **value**: *eq, in, sw*  **source.id**: *eq, in*  **requestable**: *eq*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.EntitlementsAPI.ListEntitlementChildren(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.EntitlementsAPI.ListEntitlementChildren(context.Background(), id).Limit(limit).Offset(offset).Count(count).Sorters(sorters).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `EntitlementsAPI.ListEntitlementChildren``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListEntitlementChildren`: []Entitlement
          fmt.Fprintf(os.Stdout, "Response from `EntitlementsAPI.ListEntitlementChildren`: %v\n", resp)
        }
- path: /entitlements/{id}/parents
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/entitlements#list-entitlement-parents
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808c74ff913f0175097daa9d59cd` // string | Entitlement Id # string | Entitlement Id
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, type, attribute, value, source.id** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, type, attribute, value, source.id** (optional)
          filters := `attribute eq "memberOf"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw*  **type**: *eq, in*  **attribute**: *eq, in*  **value**: *eq, in, sw*  **source.id**: *eq, in*  **requestable**: *eq*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw*  **type**: *eq, in*  **attribute**: *eq, in*  **value**: *eq, in, sw*  **source.id**: *eq, in*  **requestable**: *eq*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.EntitlementsAPI.ListEntitlementParents(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.EntitlementsAPI.ListEntitlementParents(context.Background(), id).Limit(limit).Offset(offset).Count(count).Sorters(sorters).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `EntitlementsAPI.ListEntitlementParents``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListEntitlementParents`: []Entitlement
          fmt.Fprintf(os.Stdout, "Response from `EntitlementsAPI.ListEntitlementParents`: %v\n", resp)
        }
- path: /entitlements
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/entitlements#list-entitlements
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          accountId := `ef38f94347e94562b5bb8424a56397d8` // string | The account ID. If specified, returns only entitlements associated with the given Account. Cannot be specified with the **filters**, **segmented-for-identity**, **for-segment-ids**, or **include-unsegmented** param(s). This parameter is deprecated. Please use [Account Entitlements API](https://developer.sailpoint.com/apis/beta/#operation/getAccountEntitlements) to get account entitlements. (optional) # string | The account ID. If specified, returns only entitlements associated with the given Account. Cannot be specified with the **filters**, **segmented-for-identity**, **for-segment-ids**, or **include-unsegmented** param(s). This parameter is deprecated. Please use [Account Entitlements API](https://developer.sailpoint.com/apis/beta/#operation/getAccountEntitlements) to get account entitlements. (optional)
          segmentedForIdentity := `e554098913544630b5985e9042f5e44b` // string | If present and not empty, additionally filters Entitlements to those which are assigned to the Segment(s) which are visible to the Identity with the specified ID.  Cannot be specified with the **account-id** or **for-segment-ids** param(s). It is also illegal to specify a value that refers to a different user's Identity. (optional) # string | If present and not empty, additionally filters Entitlements to those which are assigned to the Segment(s) which are visible to the Identity with the specified ID.  Cannot be specified with the **account-id** or **for-segment-ids** param(s). It is also illegal to specify a value that refers to a different user's Identity. (optional)
          forSegmentIds := `041727d4-7d95-4779-b891-93cf41e98249,a378c9fa-bae5-494c-804e-a1e30f69f649` // string | If present and not empty, additionally filters Access Profiles to those which are assigned to the Segment(s) with the specified IDs. Cannot be specified with the **account-id** or **segmented-for-identity** param(s). (optional) # string | If present and not empty, additionally filters Access Profiles to those which are assigned to the Segment(s) with the specified IDs. Cannot be specified with the **account-id** or **segmented-for-identity** param(s). (optional)
          includeUnsegmented := true // bool | Whether or not the response list should contain unsegmented Entitlements. If **for-segment-ids** and **segmented-for-identity** are both absent or empty, specifying **include-unsegmented=false** results in an error. (optional) (default to true) # bool | Whether or not the response list should contain unsegmented Entitlements. If **for-segment-ids** and **segmented-for-identity** are both absent or empty, specifying **include-unsegmented=false** results in an error. (optional) (default to true)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, type, attribute, value, source.id, requestable** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, type, attribute, value, source.id, requestable** (optional)
          filters := `attribute eq "memberOf"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw*  **type**: *eq, in*  **attribute**: *eq, in*  **value**: *eq, in, sw*  **source.id**: *eq, in*  **requestable**: *eq*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw*  **type**: *eq, in*  **attribute**: *eq, in*  **value**: *eq, in, sw*  **source.id**: *eq, in*  **requestable**: *eq*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.EntitlementsAPI.ListEntitlements(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.EntitlementsAPI.ListEntitlements(context.Background()).AccountId(accountId).SegmentedForIdentity(segmentedForIdentity).ForSegmentIds(forSegmentIds).IncludeUnsegmented(includeUnsegmented).Offset(offset).Limit(limit).Count(count).Sorters(sorters).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `EntitlementsAPI.ListEntitlements``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListEntitlements`: []Entitlement
          fmt.Fprintf(os.Stdout, "Response from `EntitlementsAPI.ListEntitlements`: %v\n", resp)
        }
- path: /entitlements/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/entitlements#patch-entitlement
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121e121518` // string | ID of the entitlement to patch # string | ID of the entitlement to patch
          jsonpatchoperation := []byte(`[{op=replace, path=/requestable, value=true}, {op=replace, path=/privileged, value=true}]`) // []JsonPatchOperation |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.EntitlementsAPI.PatchEntitlement(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.EntitlementsAPI.PatchEntitlement(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `EntitlementsAPI.PatchEntitlement``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchEntitlement`: Entitlement
          fmt.Fprintf(os.Stdout, "Response from `EntitlementsAPI.PatchEntitlement`: %v\n", resp)
        }
- path: /entitlements/{id}/entitlement-request-config
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/entitlements#put-entitlement-request-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121e121518` // string | Entitlement ID # string | Entitlement ID
           entitlementrequestconfig := []byte(`{
          "accessRequestConfig" : {
            "denialCommentRequired" : false,
            "approvalSchemes" : [ {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            } ],
            "reauthorizationRequired" : false,
            "requestCommentRequired" : true
          },
          "revocationRequestConfig" : {
            "approvalSchemes" : [ {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            } ]
          }
        }`) // EntitlementRequestConfig | 

          
          var entitlementRequestConfig beta.EntitlementRequestConfig
          if err := json.Unmarshal(entitlementrequestconfig, &entitlementRequestConfig); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.EntitlementsAPI.PutEntitlementRequestConfig(context.Background(), id).EntitlementRequestConfig(entitlementRequestConfig).Execute()
          //resp, r, err := apiClient.Beta.EntitlementsAPI.PutEntitlementRequestConfig(context.Background(), id).EntitlementRequestConfig(entitlementRequestConfig).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `EntitlementsAPI.PutEntitlementRequestConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutEntitlementRequestConfig`: EntitlementRequestConfig
          fmt.Fprintf(os.Stdout, "Response from `EntitlementsAPI.PutEntitlementRequestConfig`: %v\n", resp)
        }
- path: /entitlements/reset/sources/{sourceId}
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/entitlements#reset-source-entitlements
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c91808a7813090a017814121919ecca` // string | ID of source for the entitlement reset # string | ID of source for the entitlement reset

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.EntitlementsAPI.ResetSourceEntitlements(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.EntitlementsAPI.ResetSourceEntitlements(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `EntitlementsAPI.ResetSourceEntitlements``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ResetSourceEntitlements`: EntitlementSourceResetBaseReferenceDto
          fmt.Fprintf(os.Stdout, "Response from `EntitlementsAPI.ResetSourceEntitlements`: %v\n", resp)
        }
- path: /entitlements/bulk-update
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/entitlements#update-entitlements-in-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           entitlementbulkupdaterequest := []byte(`{
          "entitlementIds" : [ "2c91808a7624751a01762f19d665220d", "2c91808a7624751a01762f19d67c220e", "2c91808a7624751a01762f19d692220f" ],
          "jsonPatch" : [ {
            "op" : "replace",
            "path" : "/privileged",
            "value" : false
          }, {
            "op" : "replace",
            "path" : "/requestable",
            "value" : false
          } ]
        }`) // EntitlementBulkUpdateRequest | 

          
          var entitlementBulkUpdateRequest beta.EntitlementBulkUpdateRequest
          if err := json.Unmarshal(entitlementbulkupdaterequest, &entitlementBulkUpdateRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.EntitlementsAPI.UpdateEntitlementsInBulk(context.Background()).EntitlementBulkUpdateRequest(entitlementBulkUpdateRequest).Execute()
          //r, err := apiClient.Beta.EntitlementsAPI.UpdateEntitlementsInBulk(context.Background()).EntitlementBulkUpdateRequest(entitlementBulkUpdateRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `EntitlementsAPI.UpdateEntitlementsInBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /workgroups
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/governance-groups#create-workgroup
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           workgroupdto := []byte(`{
          "owner" : {
            "emailAddress" : "support@sailpoint.com",
            "displayName" : "Support",
            "name" : "Support",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          },
          "connectionCount" : 1641498673000,
          "created" : "2022-01-06T19:51:13Z",
          "memberCount" : 1641498673000,
          "name" : "DB Access Governance Group",
          "description" : "Description of the Governance Group",
          "modified" : "2022-01-06T19:51:13Z",
          "id" : "2c91808568c529c60168cca6f90c1313"
        }`) // WorkgroupDto | 

          
          var workgroupDto beta.WorkgroupDto
          if err := json.Unmarshal(workgroupdto, &workgroupDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.GovernanceGroupsAPI.CreateWorkgroup(context.Background()).WorkgroupDto(workgroupDto).Execute()
          //resp, r, err := apiClient.Beta.GovernanceGroupsAPI.CreateWorkgroup(context.Background()).WorkgroupDto(workgroupDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `GovernanceGroupsAPI.CreateWorkgroup``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateWorkgroup`: WorkgroupDto
          fmt.Fprintf(os.Stdout, "Response from `GovernanceGroupsAPI.CreateWorkgroup`: %v\n", resp)
        }
- path: /workgroups/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/governance-groups#delete-workgroup
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180837ca6693d017ca8d097500149` // string | ID of the Governance Group # string | ID of the Governance Group

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.GovernanceGroupsAPI.DeleteWorkgroup(context.Background(), id).Execute()
          //r, err := apiClient.Beta.GovernanceGroupsAPI.DeleteWorkgroup(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `GovernanceGroupsAPI.DeleteWorkgroup``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /workgroups/{workgroupId}/members/bulk-delete
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/governance-groups#delete-workgroup-members
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          workgroupId := `2c91808a7813090a017814121919ecca` // string | ID of the Governance Group. # string | ID of the Governance Group.
          bulkworkgroupmembersrequestinner := []byte(``) // []BulkWorkgroupMembersRequestInner | List of identities to be removed from  a Governance Group members list.

          
          var bulkWorkgroupMembersRequestInner []beta.BulkWorkgroupMembersRequestInner
          if err := json.Unmarshal(bulkworkgroupmembersrequestinner, &bulkWorkgroupMembersRequestInner); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.GovernanceGroupsAPI.DeleteWorkgroupMembers(context.Background(), workgroupId).BulkWorkgroupMembersRequestInner(bulkWorkgroupMembersRequestInner).Execute()
          //resp, r, err := apiClient.Beta.GovernanceGroupsAPI.DeleteWorkgroupMembers(context.Background(), workgroupId).BulkWorkgroupMembersRequestInner(bulkWorkgroupMembersRequestInner).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `GovernanceGroupsAPI.DeleteWorkgroupMembers``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteWorkgroupMembers`: []WorkgroupMemberDeleteItem
          fmt.Fprintf(os.Stdout, "Response from `GovernanceGroupsAPI.DeleteWorkgroupMembers`: %v\n", resp)
        }
- path: /workgroups/bulk-delete
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/governance-groups#delete-workgroups-in-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           workgroupbulkdeleterequest := []byte(`{
          "ids" : [ "567a697e-885b-495a-afc5-d55e1c23a302", "c7b0f7b2-1e78-4063-b294-a555333dacd2" ]
        }`) // WorkgroupBulkDeleteRequest | 

          
          var workgroupBulkDeleteRequest beta.WorkgroupBulkDeleteRequest
          if err := json.Unmarshal(workgroupbulkdeleterequest, &workgroupBulkDeleteRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.GovernanceGroupsAPI.DeleteWorkgroupsInBulk(context.Background()).WorkgroupBulkDeleteRequest(workgroupBulkDeleteRequest).Execute()
          //resp, r, err := apiClient.Beta.GovernanceGroupsAPI.DeleteWorkgroupsInBulk(context.Background()).WorkgroupBulkDeleteRequest(workgroupBulkDeleteRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `GovernanceGroupsAPI.DeleteWorkgroupsInBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteWorkgroupsInBulk`: []WorkgroupDeleteItem
          fmt.Fprintf(os.Stdout, "Response from `GovernanceGroupsAPI.DeleteWorkgroupsInBulk`: %v\n", resp)
        }
- path: /workgroups/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/governance-groups#get-workgroup
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180837ca6693d017ca8d097500149` // string | ID of the Governance Group # string | ID of the Governance Group

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.GovernanceGroupsAPI.GetWorkgroup(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.GovernanceGroupsAPI.GetWorkgroup(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `GovernanceGroupsAPI.GetWorkgroup``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetWorkgroup`: WorkgroupDto
          fmt.Fprintf(os.Stdout, "Response from `GovernanceGroupsAPI.GetWorkgroup`: %v\n", resp)
        }
- path: /workgroups/{workgroupId}/connections
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/governance-groups#list-connections
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          workgroupId := `2c91808a7813090a017814121919ecca` // string | ID of the Governance Group. # string | ID of the Governance Group.
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 50 // int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50) # int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.GovernanceGroupsAPI.ListConnections(context.Background(), workgroupId).Execute()
          //resp, r, err := apiClient.Beta.GovernanceGroupsAPI.ListConnections(context.Background(), workgroupId).Offset(offset).Limit(limit).Count(count).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `GovernanceGroupsAPI.ListConnections``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListConnections`: []WorkgroupConnectionDto
          fmt.Fprintf(os.Stdout, "Response from `GovernanceGroupsAPI.ListConnections`: %v\n", resp)
        }
- path: /workgroups/{workgroupId}/members
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/governance-groups#list-workgroup-members
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          workgroupId := `2c91808a7813090a017814121919ecca` // string | ID of the Governance Group. # string | ID of the Governance Group.
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 50 // int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50) # int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.GovernanceGroupsAPI.ListWorkgroupMembers(context.Background(), workgroupId).Execute()
          //resp, r, err := apiClient.Beta.GovernanceGroupsAPI.ListWorkgroupMembers(context.Background(), workgroupId).Offset(offset).Limit(limit).Count(count).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `GovernanceGroupsAPI.ListWorkgroupMembers``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListWorkgroupMembers`: []ListWorkgroupMembers200ResponseInner
          fmt.Fprintf(os.Stdout, "Response from `GovernanceGroupsAPI.ListWorkgroupMembers`: %v\n", resp)
        }
- path: /workgroups
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/governance-groups#list-workgroups
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 50 // int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50) # int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `name sw "Test"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in, sw*  **name**: *eq, sw, in*  **memberships.identityId**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in, sw*  **name**: *eq, sw, in*  **memberships.identityId**: *eq, in* (optional)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified, id, description** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified, id, description** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.GovernanceGroupsAPI.ListWorkgroups(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.GovernanceGroupsAPI.ListWorkgroups(context.Background()).Offset(offset).Limit(limit).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `GovernanceGroupsAPI.ListWorkgroups``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListWorkgroups`: []WorkgroupDto
          fmt.Fprintf(os.Stdout, "Response from `GovernanceGroupsAPI.ListWorkgroups`: %v\n", resp)
        }
- path: /workgroups/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/governance-groups#patch-workgroup
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180837ca6693d017ca8d097500149` // string | ID of the Governance Group # string | ID of the Governance Group
          jsonpatchoperation := []byte(`[{op=replace, path=/description, value=Governance Group new description.}]`) // []JsonPatchOperation |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.GovernanceGroupsAPI.PatchWorkgroup(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.GovernanceGroupsAPI.PatchWorkgroup(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `GovernanceGroupsAPI.PatchWorkgroup``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchWorkgroup`: WorkgroupDto
          fmt.Fprintf(os.Stdout, "Response from `GovernanceGroupsAPI.PatchWorkgroup`: %v\n", resp)
        }
- path: /workgroups/{workgroupId}/members/bulk-add
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/governance-groups#update-workgroup-members
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          workgroupId := `2c91808a7813090a017814121919ecca` // string | ID of the Governance Group. # string | ID of the Governance Group.
          bulkworkgroupmembersrequestinner := []byte(``) // []BulkWorkgroupMembersRequestInner | List of identities to be added to a Governance Group members list.

          
          var bulkWorkgroupMembersRequestInner []beta.BulkWorkgroupMembersRequestInner
          if err := json.Unmarshal(bulkworkgroupmembersrequestinner, &bulkWorkgroupMembersRequestInner); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.GovernanceGroupsAPI.UpdateWorkgroupMembers(context.Background(), workgroupId).BulkWorkgroupMembersRequestInner(bulkWorkgroupMembersRequestInner).Execute()
          //resp, r, err := apiClient.Beta.GovernanceGroupsAPI.UpdateWorkgroupMembers(context.Background(), workgroupId).BulkWorkgroupMembersRequestInner(bulkWorkgroupMembersRequestInner).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `GovernanceGroupsAPI.UpdateWorkgroupMembers``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateWorkgroupMembers`: []WorkgroupMemberAddItem
          fmt.Fprintf(os.Stdout, "Response from `GovernanceGroupsAPI.UpdateWorkgroupMembers`: %v\n", resp)
        }
- path: /ai-access-request-recommendations/ignored-items
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-access-request-recommendations#add-access-request-recommendations-ignored-item
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           accessrequestrecommendationactionitemdto := []byte(`{
          "access" : {
            "id" : "2c9180835d2e5168015d32f890ca1581",
            "type" : "ACCESS_PROFILE"
          },
          "identityId" : "2c91808570313110017040b06f344ec9"
        }`) // AccessRequestRecommendationActionItemDto | The recommended access item to ignore for an identity.

          
          var accessRequestRecommendationActionItemDto beta.AccessRequestRecommendationActionItemDto
          if err := json.Unmarshal(accessrequestrecommendationactionitemdto, &accessRequestRecommendationActionItemDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsIgnoredItem(context.Background()).AccessRequestRecommendationActionItemDto(accessRequestRecommendationActionItemDto).Execute()
          //resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsIgnoredItem(context.Background()).AccessRequestRecommendationActionItemDto(accessRequestRecommendationActionItemDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsIgnoredItem``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `AddAccessRequestRecommendationsIgnoredItem`: AccessRequestRecommendationActionItemResponseDto
          fmt.Fprintf(os.Stdout, "Response from `IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsIgnoredItem`: %v\n", resp)
        }
- path: /ai-access-request-recommendations/requested-items
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-access-request-recommendations#add-access-request-recommendations-requested-item
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           accessrequestrecommendationactionitemdto := []byte(`{
          "access" : {
            "id" : "2c9180835d2e5168015d32f890ca1581",
            "type" : "ACCESS_PROFILE"
          },
          "identityId" : "2c91808570313110017040b06f344ec9"
        }`) // AccessRequestRecommendationActionItemDto | The recommended access item that was requested for an identity.

          
          var accessRequestRecommendationActionItemDto beta.AccessRequestRecommendationActionItemDto
          if err := json.Unmarshal(accessrequestrecommendationactionitemdto, &accessRequestRecommendationActionItemDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsRequestedItem(context.Background()).AccessRequestRecommendationActionItemDto(accessRequestRecommendationActionItemDto).Execute()
          //resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsRequestedItem(context.Background()).AccessRequestRecommendationActionItemDto(accessRequestRecommendationActionItemDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsRequestedItem``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `AddAccessRequestRecommendationsRequestedItem`: AccessRequestRecommendationActionItemResponseDto
          fmt.Fprintf(os.Stdout, "Response from `IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsRequestedItem`: %v\n", resp)
        }
- path: /ai-access-request-recommendations/viewed-items
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-access-request-recommendations#add-access-request-recommendations-viewed-item
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           accessrequestrecommendationactionitemdto := []byte(`{
          "access" : {
            "id" : "2c9180835d2e5168015d32f890ca1581",
            "type" : "ACCESS_PROFILE"
          },
          "identityId" : "2c91808570313110017040b06f344ec9"
        }`) // AccessRequestRecommendationActionItemDto | The recommended access that was viewed for an identity.

          
          var accessRequestRecommendationActionItemDto beta.AccessRequestRecommendationActionItemDto
          if err := json.Unmarshal(accessrequestrecommendationactionitemdto, &accessRequestRecommendationActionItemDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsViewedItem(context.Background()).AccessRequestRecommendationActionItemDto(accessRequestRecommendationActionItemDto).Execute()
          //resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsViewedItem(context.Background()).AccessRequestRecommendationActionItemDto(accessRequestRecommendationActionItemDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsViewedItem``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `AddAccessRequestRecommendationsViewedItem`: AccessRequestRecommendationActionItemResponseDto
          fmt.Fprintf(os.Stdout, "Response from `IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsViewedItem`: %v\n", resp)
        }
- path: /ai-access-request-recommendations/viewed-items/bulk-create
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-access-request-recommendations#add-access-request-recommendations-viewed-items
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          accessrequestrecommendationactionitemdto := []byte(``) // []AccessRequestRecommendationActionItemDto | The recommended access items that were viewed for an identity.

          
          var accessRequestRecommendationActionItemDto []beta.AccessRequestRecommendationActionItemDto
          if err := json.Unmarshal(accessrequestrecommendationactionitemdto, &accessRequestRecommendationActionItemDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsViewedItems(context.Background()).AccessRequestRecommendationActionItemDto(accessRequestRecommendationActionItemDto).Execute()
          //resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsViewedItems(context.Background()).AccessRequestRecommendationActionItemDto(accessRequestRecommendationActionItemDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsViewedItems``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `AddAccessRequestRecommendationsViewedItems`: []AccessRequestRecommendationActionItemResponseDto
          fmt.Fprintf(os.Stdout, "Response from `IAIAccessRequestRecommendationsAPI.AddAccessRequestRecommendationsViewedItems`: %v\n", resp)
        }
- path: /ai-access-request-recommendations
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-access-request-recommendations#get-access-request-recommendations
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityId := `2c91808570313110017040b06f344ec9` // string | Get access request recommendations for an identityId. *me* indicates the current user. (optional) (default to "me") # string | Get access request recommendations for an identityId. *me* indicates the current user. (optional) (default to "me")
          limit := 15 // int32 | Max number of results to return. (optional) (default to 15) # int32 | Max number of results to return. (optional) (default to 15)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          includeTranslationMessages := false // bool | If *true* it will populate a list of translation messages in the response. (optional) (default to false) # bool | If *true* it will populate a list of translation messages in the response. (optional) (default to false)
          filters := `access.name co "admin"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **access.name**: *co*  **access.type**: *eq, in*  **access.description**: *co, eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **access.name**: *co*  **access.type**: *eq, in*  **access.description**: *co, eq, in* (optional)
          sorters := `access.name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.name, access.type**  By default the recommendations are sorted by highest confidence first. (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.name, access.type**  By default the recommendations are sorted by highest confidence first. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendations(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendations(context.Background()).IdentityId(identityId).Limit(limit).Offset(offset).Count(count).IncludeTranslationMessages(includeTranslationMessages).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendations``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccessRequestRecommendations`: []AccessRequestRecommendationItemDetail
          fmt.Fprintf(os.Stdout, "Response from `IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendations`: %v\n", resp)
        }
- path: /ai-access-request-recommendations/ignored-items
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-access-request-recommendations#get-access-request-recommendations-ignored-items
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `identityId eq "2c9180846b0a0583016b299f210c1314"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **access.id**: *eq, in*  **access.type**: *eq, in*  **identityId**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **access.id**: *eq, in*  **access.type**: *eq, in*  **identityId**: *eq, in* (optional)
          sorters := `access.id` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.id, access.type, identityId, timestamp** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.id, access.type, identityId, timestamp** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendationsIgnoredItems(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendationsIgnoredItems(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendationsIgnoredItems``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccessRequestRecommendationsIgnoredItems`: []AccessRequestRecommendationActionItemResponseDto
          fmt.Fprintf(os.Stdout, "Response from `IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendationsIgnoredItems`: %v\n", resp)
        }
- path: /ai-access-request-recommendations/requested-items
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-access-request-recommendations#get-access-request-recommendations-requested-items
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `access.id eq "2c9180846b0a0583016b299f210c1314"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **access.id**: *eq, in*  **access.type**: *eq, in*  **identityId**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **access.id**: *eq, in*  **access.type**: *eq, in*  **identityId**: *eq, in* (optional)
          sorters := `access.id` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.id, access.type, identityId, timestamp** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.id, access.type, identityId, timestamp** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendationsRequestedItems(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendationsRequestedItems(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendationsRequestedItems``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccessRequestRecommendationsRequestedItems`: []AccessRequestRecommendationActionItemResponseDto
          fmt.Fprintf(os.Stdout, "Response from `IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendationsRequestedItems`: %v\n", resp)
        }
- path: /ai-access-request-recommendations/viewed-items
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-access-request-recommendations#get-access-request-recommendations-viewed-items
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `access.id eq "2c9180846b0a0583016b299f210c1314"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **access.id**: *eq, in*  **access.type**: *eq, in*  **identityId**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **access.id**: *eq, in*  **access.type**: *eq, in*  **identityId**: *eq, in* (optional)
          sorters := `access.id` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.id, access.type, identityId, timestamp** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.id, access.type, identityId, timestamp** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendationsViewedItems(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendationsViewedItems(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendationsViewedItems``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAccessRequestRecommendationsViewedItems`: []AccessRequestRecommendationActionItemResponseDto
          fmt.Fprintf(os.Stdout, "Response from `IAIAccessRequestRecommendationsAPI.GetAccessRequestRecommendationsViewedItems`: %v\n", resp)
        }
- path: /common-access
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-common-access#create-common-access
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           commonaccessitemrequest := []byte(`{
          "access" : {
            "ownerName" : "ownerName",
            "name" : "name",
            "description" : "description",
            "id" : "id",
            "type" : "ACCESS_PROFILE",
            "ownerId" : "ownerId"
          },
          "status" : "CONFIRMED"
        }`) // CommonAccessItemRequest | 

          
          var commonAccessItemRequest beta.CommonAccessItemRequest
          if err := json.Unmarshal(commonaccessitemrequest, &commonAccessItemRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAICommonAccessAPI.CreateCommonAccess(context.Background()).CommonAccessItemRequest(commonAccessItemRequest).Execute()
          //resp, r, err := apiClient.Beta.IAICommonAccessAPI.CreateCommonAccess(context.Background()).CommonAccessItemRequest(commonAccessItemRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAICommonAccessAPI.CreateCommonAccess``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateCommonAccess`: CommonAccessItemResponse
          fmt.Fprintf(os.Stdout, "Response from `IAICommonAccessAPI.CreateCommonAccess`: %v\n", resp)
        }
- path: /common-access
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-common-access#get-common-access
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `access.type eq "ROLE"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **status**: *eq, sw*  **reviewedByUser** *eq*  **access.id**: *eq, sw*  **access.type**: *eq*  **access.name**: *sw, eq*  **access.description**: *sw, eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **status**: *eq, sw*  **reviewedByUser** *eq*  **access.id**: *eq, sw*  **access.type**: *eq*  **access.name**: *sw, eq*  **access.description**: *sw, eq* (optional)
          sorters := `access.name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.name, status**  By default the common access items are sorted by name, ascending. (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.name, status**  By default the common access items are sorted by name, ascending. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAICommonAccessAPI.GetCommonAccess(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IAICommonAccessAPI.GetCommonAccess(context.Background()).Offset(offset).Limit(limit).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAICommonAccessAPI.GetCommonAccess``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetCommonAccess`: []CommonAccessResponse
          fmt.Fprintf(os.Stdout, "Response from `IAICommonAccessAPI.GetCommonAccess`: %v\n", resp)
        }
- path: /common-access/update-status
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-common-access#update-common-access-status-in-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          commonaccessidstatus := []byte(``) // []CommonAccessIDStatus | Confirm or deny in bulk the common access ids that are (or aren't) common access

          
          var commonAccessIDStatus []beta.CommonAccessIDStatus
          if err := json.Unmarshal(commonaccessidstatus, &commonAccessIDStatus); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAICommonAccessAPI.UpdateCommonAccessStatusInBulk(context.Background()).CommonAccessIDStatus(commonAccessIDStatus).Execute()
          //resp, r, err := apiClient.Beta.IAICommonAccessAPI.UpdateCommonAccessStatusInBulk(context.Background()).CommonAccessIDStatus(commonAccessIDStatus).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAICommonAccessAPI.UpdateCommonAccessStatusInBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateCommonAccessStatusInBulk`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `IAICommonAccessAPI.UpdateCommonAccessStatusInBulk`: %v\n", resp)
        }
- path: /translation-catalogs/{catalog-id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-message-catalogs#get-message-catalogs
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          catalogId := `recommender` // string | The ID of the message catalog. # string | The ID of the message catalog.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIMessageCatalogsAPI.GetMessageCatalogs(context.Background(), catalogId).Execute()
          //resp, r, err := apiClient.Beta.IAIMessageCatalogsAPI.GetMessageCatalogs(context.Background(), catalogId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIMessageCatalogsAPI.GetMessageCatalogs``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetMessageCatalogs`: []MessageCatalogDto
          fmt.Fprintf(os.Stdout, "Response from `IAIMessageCatalogsAPI.GetMessageCatalogs`: %v\n", resp)
        }
- path: /outliers/export
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-outliers#export-outliers-zip
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          type_ := `LOW_SIMILARITY` // string | Type of the identity outliers snapshot to filter on (optional) # string | Type of the identity outliers snapshot to filter on (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIOutliersAPI.ExportOutliersZip(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IAIOutliersAPI.ExportOutliersZip(context.Background()).Type_(type_).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIOutliersAPI.ExportOutliersZip``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ExportOutliersZip`: *os.File
          fmt.Fprintf(os.Stdout, "Response from `IAIOutliersAPI.ExportOutliersZip`: %v\n", resp)
        }
- path: /outlier-summaries
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-outliers#get-identity-outlier-snapshots
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          type_ := `LOW_SIMILARITY` // string | Type of the identity outliers snapshot to filter on (optional) # string | Type of the identity outliers snapshot to filter on (optional)
          filters := `snapshotDate ge "2022-02-07T20:13:29.356648026Z"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **snapshotDate**: *ge, le* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **snapshotDate**: *ge, le* (optional)
          sorters := `snapshotDate` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **snapshotDate** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **snapshotDate** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIOutliersAPI.GetIdentityOutlierSnapshots(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IAIOutliersAPI.GetIdentityOutlierSnapshots(context.Background()).Limit(limit).Offset(offset).Type_(type_).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIOutliersAPI.GetIdentityOutlierSnapshots``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentityOutlierSnapshots`: []OutlierSummary
          fmt.Fprintf(os.Stdout, "Response from `IAIOutliersAPI.GetIdentityOutlierSnapshots`: %v\n", resp)
        }
- path: /outliers
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-outliers#get-identity-outliers
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          type_ := `LOW_SIMILARITY` // string | Type of the identity outliers snapshot to filter on (optional) # string | Type of the identity outliers snapshot to filter on (optional)
          filters := `attributes.displayName sw "John" and certStatus eq "false"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **attributes**: *eq, sw, co, in*  **firstDetectionDate**: *ge, le*  **certStatus**: *eq*  **ignored**: *eq*  **score**: *ge, le* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **attributes**: *eq, sw, co, in*  **firstDetectionDate**: *ge, le*  **certStatus**: *eq*  **ignored**: *eq*  **score**: *ge, le* (optional)
          sorters := `attributes.displayName,firstDetectionDate,-score` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **firstDetectionDate, attributes, score** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **firstDetectionDate, attributes, score** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIOutliersAPI.GetIdentityOutliers(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IAIOutliersAPI.GetIdentityOutliers(context.Background()).Limit(limit).Offset(offset).Count(count).Type_(type_).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIOutliersAPI.GetIdentityOutliers``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentityOutliers`: []Outlier
          fmt.Fprintf(os.Stdout, "Response from `IAIOutliersAPI.GetIdentityOutliers`: %v\n", resp)
        }
- path: /outlier-summaries/latest
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-outliers#get-latest-identity-outlier-snapshots
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          type_ := `LOW_SIMILARITY` // string | Type of the identity outliers snapshot to filter on (optional) # string | Type of the identity outliers snapshot to filter on (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIOutliersAPI.GetLatestIdentityOutlierSnapshots(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IAIOutliersAPI.GetLatestIdentityOutlierSnapshots(context.Background()).Type_(type_).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIOutliersAPI.GetLatestIdentityOutlierSnapshots``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetLatestIdentityOutlierSnapshots`: []LatestOutlierSummary
          fmt.Fprintf(os.Stdout, "Response from `IAIOutliersAPI.GetLatestIdentityOutlierSnapshots`: %v\n", resp)
        }
- path: /outlier-feature-summaries/{outlierFeatureId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-outliers#get-outlier-contributing-feature-summary
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          outlierFeatureId := `04654b66-7561-4090-94f9-abee0722a1af` // string | Contributing feature id # string | Contributing feature id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIOutliersAPI.GetOutlierContributingFeatureSummary(context.Background(), outlierFeatureId).Execute()
          //resp, r, err := apiClient.Beta.IAIOutliersAPI.GetOutlierContributingFeatureSummary(context.Background(), outlierFeatureId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIOutliersAPI.GetOutlierContributingFeatureSummary``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetOutlierContributingFeatureSummary`: OutlierFeatureSummary
          fmt.Fprintf(os.Stdout, "Response from `IAIOutliersAPI.GetOutlierContributingFeatureSummary`: %v\n", resp)
        }
- path: /outliers/{outlierId}/contributing-features
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-outliers#get-peer-group-outliers-contributing-features
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          outlierId := `2c918085842e69ae018432d22ccb212f` // string | The outlier id # string | The outlier id
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          includeTranslationMessages := `include-translation-messages=` // string | Whether or not to include translation messages object in returned response (optional) # string | Whether or not to include translation messages object in returned response (optional)
          sorters := `importance` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **importance** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **importance** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIOutliersAPI.GetPeerGroupOutliersContributingFeatures(context.Background(), outlierId).Execute()
          //resp, r, err := apiClient.Beta.IAIOutliersAPI.GetPeerGroupOutliersContributingFeatures(context.Background(), outlierId).Limit(limit).Offset(offset).Count(count).IncludeTranslationMessages(includeTranslationMessages).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIOutliersAPI.GetPeerGroupOutliersContributingFeatures``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPeerGroupOutliersContributingFeatures`: []OutlierContributingFeature
          fmt.Fprintf(os.Stdout, "Response from `IAIOutliersAPI.GetPeerGroupOutliersContributingFeatures`: %v\n", resp)
        }
- path: /outliers/ignore
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-outliers#ignore-identity-outliers
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          requestbody := []byte(``) // []string | 

          
          var requestBody []beta.RequestBody
          if err := json.Unmarshal(requestbody, &requestBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.IAIOutliersAPI.IgnoreIdentityOutliers(context.Background()).RequestBody(requestBody).Execute()
          //r, err := apiClient.Beta.IAIOutliersAPI.IgnoreIdentityOutliers(context.Background()).RequestBody(requestBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIOutliersAPI.IgnoreIdentityOutliers``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /outliers/{outlierId}/feature-details/{contributingFeatureName}/access-items
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-outliers#list-outliers-contributing-feature-access-items
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          outlierId := `2c918085842e69ae018432d22ccb212f` // string | The outlier id # string | The outlier id
          contributingFeatureName := `entitlement_count` // string | The name of contributing feature # string | The name of contributing feature
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          accessType := `ENTITLEMENT` // string | The type of access item for the identity outlier contributing feature. If not provided, it returns all. (optional) # string | The type of access item for the identity outlier contributing feature. If not provided, it returns all. (optional)
          sorters := `displayName` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **displayName** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **displayName** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIOutliersAPI.ListOutliersContributingFeatureAccessItems(context.Background(), outlierId, contributingFeatureName).Execute()
          //resp, r, err := apiClient.Beta.IAIOutliersAPI.ListOutliersContributingFeatureAccessItems(context.Background(), outlierId, contributingFeatureName).Limit(limit).Offset(offset).Count(count).AccessType(accessType).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIOutliersAPI.ListOutliersContributingFeatureAccessItems``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListOutliersContributingFeatureAccessItems`: []OutliersContributingFeatureAccessItems
          fmt.Fprintf(os.Stdout, "Response from `IAIOutliersAPI.ListOutliersContributingFeatureAccessItems`: %v\n", resp)
        }
- path: /outliers/unignore
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-outliers#un-ignore-identity-outliers
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          requestbody := []byte(``) // []string | 

          
          var requestBody []beta.RequestBody
          if err := json.Unmarshal(requestbody, &requestBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.IAIOutliersAPI.UnIgnoreIdentityOutliers(context.Background()).RequestBody(requestBody).Execute()
          //r, err := apiClient.Beta.IAIOutliersAPI.UnIgnoreIdentityOutliers(context.Background()).RequestBody(requestBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIOutliersAPI.UnIgnoreIdentityOutliers``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /peer-group-strategies/{strategy}/identity-outliers
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-peer-group-strategies#get-peer-group-outliers
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          strategy := `entitlement` // string | The strategy used to create peer groups. Currently, 'entitlement' is supported. # string | The strategy used to create peer groups. Currently, 'entitlement' is supported.
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIPeerGroupStrategiesAPI.GetPeerGroupOutliers(context.Background(), strategy).Execute()
          //resp, r, err := apiClient.Beta.IAIPeerGroupStrategiesAPI.GetPeerGroupOutliers(context.Background(), strategy).Limit(limit).Offset(offset).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIPeerGroupStrategiesAPI.GetPeerGroupOutliers``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPeerGroupOutliers`: []PeerGroupMember
          fmt.Fprintf(os.Stdout, "Response from `IAIPeerGroupStrategiesAPI.GetPeerGroupOutliers`: %v\n", resp)
        }
- path: /recommendations/request
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-recommendations#get-recommendations
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           recommendationrequestdto := []byte(`{
          "prescribeMode" : false,
          "excludeInterpretations" : false,
          "requests" : [ {
            "item" : {
              "id" : "2c938083633d259901633d2623ec0375",
              "type" : "ENTITLEMENT"
            },
            "identityId" : "2c938083633d259901633d25c68c00fa"
          }, {
            "item" : {
              "id" : "2c938083633d259901633d2623ec0375",
              "type" : "ENTITLEMENT"
            },
            "identityId" : "2c938083633d259901633d25c68c00fa"
          } ],
          "includeTranslationMessages" : false,
          "includeDebugInformation" : true
        }`) // RecommendationRequestDto | 

          
          var recommendationRequestDto beta.RecommendationRequestDto
          if err := json.Unmarshal(recommendationrequestdto, &recommendationRequestDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRecommendationsAPI.GetRecommendations(context.Background()).RecommendationRequestDto(recommendationRequestDto).Execute()
          //resp, r, err := apiClient.Beta.IAIRecommendationsAPI.GetRecommendations(context.Background()).RecommendationRequestDto(recommendationRequestDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRecommendationsAPI.GetRecommendations``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRecommendations`: RecommendationResponseDto
          fmt.Fprintf(os.Stdout, "Response from `IAIRecommendationsAPI.GetRecommendations`: %v\n", resp)
        }
- path: /recommendations/config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-recommendations#get-recommendations-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRecommendationsAPI.GetRecommendationsConfig(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IAIRecommendationsAPI.GetRecommendationsConfig(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRecommendationsAPI.GetRecommendationsConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRecommendationsConfig`: RecommendationConfigDto
          fmt.Fprintf(os.Stdout, "Response from `IAIRecommendationsAPI.GetRecommendationsConfig`: %v\n", resp)
        }
- path: /recommendations/config
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-recommendations#update-recommendations-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           recommendationconfigdto := []byte(`{
          "recommenderFeatures" : [ "jobTitle", "location", "peer_group", "department", "active" ],
          "peerGroupPercentageThreshold" : 0.5,
          "runAutoSelectOnce" : false,
          "onlyTuneThreshold" : false
        }`) // RecommendationConfigDto | 

          
          var recommendationConfigDto beta.RecommendationConfigDto
          if err := json.Unmarshal(recommendationconfigdto, &recommendationConfigDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRecommendationsAPI.UpdateRecommendationsConfig(context.Background()).RecommendationConfigDto(recommendationConfigDto).Execute()
          //resp, r, err := apiClient.Beta.IAIRecommendationsAPI.UpdateRecommendationsConfig(context.Background()).RecommendationConfigDto(recommendationConfigDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRecommendationsAPI.UpdateRecommendationsConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateRecommendationsConfig`: RecommendationConfigDto
          fmt.Fprintf(os.Stdout, "Response from `IAIRecommendationsAPI.UpdateRecommendationsConfig`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/provision
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#create-potential-role-provision-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | A potential role id in a role mining session # string | A potential role id in a role mining session
          minEntitlementPopularity := 56 // int32 | Minimum popularity required for an entitlement to be included in the provisioned role. (optional) (default to 0) # int32 | Minimum popularity required for an entitlement to be included in the provisioned role. (optional) (default to 0)
          includeCommonAccess := true // bool | Boolean determining whether common access entitlements will be included in the provisioned role. (optional) (default to true) # bool | Boolean determining whether common access entitlements will be included in the provisioned role. (optional) (default to true)
           roleminingpotentialroleprovisionrequest := []byte(`{
          "includeIdentities" : true,
          "roleName" : "Finance - Accounting",
          "ownerId" : "2b568c65bc3c4c57a43bd97e3a8e41",
          "roleDescription" : "General access for accounting department",
          "directlyAssignedEntitlements" : false
        }`) // RoleMiningPotentialRoleProvisionRequest | Required information to create a new role (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.CreatePotentialRoleProvisionRequest(context.Background(), sessionId, potentialRoleId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.CreatePotentialRoleProvisionRequest(context.Background(), sessionId, potentialRoleId).MinEntitlementPopularity(minEntitlementPopularity).IncludeCommonAccess(includeCommonAccess).RoleMiningPotentialRoleProvisionRequest(roleMiningPotentialRoleProvisionRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.CreatePotentialRoleProvisionRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreatePotentialRoleProvisionRequest`: RoleMiningPotentialRoleSummary
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.CreatePotentialRoleProvisionRequest`: %v\n", resp)
        }
- path: /role-mining-sessions
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#create-role-mining-sessions
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           roleminingsessiondto := []byte(`{
          "emailRecipientId" : "2c918090761a5aac0176215c46a62d58",
          "prescribedPruneThreshold" : 10,
          "pruneThreshold" : 50,
          "saved" : true,
          "potentialRolesReadyCount" : 0,
          "scope" : {
            "identityIds" : [ "2c918090761a5aac0176215c46a62d58", "2c918090761a5aac01722015c46a62d42" ],
            "attributeFilterCriteria" : {
              "displayName" : {
                "untranslated" : "Location: Miami"
              },
              "ariaLabel" : {
                "untranslated" : "Location: Miami"
              },
              "data" : {
                "displayName" : {
                  "translateKey" : "IDN.IDENTITY_ATTRIBUTES.LOCATION"
                },
                "name" : "location",
                "operator" : "EQUALS",
                "values" : [ "Miami" ]
              }
            },
            "criteria" : "source.name:DataScienceDataset"
          },
          "potentialRoleCount" : 0,
          "name" : "Saved RM Session - 07/10",
          "minNumIdentitiesInPotentialRole" : 20,
          "identityCount" : 0,
          "type" : "SPECIALIZED"
        }`) // RoleMiningSessionDto | Role mining session parameters

          
          var roleMiningSessionDto beta.RoleMiningSessionDto
          if err := json.Unmarshal(roleminingsessiondto, &roleMiningSessionDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.CreateRoleMiningSessions(context.Background()).RoleMiningSessionDto(roleMiningSessionDto).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.CreateRoleMiningSessions(context.Background()).RoleMiningSessionDto(roleMiningSessionDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.CreateRoleMiningSessions``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateRoleMiningSessions`: RoleMiningSessionResponse
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.CreateRoleMiningSessions`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async/{exportId}/download
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#download-role-mining-potential-role-zip
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `278359a6-04b7-4669-9468-924cf580964a` // string | A potential role id in a role mining session # string | A potential role id in a role mining session
          exportId := `4940ffd4-836f-48a3-b2b0-6d498c3fdf40` // string | The id of a previously run export job for this potential role # string | The id of a previously run export job for this potential role

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.DownloadRoleMiningPotentialRoleZip(context.Background(), sessionId, potentialRoleId, exportId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.DownloadRoleMiningPotentialRoleZip(context.Background(), sessionId, potentialRoleId, exportId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.DownloadRoleMiningPotentialRoleZip``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DownloadRoleMiningPotentialRoleZip`: *os.File
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.DownloadRoleMiningPotentialRoleZip`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#export-role-mining-potential-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | A potential role id in a role mining session # string | A potential role id in a role mining session

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.ExportRoleMiningPotentialRole(context.Background(), sessionId, potentialRoleId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.ExportRoleMiningPotentialRole(context.Background(), sessionId, potentialRoleId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.ExportRoleMiningPotentialRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ExportRoleMiningPotentialRole`: *os.File
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.ExportRoleMiningPotentialRole`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#export-role-mining-potential-role-async
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `278359a6-04b7-4669-9468-924cf580964a` // string | A potential role id in a role mining session # string | A potential role id in a role mining session
           roleminingpotentialroleexportrequest := []byte(`{
          "minEntitlementPopularity" : 0,
          "includeCommonAccess" : true
        }`) // RoleMiningPotentialRoleExportRequest |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.ExportRoleMiningPotentialRoleAsync(context.Background(), sessionId, potentialRoleId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.ExportRoleMiningPotentialRoleAsync(context.Background(), sessionId, potentialRoleId).RoleMiningPotentialRoleExportRequest(roleMiningPotentialRoleExportRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.ExportRoleMiningPotentialRoleAsync``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ExportRoleMiningPotentialRoleAsync`: RoleMiningPotentialRoleExportResponse
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.ExportRoleMiningPotentialRoleAsync`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async/{exportId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#export-role-mining-potential-role-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `278359a6-04b7-4669-9468-924cf580964a` // string | A potential role id in a role mining session # string | A potential role id in a role mining session
          exportId := `4940ffd4-836f-48a3-b2b0-6d498c3fdf40` // string | The id of a previously run export job for this potential role # string | The id of a previously run export job for this potential role

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.ExportRoleMiningPotentialRoleStatus(context.Background(), sessionId, potentialRoleId, exportId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.ExportRoleMiningPotentialRoleStatus(context.Background(), sessionId, potentialRoleId, exportId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.ExportRoleMiningPotentialRoleStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ExportRoleMiningPotentialRoleStatus`: RoleMiningPotentialRoleExportResponse
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.ExportRoleMiningPotentialRoleStatus`: %v\n", resp)
        }
- path: /role-mining-potential-roles
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-all-potential-role-summaries
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sorters := `createdDate` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **createdDate, identityCount, entitlementCount, freshness, quality** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **createdDate, identityCount, entitlementCount, freshness, quality** (optional)
          filters := `(createdByName co "int") and (createdById sw "2c9180907") and (type eq "COMMON") and ((name co "entt") or (saved eq true))` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **createdById**: *eq, sw, co*  **createdByName**: *eq, sw, co*  **description**: *sw, co*  **endDate**: *le, lt*  **freshness**: *eq, ge, gt, le, lt*  **name**: *eq, sw, co, ge, gt, le, lt*  **quality**: *eq, ge, gt, le, lt*  **startDate**: *ge, gt*  **saved**: *eq*  **type**: *eq, ge, gt, le, lt*  **scopingMethod**: *eq*  **sessionState**: *eq*  **identityAttribute**: *co* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **createdById**: *eq, sw, co*  **createdByName**: *eq, sw, co*  **description**: *sw, co*  **endDate**: *le, lt*  **freshness**: *eq, ge, gt, le, lt*  **name**: *eq, sw, co, ge, gt, le, lt*  **quality**: *eq, ge, gt, le, lt*  **startDate**: *ge, gt*  **saved**: *eq*  **type**: *eq, ge, gt, le, lt*  **scopingMethod**: *eq*  **sessionState**: *eq*  **identityAttribute**: *co* (optional)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetAllPotentialRoleSummaries(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetAllPotentialRoleSummaries(context.Background()).Sorters(sorters).Filters(filters).Offset(offset).Limit(limit).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetAllPotentialRoleSummaries``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAllPotentialRoleSummaries`: []RoleMiningPotentialRoleSummary
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetAllPotentialRoleSummaries`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/entitlement-popularity-distribution
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-entitlement-distribution-potential-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | A potential role id in a role mining session # string | A potential role id in a role mining session
          includeCommonAccess := true // bool | Boolean determining whether common access entitlements will be included or not (optional) # bool | Boolean determining whether common access entitlements will be included or not (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetEntitlementDistributionPotentialRole(context.Background(), sessionId, potentialRoleId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetEntitlementDistributionPotentialRole(context.Background(), sessionId, potentialRoleId).IncludeCommonAccess(includeCommonAccess).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetEntitlementDistributionPotentialRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetEntitlementDistributionPotentialRole`: map[string]int32
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetEntitlementDistributionPotentialRole`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/entitlement-popularities
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-entitlements-potential-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | A potential role id in a role mining session # string | A potential role id in a role mining session
          includeCommonAccess := true // bool | Boolean determining whether common access entitlements will be included or not (optional) (default to true) # bool | Boolean determining whether common access entitlements will be included or not (optional) (default to true)
          sorters := `popularity` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **popularity, entitlementName, applicationName**  The default sort is **popularity** in descending order.  (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **popularity, entitlementName, applicationName**  The default sort is **popularity** in descending order.  (optional)
          filters := `applicationName sw "AD"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **applicationName**: *sw*  **entitlementRef.name**: *sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **applicationName**: *sw*  **entitlementRef.name**: *sw* (optional)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetEntitlementsPotentialRole(context.Background(), sessionId, potentialRoleId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetEntitlementsPotentialRole(context.Background(), sessionId, potentialRoleId).IncludeCommonAccess(includeCommonAccess).Sorters(sorters).Filters(filters).Offset(offset).Limit(limit).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetEntitlementsPotentialRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetEntitlementsPotentialRole`: []RoleMiningEntitlement
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetEntitlementsPotentialRole`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/excluded-entitlements
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-excluded-entitlements-potential-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | A potential role id in a role mining session # string | A potential role id in a role mining session
          sorters := `populariity` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **popularity** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **popularity** (optional)
          filters := `applicationName sw "AD"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **applicationName**: *sw*  **entitlementRef.name**: *sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **applicationName**: *sw*  **entitlementRef.name**: *sw* (optional)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetExcludedEntitlementsPotentialRole(context.Background(), sessionId, potentialRoleId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetExcludedEntitlementsPotentialRole(context.Background(), sessionId, potentialRoleId).Sorters(sorters).Filters(filters).Offset(offset).Limit(limit).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetExcludedEntitlementsPotentialRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetExcludedEntitlementsPotentialRole`: []RoleMiningEntitlement
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetExcludedEntitlementsPotentialRole`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/identities
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-identities-potential-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | A potential role id in a role mining session # string | A potential role id in a role mining session
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional)
          filters := `filters_example` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw* (optional)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetIdentitiesPotentialRole(context.Background(), sessionId, potentialRoleId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetIdentitiesPotentialRole(context.Background(), sessionId, potentialRoleId).Sorters(sorters).Filters(filters).Offset(offset).Limit(limit).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetIdentitiesPotentialRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentitiesPotentialRole`: []RoleMiningIdentity
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetIdentitiesPotentialRole`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-potential-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | A potential role id in a role mining session # string | A potential role id in a role mining session

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetPotentialRole(context.Background(), sessionId, potentialRoleId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetPotentialRole(context.Background(), sessionId, potentialRoleId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetPotentialRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPotentialRole`: RoleMiningPotentialRole
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetPotentialRole`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}/applications
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-potential-role-applications
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `62f28d91-7d9f-4d17-be15-666d5b41d77f` // string | A potential role id in a role mining session # string | A potential role id in a role mining session
          filters := `applicationName sw "test"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **applicationName**: *sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **applicationName**: *sw* (optional)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetPotentialRoleApplications(context.Background(), sessionId, potentialRoleId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetPotentialRoleApplications(context.Background(), sessionId, potentialRoleId).Filters(filters).Offset(offset).Limit(limit).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetPotentialRoleApplications``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPotentialRoleApplications`: []RoleMiningPotentialRoleApplication
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetPotentialRoleApplications`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}/entitlements
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-potential-role-entitlements
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `62f28d91-7d9f-4d17-be15-666d5b41d77f` // string | A potential role id in a role mining session # string | A potential role id in a role mining session
          filters := `entitlementRef.name sw "test"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **entitlementRef.name**: *sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **entitlementRef.name**: *sw* (optional)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetPotentialRoleEntitlements(context.Background(), sessionId, potentialRoleId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetPotentialRoleEntitlements(context.Background(), sessionId, potentialRoleId).Filters(filters).Offset(offset).Limit(limit).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetPotentialRoleEntitlements``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPotentialRoleEntitlements`: []RoleMiningPotentialRoleEntitlements
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetPotentialRoleEntitlements`: %v\n", resp)
        }
- path: /role-mining-potential-roles/{potentialRoleId}/sources/{sourceId}/identityUsage
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-potential-role-source-identity-usage
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          potentialRoleId := `e0cc5d7d-bf7f-4f81-b2af-8885b09d9923` // string | A potential role id # string | A potential role id
          sourceId := `2c9180877620c1460176267f336a106f` // string | A source id # string | A source id
          sorters := `-usageCount` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters/) Sorting is supported for the following fields: **displayName, email, usageCount** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters/) Sorting is supported for the following fields: **displayName, email, usageCount** (optional)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetPotentialRoleSourceIdentityUsage(context.Background(), potentialRoleId, sourceId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetPotentialRoleSourceIdentityUsage(context.Background(), potentialRoleId, sourceId).Sorters(sorters).Offset(offset).Limit(limit).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetPotentialRoleSourceIdentityUsage``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPotentialRoleSourceIdentityUsage`: []RoleMiningPotentialRoleSourceUsage
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetPotentialRoleSourceIdentityUsage`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-role-summaries
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-potential-role-summaries
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          sorters := `createdDate` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **createdDate** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **createdDate** (optional)
          filters := `(createdByName co "int")and (createdById sw "2c9180907")and (type eq "COMMON")and ((name co "entt")or (saved eq true))` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **createdById**: *eq, sw, co*  **createdByName**: *eq, sw, co*  **description**: *sw, co*  **endDate**: *le, lt*  **freshness**: *eq, ge, gt, le, lt*  **name**: *eq, sw, co*  **quality**: *eq, ge, gt, le, lt*  **startDate**: *ge, gt*  **saved**: *eq*  **type**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **createdById**: *eq, sw, co*  **createdByName**: *eq, sw, co*  **description**: *sw, co*  **endDate**: *le, lt*  **freshness**: *eq, ge, gt, le, lt*  **name**: *eq, sw, co*  **quality**: *eq, ge, gt, le, lt*  **startDate**: *ge, gt*  **saved**: *eq*  **type**: *eq* (optional)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetPotentialRoleSummaries(context.Background(), sessionId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetPotentialRoleSummaries(context.Background(), sessionId).Sorters(sorters).Filters(filters).Offset(offset).Limit(limit).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetPotentialRoleSummaries``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPotentialRoleSummaries`: []RoleMiningPotentialRoleSummary
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetPotentialRoleSummaries`: %v\n", resp)
        }
- path: /role-mining-potential-roles/{potentialRoleId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-role-mining-potential-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          potentialRoleId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | A potential role id # string | A potential role id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetRoleMiningPotentialRole(context.Background(), potentialRoleId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetRoleMiningPotentialRole(context.Background(), potentialRoleId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetRoleMiningPotentialRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleMiningPotentialRole`: RoleMiningPotentialRole
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetRoleMiningPotentialRole`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-role-mining-session
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id to be retrieved. # string | The role mining session id to be retrieved.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetRoleMiningSession(context.Background(), sessionId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetRoleMiningSession(context.Background(), sessionId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetRoleMiningSession``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleMiningSession`: RoleMiningSessionResponse
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetRoleMiningSession`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/status
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-role-mining-session-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetRoleMiningSessionStatus(context.Background(), sessionId).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetRoleMiningSessionStatus(context.Background(), sessionId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetRoleMiningSessionStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleMiningSessionStatus`: RoleMiningSessionStatus
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetRoleMiningSessionStatus`: %v\n", resp)
        }
- path: /role-mining-sessions
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-role-mining-sessions
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          filters := `saved eq "true" and name sw "RM Session"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **saved**: *eq*  **name**: *eq, sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **saved**: *eq*  **name**: *eq, sw* (optional)
          sorters := `createdBy,createdDate` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **createdBy, createdDate** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **createdBy, createdDate** (optional)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetRoleMiningSessions(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetRoleMiningSessions(context.Background()).Filters(filters).Sorters(sorters).Offset(offset).Limit(limit).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetRoleMiningSessions``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleMiningSessions`: []RoleMiningSessionResponse
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetRoleMiningSessions`: %v\n", resp)
        }
- path: /role-mining-potential-roles/saved
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#get-saved-potential-roles
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sorters := `modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters/) Sorting is supported for the following fields: **modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters/) Sorting is supported for the following fields: **modified** (optional)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetSavedPotentialRoles(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.GetSavedPotentialRoles(context.Background()).Sorters(sorters).Offset(offset).Limit(limit).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.GetSavedPotentialRoles``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSavedPotentialRoles`: []RoleMiningSessionDraftRoleDto
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.GetSavedPotentialRoles`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#patch-potential-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The potential role summary id # string | The potential role summary id
          patchpotentialrolerequestinner := []byte(`[{op=remove, path=/description}, {op=replace, path=/description, value=Acct I - Potential Role}, {op=remove, path=/saved}, {op=replace, path=/saved, value=false}, {op=remove, path=/name}, {op=replace, path=/name, value=Potential Role Accounting}]`) // []PatchPotentialRoleRequestInner | 

          
          var patchPotentialRoleRequestInner []beta.PatchPotentialRoleRequestInner
          if err := json.Unmarshal(patchpotentialrolerequestinner, &patchPotentialRoleRequestInner); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.PatchPotentialRole(context.Background(), sessionId, potentialRoleId).PatchPotentialRoleRequestInner(patchPotentialRoleRequestInner).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.PatchPotentialRole(context.Background(), sessionId, potentialRoleId).PatchPotentialRoleRequestInner(patchPotentialRoleRequestInner).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.PatchPotentialRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchPotentialRole`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.PatchPotentialRole`: %v\n", resp)
        }
- path: /role-mining-potential-roles/{potentialRoleId}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#patch-role-mining-potential-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          potentialRoleId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The potential role summary id # string | The potential role summary id
          patchpotentialrolerequestinner := []byte(`[{op=remove, path=/description}, {op=replace, path=/description, value=Acct I - Potential Role}, {op=remove, path=/saved}, {op=replace, path=/saved, value=false}, {op=remove, path=/name}, {op=replace, path=/name, value=Potential Role Accounting}]`) // []PatchPotentialRoleRequestInner | 

          
          var patchPotentialRoleRequestInner []beta.PatchPotentialRoleRequestInner
          if err := json.Unmarshal(patchpotentialrolerequestinner, &patchPotentialRoleRequestInner); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.PatchRoleMiningPotentialRole(context.Background(), potentialRoleId).PatchPotentialRoleRequestInner(patchPotentialRoleRequestInner).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.PatchRoleMiningPotentialRole(context.Background(), potentialRoleId).PatchPotentialRoleRequestInner(patchPotentialRoleRequestInner).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.PatchRoleMiningPotentialRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchRoleMiningPotentialRole`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.PatchRoleMiningPotentialRole`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#patch-role-mining-session
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id to be patched # string | The role mining session id to be patched
          jsonpatchoperation := []byte(`[{op=replace, path=/pruneThreshold, value=83}, {op=replace, path=/minNumIdentitiesInPotentialRole, value=10}, {op=replace, path=/saved, value=false}, {op=replace, path=/name, value=RM Session - 07/10/22}, {op=add, path=/name, value=RM Session - 07/10/22}]`) // []JsonPatchOperation | Replace pruneThreshold and/or minNumIdentitiesInPotentialRole in role mining session. Update saved status or saved name for a role mining session.

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.PatchRoleMiningSession(context.Background(), sessionId).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.PatchRoleMiningSession(context.Background(), sessionId).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.PatchRoleMiningSession``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchRoleMiningSession`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.PatchRoleMiningSession`: %v\n", resp)
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/edit-entitlements
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/iai-role-mining#update-entitlements-potential-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sessionId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role mining session id # string | The role mining session id
          potentialRoleId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | A potential role id in a role mining session # string | A potential role id in a role mining session
           roleminingpotentialroleeditentitlements := []byte(`{
          "ids" : [ "entId1", "entId2" ],
          "exclude" : true
        }`) // RoleMiningPotentialRoleEditEntitlements | Role mining session parameters

          
          var roleMiningPotentialRoleEditEntitlements beta.RoleMiningPotentialRoleEditEntitlements
          if err := json.Unmarshal(roleminingpotentialroleeditentitlements, &roleMiningPotentialRoleEditEntitlements); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IAIRoleMiningAPI.UpdateEntitlementsPotentialRole(context.Background(), sessionId, potentialRoleId).RoleMiningPotentialRoleEditEntitlements(roleMiningPotentialRoleEditEntitlements).Execute()
          //resp, r, err := apiClient.Beta.IAIRoleMiningAPI.UpdateEntitlementsPotentialRole(context.Background(), sessionId, potentialRoleId).RoleMiningPotentialRoleEditEntitlements(roleMiningPotentialRoleEditEntitlements).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IAIRoleMiningAPI.UpdateEntitlementsPotentialRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateEntitlementsPotentialRole`: RoleMiningPotentialRole
          fmt.Fprintf(os.Stdout, "Response from `IAIRoleMiningAPI.UpdateEntitlementsPotentialRole`: %v\n", resp)
        }
- path: /icons/{objectType}/{objectId}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/icons#delete-icon
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          objectType := `application` // string | Object type # string | Object type
          objectId := `a291e870-48c3-4953-b656-fb5ce2a93169` // string | Object id. # string | Object id.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.IconsAPI.DeleteIcon(context.Background(), objectType, objectId).Execute()
          //r, err := apiClient.Beta.IconsAPI.DeleteIcon(context.Background(), objectType, objectId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IconsAPI.DeleteIcon``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /icons/{objectType}/{objectId}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/icons#set-icon
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          objectType := `application` // string | Object type # string | Object type
          objectId := `a291e870-48c3-4953-b656-fb5ce2a93169` // string | Object id. # string | Object id.
          image := BINARY_DATA_HERE // *os.File | file with icon. Allowed mime-types ['image/png', 'image/jpeg'] # *os.File | file with icon. Allowed mime-types ['image/png', 'image/jpeg']

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IconsAPI.SetIcon(context.Background(), objectType, objectId).Image(image).Execute()
          //resp, r, err := apiClient.Beta.IconsAPI.SetIcon(context.Background(), objectType, objectId).Image(image).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IconsAPI.SetIcon``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SetIcon`: SetIcon200Response
          fmt.Fprintf(os.Stdout, "Response from `IconsAPI.SetIcon`: %v\n", resp)
        }
- path: /identities/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identities#delete-identity
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | Identity Id # string | Identity Id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.IdentitiesAPI.DeleteIdentity(context.Background(), id).Execute()
          //r, err := apiClient.Beta.IdentitiesAPI.DeleteIdentity(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentitiesAPI.DeleteIdentity``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /identities/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identities#get-identity
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | Identity Id # string | Identity Id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentitiesAPI.GetIdentity(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.IdentitiesAPI.GetIdentity(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentitiesAPI.GetIdentity``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentity`: Identity
          fmt.Fprintf(os.Stdout, "Response from `IdentitiesAPI.GetIdentity`: %v\n", resp)
        }
- path: /identities/{identityId}/ownership
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identities#get-identity-ownership-details
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityId := `ff8081814d2a8036014d701f3fbf53fa` // string | Identity ID. # string | Identity ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentitiesAPI.GetIdentityOwnershipDetails(context.Background(), identityId).Execute()
          //resp, r, err := apiClient.Beta.IdentitiesAPI.GetIdentityOwnershipDetails(context.Background(), identityId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentitiesAPI.GetIdentityOwnershipDetails``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentityOwnershipDetails`: IdentityOwnershipAssociationDetails
          fmt.Fprintf(os.Stdout, "Response from `IdentitiesAPI.GetIdentityOwnershipDetails`: %v\n", resp)
        }
- path: /identities/{identityId}/role-assignments/{assignmentId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identities#get-role-assignment
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityId := `ef38f94347e94562b5bb8424a56397d8` // string | Identity Id # string | Identity Id
          assignmentId := `1cbb0705b38c4226b1334eadd8874086` // string | Assignment Id # string | Assignment Id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentitiesAPI.GetRoleAssignment(context.Background(), identityId, assignmentId).Execute()
          //resp, r, err := apiClient.Beta.IdentitiesAPI.GetRoleAssignment(context.Background(), identityId, assignmentId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentitiesAPI.GetRoleAssignment``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleAssignment`: RoleAssignmentDto
          fmt.Fprintf(os.Stdout, "Response from `IdentitiesAPI.GetRoleAssignment`: %v\n", resp)
        }
- path: /identities/{identityId}/role-assignments
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identities#get-role-assignments
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityId := `ef38f94347e94562b5bb8424a56397d8` // string | Identity Id to get the role assignments for # string | Identity Id to get the role assignments for
          roleId := `e7697a1e96d04db1ac7b0f4544915d2c` // string | Role Id to filter the role assignments with (optional) # string | Role Id to filter the role assignments with (optional)
          roleName := `Engineer` // string | Role name to filter the role assignments with (optional) # string | Role name to filter the role assignments with (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentitiesAPI.GetRoleAssignments(context.Background(), identityId).Execute()
          //resp, r, err := apiClient.Beta.IdentitiesAPI.GetRoleAssignments(context.Background(), identityId).RoleId(roleId).RoleName(roleName).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentitiesAPI.GetRoleAssignments``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleAssignments`: []GetRoleAssignments200ResponseInner
          fmt.Fprintf(os.Stdout, "Response from `IdentitiesAPI.GetRoleAssignments`: %v\n", resp)
        }
- path: /identities
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identities#list-identities
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          filters := `id eq "6c9079b270a266a60170a2779fcb0006" or correlated eq false` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **alias**: *eq, sw*  **firstname**: *eq, sw*  **lastname**: *eq, sw*  **email**: *eq, sw*  **cloudStatus**: *eq*  **processingState**: *eq*  **correlated**: *eq*  **protected**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **alias**: *eq, sw*  **firstname**: *eq, sw*  **lastname**: *eq, sw*  **email**: *eq, sw*  **cloudStatus**: *eq*  **processingState**: *eq*  **correlated**: *eq*  **protected**: *eq* (optional)
          sorters := `name,-cloudStatus` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, alias, cloudStatus** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, alias, cloudStatus** (optional)
          defaultFilter := `NONE` // string | Adds additional filter to filters query parameter.  CORRELATED_ONLY adds correlated=true and returns only identities that are correlated.  NONE does not add any and returns all identities that satisfy filters query parameter. (optional) (default to "CORRELATED_ONLY") # string | Adds additional filter to filters query parameter.  CORRELATED_ONLY adds correlated=true and returns only identities that are correlated.  NONE does not add any and returns all identities that satisfy filters query parameter. (optional) (default to "CORRELATED_ONLY")
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentitiesAPI.ListIdentities(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IdentitiesAPI.ListIdentities(context.Background()).Filters(filters).Sorters(sorters).DefaultFilter(defaultFilter).Count(count).Limit(limit).Offset(offset).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentitiesAPI.ListIdentities``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListIdentities`: []Identity
          fmt.Fprintf(os.Stdout, "Response from `IdentitiesAPI.ListIdentities`: %v\n", resp)
        }
- path: /identities/{identityId}/reset
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identities#reset-identity
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityId := `ef38f94347e94562b5bb8424a56397d8` // string | Identity Id # string | Identity Id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.IdentitiesAPI.ResetIdentity(context.Background(), identityId).Execute()
          //r, err := apiClient.Beta.IdentitiesAPI.ResetIdentity(context.Background(), identityId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentitiesAPI.ResetIdentity``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /identities/{id}/verification/account/send
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identities#send-identity-verification-account-token
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | Identity ID # string | Identity ID
           sendaccountverificationrequest := []byte(`{
          "sourceName" : "Active Directory Source",
          "via" : "EMAIL_WORK"
        }`) // SendAccountVerificationRequest | 

          
          var sendAccountVerificationRequest beta.SendAccountVerificationRequest
          if err := json.Unmarshal(sendaccountverificationrequest, &sendAccountVerificationRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.IdentitiesAPI.SendIdentityVerificationAccountToken(context.Background(), id).SendAccountVerificationRequest(sendAccountVerificationRequest).Execute()
          //r, err := apiClient.Beta.IdentitiesAPI.SendIdentityVerificationAccountToken(context.Background(), id).SendAccountVerificationRequest(sendAccountVerificationRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentitiesAPI.SendIdentityVerificationAccountToken``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /identities/invite
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identities#start-identities-invite
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           inviteidentitiesrequest := []byte(`{
          "ids" : [ "2b568c65bc3c4c57a43bd97e3a8e55", "2c9180867769897d01776ed5f125512f" ],
          "uninvited" : false
        }`) // InviteIdentitiesRequest | 

          
          var inviteIdentitiesRequest beta.InviteIdentitiesRequest
          if err := json.Unmarshal(inviteidentitiesrequest, &inviteIdentitiesRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentitiesAPI.StartIdentitiesInvite(context.Background()).InviteIdentitiesRequest(inviteIdentitiesRequest).Execute()
          //resp, r, err := apiClient.Beta.IdentitiesAPI.StartIdentitiesInvite(context.Background()).InviteIdentitiesRequest(inviteIdentitiesRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentitiesAPI.StartIdentitiesInvite``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `StartIdentitiesInvite`: TaskStatus
          fmt.Fprintf(os.Stdout, "Response from `IdentitiesAPI.StartIdentitiesInvite`: %v\n", resp)
        }
- path: /identities/process
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identities#start-identity-processing
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           processidentitiesrequest := []byte(`{
          "identityIds" : [ "ef38f94347e94562b5bb8424a56397d8", "ef38f94347e94562b5bb8424a56397d8", "ef38f94347e94562b5bb8424a56397d8", "ef38f94347e94562b5bb8424a56397d8", "ef38f94347e94562b5bb8424a56397d8" ]
        }`) // ProcessIdentitiesRequest | 

          
          var processIdentitiesRequest beta.ProcessIdentitiesRequest
          if err := json.Unmarshal(processidentitiesrequest, &processIdentitiesRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentitiesAPI.StartIdentityProcessing(context.Background()).ProcessIdentitiesRequest(processIdentitiesRequest).Execute()
          //resp, r, err := apiClient.Beta.IdentitiesAPI.StartIdentityProcessing(context.Background()).ProcessIdentitiesRequest(processIdentitiesRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentitiesAPI.StartIdentityProcessing``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `StartIdentityProcessing`: TaskResultResponse
          fmt.Fprintf(os.Stdout, "Response from `IdentitiesAPI.StartIdentityProcessing`: %v\n", resp)
        }
- path: /identities/{identityId}/synchronize-attributes
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identities#synchronize-attributes-for-identity
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityId := `identityId_example` // string | The Identity id # string | The Identity id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentitiesAPI.SynchronizeAttributesForIdentity(context.Background(), identityId).Execute()
          //resp, r, err := apiClient.Beta.IdentitiesAPI.SynchronizeAttributesForIdentity(context.Background(), identityId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentitiesAPI.SynchronizeAttributesForIdentity``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SynchronizeAttributesForIdentity`: IdentitySyncJob
          fmt.Fprintf(os.Stdout, "Response from `IdentitiesAPI.SynchronizeAttributesForIdentity`: %v\n", resp)
        }
- path: /identity-attributes
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-attributes#create-identity-attribute
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           identityattribute := []byte(`{
          "standard" : false,
          "system" : false,
          "sources" : [ {
            "type" : "rule",
            "properties" : {
              "ruleType" : "IdentityAttribute",
              "ruleName" : "Cloud Promote Identity Attribute"
            }
          }, {
            "type" : "rule",
            "properties" : {
              "ruleType" : "IdentityAttribute",
              "ruleName" : "Cloud Promote Identity Attribute"
            }
          } ],
          "displayName" : "Cost Center",
          "name" : "costCenter",
          "type" : "string",
          "searchable" : false,
          "multi" : false
        }`) // IdentityAttribute | 

          
          var identityAttribute beta.IdentityAttribute
          if err := json.Unmarshal(identityattribute, &identityAttribute); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityAttributesAPI.CreateIdentityAttribute(context.Background()).IdentityAttribute(identityAttribute).Execute()
          //resp, r, err := apiClient.Beta.IdentityAttributesAPI.CreateIdentityAttribute(context.Background()).IdentityAttribute(identityAttribute).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityAttributesAPI.CreateIdentityAttribute``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateIdentityAttribute`: IdentityAttribute
          fmt.Fprintf(os.Stdout, "Response from `IdentityAttributesAPI.CreateIdentityAttribute`: %v\n", resp)
        }
- path: /identity-attributes/{name}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-attributes#delete-identity-attribute
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          name := `displayName` // string | The attribute's technical name. # string | The attribute's technical name.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.IdentityAttributesAPI.DeleteIdentityAttribute(context.Background(), name).Execute()
          //r, err := apiClient.Beta.IdentityAttributesAPI.DeleteIdentityAttribute(context.Background(), name).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityAttributesAPI.DeleteIdentityAttribute``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /identity-attributes/bulk-delete
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-attributes#delete-identity-attributes-in-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           identityattributenames := []byte(`{
          "ids" : [ "name", "displayName" ]
        }`) // IdentityAttributeNames | 

          
          var identityAttributeNames beta.IdentityAttributeNames
          if err := json.Unmarshal(identityattributenames, &identityAttributeNames); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.IdentityAttributesAPI.DeleteIdentityAttributesInBulk(context.Background()).IdentityAttributeNames(identityAttributeNames).Execute()
          //r, err := apiClient.Beta.IdentityAttributesAPI.DeleteIdentityAttributesInBulk(context.Background()).IdentityAttributeNames(identityAttributeNames).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityAttributesAPI.DeleteIdentityAttributesInBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /identity-attributes/{name}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-attributes#get-identity-attribute
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          name := `displayName` // string | The attribute's technical name. # string | The attribute's technical name.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityAttributesAPI.GetIdentityAttribute(context.Background(), name).Execute()
          //resp, r, err := apiClient.Beta.IdentityAttributesAPI.GetIdentityAttribute(context.Background(), name).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityAttributesAPI.GetIdentityAttribute``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentityAttribute`: IdentityAttribute
          fmt.Fprintf(os.Stdout, "Response from `IdentityAttributesAPI.GetIdentityAttribute`: %v\n", resp)
        }
- path: /identity-attributes
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-attributes#list-identity-attributes
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          includeSystem := false // bool | Include 'system' attributes in the response. (optional) (default to false) # bool | Include 'system' attributes in the response. (optional) (default to false)
          includeSilent := false // bool | Include 'silent' attributes in the response. (optional) (default to false) # bool | Include 'silent' attributes in the response. (optional) (default to false)
          searchableOnly := false // bool | Include only 'searchable' attributes in the response. (optional) (default to false) # bool | Include only 'searchable' attributes in the response. (optional) (default to false)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityAttributesAPI.ListIdentityAttributes(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IdentityAttributesAPI.ListIdentityAttributes(context.Background()).IncludeSystem(includeSystem).IncludeSilent(includeSilent).SearchableOnly(searchableOnly).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityAttributesAPI.ListIdentityAttributes``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListIdentityAttributes`: []IdentityAttribute
          fmt.Fprintf(os.Stdout, "Response from `IdentityAttributesAPI.ListIdentityAttributes`: %v\n", resp)
        }
- path: /identity-attributes/{name}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-attributes#put-identity-attribute
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          name := `displayName` // string | The attribute's technical name. # string | The attribute's technical name.
           identityattribute := []byte(`{
          "standard" : false,
          "system" : false,
          "sources" : [ {
            "type" : "rule",
            "properties" : {
              "ruleType" : "IdentityAttribute",
              "ruleName" : "Cloud Promote Identity Attribute"
            }
          }, {
            "type" : "rule",
            "properties" : {
              "ruleType" : "IdentityAttribute",
              "ruleName" : "Cloud Promote Identity Attribute"
            }
          } ],
          "displayName" : "Cost Center",
          "name" : "costCenter",
          "type" : "string",
          "searchable" : false,
          "multi" : false
        }`) // IdentityAttribute | 

          
          var identityAttribute beta.IdentityAttribute
          if err := json.Unmarshal(identityattribute, &identityAttribute); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityAttributesAPI.PutIdentityAttribute(context.Background(), name).IdentityAttribute(identityAttribute).Execute()
          //resp, r, err := apiClient.Beta.IdentityAttributesAPI.PutIdentityAttribute(context.Background(), name).IdentityAttribute(identityAttribute).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityAttributesAPI.PutIdentityAttribute``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutIdentityAttribute`: IdentityAttribute
          fmt.Fprintf(os.Stdout, "Response from `IdentityAttributesAPI.PutIdentityAttribute`: %v\n", resp)
        }
- path: /historical-identities/{id}/compare
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-history#compare-identity-snapshots
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The identity id # string | The identity id
          snapshot1 := `2007-03-01T13:00:00Z` // string | The snapshot 1 of identity (optional) # string | The snapshot 1 of identity (optional)
          snapshot2 := `2008-03-01T13:00:00Z` // string | The snapshot 2 of identity (optional) # string | The snapshot 2 of identity (optional)
          accessitemtypes := []byte(``) // []string | An optional list of access item types (app, account, entitlement, etc...) to return.   If null or empty, all access items types are returned  (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityHistoryAPI.CompareIdentitySnapshots(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.IdentityHistoryAPI.CompareIdentitySnapshots(context.Background(), id).Snapshot1(snapshot1).Snapshot2(snapshot2).AccessItemTypes(accessItemTypes).Limit(limit).Offset(offset).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityHistoryAPI.CompareIdentitySnapshots``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CompareIdentitySnapshots`: []IdentityCompareResponse
          fmt.Fprintf(os.Stdout, "Response from `IdentityHistoryAPI.CompareIdentitySnapshots`: %v\n", resp)
        }
- path: /historical-identities/{id}/compare/{accessType}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-history#compare-identity-snapshots-access-type
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The identity id # string | The identity id
          accessType := `role` // string | The specific type which needs to be compared # string | The specific type which needs to be compared
          accessAssociated := 2007-03-01T13:00:00Z // bool | Indicates if added or removed access needs to be returned. true - added, false - removed, null - both added & removed (optional) # bool | Indicates if added or removed access needs to be returned. true - added, false - removed, null - both added & removed (optional)
          snapshot1 := `2008-03-01T13:00:00Z` // string | The snapshot 1 of identity (optional) # string | The snapshot 1 of identity (optional)
          snapshot2 := `2009-03-01T13:00:00Z` // string | The snapshot 2 of identity (optional) # string | The snapshot 2 of identity (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityHistoryAPI.CompareIdentitySnapshotsAccessType(context.Background(), id, accessType).Execute()
          //resp, r, err := apiClient.Beta.IdentityHistoryAPI.CompareIdentitySnapshotsAccessType(context.Background(), id, accessType).AccessAssociated(accessAssociated).Snapshot1(snapshot1).Snapshot2(snapshot2).Limit(limit).Offset(offset).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityHistoryAPI.CompareIdentitySnapshotsAccessType``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CompareIdentitySnapshotsAccessType`: []AccessItemDiff
          fmt.Fprintf(os.Stdout, "Response from `IdentityHistoryAPI.CompareIdentitySnapshotsAccessType`: %v\n", resp)
        }
- path: /historical-identities/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-history#get-historical-identity
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The identity id # string | The identity id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityHistoryAPI.GetHistoricalIdentity(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.IdentityHistoryAPI.GetHistoricalIdentity(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityHistoryAPI.GetHistoricalIdentity``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetHistoricalIdentity`: IdentityHistoryResponse
          fmt.Fprintf(os.Stdout, "Response from `IdentityHistoryAPI.GetHistoricalIdentity`: %v\n", resp)
        }
- path: /historical-identities/{id}/events
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-history#get-historical-identity-events
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The identity id # string | The identity id
          from := `2024-03-01T13:00:00Z` // string | The optional instant until which access events are returned (optional) # string | The optional instant until which access events are returned (optional)
          eventtypes := []byte(`[AccessAddedEvent, AccessRemovedEvent]`) // []string | An optional list of event types to return.  If null or empty, all events are returned (optional)
          accessitemtypes := []byte(`[entitlement, account]`) // []string | An optional list of access item types (app, account, entitlement, etc...) to return.   If null or empty, all access items types are returned (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityHistoryAPI.GetHistoricalIdentityEvents(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.IdentityHistoryAPI.GetHistoricalIdentityEvents(context.Background(), id).From(from).EventTypes(eventTypes).AccessItemTypes(accessItemTypes).Limit(limit).Offset(offset).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityHistoryAPI.GetHistoricalIdentityEvents``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetHistoricalIdentityEvents`: []GetHistoricalIdentityEvents200ResponseInner
          fmt.Fprintf(os.Stdout, "Response from `IdentityHistoryAPI.GetHistoricalIdentityEvents`: %v\n", resp)
        }
- path: /historical-identities/{id}/snapshots/{date}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-history#get-identity-snapshot
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The identity id # string | The identity id
          date := `2007-03-01T13:00:00Z` // string | The specified date # string | The specified date

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityHistoryAPI.GetIdentitySnapshot(context.Background(), id, date).Execute()
          //resp, r, err := apiClient.Beta.IdentityHistoryAPI.GetIdentitySnapshot(context.Background(), id, date).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityHistoryAPI.GetIdentitySnapshot``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentitySnapshot`: IdentityHistoryResponse
          fmt.Fprintf(os.Stdout, "Response from `IdentityHistoryAPI.GetIdentitySnapshot`: %v\n", resp)
        }
- path: /historical-identities/{id}/snapshot-summary
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-history#get-identity-snapshot-summary
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The identity id # string | The identity id
          before := `2007-03-01T13:00:00Z` // string | The date before which snapshot summary is required (optional) # string | The date before which snapshot summary is required (optional)
          interval := `interval_example` // string | The interval indicating day or month. Defaults to month if not specified (optional) # string | The interval indicating day or month. Defaults to month if not specified (optional)
          timeZone := `UTC` // string | The time zone. Defaults to UTC if not provided (optional) # string | The time zone. Defaults to UTC if not provided (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityHistoryAPI.GetIdentitySnapshotSummary(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.IdentityHistoryAPI.GetIdentitySnapshotSummary(context.Background(), id).Before(before).Interval(interval).TimeZone(timeZone).Limit(limit).Offset(offset).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityHistoryAPI.GetIdentitySnapshotSummary``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentitySnapshotSummary`: []MetricResponse
          fmt.Fprintf(os.Stdout, "Response from `IdentityHistoryAPI.GetIdentitySnapshotSummary`: %v\n", resp)
        }
- path: /historical-identities/{id}/start-date
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-history#get-identity-start-date
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The identity id # string | The identity id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityHistoryAPI.GetIdentityStartDate(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.IdentityHistoryAPI.GetIdentityStartDate(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityHistoryAPI.GetIdentityStartDate``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentityStartDate`: string
          fmt.Fprintf(os.Stdout, "Response from `IdentityHistoryAPI.GetIdentityStartDate`: %v\n", resp)
        }
- path: /historical-identities
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-history#list-historical-identities
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          startsWithQuery := `Ada` // string | This param is used for starts-with search for first, last and display name of the identity (optional) # string | This param is used for starts-with search for first, last and display name of the identity (optional)
          isDeleted := true // bool | Indicates if we want to only list down deleted identities or not. (optional) # bool | Indicates if we want to only list down deleted identities or not. (optional)
          isActive := true // bool | Indicates if we want to only list active or inactive identities. (optional) # bool | Indicates if we want to only list active or inactive identities. (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityHistoryAPI.ListHistoricalIdentities(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IdentityHistoryAPI.ListHistoricalIdentities(context.Background()).StartsWithQuery(startsWithQuery).IsDeleted(isDeleted).IsActive(isActive).Limit(limit).Offset(offset).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityHistoryAPI.ListHistoricalIdentities``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListHistoricalIdentities`: []IdentityListItem
          fmt.Fprintf(os.Stdout, "Response from `IdentityHistoryAPI.ListHistoricalIdentities`: %v\n", resp)
        }
- path: /historical-identities/{id}/access-items
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-history#list-identity-access-items
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The identity id # string | The identity id
          type_ := `account` // string | The type of access item for the identity. If not provided, it defaults to account.  Types of access items: **accessProfile, account, app, entitlement, role** (optional) # string | The type of access item for the identity. If not provided, it defaults to account.  Types of access items: **accessProfile, account, app, entitlement, role** (optional)
          filters := `source eq "DataScienceDataset"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **source**: *eq*  **standalone**: *eq*  **privileged**: *eq*  **attribute**: *eq*  **cloudGoverned**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **source**: *eq*  **standalone**: *eq*  **privileged**: *eq*  **attribute**: *eq*  **cloudGoverned**: *eq* (optional)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, value, standalone, privileged, attribute, source, cloudGoverned, removeDate, nativeIdentity, entitlementCount** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, value, standalone, privileged, attribute, source, cloudGoverned, removeDate, nativeIdentity, entitlementCount** (optional)
          query := `Dr. Arden` // string | This param is used to search if certain fields of the access item contain the string provided.  Searching is supported for the following fields depending on the type:  Access Profiles: **name, description**  Accounts: **name, nativeIdentity**  Apps: **name**  Entitlements: **name, value, description**  Roles: **name, description** (optional) # string | This param is used to search if certain fields of the access item contain the string provided.  Searching is supported for the following fields depending on the type:  Access Profiles: **name, description**  Accounts: **name, nativeIdentity**  Apps: **name**  Entitlements: **name, value, description**  Roles: **name, description** (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityHistoryAPI.ListIdentityAccessItems(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.IdentityHistoryAPI.ListIdentityAccessItems(context.Background(), id).Type_(type_).Filters(filters).Sorters(sorters).Query(query).Limit(limit).Count(count).Offset(offset).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityHistoryAPI.ListIdentityAccessItems``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListIdentityAccessItems`: []ListIdentityAccessItems200ResponseInner
          fmt.Fprintf(os.Stdout, "Response from `IdentityHistoryAPI.ListIdentityAccessItems`: %v\n", resp)
        }
- path: /historical-identities/{id}/snapshots/{date}/access-items
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-history#list-identity-snapshot-access-items
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | Identity ID. # string | Identity ID.
          date := `2007-03-01T13:00:00Z` // string | Specified date. # string | Specified date.
          type_ := `account` // string | Access item type. (optional) # string | Access item type. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityHistoryAPI.ListIdentitySnapshotAccessItems(context.Background(), id, date).Execute()
          //resp, r, err := apiClient.Beta.IdentityHistoryAPI.ListIdentitySnapshotAccessItems(context.Background(), id, date).Type_(type_).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityHistoryAPI.ListIdentitySnapshotAccessItems``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListIdentitySnapshotAccessItems`: []ListIdentityAccessItems200ResponseInner
          fmt.Fprintf(os.Stdout, "Response from `IdentityHistoryAPI.ListIdentitySnapshotAccessItems`: %v\n", resp)
        }
- path: /historical-identities/{id}/snapshots
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-history#list-identity-snapshots
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The identity id # string | The identity id
          start := `2007-03-01T13:00:00Z` // string | The specified start date (optional) # string | The specified start date (optional)
          interval := `interval_example` // string | The interval indicating the range in day or month for the specified interval-name (optional) # string | The interval indicating the range in day or month for the specified interval-name (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityHistoryAPI.ListIdentitySnapshots(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.IdentityHistoryAPI.ListIdentitySnapshots(context.Background(), id).Start(start).Interval(interval).Limit(limit).Offset(offset).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityHistoryAPI.ListIdentitySnapshots``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListIdentitySnapshots`: []IdentitySnapshotSummaryResponse
          fmt.Fprintf(os.Stdout, "Response from `IdentityHistoryAPI.ListIdentitySnapshots`: %v\n", resp)
        }
- path: /identity-profiles
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-profiles#create-identity-profile
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           identityprofile := []byte(`{
          "owner" : {
            "name" : "William Wilson",
            "id" : "2c9180835d191a86015d28455b4b232a",
            "type" : "IDENTITY"
          },
          "identityExceptionReportReference" : {
            "reportName" : "My annual report",
            "taskResultId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          },
          "authoritativeSource" : {
            "name" : "HR Active Directory",
            "id" : "2c9180835d191a86015d28455b4b232a",
            "type" : "SOURCE"
          },
          "hasTimeBasedAttr" : true,
          "created" : "2023-01-03T21:16:22.432Z",
          "description" : "My custom flat file profile",
          "identityRefreshRequired" : true,
          "identityCount" : 8,
          "priority" : 10,
          "identityAttributeConfig" : {
            "attributeTransforms" : [ {
              "transformDefinition" : {
                "attributes" : {
                  "attributeName" : "e-mail",
                  "sourceName" : "MySource",
                  "sourceId" : "2c9180877a826e68017a8c0b03da1a53"
                },
                "type" : "accountAttribute"
              },
              "identityAttributeName" : "email"
            }, {
              "transformDefinition" : {
                "attributes" : {
                  "attributeName" : "e-mail",
                  "sourceName" : "MySource",
                  "sourceId" : "2c9180877a826e68017a8c0b03da1a53"
                },
                "type" : "accountAttribute"
              },
              "identityAttributeName" : "email"
            } ],
            "enabled" : true
          },
          "name" : "aName",
          "modified" : "2023-01-03T21:16:22.432Z",
          "id" : "id12345"
        }`) // IdentityProfile | 

          
          var identityProfile beta.IdentityProfile
          if err := json.Unmarshal(identityprofile, &identityProfile); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityProfilesAPI.CreateIdentityProfile(context.Background()).IdentityProfile(identityProfile).Execute()
          //resp, r, err := apiClient.Beta.IdentityProfilesAPI.CreateIdentityProfile(context.Background()).IdentityProfile(identityProfile).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityProfilesAPI.CreateIdentityProfile``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateIdentityProfile`: IdentityProfile
          fmt.Fprintf(os.Stdout, "Response from `IdentityProfilesAPI.CreateIdentityProfile`: %v\n", resp)
        }
- path: /identity-profiles/{identity-profile-id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-profiles#delete-identity-profile
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityProfileId := `ef38f94347e94562b5bb8424a56397d8` // string | Identity profile ID. # string | Identity profile ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityProfilesAPI.DeleteIdentityProfile(context.Background(), identityProfileId).Execute()
          //resp, r, err := apiClient.Beta.IdentityProfilesAPI.DeleteIdentityProfile(context.Background(), identityProfileId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityProfilesAPI.DeleteIdentityProfile``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteIdentityProfile`: TaskResultSimplified
          fmt.Fprintf(os.Stdout, "Response from `IdentityProfilesAPI.DeleteIdentityProfile`: %v\n", resp)
        }
- path: /identity-profiles/bulk-delete
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-profiles#delete-identity-profiles
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          requestbody := []byte(``) // []string | Identity Profile bulk delete request body.

          
          var requestBody []beta.RequestBody
          if err := json.Unmarshal(requestbody, &requestBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityProfilesAPI.DeleteIdentityProfiles(context.Background()).RequestBody(requestBody).Execute()
          //resp, r, err := apiClient.Beta.IdentityProfilesAPI.DeleteIdentityProfiles(context.Background()).RequestBody(requestBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityProfilesAPI.DeleteIdentityProfiles``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteIdentityProfiles`: TaskResultSimplified
          fmt.Fprintf(os.Stdout, "Response from `IdentityProfilesAPI.DeleteIdentityProfiles`: %v\n", resp)
        }
- path: /identity-profiles/export
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-profiles#export-identity-profiles
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `id eq 8c190e6787aa4ed9a90bd9d5344523fb` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, ne*  **name**: *eq, ne*  **priority**: *eq, ne* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, ne*  **name**: *eq, ne*  **priority**: *eq, ne* (optional)
          sorters := `name,-priority` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, priority** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, priority** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityProfilesAPI.ExportIdentityProfiles(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IdentityProfilesAPI.ExportIdentityProfiles(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityProfilesAPI.ExportIdentityProfiles``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ExportIdentityProfiles`: []IdentityProfileExportedObject
          fmt.Fprintf(os.Stdout, "Response from `IdentityProfilesAPI.ExportIdentityProfiles`: %v\n", resp)
        }
- path: /identity-profiles/{identity-profile-id}/default-identity-attribute-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-profiles#get-default-identity-attribute-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityProfileId := `ef38f94347e94562b5bb8424a56397d8` // string | The Identity Profile ID # string | The Identity Profile ID

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityProfilesAPI.GetDefaultIdentityAttributeConfig(context.Background(), identityProfileId).Execute()
          //resp, r, err := apiClient.Beta.IdentityProfilesAPI.GetDefaultIdentityAttributeConfig(context.Background(), identityProfileId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityProfilesAPI.GetDefaultIdentityAttributeConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetDefaultIdentityAttributeConfig`: IdentityAttributeConfig
          fmt.Fprintf(os.Stdout, "Response from `IdentityProfilesAPI.GetDefaultIdentityAttributeConfig`: %v\n", resp)
        }
- path: /identity-profiles/{identity-profile-id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-profiles#get-identity-profile
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityProfileId := `ef38f94347e94562b5bb8424a56397d8` // string | Identity profile ID. # string | Identity profile ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityProfilesAPI.GetIdentityProfile(context.Background(), identityProfileId).Execute()
          //resp, r, err := apiClient.Beta.IdentityProfilesAPI.GetIdentityProfile(context.Background(), identityProfileId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityProfilesAPI.GetIdentityProfile``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentityProfile`: IdentityProfile
          fmt.Fprintf(os.Stdout, "Response from `IdentityProfilesAPI.GetIdentityProfile`: %v\n", resp)
        }
- path: /identity-profiles/import
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-profiles#import-identity-profiles
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityprofileexportedobject := []byte(``) // []IdentityProfileExportedObject | Previously exported Identity Profiles.

          
          var identityProfileExportedObject []beta.IdentityProfileExportedObject
          if err := json.Unmarshal(identityprofileexportedobject, &identityProfileExportedObject); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityProfilesAPI.ImportIdentityProfiles(context.Background()).IdentityProfileExportedObject(identityProfileExportedObject).Execute()
          //resp, r, err := apiClient.Beta.IdentityProfilesAPI.ImportIdentityProfiles(context.Background()).IdentityProfileExportedObject(identityProfileExportedObject).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityProfilesAPI.ImportIdentityProfiles``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ImportIdentityProfiles`: ObjectImportResult
          fmt.Fprintf(os.Stdout, "Response from `IdentityProfilesAPI.ImportIdentityProfiles`: %v\n", resp)
        }
- path: /identity-profiles
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-profiles#list-identity-profiles
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `id eq 8c190e6787aa4ed9a90bd9d5344523fb` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, ne, ge, gt, in, le, sw*  **name**: *eq, ne, ge, gt, in, le, sw*  **priority**: *eq, ne* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, ne, ge, gt, in, le, sw*  **name**: *eq, ne, ge, gt, in, le, sw*  **priority**: *eq, ne* (optional)
          sorters := `name,-priority` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, priority, created, modified, owner.id, owner.name** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, priority, created, modified, owner.id, owner.name** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityProfilesAPI.ListIdentityProfiles(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.IdentityProfilesAPI.ListIdentityProfiles(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityProfilesAPI.ListIdentityProfiles``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListIdentityProfiles`: []IdentityProfile
          fmt.Fprintf(os.Stdout, "Response from `IdentityProfilesAPI.ListIdentityProfiles`: %v\n", resp)
        }
- path: /identity-profiles/identity-preview
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-profiles#show-generate-identity-preview
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           identitypreviewrequest := []byte(`{
          "identityId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "identityAttributeConfig" : {
            "attributeTransforms" : [ {
              "transformDefinition" : {
                "attributes" : {
                  "attributeName" : "e-mail",
                  "sourceName" : "MySource",
                  "sourceId" : "2c9180877a826e68017a8c0b03da1a53"
                },
                "type" : "accountAttribute"
              },
              "identityAttributeName" : "email"
            }, {
              "transformDefinition" : {
                "attributes" : {
                  "attributeName" : "e-mail",
                  "sourceName" : "MySource",
                  "sourceId" : "2c9180877a826e68017a8c0b03da1a53"
                },
                "type" : "accountAttribute"
              },
              "identityAttributeName" : "email"
            } ],
            "enabled" : true
          }
        }`) // IdentityPreviewRequest | Identity Preview request body.

          
          var identityPreviewRequest beta.IdentityPreviewRequest
          if err := json.Unmarshal(identitypreviewrequest, &identityPreviewRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityProfilesAPI.ShowGenerateIdentityPreview(context.Background()).IdentityPreviewRequest(identityPreviewRequest).Execute()
          //resp, r, err := apiClient.Beta.IdentityProfilesAPI.ShowGenerateIdentityPreview(context.Background()).IdentityPreviewRequest(identityPreviewRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityProfilesAPI.ShowGenerateIdentityPreview``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ShowGenerateIdentityPreview`: IdentityPreviewResponse
          fmt.Fprintf(os.Stdout, "Response from `IdentityProfilesAPI.ShowGenerateIdentityPreview`: %v\n", resp)
        }
- path: /identity-profiles/{identity-profile-id}/process-identities
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-profiles#sync-identity-profile
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityProfileId := `ef38f94347e94562b5bb8424a56397d8` // string | The Identity Profile ID to be processed # string | The Identity Profile ID to be processed

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityProfilesAPI.SyncIdentityProfile(context.Background(), identityProfileId).Execute()
          //resp, r, err := apiClient.Beta.IdentityProfilesAPI.SyncIdentityProfile(context.Background(), identityProfileId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityProfilesAPI.SyncIdentityProfile``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SyncIdentityProfile`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `IdentityProfilesAPI.SyncIdentityProfile`: %v\n", resp)
        }
- path: /identity-profiles/{identity-profile-id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/identity-profiles#update-identity-profile
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityProfileId := `ef38f94347e94562b5bb8424a56397d8` // string | Identity profile ID. # string | Identity profile ID.
          jsonpatchoperation := []byte(`[{op=add, path=/identityAttributeConfig/attributeTransforms/0, value={identityAttributeName=location, transformDefinition={type=accountAttribute, attributes={sourceName=Employees, attributeName=location, sourceId=2c91808878b7d63b0178c66ffcdc4ce4}}}}]`) // []JsonPatchOperation | List of identity profile update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.IdentityProfilesAPI.UpdateIdentityProfile(context.Background(), identityProfileId).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.IdentityProfilesAPI.UpdateIdentityProfile(context.Background(), identityProfileId).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `IdentityProfilesAPI.UpdateIdentityProfile``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateIdentityProfile`: IdentityProfile
          fmt.Fprintf(os.Stdout, "Response from `IdentityProfilesAPI.UpdateIdentityProfile`: %v\n", resp)
        }
- path: /launchers
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/launchers#create-launcher
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           launcherrequest := []byte(`{
          "reference" : {
            "id" : "2fd6ff94-2081-4d29-acbc-83a0a2f744a5",
            "type" : "WORKFLOW"
          },
          "name" : "Group Create",
          "description" : "Create a new Active Directory Group",
          "disabled" : false,
          "type" : "INTERACTIVE_PROCESS",
          "config" : "{\"workflowId\" : \"6b42d9be-61b6-46af-827e-ea29ba8aa3d9\"}"
        }`) // LauncherRequest | Payload to create a Launcher

          
          var launcherRequest beta.LauncherRequest
          if err := json.Unmarshal(launcherrequest, &launcherRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.LaunchersAPI.CreateLauncher(context.Background()).LauncherRequest(launcherRequest).Execute()
          //resp, r, err := apiClient.Beta.LaunchersAPI.CreateLauncher(context.Background()).LauncherRequest(launcherRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `LaunchersAPI.CreateLauncher``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateLauncher`: Launcher
          fmt.Fprintf(os.Stdout, "Response from `LaunchersAPI.CreateLauncher`: %v\n", resp)
        }
- path: /launchers/{launcherID}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/launchers#delete-launcher
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          launcherID := `e3012408-8b61-4564-ad41-c5ec131c325b` // string | ID of the Launcher to be deleted # string | ID of the Launcher to be deleted

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.LaunchersAPI.DeleteLauncher(context.Background(), launcherID).Execute()
          //r, err := apiClient.Beta.LaunchersAPI.DeleteLauncher(context.Background(), launcherID).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `LaunchersAPI.DeleteLauncher``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /launchers/{launcherID}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/launchers#get-launcher
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          launcherID := `e3012408-8b61-4564-ad41-c5ec131c325b` // string | ID of the Launcher to be retrieved # string | ID of the Launcher to be retrieved

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.LaunchersAPI.GetLauncher(context.Background(), launcherID).Execute()
          //resp, r, err := apiClient.Beta.LaunchersAPI.GetLauncher(context.Background(), launcherID).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `LaunchersAPI.GetLauncher``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetLauncher`: Launcher
          fmt.Fprintf(os.Stdout, "Response from `LaunchersAPI.GetLauncher`: %v\n", resp)
        }
- path: /launchers
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/launchers#get-launchers
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          filters := `disabled eq "true"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **description**: *sw*  **disabled**: *eq*  **name**: *sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **description**: *sw*  **disabled**: *eq*  **name**: *sw* (optional)
          next := `eyJuZXh0IjoxMjN9Cg==` // string | Pagination marker (optional) # string | Pagination marker (optional)
          limit := 42 // int32 | Number of Launchers to return (optional) (default to 10) # int32 | Number of Launchers to return (optional) (default to 10)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.LaunchersAPI.GetLaunchers(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.LaunchersAPI.GetLaunchers(context.Background()).Filters(filters).Next(next).Limit(limit).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `LaunchersAPI.GetLaunchers``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetLaunchers`: GetLaunchers200Response
          fmt.Fprintf(os.Stdout, "Response from `LaunchersAPI.GetLaunchers`: %v\n", resp)
        }
- path: /launchers/{launcherID}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/launchers#put-launcher
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          launcherID := `e3012408-8b61-4564-ad41-c5ec131c325b` // string | ID of the Launcher to be replaced # string | ID of the Launcher to be replaced
           launcherrequest := []byte(`{
          "reference" : {
            "id" : "2fd6ff94-2081-4d29-acbc-83a0a2f744a5",
            "type" : "WORKFLOW"
          },
          "name" : "Group Create",
          "description" : "Create a new Active Directory Group",
          "disabled" : false,
          "type" : "INTERACTIVE_PROCESS",
          "config" : "{\"workflowId\" : \"6b42d9be-61b6-46af-827e-ea29ba8aa3d9\"}"
        }`) // LauncherRequest | Payload to replace Launcher

          
          var launcherRequest beta.LauncherRequest
          if err := json.Unmarshal(launcherrequest, &launcherRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.LaunchersAPI.PutLauncher(context.Background(), launcherID).LauncherRequest(launcherRequest).Execute()
          //resp, r, err := apiClient.Beta.LaunchersAPI.PutLauncher(context.Background(), launcherID).LauncherRequest(launcherRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `LaunchersAPI.PutLauncher``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutLauncher`: Launcher
          fmt.Fprintf(os.Stdout, "Response from `LaunchersAPI.PutLauncher`: %v\n", resp)
        }
- path: /beta/launchers/{launcherID}/launch
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/launchers#start-launcher
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          launcherID := `e3012408-8b61-4564-ad41-c5ec131c325b` // string | ID of the Launcher to be launched # string | ID of the Launcher to be launched

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.LaunchersAPI.StartLauncher(context.Background(), launcherID).Execute()
          //resp, r, err := apiClient.Beta.LaunchersAPI.StartLauncher(context.Background(), launcherID).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `LaunchersAPI.StartLauncher``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `StartLauncher`: StartLauncher200Response
          fmt.Fprintf(os.Stdout, "Response from `LaunchersAPI.StartLauncher`: %v\n", resp)
        }
- path: /identity-profiles/{identity-profile-id}/lifecycle-states/{lifecycle-state-id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/lifecycle-states#get-lifecycle-states
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityProfileId := `2b838de9-db9b-abcf-e646-d4f274ad4238` // string | Identity Profile ID. # string | Identity Profile ID.
          lifecycleStateId := `ef38f94347e94562b5bb8424a56397d8` // string | Lifecycle State ID. # string | Lifecycle State ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.LifecycleStatesAPI.GetLifecycleStates(context.Background(), identityProfileId, lifecycleStateId).Execute()
          //resp, r, err := apiClient.Beta.LifecycleStatesAPI.GetLifecycleStates(context.Background(), identityProfileId, lifecycleStateId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `LifecycleStatesAPI.GetLifecycleStates``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetLifecycleStates`: LifecycleState
          fmt.Fprintf(os.Stdout, "Response from `LifecycleStatesAPI.GetLifecycleStates`: %v\n", resp)
        }
- path: /identity-profiles/{identity-profile-id}/lifecycle-states/{lifecycle-state-id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/lifecycle-states#update-lifecycle-states
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityProfileId := `2b838de9-db9b-abcf-e646-d4f274ad4238` // string | Identity Profile ID. # string | Identity Profile ID.
          lifecycleStateId := `ef38f94347e94562b5bb8424a56397d8` // string | Lifecycle State ID. # string | Lifecycle State ID.
          jsonpatchoperation := []byte(`[{op=replace, path=/description, value=Updated description!}, {op=replace, path=/accessProfileIds, value=[2c918087742bab150174407a80f3125e, 2c918087742bab150174407a80f3124f]}, {op=replace, path=/accountActions, value=[{action=ENABLE, sourceIds=[2c9180846a2f82fb016a481c1b1560c5, 2c9180846a2f82fb016a481c1b1560cc]}, {action=DISABLE, sourceIds=[2c91808869a0c9980169a207258513fb]}]}, {op=replace, path=/emailNotificationOption, value={notifyManagers=true, notifyAllAdmins=false, notifySpecificUsers=false, emailAddressList=[]}}]`) // []JsonPatchOperation | A list of lifecycle state update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.  The following fields can be updated: * enabled * description * accountActions * accessProfileIds * emailNotificationOption 

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.LifecycleStatesAPI.UpdateLifecycleStates(context.Background(), identityProfileId, lifecycleStateId).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.LifecycleStatesAPI.UpdateLifecycleStates(context.Background(), identityProfileId, lifecycleStateId).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `LifecycleStatesAPI.UpdateLifecycleStates``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateLifecycleStates`: LifecycleState
          fmt.Fprintf(os.Stdout, "Response from `LifecycleStatesAPI.UpdateLifecycleStates`: %v\n", resp)
        }
- path: /mfa/{method}/delete
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-configuration#delete-mfa-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          method := `okta-verify` // string | The name of the MFA method. The currently supported method names are 'okta-verify' and 'duo-web'. # string | The name of the MFA method. The currently supported method names are 'okta-verify' and 'duo-web'.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAConfigurationAPI.DeleteMFAConfig(context.Background(), method).Execute()
          //resp, r, err := apiClient.Beta.MFAConfigurationAPI.DeleteMFAConfig(context.Background(), method).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAConfigurationAPI.DeleteMFAConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteMFAConfig`: MfaOktaConfig
          fmt.Fprintf(os.Stdout, "Response from `MFAConfigurationAPI.DeleteMFAConfig`: %v\n", resp)
        }
- path: /mfa/duo-web/config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-configuration#get-mfa-duo-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAConfigurationAPI.GetMFADuoConfig(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.MFAConfigurationAPI.GetMFADuoConfig(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAConfigurationAPI.GetMFADuoConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetMFADuoConfig`: MfaDuoConfig
          fmt.Fprintf(os.Stdout, "Response from `MFAConfigurationAPI.GetMFADuoConfig`: %v\n", resp)
        }
- path: /mfa/kba/config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-configuration#get-mfa-kba-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          allLanguages := allLanguages=true // bool | Indicator whether the question text should be returned in all configured languages    * If true, the question text is returned in all languages that it is configured in.    * If false, the question text is returned in the user locale if available, else for the default locale.     * If not passed, it behaves the same way as passing this parameter as false (optional) # bool | Indicator whether the question text should be returned in all configured languages    * If true, the question text is returned in all languages that it is configured in.    * If false, the question text is returned in the user locale if available, else for the default locale.     * If not passed, it behaves the same way as passing this parameter as false (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAConfigurationAPI.GetMFAKbaConfig(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.MFAConfigurationAPI.GetMFAKbaConfig(context.Background()).AllLanguages(allLanguages).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAConfigurationAPI.GetMFAKbaConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetMFAKbaConfig`: []KbaQuestion
          fmt.Fprintf(os.Stdout, "Response from `MFAConfigurationAPI.GetMFAKbaConfig`: %v\n", resp)
        }
- path: /mfa/okta-verify/config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-configuration#get-mfa-okta-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAConfigurationAPI.GetMFAOktaConfig(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.MFAConfigurationAPI.GetMFAOktaConfig(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAConfigurationAPI.GetMFAOktaConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetMFAOktaConfig`: MfaOktaConfig
          fmt.Fprintf(os.Stdout, "Response from `MFAConfigurationAPI.GetMFAOktaConfig`: %v\n", resp)
        }
- path: /mfa/duo-web/config
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-configuration#set-mfa-duo-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           mfaduoconfig := []byte(`{
          "accessKey" : "qw123Y3QlA5UqocYpdU3rEkzrK2D497y",
          "host" : "example.com",
          "configProperties" : {
            "skey" : "qwERttyZx1CdlQye2Vwtbsjr3HKddy4BAiCXjc5x",
            "ikey" : "Q123WE45R6TY7890ZXCV"
          },
          "mfaMethod" : "duo-web",
          "enabled" : true,
          "identityAttribute" : "email"
        }`) // MfaDuoConfig | 

          
          var mfaDuoConfig beta.MfaDuoConfig
          if err := json.Unmarshal(mfaduoconfig, &mfaDuoConfig); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAConfigurationAPI.SetMFADuoConfig(context.Background()).MfaDuoConfig(mfaDuoConfig).Execute()
          //resp, r, err := apiClient.Beta.MFAConfigurationAPI.SetMFADuoConfig(context.Background()).MfaDuoConfig(mfaDuoConfig).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAConfigurationAPI.SetMFADuoConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SetMFADuoConfig`: MfaDuoConfig
          fmt.Fprintf(os.Stdout, "Response from `MFAConfigurationAPI.SetMFADuoConfig`: %v\n", resp)
        }
- path: /mfa/kba/config/answers
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-configuration#set-mfakba-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          kbaanswerrequestitem := []byte(`[{id=173423, answer=822cd15d6c15aa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a0859a2fea34}, {id=c54fee53-2d63-4fc5-9259-3e93b9994135, answer=9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08}]`) // []KbaAnswerRequestItem | 

          
          var kbaAnswerRequestItem []beta.KbaAnswerRequestItem
          if err := json.Unmarshal(kbaanswerrequestitem, &kbaAnswerRequestItem); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAConfigurationAPI.SetMFAKBAConfig(context.Background()).KbaAnswerRequestItem(kbaAnswerRequestItem).Execute()
          //resp, r, err := apiClient.Beta.MFAConfigurationAPI.SetMFAKBAConfig(context.Background()).KbaAnswerRequestItem(kbaAnswerRequestItem).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAConfigurationAPI.SetMFAKBAConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SetMFAKBAConfig`: []KbaAnswerResponseItem
          fmt.Fprintf(os.Stdout, "Response from `MFAConfigurationAPI.SetMFAKBAConfig`: %v\n", resp)
        }
- path: /mfa/okta-verify/config
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-configuration#set-mfa-okta-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           mfaoktaconfig := []byte(`{
          "accessKey" : "qw123Y3QlA5UqocYpdU3rEkzrK2D497y",
          "host" : "example.com",
          "mfaMethod" : "okta-verify",
          "enabled" : true,
          "identityAttribute" : "email"
        }`) // MfaOktaConfig | 

          
          var mfaOktaConfig beta.MfaOktaConfig
          if err := json.Unmarshal(mfaoktaconfig, &mfaOktaConfig); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAConfigurationAPI.SetMFAOktaConfig(context.Background()).MfaOktaConfig(mfaOktaConfig).Execute()
          //resp, r, err := apiClient.Beta.MFAConfigurationAPI.SetMFAOktaConfig(context.Background()).MfaOktaConfig(mfaOktaConfig).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAConfigurationAPI.SetMFAOktaConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SetMFAOktaConfig`: MfaOktaConfig
          fmt.Fprintf(os.Stdout, "Response from `MFAConfigurationAPI.SetMFAOktaConfig`: %v\n", resp)
        }
- path: /mfa/{method}/test
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-configuration#test-mfa-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          method := `okta-verify` // string | The name of the MFA method. The currently supported method names are 'okta-verify' and 'duo-web'. # string | The name of the MFA method. The currently supported method names are 'okta-verify' and 'duo-web'.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAConfigurationAPI.TestMFAConfig(context.Background(), method).Execute()
          //resp, r, err := apiClient.Beta.MFAConfigurationAPI.TestMFAConfig(context.Background(), method).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAConfigurationAPI.TestMFAConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `TestMFAConfig`: MfaConfigTestResponse
          fmt.Fprintf(os.Stdout, "Response from `MFAConfigurationAPI.TestMFAConfig`: %v\n", resp)
        }
- path: /mfa/token/send
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-controller#create-send-token
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           sendtokenrequest := []byte(`{
          "userAlias" : "will.albin",
          "deliveryType" : "EMAIL_WORK"
        }`) // SendTokenRequest | 

          
          var sendTokenRequest beta.SendTokenRequest
          if err := json.Unmarshal(sendtokenrequest, &sendTokenRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAControllerAPI.CreateSendToken(context.Background()).SendTokenRequest(sendTokenRequest).Execute()
          //resp, r, err := apiClient.Beta.MFAControllerAPI.CreateSendToken(context.Background()).SendTokenRequest(sendTokenRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAControllerAPI.CreateSendToken``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateSendToken`: SendTokenResponse
          fmt.Fprintf(os.Stdout, "Response from `MFAControllerAPI.CreateSendToken`: %v\n", resp)
        }
- path: /mfa/{method}/poll
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-controller#ping-verification-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          method := `okta-verify` // string | The name of the MFA method. The currently supported method names are 'okta-verify', 'duo-web', 'kba','token', 'rsa' # string | The name of the MFA method. The currently supported method names are 'okta-verify', 'duo-web', 'kba','token', 'rsa'
           verificationpollrequest := []byte(`{
          "requestId" : "089899f13a8f4da7824996191587bab9"
        }`) // VerificationPollRequest | 

          
          var verificationPollRequest beta.VerificationPollRequest
          if err := json.Unmarshal(verificationpollrequest, &verificationPollRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAControllerAPI.PingVerificationStatus(context.Background(), method).VerificationPollRequest(verificationPollRequest).Execute()
          //resp, r, err := apiClient.Beta.MFAControllerAPI.PingVerificationStatus(context.Background(), method).VerificationPollRequest(verificationPollRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAControllerAPI.PingVerificationStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PingVerificationStatus`: VerificationResponse
          fmt.Fprintf(os.Stdout, "Response from `MFAControllerAPI.PingVerificationStatus`: %v\n", resp)
        }
- path: /mfa/duo-web/verify
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-controller#send-duo-verify-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           duoverificationrequest := []byte(`{
          "signedResponse" : "AUTH|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjUzMDg5|f1f5f8ced5b340f3d303b05d0efa0e43b6a8f970:APP|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjU2NjE5|cb44cf44353f5127edcae31b1da0355f87357db2",
          "userId" : "2c9180947f0ef465017f215cbcfd004b"
        }`) // DuoVerificationRequest | 

          
          var duoVerificationRequest beta.DuoVerificationRequest
          if err := json.Unmarshal(duoverificationrequest, &duoVerificationRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAControllerAPI.SendDuoVerifyRequest(context.Background()).DuoVerificationRequest(duoVerificationRequest).Execute()
          //resp, r, err := apiClient.Beta.MFAControllerAPI.SendDuoVerifyRequest(context.Background()).DuoVerificationRequest(duoVerificationRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAControllerAPI.SendDuoVerifyRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SendDuoVerifyRequest`: VerificationResponse
          fmt.Fprintf(os.Stdout, "Response from `MFAControllerAPI.SendDuoVerifyRequest`: %v\n", resp)
        }
- path: /mfa/kba/authenticate
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-controller#send-kba-answers
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          kbaanswerrequestitem := []byte(`[{id=173423, answer=822cd15d6c15aa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a0859a2fea34}, {id=c54fee53-2d63-4fc5-9259-3e93b9994135, answer=9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08}]`) // []KbaAnswerRequestItem | 

          
          var kbaAnswerRequestItem []beta.KbaAnswerRequestItem
          if err := json.Unmarshal(kbaanswerrequestitem, &kbaAnswerRequestItem); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAControllerAPI.SendKbaAnswers(context.Background()).KbaAnswerRequestItem(kbaAnswerRequestItem).Execute()
          //resp, r, err := apiClient.Beta.MFAControllerAPI.SendKbaAnswers(context.Background()).KbaAnswerRequestItem(kbaAnswerRequestItem).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAControllerAPI.SendKbaAnswers``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SendKbaAnswers`: KbaAuthResponse
          fmt.Fprintf(os.Stdout, "Response from `MFAControllerAPI.SendKbaAnswers`: %v\n", resp)
        }
- path: /mfa/okta-verify/verify
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-controller#send-okta-verify-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           oktaverificationrequest := []byte(`{
          "userId" : "example@mail.com"
        }`) // OktaVerificationRequest | 

          
          var oktaVerificationRequest beta.OktaVerificationRequest
          if err := json.Unmarshal(oktaverificationrequest, &oktaVerificationRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAControllerAPI.SendOktaVerifyRequest(context.Background()).OktaVerificationRequest(oktaVerificationRequest).Execute()
          //resp, r, err := apiClient.Beta.MFAControllerAPI.SendOktaVerifyRequest(context.Background()).OktaVerificationRequest(oktaVerificationRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAControllerAPI.SendOktaVerifyRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SendOktaVerifyRequest`: VerificationResponse
          fmt.Fprintf(os.Stdout, "Response from `MFAControllerAPI.SendOktaVerifyRequest`: %v\n", resp)
        }
- path: /mfa/token/authenticate
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/mfa-controller#send-token-auth-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           tokenauthrequest := []byte(`{
          "userAlias" : "will.albin",
          "deliveryType" : "EMAIL_WORK",
          "token" : "12345"
        }`) // TokenAuthRequest | 

          
          var tokenAuthRequest beta.TokenAuthRequest
          if err := json.Unmarshal(tokenauthrequest, &tokenAuthRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MFAControllerAPI.SendTokenAuthRequest(context.Background()).TokenAuthRequest(tokenAuthRequest).Execute()
          //resp, r, err := apiClient.Beta.MFAControllerAPI.SendTokenAuthRequest(context.Background()).TokenAuthRequest(tokenAuthRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MFAControllerAPI.SendTokenAuthRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SendTokenAuthRequest`: TokenAuthResponse
          fmt.Fprintf(os.Stdout, "Response from `MFAControllerAPI.SendTokenAuthRequest`: %v\n", resp)
        }
- path: /managed-clients/{id}/status
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/managed-clients#get-managed-client-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `aClientId` // string | ID of the Managed Client Status to get # string | ID of the Managed Client Status to get
          type_ :=  // ManagedClientType | Type of the Managed Client Status to get # ManagedClientType | Type of the Managed Client Status to get

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ManagedClientsAPI.GetManagedClientStatus(context.Background(), id).Type_(type_).Execute()
          //resp, r, err := apiClient.Beta.ManagedClientsAPI.GetManagedClientStatus(context.Background(), id).Type_(type_).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ManagedClientsAPI.GetManagedClientStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetManagedClientStatus`: ManagedClientStatus
          fmt.Fprintf(os.Stdout, "Response from `ManagedClientsAPI.GetManagedClientStatus`: %v\n", resp)
        }
- path: /managed-clients/{id}/status
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/managed-clients#update-managed-client-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            "time"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `aClientId` // string | ID of the Managed Client Status to update # string | ID of the Managed Client Status to update
           managedclientstatus := []byte(`{
          "body" : {
            "alertKey" : "",
            "id" : "5678",
            "clusterId" : "1234",
            "ccg_etag" : "ccg_etag123xyz456",
            "ccg_pin" : "NONE",
            "cookbook_etag" : "20210420125956-20210511144538",
            "hostname" : "megapod-useast1-secret-hostname.sailpoint.com",
            "internal_ip" : "127.0.0.1",
            "lastSeen" : "1620843964604",
            "sinceSeen" : "14708",
            "sinceSeenMillis" : "14708",
            "localDev" : false,
            "stacktrace" : "",
            "status" : "NORMAL",
            "product" : "idn",
            "platform_version" : "2",
            "os_version" : "2345.3.1",
            "os_type" : "flatcar",
            "hypervisor" : "unknown"
          },
          "type" : "CCG",
          "status" : "NORMAL",
          "timestamp" : "2020-01-01T00:00:00Z"
        }`) // ManagedClientStatus | 

          
          var managedClientStatus beta.ManagedClientStatus
          if err := json.Unmarshal(managedclientstatus, &managedClientStatus); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ManagedClientsAPI.UpdateManagedClientStatus(context.Background(), id).ManagedClientStatus(managedClientStatus).Execute()
          //resp, r, err := apiClient.Beta.ManagedClientsAPI.UpdateManagedClientStatus(context.Background(), id).ManagedClientStatus(managedClientStatus).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ManagedClientsAPI.UpdateManagedClientStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateManagedClientStatus`: ManagedClientStatusAggResponse
          fmt.Fprintf(os.Stdout, "Response from `ManagedClientsAPI.UpdateManagedClientStatus`: %v\n", resp)
        }
- path: /managed-clusters/{id}/log-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/managed-clusters#get-client-log-configuration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `aClusterId` // string | ID of ManagedCluster to get log configuration for # string | ID of ManagedCluster to get log configuration for

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ManagedClustersAPI.GetClientLogConfiguration(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.ManagedClustersAPI.GetClientLogConfiguration(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ManagedClustersAPI.GetClientLogConfiguration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetClientLogConfiguration`: ClientLogConfiguration
          fmt.Fprintf(os.Stdout, "Response from `ManagedClustersAPI.GetClientLogConfiguration`: %v\n", resp)
        }
- path: /managed-clusters/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/managed-clusters#get-managed-cluster
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `aClusterId` // string | ID of the ManagedCluster to get # string | ID of the ManagedCluster to get

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ManagedClustersAPI.GetManagedCluster(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.ManagedClustersAPI.GetManagedCluster(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ManagedClustersAPI.GetManagedCluster``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetManagedCluster`: ManagedCluster
          fmt.Fprintf(os.Stdout, "Response from `ManagedClustersAPI.GetManagedCluster`: %v\n", resp)
        }
- path: /managed-clusters
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/managed-clusters#get-managed-clusters
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `operational eq operation` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **operational**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **operational**: *eq* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ManagedClustersAPI.GetManagedClusters(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.ManagedClustersAPI.GetManagedClusters(context.Background()).Offset(offset).Limit(limit).Count(count).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ManagedClustersAPI.GetManagedClusters``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetManagedClusters`: []ManagedCluster
          fmt.Fprintf(os.Stdout, "Response from `ManagedClustersAPI.GetManagedClusters`: %v\n", resp)
        }
- path: /managed-clusters/{id}/log-config
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/managed-clusters#put-client-log-configuration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `aClusterId` // string | ID of ManagedCluster to update log configuration for # string | ID of ManagedCluster to update log configuration for
           clientlogconfiguration := []byte(`{
          "durationMinutes" : 120,
          "rootLevel" : "INFO",
          "clientId" : "aClientId",
          "expiration" : "2020-12-15T19:13:36.079Z",
          "logLevels" : "INFO"
        }`) // ClientLogConfiguration | ClientLogConfiguration for given ManagedCluster

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ManagedClustersAPI.PutClientLogConfiguration(context.Background(), id).ClientLogConfiguration(clientLogConfiguration).Execute()
          //resp, r, err := apiClient.Beta.ManagedClustersAPI.PutClientLogConfiguration(context.Background(), id).ClientLogConfiguration(clientLogConfiguration).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ManagedClustersAPI.PutClientLogConfiguration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutClientLogConfiguration`: ClientLogConfiguration
          fmt.Fprintf(os.Stdout, "Response from `ManagedClustersAPI.PutClientLogConfiguration`: %v\n", resp)
        }
- path: /multihosts
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/multi-host-integration#create-multi-host-integration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           multihostintegrationscreate := []byte(`{
          "owner" : {
            "name" : "MyName",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "managementWorkgroup" : {
            "name" : "My Management Workgroup",
            "id" : "2c91808568c529c60168cca6f90c2222",
            "type" : "GOVERNANCE_GROUP"
          },
          "cluster" : {
            "name" : "Corporate Cluster",
            "id" : "2c9180866166b5b0016167c32ef31a66",
            "type" : "CLUSTER"
          },
          "connector" : "multihost-microsoft-sql-server",
          "connectorAttributes" : {
            "maxSourcesPerAggGroup" : 10,
            "maxAllowedSources" : 300
          },
          "created" : "2022-02-08T14:50:03.827Z",
          "name" : "My Multi-Host Integration",
          "description" : "This is the Multi-Host Integration.",
          "modified" : "2024-01-23T18:08:50.897Z"
        }`) // MultiHostIntegrationsCreate | The specifics of the Multi-Host Integration to create

          
          var multiHostIntegrationsCreate beta.MultiHostIntegrationsCreate
          if err := json.Unmarshal(multihostintegrationscreate, &multiHostIntegrationsCreate); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.CreateMultiHostIntegration(context.Background()).MultiHostIntegrationsCreate(multiHostIntegrationsCreate).Execute()
          //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.CreateMultiHostIntegration(context.Background()).MultiHostIntegrationsCreate(multiHostIntegrationsCreate).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.CreateMultiHostIntegration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateMultiHostIntegration`: MultiHostIntegrations
          fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.CreateMultiHostIntegration`: %v\n", resp)
        }
- path: /multihosts/{multihostId}
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/multi-host-integration#create-sources-within-multi-host
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          multihostId := `2c91808568c529c60168cca6f90c1326` // string | ID of the Multi-Host Integration. # string | ID of the Multi-Host Integration.
          multihostintegrationscreatesources := []byte(``) // []MultiHostIntegrationsCreateSources | The specifics of the sources to create within Multi-Host Integration.

          
          var multiHostIntegrationsCreateSources []beta.MultiHostIntegrationsCreateSources
          if err := json.Unmarshal(multihostintegrationscreatesources, &multiHostIntegrationsCreateSources); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.MultiHostIntegrationAPI.CreateSourcesWithinMultiHost(context.Background(), multihostId).MultiHostIntegrationsCreateSources(multiHostIntegrationsCreateSources).Execute()
          //r, err := apiClient.Beta.MultiHostIntegrationAPI.CreateSourcesWithinMultiHost(context.Background(), multihostId).MultiHostIntegrationsCreateSources(multiHostIntegrationsCreateSources).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.CreateSourcesWithinMultiHost``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /multihosts/{multihostId}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/multi-host-integration#delete-multi-host
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          multihostId := `2c91808568c529c60168cca6f90c1326` // string | ID of Multi-Host Integration to delete. # string | ID of Multi-Host Integration to delete.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.MultiHostIntegrationAPI.DeleteMultiHost(context.Background(), multihostId).Execute()
          //r, err := apiClient.Beta.MultiHostIntegrationAPI.DeleteMultiHost(context.Background(), multihostId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.DeleteMultiHost``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /multihosts/{multihostId}/acctAggregationGroups
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/multi-host-integration#get-acct-aggregation-groups
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          multihostId := `aMultiHostId` // string | ID of the Multi-Host Integration to update # string | ID of the Multi-Host Integration to update

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetAcctAggregationGroups(context.Background(), multihostId).Execute()
          //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetAcctAggregationGroups(context.Background(), multihostId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetAcctAggregationGroups``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetAcctAggregationGroups`: MultiHostIntegrationsAggScheduleUpdate
          fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetAcctAggregationGroups`: %v\n", resp)
        }
- path: /multihosts/{multiHostId}/entitlementAggregationGroups
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/multi-host-integration#get-entitlement-aggregation-groups
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          multiHostId := `aMultiHostId` // string | ID of the Multi-Host Integration to update # string | ID of the Multi-Host Integration to update

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetEntitlementAggregationGroups(context.Background(), multiHostId).Execute()
          //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetEntitlementAggregationGroups(context.Background(), multiHostId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetEntitlementAggregationGroups``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetEntitlementAggregationGroups`: MultiHostIntegrationsAggScheduleUpdate
          fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetEntitlementAggregationGroups`: %v\n", resp)
        }
- path: /multihosts/{multihostId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/multi-host-integration#get-multi-host-integrations
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          multihostId := `2c91808568c529c60168cca6f90c1326` // string | ID of the Multi-Host Integration. # string | ID of the Multi-Host Integration.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultiHostIntegrations(context.Background(), multihostId).Execute()
          //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultiHostIntegrations(context.Background(), multihostId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetMultiHostIntegrations``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetMultiHostIntegrations`: MultiHostIntegrations
          fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetMultiHostIntegrations`: %v\n", resp)
        }
- path: /multihosts
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/multi-host-integration#get-multi-host-integrations-list
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional)
          filters := `id eq 2c91808b6ef1d43e016efba0ce470904` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **type**: *in*  **forSubAdminId**: *in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **type**: *in*  **forSubAdminId**: *in* (optional)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          forSubadmin := `5168015d32f890ca15812c9180835d2e` // string | If provided, filters the returned list according to what is visible to the indicated ROLE_SUBADMIN Identity or SOURCE_SUBADMIN identity.  The value of the parameter is either an Identity ID, or the special value **me**, which is shorthand for the calling Identity's ID.  A 400 Bad Request error is returned if the **for-subadmin** parameter is specified for an Identity that is not a subadmin. (optional) # string | If provided, filters the returned list according to what is visible to the indicated ROLE_SUBADMIN Identity or SOURCE_SUBADMIN identity.  The value of the parameter is either an Identity ID, or the special value **me**, which is shorthand for the calling Identity's ID.  A 400 Bad Request error is returned if the **for-subadmin** parameter is specified for an Identity that is not a subadmin. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultiHostIntegrationsList(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultiHostIntegrationsList(context.Background()).Offset(offset).Limit(limit).Sorters(sorters).Filters(filters).Count(count).ForSubadmin(forSubadmin).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetMultiHostIntegrationsList``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetMultiHostIntegrationsList`: []MultiHostIntegrations
          fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetMultiHostIntegrationsList`: %v\n", resp)
        }
- path: /multihosts/{multiHostId}/sources/errors
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/multi-host-integration#get-multi-host-source-creation-errors
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          multiHostId := `004091cb79b04636b88662afa50a4440` // string | ID of the Multi-Host Integration # string | ID of the Multi-Host Integration

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultiHostSourceCreationErrors(context.Background(), multiHostId).Execute()
          //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultiHostSourceCreationErrors(context.Background(), multiHostId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetMultiHostSourceCreationErrors``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetMultiHostSourceCreationErrors`: []SourceCreationErrors
          fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetMultiHostSourceCreationErrors`: %v\n", resp)
        }
- path: /multihosts/types
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/multi-host-integration#get-multihost-integration-types
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultihostIntegrationTypes(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetMultihostIntegrationTypes(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetMultihostIntegrationTypes``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetMultihostIntegrationTypes`: []MultiHostIntegrationTemplateType
          fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetMultihostIntegrationTypes`: %v\n", resp)
        }
- path: /multihosts/{multihostId}/sources
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/multi-host-integration#get-sources-within-multi-host
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          multihostId := `aMultiHostId` // string | ID of the Multi-Host Integration to update # string | ID of the Multi-Host Integration to update
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional)
          filters := `id eq 2c91808b6ef1d43e016efba0ce470904` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *in* (optional)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetSourcesWithinMultiHost(context.Background(), multihostId).Execute()
          //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.GetSourcesWithinMultiHost(context.Background(), multihostId).Offset(offset).Limit(limit).Sorters(sorters).Filters(filters).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.GetSourcesWithinMultiHost``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSourcesWithinMultiHost`: []MultiHostSources
          fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.GetSourcesWithinMultiHost`: %v\n", resp)
        }
- path: /multihosts/{multihostId}/sources/testConnection
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/multi-host-integration#test-connection-multi-host-sources
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          multihostId := `2c91808568c529c60168cca6f90c1324` // string | ID of the Multi-Host Integration # string | ID of the Multi-Host Integration

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.MultiHostIntegrationAPI.TestConnectionMultiHostSources(context.Background(), multihostId).Execute()
          //r, err := apiClient.Beta.MultiHostIntegrationAPI.TestConnectionMultiHostSources(context.Background(), multihostId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.TestConnectionMultiHostSources``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /multihosts/{multihostId}/sources/{sourceId}/testConnection
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/multi-host-integration#test-source-connection-multihost
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          multihostId := `2c91808568c529c60168cca6f90c1326` // string | ID of the Multi-Host Integration # string | ID of the Multi-Host Integration
          sourceId := `2c91808568c529f60168cca6f90c1324` // string | ID of the source within the Multi-Host Integration # string | ID of the source within the Multi-Host Integration

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.TestSourceConnectionMultihost(context.Background(), multihostId, sourceId).Execute()
          //resp, r, err := apiClient.Beta.MultiHostIntegrationAPI.TestSourceConnectionMultihost(context.Background(), multihostId, sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.TestSourceConnectionMultihost``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `TestSourceConnectionMultihost`: TestSourceConnectionMultihost200Response
          fmt.Fprintf(os.Stdout, "Response from `MultiHostIntegrationAPI.TestSourceConnectionMultihost`: %v\n", resp)
        }
- path: /multihosts/{multihostId}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/multi-host-integration#update-multi-host-sources
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          multihostId := `anId` // string | ID of the Multi-Host Integration to update. # string | ID of the Multi-Host Integration to update.
          updatemultihostsourcesrequestinner := []byte(`[{op=add, path=/description, value=MDK Multi-Host Integration 222 description}]`) // []UpdateMultiHostSourcesRequestInner | This endpoint allows you to update a Multi-Host Integration. 

          
          var updateMultiHostSourcesRequestInner []beta.UpdateMultiHostSourcesRequestInner
          if err := json.Unmarshal(updatemultihostsourcesrequestinner, &updateMultiHostSourcesRequestInner); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.MultiHostIntegrationAPI.UpdateMultiHostSources(context.Background(), multihostId).UpdateMultiHostSourcesRequestInner(updateMultiHostSourcesRequestInner).Execute()
          //r, err := apiClient.Beta.MultiHostIntegrationAPI.UpdateMultiHostSources(context.Background(), multihostId).UpdateMultiHostSourcesRequestInner(updateMultiHostSourcesRequestInner).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `MultiHostIntegrationAPI.UpdateMultiHostSources``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /non-employee-approvals/{id}/approve
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#approve-non-employee-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808b6ef1d43e016efba0ce470904` // string | Non-Employee approval item id (UUID) # string | Non-Employee approval item id (UUID)
           nonemployeeapprovaldecision := []byte(`{
          "comment" : "comment"
        }`) // NonEmployeeApprovalDecision | 

          
          var nonEmployeeApprovalDecision beta.NonEmployeeApprovalDecision
          if err := json.Unmarshal(nonemployeeapprovaldecision, &nonEmployeeApprovalDecision); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.ApproveNonEmployeeRequest(context.Background(), id).NonEmployeeApprovalDecision(nonEmployeeApprovalDecision).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.ApproveNonEmployeeRequest(context.Background(), id).NonEmployeeApprovalDecision(nonEmployeeApprovalDecision).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.ApproveNonEmployeeRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ApproveNonEmployeeRequest`: NonEmployeeApprovalItem
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.ApproveNonEmployeeRequest`: %v\n", resp)
        }
- path: /non-employee-records
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#create-non-employee-record
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            "time"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           nonemployeerequestbody := []byte(`{
          "sourceId" : "2c91808568c529c60168cca6f90c1313",
          "firstName" : "William",
          "lastName" : "Smith",
          "manager" : "jane.doe",
          "data" : {
            "description" : "Auditing"
          },
          "accountName" : "william.smith",
          "phone" : "5125555555",
          "endDate" : "2021-03-25T00:00:00-05:00",
          "email" : "william.smith@example.com",
          "startDate" : "2020-03-24T00:00:00-05:00"
        }`) // NonEmployeeRequestBody | Non-Employee record creation request body.

          
          var nonEmployeeRequestBody beta.NonEmployeeRequestBody
          if err := json.Unmarshal(nonemployeerequestbody, &nonEmployeeRequestBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.CreateNonEmployeeRecord(context.Background()).NonEmployeeRequestBody(nonEmployeeRequestBody).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.CreateNonEmployeeRecord(context.Background()).NonEmployeeRequestBody(nonEmployeeRequestBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.CreateNonEmployeeRecord``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateNonEmployeeRecord`: NonEmployeeRecord
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.CreateNonEmployeeRecord`: %v\n", resp)
        }
- path: /non-employee-requests
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#create-non-employee-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            "time"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           nonemployeerequestbody := []byte(`{
          "sourceId" : "2c91808568c529c60168cca6f90c1313",
          "firstName" : "William",
          "lastName" : "Smith",
          "manager" : "jane.doe",
          "data" : {
            "description" : "Auditing"
          },
          "accountName" : "william.smith",
          "phone" : "5125555555",
          "endDate" : "2021-03-25T00:00:00-05:00",
          "email" : "william.smith@example.com",
          "startDate" : "2020-03-24T00:00:00-05:00"
        }`) // NonEmployeeRequestBody | Non-Employee creation request body

          
          var nonEmployeeRequestBody beta.NonEmployeeRequestBody
          if err := json.Unmarshal(nonemployeerequestbody, &nonEmployeeRequestBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.CreateNonEmployeeRequest(context.Background()).NonEmployeeRequestBody(nonEmployeeRequestBody).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.CreateNonEmployeeRequest(context.Background()).NonEmployeeRequestBody(nonEmployeeRequestBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.CreateNonEmployeeRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateNonEmployeeRequest`: NonEmployeeRequest
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.CreateNonEmployeeRequest`: %v\n", resp)
        }
- path: /non-employee-sources
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#create-non-employee-source
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           nonemployeesourcerequestbody := []byte(`{
          "owner" : {
            "id" : "2c91808570313110017040b06f344ec9"
          },
          "managementWorkgroup" : "123299",
          "accountManagers" : [ {
            "id" : "2c91808570313110017040b06f344ec9"
          }, {
            "id" : "2c91808570313110017040b06f344ec9"
          }, {
            "id" : "2c91808570313110017040b06f344ec9"
          }, {
            "id" : "2c91808570313110017040b06f344ec9"
          }, {
            "id" : "2c91808570313110017040b06f344ec9"
          } ],
          "name" : "Retail",
          "description" : "Source description",
          "approvers" : [ {
            "id" : "2c91808570313110017040b06f344ec9"
          }, {
            "id" : "2c91808570313110017040b06f344ec9"
          }, {
            "id" : "2c91808570313110017040b06f344ec9"
          } ]
        }`) // NonEmployeeSourceRequestBody | Non-Employee source creation request body.

          
          var nonEmployeeSourceRequestBody beta.NonEmployeeSourceRequestBody
          if err := json.Unmarshal(nonemployeesourcerequestbody, &nonEmployeeSourceRequestBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.CreateNonEmployeeSource(context.Background()).NonEmployeeSourceRequestBody(nonEmployeeSourceRequestBody).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.CreateNonEmployeeSource(context.Background()).NonEmployeeSourceRequestBody(nonEmployeeSourceRequestBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.CreateNonEmployeeSource``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateNonEmployeeSource`: NonEmployeeSourceWithCloudExternalId
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.CreateNonEmployeeSource`: %v\n", resp)
        }
- path: /non-employee-sources/{sourceId}/schema-attributes
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#create-non-employee-source-schema-attributes
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c91808b6ef1d43e016efba0ce470904` // string | The Source id # string | The Source id
           nonemployeeschemaattributebody := []byte(`{
          "helpText" : "The unique identifier for the account",
          "label" : "Account Name",
          "placeholder" : "Enter a unique user name for this account.",
          "type" : "TEXT",
          "technicalName" : "account.name",
          "required" : true
        }`) // NonEmployeeSchemaAttributeBody | 

          
          var nonEmployeeSchemaAttributeBody beta.NonEmployeeSchemaAttributeBody
          if err := json.Unmarshal(nonemployeeschemaattributebody, &nonEmployeeSchemaAttributeBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.CreateNonEmployeeSourceSchemaAttributes(context.Background(), sourceId).NonEmployeeSchemaAttributeBody(nonEmployeeSchemaAttributeBody).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.CreateNonEmployeeSourceSchemaAttributes(context.Background(), sourceId).NonEmployeeSchemaAttributeBody(nonEmployeeSchemaAttributeBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.CreateNonEmployeeSourceSchemaAttributes``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateNonEmployeeSourceSchemaAttributes`: NonEmployeeSchemaAttribute
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.CreateNonEmployeeSourceSchemaAttributes`: %v\n", resp)
        }
- path: /non-employee-records/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#delete-non-employee-record
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808b6ef1d43e016efba0ce470904` // string | Non-Employee record id (UUID) # string | Non-Employee record id (UUID)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeRecord(context.Background(), id).Execute()
          //r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeRecord(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeRecord``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /non-employee-records/bulk-delete
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#delete-non-employee-record-in-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           deletenonemployeerecordinbulkrequest := []byte(``) // DeleteNonEmployeeRecordInBulkRequest | Non-Employee bulk delete request body.

          
          var deleteNonEmployeeRecordInBulkRequest beta.DeleteNonEmployeeRecordInBulkRequest
          if err := json.Unmarshal(deletenonemployeerecordinbulkrequest, &deleteNonEmployeeRecordInBulkRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeRecordInBulk(context.Background()).DeleteNonEmployeeRecordInBulkRequest(deleteNonEmployeeRecordInBulkRequest).Execute()
          //r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeRecordInBulk(context.Background()).DeleteNonEmployeeRecordInBulkRequest(deleteNonEmployeeRecordInBulkRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeRecordInBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /non-employee-requests/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#delete-non-employee-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808b6ef1d43e016efba0ce470904` // string | Non-Employee request id in the UUID format # string | Non-Employee request id in the UUID format

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeRequest(context.Background(), id).Execute()
          //r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeRequest(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /non-employee-sources/{sourceId}/schema-attributes/{attributeId}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#delete-non-employee-schema-attribute
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          attributeId := `2c91808b6ef1d43e016efba0ce470904` // string | The Schema Attribute Id (UUID) # string | The Schema Attribute Id (UUID)
          sourceId := `2c91808b6ef1d43e016efba0ce470904` // string | The Source id # string | The Source id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeSchemaAttribute(context.Background(), attributeId, sourceId).Execute()
          //r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeSchemaAttribute(context.Background(), attributeId, sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeSchemaAttribute``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /non-employee-sources/{sourceId}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#delete-non-employee-source
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c91808b6ef1d43e016efba0ce470904` // string | Source Id # string | Source Id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeSource(context.Background(), sourceId).Execute()
          //r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeSource(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeSource``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /non-employee-sources/{sourceId}/schema-attributes
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#delete-non-employee-source-schema-attributes
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c91808b6ef1d43e016efba0ce470904` // string | The Source id # string | The Source id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeSourceSchemaAttributes(context.Background(), sourceId).Execute()
          //r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeSourceSchemaAttributes(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.DeleteNonEmployeeSourceSchemaAttributes``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /non-employee-approvals/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#get-non-employee-approval
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ac10d20a-841e-1e7d-8184-32d2e22c0179` // string | Non-Employee approval item id (UUID) # string | Non-Employee approval item id (UUID)
          includeDetail := `include-detail=false` // string | The object nonEmployeeRequest will not be included detail when set to false. *Default value is true* (optional) # string | The object nonEmployeeRequest will not be included detail when set to false. *Default value is true* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeApproval(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeApproval(context.Background(), id).IncludeDetail(includeDetail).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.GetNonEmployeeApproval``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetNonEmployeeApproval`: NonEmployeeApprovalItemDetail
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.GetNonEmployeeApproval`: %v\n", resp)
        }
- path: /non-employee-approvals/summary/{requested-for}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#get-non-employee-approval-summary
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          requestedFor := `ac10d20a-841e-1e7d-8184-32d2e22c0179` // string | The identity (UUID) of the approver for whom for whom the summary is being retrieved. Use \"me\" instead to indicate the current user. # string | The identity (UUID) of the approver for whom for whom the summary is being retrieved. Use \"me\" instead to indicate the current user.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeApprovalSummary(context.Background(), requestedFor).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeApprovalSummary(context.Background(), requestedFor).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.GetNonEmployeeApprovalSummary``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetNonEmployeeApprovalSummary`: NonEmployeeApprovalSummary
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.GetNonEmployeeApprovalSummary`: %v\n", resp)
        }
- path: /non-employee-sources/{id}/non-employee-bulk-upload/status
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#get-non-employee-bulk-upload-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c918085842e69ae018432d22ccb212f` // string | Source ID (UUID) # string | Source ID (UUID)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeBulkUploadStatus(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeBulkUploadStatus(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.GetNonEmployeeBulkUploadStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetNonEmployeeBulkUploadStatus`: NonEmployeeBulkUploadStatus
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.GetNonEmployeeBulkUploadStatus`: %v\n", resp)
        }
- path: /non-employee-sources/{id}/non-employees/download
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#get-non-employee-export-records
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c918085842e69ae018432d22ccb212f` // string | Source Id (UUID) # string | Source Id (UUID)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeExportRecords(context.Background(), id).Execute()
          //r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeExportRecords(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.GetNonEmployeeExportRecords``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /non-employee-sources/{id}/schema-attributes-template/download
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#get-non-employee-export-source-schema-template
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c918085842e69ae018432d22ccb212f` // string | Source Id (UUID) # string | Source Id (UUID)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeExportSourceSchemaTemplate(context.Background(), id).Execute()
          //r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeExportSourceSchemaTemplate(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.GetNonEmployeeExportSourceSchemaTemplate``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /non-employee-records/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#get-non-employee-record
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808b6ef1d43e016efba0ce470904` // string | Non-Employee record id (UUID) # string | Non-Employee record id (UUID)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeRecord(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeRecord(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.GetNonEmployeeRecord``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetNonEmployeeRecord`: NonEmployeeRecord
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.GetNonEmployeeRecord`: %v\n", resp)
        }
- path: /non-employee-requests/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#get-non-employee-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808b6ef1d43e016efba0ce470904` // string | Non-Employee request id (UUID) # string | Non-Employee request id (UUID)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeRequest(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeRequest(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.GetNonEmployeeRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetNonEmployeeRequest`: NonEmployeeRequest
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.GetNonEmployeeRequest`: %v\n", resp)
        }
- path: /non-employee-requests/summary/{requested-for}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#get-non-employee-request-summary
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          requestedFor := `ac10d20a-841e-1e7d-8184-32d2e22c0179` // string | The identity (UUID) of the non-employee account manager for whom the summary is being retrieved. Use \"me\" instead to indicate the current user. # string | The identity (UUID) of the non-employee account manager for whom the summary is being retrieved. Use \"me\" instead to indicate the current user.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeRequestSummary(context.Background(), requestedFor).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeRequestSummary(context.Background(), requestedFor).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.GetNonEmployeeRequestSummary``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetNonEmployeeRequestSummary`: NonEmployeeRequestSummary
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.GetNonEmployeeRequestSummary`: %v\n", resp)
        }
- path: /non-employee-sources/{sourceId}/schema-attributes/{attributeId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#get-non-employee-schema-attribute
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          attributeId := `2c918085842e69ae018432d22ccb212f` // string | The Schema Attribute Id (UUID) # string | The Schema Attribute Id (UUID)
          sourceId := `2c918085842e69ae018432d22ccb212f` // string | The Source id # string | The Source id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeSchemaAttribute(context.Background(), attributeId, sourceId).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeSchemaAttribute(context.Background(), attributeId, sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.GetNonEmployeeSchemaAttribute``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetNonEmployeeSchemaAttribute`: NonEmployeeSchemaAttribute
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.GetNonEmployeeSchemaAttribute`: %v\n", resp)
        }
- path: /non-employee-sources/{sourceId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#get-non-employee-source
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c91808b7c28b350017c2a2ec5790aa1` // string | Source Id # string | Source Id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeSource(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeSource(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.GetNonEmployeeSource``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetNonEmployeeSource`: NonEmployeeSource
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.GetNonEmployeeSource`: %v\n", resp)
        }
- path: /non-employee-sources/{sourceId}/schema-attributes
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#get-non-employee-source-schema-attributes
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c918085842e69ae018432d22ccb212f` // string | The Source id # string | The Source id
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeSourceSchemaAttributes(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.GetNonEmployeeSourceSchemaAttributes(context.Background(), sourceId).Limit(limit).Offset(offset).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.GetNonEmployeeSourceSchemaAttributes``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetNonEmployeeSourceSchemaAttributes`: []NonEmployeeSchemaAttribute
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.GetNonEmployeeSourceSchemaAttributes`: %v\n", resp)
        }
- path: /non-employee-sources/{id}/non-employee-bulk-upload
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#import-non-employee-records-in-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `e136567de87e4d029e60b3c3c55db56d` // string | Source Id (UUID) # string | Source Id (UUID)
          data := BINARY_DATA_HERE // *os.File |  # *os.File | 

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.ImportNonEmployeeRecordsInBulk(context.Background(), id).Data(data).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.ImportNonEmployeeRecordsInBulk(context.Background(), id).Data(data).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.ImportNonEmployeeRecordsInBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ImportNonEmployeeRecordsInBulk`: NonEmployeeBulkUploadJob
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.ImportNonEmployeeRecordsInBulk`: %v\n", resp)
        }
- path: /non-employee-approvals
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#list-non-employee-approval
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          requestedFor := `ac10d20a-841e-1e7d-8184-32d2e22c0179` // string | The identity for whom the request was made. *me* indicates the current user. (optional) # string | The identity for whom the request was made. *me* indicates the current user. (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `approvalStatus eq "PENDING"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **approvalStatus**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **approvalStatus**: *eq* (optional)
          sorters := `created` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, modified** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.ListNonEmployeeApproval(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.ListNonEmployeeApproval(context.Background()).RequestedFor(requestedFor).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.ListNonEmployeeApproval``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListNonEmployeeApproval`: []NonEmployeeApprovalItem
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.ListNonEmployeeApproval`: %v\n", resp)
        }
- path: /non-employee-records
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#list-non-employee-records
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          sorters := `accountName,sourceId` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified** (optional)
          filters := `sourceId eq "2c91808568c529c60168cca6f90c1313"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **sourceId**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **sourceId**: *eq* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.ListNonEmployeeRecords(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.ListNonEmployeeRecords(context.Background()).Limit(limit).Offset(offset).Count(count).Sorters(sorters).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.ListNonEmployeeRecords``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListNonEmployeeRecords`: []NonEmployeeRecord
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.ListNonEmployeeRecords`: %v\n", resp)
        }
- path: /non-employee-requests
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#list-non-employee-requests
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          requestedFor := `me` // string | The identity for whom the request was made. *me* indicates the current user. # string | The identity for whom the request was made. *me* indicates the current user.
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          sorters := `approvalStatus,firstName` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, approvalStatus, firstName, lastName, email, phone, accountName, startDate, endDate** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, approvalStatus, firstName, lastName, email, phone, accountName, startDate, endDate** (optional)
          filters := `sourceId eq "2c91808568c529c60168cca6f90c1313"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **sourceId**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **sourceId**: *eq* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.ListNonEmployeeRequests(context.Background()).RequestedFor(requestedFor).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.ListNonEmployeeRequests(context.Background()).RequestedFor(requestedFor).Limit(limit).Offset(offset).Count(count).Sorters(sorters).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.ListNonEmployeeRequests``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListNonEmployeeRequests`: []NonEmployeeRequest
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.ListNonEmployeeRequests`: %v\n", resp)
        }
- path: /non-employee-sources
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#list-non-employee-sources
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          requestedFor := `me` // string | Identity the request was made for. Use 'me' to indicate the current user. (optional) # string | Identity the request was made for. Use 'me' to indicate the current user. (optional)
          nonEmployeeCount := false // bool | Flag that determines whether the API will return a non-employee count associated with the source. (optional) (default to false) # bool | Flag that determines whether the API will return a non-employee count associated with the source. (optional) (default to false)
          sorters := `name,created` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, sourceId** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, sourceId** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.ListNonEmployeeSources(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.ListNonEmployeeSources(context.Background()).Limit(limit).Offset(offset).Count(count).RequestedFor(requestedFor).NonEmployeeCount(nonEmployeeCount).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.ListNonEmployeeSources``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListNonEmployeeSources`: []NonEmployeeSourceWithNECount
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.ListNonEmployeeSources`: %v\n", resp)
        }
- path: /non-employee-records/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#patch-non-employee-record
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808b6ef1d43e016efba0ce470904` // string | Non-employee record id (UUID) # string | Non-employee record id (UUID)
          jsonpatchoperation := []byte(`[{op=replace, path=/endDate, value={2019-08-23T18:40:35.772Z=null}}]`) // []JsonPatchOperation | A list of non-employee update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard. Attributes are restricted by user type. Owner of source can update end date. Organization admins can update all available fields.

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.PatchNonEmployeeRecord(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.PatchNonEmployeeRecord(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.PatchNonEmployeeRecord``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchNonEmployeeRecord`: NonEmployeeRecord
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.PatchNonEmployeeRecord`: %v\n", resp)
        }
- path: /non-employee-sources/{sourceId}/schema-attributes/{attributeId}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#patch-non-employee-schema-attribute
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          attributeId := `2c91808b6ef1d43e016efba0ce470904` // string | The Schema Attribute Id (UUID) # string | The Schema Attribute Id (UUID)
          sourceId := `2c91808b6ef1d43e016efba0ce470904` // string | The Source id # string | The Source id
          jsonpatchoperation := []byte(`[{op=replace, path=/label, value={new attribute label=null}}]`) // []JsonPatchOperation | A list of schema attribute update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard. The following properties are allowed for update ':' 'label', 'helpText', 'placeholder', 'required'.

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.PatchNonEmployeeSchemaAttribute(context.Background(), attributeId, sourceId).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.PatchNonEmployeeSchemaAttribute(context.Background(), attributeId, sourceId).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.PatchNonEmployeeSchemaAttribute``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchNonEmployeeSchemaAttribute`: NonEmployeeSchemaAttribute
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.PatchNonEmployeeSchemaAttribute`: %v\n", resp)
        }
- path: /non-employee-sources/{sourceId}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#patch-non-employee-source
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c91808b6ef1d43e016efba0ce470904` // string | Source Id # string | Source Id
          jsonpatchoperation := []byte(`[{op=replace, path=/name, value={new name=null}}, {op=replace, path=/approvers, value=[2c91809f703bb37a017040a2fe8748c7, 48b1f463c9e8427db5a5071bd81914b8]}]`) // []JsonPatchOperation | A list of non-employee source update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.PatchNonEmployeeSource(context.Background(), sourceId).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.PatchNonEmployeeSource(context.Background(), sourceId).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.PatchNonEmployeeSource``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchNonEmployeeSource`: NonEmployeeSource
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.PatchNonEmployeeSource`: %v\n", resp)
        }
- path: /non-employee-records/{id}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#put-non-employee-record
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            "time"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808b6ef1d43e016efba0ce470904` // string | Non-employee record id (UUID) # string | Non-employee record id (UUID)
           nonemployeerequestbody := []byte(`{
          "sourceId" : "2c91808568c529c60168cca6f90c1313",
          "firstName" : "William",
          "lastName" : "Smith",
          "manager" : "jane.doe",
          "data" : {
            "description" : "Auditing"
          },
          "accountName" : "william.smith",
          "phone" : "5125555555",
          "endDate" : "2021-03-25T00:00:00-05:00",
          "email" : "william.smith@example.com",
          "startDate" : "2020-03-24T00:00:00-05:00"
        }`) // NonEmployeeRequestBody | Non-employee record creation request body. Attributes are restricted by user type. Owner of source can update end date. Organization admins can update all available fields.

          
          var nonEmployeeRequestBody beta.NonEmployeeRequestBody
          if err := json.Unmarshal(nonemployeerequestbody, &nonEmployeeRequestBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.PutNonEmployeeRecord(context.Background(), id).NonEmployeeRequestBody(nonEmployeeRequestBody).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.PutNonEmployeeRecord(context.Background(), id).NonEmployeeRequestBody(nonEmployeeRequestBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.PutNonEmployeeRecord``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutNonEmployeeRecord`: NonEmployeeRecord
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.PutNonEmployeeRecord`: %v\n", resp)
        }
- path: /non-employee-approvals/{id}/reject
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/non-employee-lifecycle-management#reject-non-employee-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808b6ef1d43e016efba0ce470904` // string | Non-Employee approval item id (UUID) # string | Non-Employee approval item id (UUID)
           nonemployeerejectapprovaldecision := []byte(`{
          "comment" : "comment"
        }`) // NonEmployeeRejectApprovalDecision | 

          
          var nonEmployeeRejectApprovalDecision beta.NonEmployeeRejectApprovalDecision
          if err := json.Unmarshal(nonemployeerejectapprovaldecision, &nonEmployeeRejectApprovalDecision); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.RejectNonEmployeeRequest(context.Background(), id).NonEmployeeRejectApprovalDecision(nonEmployeeRejectApprovalDecision).Execute()
          //resp, r, err := apiClient.Beta.NonEmployeeLifecycleManagementAPI.RejectNonEmployeeRequest(context.Background(), id).NonEmployeeRejectApprovalDecision(nonEmployeeRejectApprovalDecision).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NonEmployeeLifecycleManagementAPI.RejectNonEmployeeRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `RejectNonEmployeeRequest`: NonEmployeeApprovalItem
          fmt.Fprintf(os.Stdout, "Response from `NonEmployeeLifecycleManagementAPI.RejectNonEmployeeRequest`: %v\n", resp)
        }
- path: /verified-domains
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#create-domain-dkim
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           domainaddress := []byte(`{
          "domain" : "sailpoint.com"
        }`) // DomainAddress | 

          
          var domainAddress beta.DomainAddress
          if err := json.Unmarshal(domainaddress, &domainAddress); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NotificationsAPI.CreateDomainDkim(context.Background()).DomainAddress(domainAddress).Execute()
          //resp, r, err := apiClient.Beta.NotificationsAPI.CreateDomainDkim(context.Background()).DomainAddress(domainAddress).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.CreateDomainDkim``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateDomainDkim`: DomainStatusDto
          fmt.Fprintf(os.Stdout, "Response from `NotificationsAPI.CreateDomainDkim`: %v\n", resp)
        }
- path: /notification-templates
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#create-notification-template
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           templatedto := []byte(`{
          "slackTemplate" : "slackTemplate",
          "footer" : "footer",
          "teamsTemplate" : "teamsTemplate",
          "subject" : "You have $numberOfPendingTasks $taskTasks to complete in ${__global.productName}.",
          "created" : "2020-01-01T00:00:00Z",
          "description" : "Daily digest - sent if number of outstanding tasks for task owner > 0",
          "medium" : "EMAIL",
          "locale" : "en",
          "body" : "Please go to the task manager",
          "name" : "Task Manager Subscription",
          "replyTo" : "$__global.emailFromAddress",
          "header" : "header",
          "modified" : "2020-01-01T00:00:00Z",
          "from" : "$__global.emailFromAddress",
          "id" : "c17bea3a-574d-453c-9e04-4365fbf5af0b",
          "key" : "cloud_manual_work_item_summary"
        }`) // TemplateDto | 

          
          var templateDto beta.TemplateDto
          if err := json.Unmarshal(templatedto, &templateDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NotificationsAPI.CreateNotificationTemplate(context.Background()).TemplateDto(templateDto).Execute()
          //resp, r, err := apiClient.Beta.NotificationsAPI.CreateNotificationTemplate(context.Background()).TemplateDto(templateDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.CreateNotificationTemplate``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateNotificationTemplate`: TemplateDto
          fmt.Fprintf(os.Stdout, "Response from `NotificationsAPI.CreateNotificationTemplate`: %v\n", resp)
        }
- path: /verified-from-addresses
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#create-verified-from-address
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           emailstatusdto := []byte(`{
          "isVerifiedByDomain" : false,
          "verificationStatus" : "PENDING",
          "id" : "id",
          "email" : "sender@example.com"
        }`) // EmailStatusDto | 

          
          var emailStatusDto beta.EmailStatusDto
          if err := json.Unmarshal(emailstatusdto, &emailStatusDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NotificationsAPI.CreateVerifiedFromAddress(context.Background()).EmailStatusDto(emailStatusDto).Execute()
          //resp, r, err := apiClient.Beta.NotificationsAPI.CreateVerifiedFromAddress(context.Background()).EmailStatusDto(emailStatusDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.CreateVerifiedFromAddress``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateVerifiedFromAddress`: EmailStatusDto
          fmt.Fprintf(os.Stdout, "Response from `NotificationsAPI.CreateVerifiedFromAddress`: %v\n", resp)
        }
- path: /notification-templates/bulk-delete
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#delete-notification-templates-in-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          templatebulkdeletedto := []byte(``) // []TemplateBulkDeleteDto | 

          
          var templateBulkDeleteDto []beta.TemplateBulkDeleteDto
          if err := json.Unmarshal(templatebulkdeletedto, &templateBulkDeleteDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.NotificationsAPI.DeleteNotificationTemplatesInBulk(context.Background()).TemplateBulkDeleteDto(templateBulkDeleteDto).Execute()
          //r, err := apiClient.Beta.NotificationsAPI.DeleteNotificationTemplatesInBulk(context.Background()).TemplateBulkDeleteDto(templateBulkDeleteDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.DeleteNotificationTemplatesInBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /verified-from-addresses/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#delete-verified-from-address
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `id_example` // string |  # string | 

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.NotificationsAPI.DeleteVerifiedFromAddress(context.Background(), id).Execute()
          //r, err := apiClient.Beta.NotificationsAPI.DeleteVerifiedFromAddress(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.DeleteVerifiedFromAddress``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /verified-domains
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#get-dkim-attributes
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NotificationsAPI.GetDkimAttributes(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.NotificationsAPI.GetDkimAttributes(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.GetDkimAttributes``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetDkimAttributes`: []DkimAttributes
          fmt.Fprintf(os.Stdout, "Response from `NotificationsAPI.GetDkimAttributes`: %v\n", resp)
        }
- path: /mail-from-attributes/{identityId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#get-mail-from-attributes
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityId := `bobsmith@sailpoint.com` // string | Returns the MX and TXT record to be put in your DNS, as well as the MAIL FROM domain status # string | Returns the MX and TXT record to be put in your DNS, as well as the MAIL FROM domain status

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NotificationsAPI.GetMailFromAttributes(context.Background(), identityId).Execute()
          //resp, r, err := apiClient.Beta.NotificationsAPI.GetMailFromAttributes(context.Background(), identityId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.GetMailFromAttributes``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetMailFromAttributes`: MailFromAttributes
          fmt.Fprintf(os.Stdout, "Response from `NotificationsAPI.GetMailFromAttributes`: %v\n", resp)
        }
- path: /notification-templates/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#get-notification-template
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c17bea3a-574d-453c-9e04-4365fbf5af0b` // string | Id of the Notification Template # string | Id of the Notification Template

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NotificationsAPI.GetNotificationTemplate(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.NotificationsAPI.GetNotificationTemplate(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.GetNotificationTemplate``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetNotificationTemplate`: []TemplateDto
          fmt.Fprintf(os.Stdout, "Response from `NotificationsAPI.GetNotificationTemplate`: %v\n", resp)
        }
- path: /notification-template-context
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#get-notifications-template-context
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NotificationsAPI.GetNotificationsTemplateContext(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.NotificationsAPI.GetNotificationsTemplateContext(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.GetNotificationsTemplateContext``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetNotificationsTemplateContext`: NotificationTemplateContext
          fmt.Fprintf(os.Stdout, "Response from `NotificationsAPI.GetNotificationsTemplateContext`: %v\n", resp)
        }
- path: /verified-from-addresses
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#list-from-addresses
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `email eq "john.doe@company.com"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **email**: *eq, ge, le, sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **email**: *eq, ge, le, sw* (optional)
          sorters := `email` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **email** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **email** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NotificationsAPI.ListFromAddresses(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.NotificationsAPI.ListFromAddresses(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.ListFromAddresses``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListFromAddresses`: []EmailStatusDto
          fmt.Fprintf(os.Stdout, "Response from `NotificationsAPI.ListFromAddresses`: %v\n", resp)
        }
- path: /notification-preferences/{key}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#list-notification-preferences
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          key := `cloud_manual_work_item_summary` // string | The notification key. # string | The notification key.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NotificationsAPI.ListNotificationPreferences(context.Background(), key).Execute()
          //resp, r, err := apiClient.Beta.NotificationsAPI.ListNotificationPreferences(context.Background(), key).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.ListNotificationPreferences``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListNotificationPreferences`: []PreferencesDto
          fmt.Fprintf(os.Stdout, "Response from `NotificationsAPI.ListNotificationPreferences`: %v\n", resp)
        }
- path: /notification-template-defaults
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#list-notification-template-defaults
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          filters := `key eq "cloud_manual_work_item_summary"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **key**: *eq, in, sw*  **medium**: *eq, sw*  **locale**: *eq, sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **key**: *eq, in, sw*  **medium**: *eq, sw*  **locale**: *eq, sw* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NotificationsAPI.ListNotificationTemplateDefaults(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.NotificationsAPI.ListNotificationTemplateDefaults(context.Background()).Limit(limit).Offset(offset).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.ListNotificationTemplateDefaults``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListNotificationTemplateDefaults`: []TemplateDtoDefault
          fmt.Fprintf(os.Stdout, "Response from `NotificationsAPI.ListNotificationTemplateDefaults`: %v\n", resp)
        }
- path: /notification-templates
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#list-notification-templates
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          filters := `medium eq "EMAIL"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **key**: *eq, in*  **medium**: *eq*  **locale**: *eq*  **name**: *eq, sw*  **description**: *eq, sw*  **id**: *eq, sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **key**: *eq, in*  **medium**: *eq*  **locale**: *eq*  **name**: *eq, sw*  **description**: *eq, sw*  **id**: *eq, sw* (optional)
          sorters := `key, -name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **key, name, medium** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **key, name, medium** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NotificationsAPI.ListNotificationTemplates(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.NotificationsAPI.ListNotificationTemplates(context.Background()).Limit(limit).Offset(offset).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.ListNotificationTemplates``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListNotificationTemplates`: []TemplateDto
          fmt.Fprintf(os.Stdout, "Response from `NotificationsAPI.ListNotificationTemplates`: %v\n", resp)
        }
- path: /mail-from-attributes
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#put-mail-from-attributes
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           mailfromattributesdto := []byte(`{
          "identity" : "BobSmith@sailpoint.com",
          "mailFromDomain" : "example.sailpoint.com"
        }`) // MailFromAttributesDto | 

          
          var mailFromAttributesDto beta.MailFromAttributesDto
          if err := json.Unmarshal(mailfromattributesdto, &mailFromAttributesDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.NotificationsAPI.PutMailFromAttributes(context.Background()).MailFromAttributesDto(mailFromAttributesDto).Execute()
          //resp, r, err := apiClient.Beta.NotificationsAPI.PutMailFromAttributes(context.Background()).MailFromAttributesDto(mailFromAttributesDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.PutMailFromAttributes``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutMailFromAttributes`: MailFromAttributes
          fmt.Fprintf(os.Stdout, "Response from `NotificationsAPI.PutMailFromAttributes`: %v\n", resp)
        }
- path: /send-test-notification
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/notifications#send-test-notification
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           sendtestnotificationrequestdto := []byte(`{
          "context" : "{}",
          "medium" : "EMAIL",
          "key" : "cloud_manual_work_item_summary"
        }`) // SendTestNotificationRequestDto | 

          
          var sendTestNotificationRequestDto beta.SendTestNotificationRequestDto
          if err := json.Unmarshal(sendtestnotificationrequestdto, &sendTestNotificationRequestDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.NotificationsAPI.SendTestNotification(context.Background()).SendTestNotificationRequestDto(sendTestNotificationRequestDto).Execute()
          //r, err := apiClient.Beta.NotificationsAPI.SendTestNotification(context.Background()).SendTestNotificationRequestDto(sendTestNotificationRequestDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `NotificationsAPI.SendTestNotification``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /oauth-clients
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/o-auth-clients#create-oauth-client
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           createoauthclientrequest := []byte(`{
          "internal" : false,
          "businessName" : "Acme-Solar",
          "description" : "An API client used for the authorization_code, refresh_token, and client_credentials flows",
          "refreshTokenValiditySeconds" : 86400,
          "type" : "CONFIDENTIAL",
          "redirectUris" : [ "http://localhost:12345", "http://localhost:67890" ],
          "enabled" : true,
          "accessType" : "OFFLINE",
          "grantTypes" : [ "AUTHORIZATION_CODE", "CLIENT_CREDENTIALS", "REFRESH_TOKEN" ],
          "strongAuthSupported" : false,
          "homepageUrl" : "http://localhost:12345",
          "accessTokenValiditySeconds" : 750,
          "scope" : [ "demo:api-client-scope:first", "demo:api-client-scope:second" ],
          "name" : "Demo API Client",
          "claimsSupported" : false
        }`) // CreateOAuthClientRequest | 

          
          var createOAuthClientRequest beta.CreateOAuthClientRequest
          if err := json.Unmarshal(createoauthclientrequest, &createOAuthClientRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.OAuthClientsAPI.CreateOauthClient(context.Background()).CreateOAuthClientRequest(createOAuthClientRequest).Execute()
          //resp, r, err := apiClient.Beta.OAuthClientsAPI.CreateOauthClient(context.Background()).CreateOAuthClientRequest(createOAuthClientRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `OAuthClientsAPI.CreateOauthClient``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateOauthClient`: CreateOAuthClientResponse
          fmt.Fprintf(os.Stdout, "Response from `OAuthClientsAPI.CreateOauthClient`: %v\n", resp)
        }
- path: /oauth-clients/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/o-auth-clients#delete-oauth-client
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The OAuth client id # string | The OAuth client id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.OAuthClientsAPI.DeleteOauthClient(context.Background(), id).Execute()
          //r, err := apiClient.Beta.OAuthClientsAPI.DeleteOauthClient(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `OAuthClientsAPI.DeleteOauthClient``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /oauth-clients/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/o-auth-clients#get-oauth-client
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The OAuth client id # string | The OAuth client id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.OAuthClientsAPI.GetOauthClient(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.OAuthClientsAPI.GetOauthClient(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `OAuthClientsAPI.GetOauthClient``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetOauthClient`: GetOAuthClientResponse
          fmt.Fprintf(os.Stdout, "Response from `OAuthClientsAPI.GetOauthClient`: %v\n", resp)
        }
- path: /oauth-clients
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/o-auth-clients#list-oauth-clients
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          filters := `lastUsed le 2023-02-05T10:59:27.214Z` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **lastUsed**: *le, isnull* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **lastUsed**: *le, isnull* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.OAuthClientsAPI.ListOauthClients(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.OAuthClientsAPI.ListOauthClients(context.Background()).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `OAuthClientsAPI.ListOauthClients``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListOauthClients`: []GetOAuthClientResponse
          fmt.Fprintf(os.Stdout, "Response from `OAuthClientsAPI.ListOauthClients`: %v\n", resp)
        }
- path: /oauth-clients/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/o-auth-clients#patch-oauth-client
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The OAuth client id # string | The OAuth client id
          jsonpatchoperation := []byte(`[{op=replace, path=/strongAuthSupported, value=true}, {op=replace, path=/businessName, value=acme-solar}]`) // []JsonPatchOperation | A list of OAuth client update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.  The following fields are patchable: * tenant * businessName * homepageUrl * name * description * accessTokenValiditySeconds * refreshTokenValiditySeconds * redirectUris * grantTypes * accessType * enabled * strongAuthSupported * claimsSupported 

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.OAuthClientsAPI.PatchOauthClient(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.OAuthClientsAPI.PatchOauthClient(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `OAuthClientsAPI.PatchOauthClient``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchOauthClient`: GetOAuthClientResponse
          fmt.Fprintf(os.Stdout, "Response from `OAuthClientsAPI.PatchOauthClient`: %v\n", resp)
        }
- path: /org-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/org-config#get-org-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.OrgConfigAPI.GetOrgConfig(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.OrgConfigAPI.GetOrgConfig(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `OrgConfigAPI.GetOrgConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetOrgConfig`: OrgConfig
          fmt.Fprintf(os.Stdout, "Response from `OrgConfigAPI.GetOrgConfig`: %v\n", resp)
        }
- path: /org-config/valid-time-zones
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/org-config#get-valid-time-zones
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.OrgConfigAPI.GetValidTimeZones(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.OrgConfigAPI.GetValidTimeZones(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `OrgConfigAPI.GetValidTimeZones``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetValidTimeZones`: []string
          fmt.Fprintf(os.Stdout, "Response from `OrgConfigAPI.GetValidTimeZones`: %v\n", resp)
        }
- path: /org-config
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/org-config#patch-org-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          jsonpatchoperation := []byte(`[{op=replace, path=/timeZone, value=America/Toronto}]`) // []JsonPatchOperation | A list of schema attribute update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.OrgConfigAPI.PatchOrgConfig(context.Background()).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.OrgConfigAPI.PatchOrgConfig(context.Background()).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `OrgConfigAPI.PatchOrgConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchOrgConfig`: OrgConfig
          fmt.Fprintf(os.Stdout, "Response from `OrgConfigAPI.PatchOrgConfig`: %v\n", resp)
        }
- path: /password-org-config
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-configuration#create-password-org-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           passwordorgconfig := []byte(`{
          "digitTokenLength" : 9,
          "digitTokenEnabled" : true,
          "digitTokenDurationMinutes" : 10,
          "customInstructionsEnabled" : true
        }`) // PasswordOrgConfig | 

          
          var passwordOrgConfig beta.PasswordOrgConfig
          if err := json.Unmarshal(passwordorgconfig, &passwordOrgConfig); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordConfigurationAPI.CreatePasswordOrgConfig(context.Background()).PasswordOrgConfig(passwordOrgConfig).Execute()
          //resp, r, err := apiClient.Beta.PasswordConfigurationAPI.CreatePasswordOrgConfig(context.Background()).PasswordOrgConfig(passwordOrgConfig).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordConfigurationAPI.CreatePasswordOrgConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreatePasswordOrgConfig`: PasswordOrgConfig
          fmt.Fprintf(os.Stdout, "Response from `PasswordConfigurationAPI.CreatePasswordOrgConfig`: %v\n", resp)
        }
- path: /password-org-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-configuration#get-password-org-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordConfigurationAPI.GetPasswordOrgConfig(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.PasswordConfigurationAPI.GetPasswordOrgConfig(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordConfigurationAPI.GetPasswordOrgConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPasswordOrgConfig`: PasswordOrgConfig
          fmt.Fprintf(os.Stdout, "Response from `PasswordConfigurationAPI.GetPasswordOrgConfig`: %v\n", resp)
        }
- path: /password-org-config
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-configuration#put-password-org-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           passwordorgconfig := []byte(`{
          "digitTokenLength" : 9,
          "digitTokenEnabled" : true,
          "digitTokenDurationMinutes" : 10,
          "customInstructionsEnabled" : true
        }`) // PasswordOrgConfig | 

          
          var passwordOrgConfig beta.PasswordOrgConfig
          if err := json.Unmarshal(passwordorgconfig, &passwordOrgConfig); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordConfigurationAPI.PutPasswordOrgConfig(context.Background()).PasswordOrgConfig(passwordOrgConfig).Execute()
          //resp, r, err := apiClient.Beta.PasswordConfigurationAPI.PutPasswordOrgConfig(context.Background()).PasswordOrgConfig(passwordOrgConfig).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordConfigurationAPI.PutPasswordOrgConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutPasswordOrgConfig`: PasswordOrgConfig
          fmt.Fprintf(os.Stdout, "Response from `PasswordConfigurationAPI.PutPasswordOrgConfig`: %v\n", resp)
        }
- path: /password-dictionary
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-dictionary#get-password-dictionary
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordDictionaryAPI.GetPasswordDictionary(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.PasswordDictionaryAPI.GetPasswordDictionary(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordDictionaryAPI.GetPasswordDictionary``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPasswordDictionary`: string
          fmt.Fprintf(os.Stdout, "Response from `PasswordDictionaryAPI.GetPasswordDictionary`: %v\n", resp)
        }
- path: /password-dictionary
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-dictionary#put-password-dictionary
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          file := BINARY_DATA_HERE // *os.File |  (optional) # *os.File |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.PasswordDictionaryAPI.PutPasswordDictionary(context.Background()).Execute()
          //r, err := apiClient.Beta.PasswordDictionaryAPI.PutPasswordDictionary(context.Background()).File(file).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordDictionaryAPI.PutPasswordDictionary``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /generate-password-reset-token/digit
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-management#create-digit-token
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           passworddigittokenreset := []byte(`{
          "durationMinutes" : 5,
          "length" : 8,
          "userId" : "Abby.Smith"
        }`) // PasswordDigitTokenReset | 

          
          var passwordDigitTokenReset beta.PasswordDigitTokenReset
          if err := json.Unmarshal(passworddigittokenreset, &passwordDigitTokenReset); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordManagementAPI.CreateDigitToken(context.Background()).PasswordDigitTokenReset(passwordDigitTokenReset).Execute()
          //resp, r, err := apiClient.Beta.PasswordManagementAPI.CreateDigitToken(context.Background()).PasswordDigitTokenReset(passwordDigitTokenReset).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordManagementAPI.CreateDigitToken``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateDigitToken`: PasswordDigitToken
          fmt.Fprintf(os.Stdout, "Response from `PasswordManagementAPI.CreateDigitToken`: %v\n", resp)
        }
- path: /password-change-status/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-management#get-identity-password-change-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `id_example` // string |  # string | 

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordManagementAPI.GetIdentityPasswordChangeStatus(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.PasswordManagementAPI.GetIdentityPasswordChangeStatus(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordManagementAPI.GetIdentityPasswordChangeStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetIdentityPasswordChangeStatus`: PasswordStatus
          fmt.Fprintf(os.Stdout, "Response from `PasswordManagementAPI.GetIdentityPasswordChangeStatus`: %v\n", resp)
        }
- path: /query-password-info
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-management#query-password-info
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           passwordinfoquerydto := []byte(`{
          "sourceName" : "My-AD",
          "userName" : "Abby.Smith"
        }`) // PasswordInfoQueryDTO | 

          
          var passwordInfoQueryDTO beta.PasswordInfoQueryDTO
          if err := json.Unmarshal(passwordinfoquerydto, &passwordInfoQueryDTO); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordManagementAPI.QueryPasswordInfo(context.Background()).PasswordInfoQueryDTO(passwordInfoQueryDTO).Execute()
          //resp, r, err := apiClient.Beta.PasswordManagementAPI.QueryPasswordInfo(context.Background()).PasswordInfoQueryDTO(passwordInfoQueryDTO).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordManagementAPI.QueryPasswordInfo``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `QueryPasswordInfo`: PasswordInfo
          fmt.Fprintf(os.Stdout, "Response from `PasswordManagementAPI.QueryPasswordInfo`: %v\n", resp)
        }
- path: /set-password
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-management#set-identity-password
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           passwordchangerequest := []byte(`{
          "sourceId" : "8a807d4c73c545510173c545d4b60246",
          "accountId" : "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com",
          "identityId" : "8a807d4c73c545510173c545f0a002ff",
          "publicKeyId" : "YWQ2NjQ4MTItZjY0NC00MWExLWFjMjktOGNmMzU3Y2VlNjk2",
          "encryptedPassword" : "XzN+YwKgr2C+InkMYFMBG3UtjMEw5ZIql/XFlXo8cJNeslmkplx6vn4kd4/43IF9STBk5RnzR6XmjpEO+FwHDoiBwYZAkAZK/Iswxk4OdybG6Y4MStJCOCiK8osKr35IMMSV/mbO4wAeltoCk7daTWzTGLiI6UaT5tf+F2EgdjJZ7YqM8W8r7aUWsm3p2Xt01Y46ZRx0QaM91QruiIx2rECFT2pUO0wr+7oQ77jypATyGWRtADsu3YcvCk/6U5MqCnXMzKBcRas7NnZdSL/d5H1GglVGz3VLPMaivG4/oL4chOMmFCRl/zVsGxZ9RhN8rxsRGFFKn+rhExTi+bax3A=="
        }`) // PasswordChangeRequest | 

          
          var passwordChangeRequest beta.PasswordChangeRequest
          if err := json.Unmarshal(passwordchangerequest, &passwordChangeRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordManagementAPI.SetIdentityPassword(context.Background()).PasswordChangeRequest(passwordChangeRequest).Execute()
          //resp, r, err := apiClient.Beta.PasswordManagementAPI.SetIdentityPassword(context.Background()).PasswordChangeRequest(passwordChangeRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordManagementAPI.SetIdentityPassword``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SetIdentityPassword`: PasswordChangeResponse
          fmt.Fprintf(os.Stdout, "Response from `PasswordManagementAPI.SetIdentityPassword`: %v\n", resp)
        }
- path: /password-policies
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-policies#create-password-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           passwordpolicyv3dto := []byte(`{
          "validateAgainstAccountName" : true,
          "minLength" : 8,
          "description" : "Information about the Password Policy",
          "requireStrongAuthUntrustedGeographies" : true,
          "enablePasswdExpiration" : true,
          "minNumeric" : 8,
          "lastUpdated" : "2000-01-23T04:56:07.000+00:00",
          "validateAgainstAccountId" : false,
          "dateCreated" : "2000-01-23T04:56:07.000+00:00",
          "accountNameMinWordLength" : 6,
          "minUpper" : 8,
          "firstExpirationReminder" : 45,
          "modified" : "modified",
          "id" : "2c91808e7d976f3b017d9f5ceae440c8",
          "requireStrongAuthn" : true,
          "useDictionary" : false,
          "minSpecial" : 8,
          "sourceIds" : [ "2c91808382ffee0b01830de154f14034", "2f98808382ffee0b01830de154f12134" ],
          "passwordExpiration" : 8,
          "maxRepeatedChars" : 3,
          "minCharacterTypes" : 5,
          "minAlpha" : 5,
          "created" : "created",
          "useAccountAttributes" : false,
          "accountIdMinWordLength" : 4,
          "minLower" : 8,
          "useIdentityAttributes" : false,
          "defaultPolicy" : true,
          "requireStrongAuthOffNetwork" : true,
          "name" : "PasswordPolicy Example",
          "maxLength" : 25
        }`) // PasswordPolicyV3Dto | 

          
          var passwordPolicyV3Dto beta.PasswordPolicyV3Dto
          if err := json.Unmarshal(passwordpolicyv3dto, &passwordPolicyV3Dto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordPoliciesAPI.CreatePasswordPolicy(context.Background()).PasswordPolicyV3Dto(passwordPolicyV3Dto).Execute()
          //resp, r, err := apiClient.Beta.PasswordPoliciesAPI.CreatePasswordPolicy(context.Background()).PasswordPolicyV3Dto(passwordPolicyV3Dto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordPoliciesAPI.CreatePasswordPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreatePasswordPolicy`: PasswordPolicyV3Dto
          fmt.Fprintf(os.Stdout, "Response from `PasswordPoliciesAPI.CreatePasswordPolicy`: %v\n", resp)
        }
- path: /password-policies/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-policies#delete-password-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ff808081838d9e9d01838da6a03e0002` // string | The ID of password policy to delete. # string | The ID of password policy to delete.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.PasswordPoliciesAPI.DeletePasswordPolicy(context.Background(), id).Execute()
          //r, err := apiClient.Beta.PasswordPoliciesAPI.DeletePasswordPolicy(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordPoliciesAPI.DeletePasswordPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /password-policies/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-policies#get-password-policy-by-id
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ff808081838d9e9d01838da6a03e0005` // string | The ID of password policy to retrieve. # string | The ID of password policy to retrieve.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordPoliciesAPI.GetPasswordPolicyById(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.PasswordPoliciesAPI.GetPasswordPolicyById(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordPoliciesAPI.GetPasswordPolicyById``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPasswordPolicyById`: PasswordPolicyV3Dto
          fmt.Fprintf(os.Stdout, "Response from `PasswordPoliciesAPI.GetPasswordPolicyById`: %v\n", resp)
        }
- path: /password-policies
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-policies#list-password-policies
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordPoliciesAPI.ListPasswordPolicies(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.PasswordPoliciesAPI.ListPasswordPolicies(context.Background()).Limit(limit).Offset(offset).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordPoliciesAPI.ListPasswordPolicies``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListPasswordPolicies`: []PasswordPolicyV3Dto
          fmt.Fprintf(os.Stdout, "Response from `PasswordPoliciesAPI.ListPasswordPolicies`: %v\n", resp)
        }
- path: /password-policies/{id}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-policies#set-password-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ff808081838d9e9d01838da6a03e0007` // string | The ID of password policy to update. # string | The ID of password policy to update.
           passwordpolicyv3dto := []byte(`{
          "validateAgainstAccountName" : true,
          "minLength" : 8,
          "description" : "Information about the Password Policy",
          "requireStrongAuthUntrustedGeographies" : true,
          "enablePasswdExpiration" : true,
          "minNumeric" : 8,
          "lastUpdated" : "2000-01-23T04:56:07.000+00:00",
          "validateAgainstAccountId" : false,
          "dateCreated" : "2000-01-23T04:56:07.000+00:00",
          "accountNameMinWordLength" : 6,
          "minUpper" : 8,
          "firstExpirationReminder" : 45,
          "modified" : "modified",
          "id" : "2c91808e7d976f3b017d9f5ceae440c8",
          "requireStrongAuthn" : true,
          "useDictionary" : false,
          "minSpecial" : 8,
          "sourceIds" : [ "2c91808382ffee0b01830de154f14034", "2f98808382ffee0b01830de154f12134" ],
          "passwordExpiration" : 8,
          "maxRepeatedChars" : 3,
          "minCharacterTypes" : 5,
          "minAlpha" : 5,
          "created" : "created",
          "useAccountAttributes" : false,
          "accountIdMinWordLength" : 4,
          "minLower" : 8,
          "useIdentityAttributes" : false,
          "defaultPolicy" : true,
          "requireStrongAuthOffNetwork" : true,
          "name" : "PasswordPolicy Example",
          "maxLength" : 25
        }`) // PasswordPolicyV3Dto | 

          
          var passwordPolicyV3Dto beta.PasswordPolicyV3Dto
          if err := json.Unmarshal(passwordpolicyv3dto, &passwordPolicyV3Dto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordPoliciesAPI.SetPasswordPolicy(context.Background(), id).PasswordPolicyV3Dto(passwordPolicyV3Dto).Execute()
          //resp, r, err := apiClient.Beta.PasswordPoliciesAPI.SetPasswordPolicy(context.Background(), id).PasswordPolicyV3Dto(passwordPolicyV3Dto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordPoliciesAPI.SetPasswordPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SetPasswordPolicy`: PasswordPolicyV3Dto
          fmt.Fprintf(os.Stdout, "Response from `PasswordPoliciesAPI.SetPasswordPolicy`: %v\n", resp)
        }
- path: /password-sync-groups
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-sync-groups#create-password-sync-group
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           passwordsyncgroup := []byte(`{
          "created" : "2023-03-16T04:00:00Z",
          "name" : "Password Sync Group 1",
          "modified" : "2023-03-16T04:00:00Z",
          "passwordPolicyId" : "2c91808d744ba0ce01746f93b6204501",
          "id" : "6881f631-3bd5-4213-9c75-8e05cc3e35dd",
          "sourceIds" : [ "2c918084660f45d6016617daa9210584", "2c918084660f45d6016617daa9210500" ]
        }`) // PasswordSyncGroup | 

          
          var passwordSyncGroup beta.PasswordSyncGroup
          if err := json.Unmarshal(passwordsyncgroup, &passwordSyncGroup); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordSyncGroupsAPI.CreatePasswordSyncGroup(context.Background()).PasswordSyncGroup(passwordSyncGroup).Execute()
          //resp, r, err := apiClient.Beta.PasswordSyncGroupsAPI.CreatePasswordSyncGroup(context.Background()).PasswordSyncGroup(passwordSyncGroup).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordSyncGroupsAPI.CreatePasswordSyncGroup``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreatePasswordSyncGroup`: PasswordSyncGroup
          fmt.Fprintf(os.Stdout, "Response from `PasswordSyncGroupsAPI.CreatePasswordSyncGroup`: %v\n", resp)
        }
- path: /password-sync-groups/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-sync-groups#delete-password-sync-group
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `6881f631-3bd5-4213-9c75-8e05cc3e35dd` // string | The ID of password sync group to delete. # string | The ID of password sync group to delete.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.PasswordSyncGroupsAPI.DeletePasswordSyncGroup(context.Background(), id).Execute()
          //r, err := apiClient.Beta.PasswordSyncGroupsAPI.DeletePasswordSyncGroup(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordSyncGroupsAPI.DeletePasswordSyncGroup``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /password-sync-groups/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-sync-groups#get-password-sync-group
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `6881f631-3bd5-4213-9c75-8e05cc3e35dd` // string | The ID of password sync group to retrieve. # string | The ID of password sync group to retrieve.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordSyncGroupsAPI.GetPasswordSyncGroup(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.PasswordSyncGroupsAPI.GetPasswordSyncGroup(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordSyncGroupsAPI.GetPasswordSyncGroup``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPasswordSyncGroup`: PasswordSyncGroup
          fmt.Fprintf(os.Stdout, "Response from `PasswordSyncGroupsAPI.GetPasswordSyncGroup`: %v\n", resp)
        }
- path: /password-sync-groups
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-sync-groups#get-password-sync-groups
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordSyncGroupsAPI.GetPasswordSyncGroups(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.PasswordSyncGroupsAPI.GetPasswordSyncGroups(context.Background()).Limit(limit).Offset(offset).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordSyncGroupsAPI.GetPasswordSyncGroups``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPasswordSyncGroups`: []PasswordSyncGroup
          fmt.Fprintf(os.Stdout, "Response from `PasswordSyncGroupsAPI.GetPasswordSyncGroups`: %v\n", resp)
        }
- path: /password-sync-groups/{id}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/password-sync-groups#update-password-sync-group
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `6881f631-3bd5-4213-9c75-8e05cc3e35dd` // string | The ID of password sync group to update. # string | The ID of password sync group to update.
           passwordsyncgroup := []byte(`{
          "created" : "2023-03-16T04:00:00Z",
          "name" : "Password Sync Group 1",
          "modified" : "2023-03-16T04:00:00Z",
          "passwordPolicyId" : "2c91808d744ba0ce01746f93b6204501",
          "id" : "6881f631-3bd5-4213-9c75-8e05cc3e35dd",
          "sourceIds" : [ "2c918084660f45d6016617daa9210584", "2c918084660f45d6016617daa9210500" ]
        }`) // PasswordSyncGroup | 

          
          var passwordSyncGroup beta.PasswordSyncGroup
          if err := json.Unmarshal(passwordsyncgroup, &passwordSyncGroup); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PasswordSyncGroupsAPI.UpdatePasswordSyncGroup(context.Background(), id).PasswordSyncGroup(passwordSyncGroup).Execute()
          //resp, r, err := apiClient.Beta.PasswordSyncGroupsAPI.UpdatePasswordSyncGroup(context.Background(), id).PasswordSyncGroup(passwordSyncGroup).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PasswordSyncGroupsAPI.UpdatePasswordSyncGroup``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdatePasswordSyncGroup`: PasswordSyncGroup
          fmt.Fprintf(os.Stdout, "Response from `PasswordSyncGroupsAPI.UpdatePasswordSyncGroup`: %v\n", resp)
        }
- path: /personal-access-tokens
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/personal-access-tokens#create-personal-access-token
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           createpersonalaccesstokenrequest := []byte(`{
          "scope" : [ "demo:personal-access-token-scope:first", "demo:personal-access-token-scope:second" ],
          "accessTokenValiditySeconds" : 36900,
          "name" : "NodeJS Integration",
          "expirationDate" : "2018-01-11T18:45:37.098Z"
        }`) // CreatePersonalAccessTokenRequest | Name and scope of personal access token.

          
          var createPersonalAccessTokenRequest beta.CreatePersonalAccessTokenRequest
          if err := json.Unmarshal(createpersonalaccesstokenrequest, &createPersonalAccessTokenRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PersonalAccessTokensAPI.CreatePersonalAccessToken(context.Background()).CreatePersonalAccessTokenRequest(createPersonalAccessTokenRequest).Execute()
          //resp, r, err := apiClient.Beta.PersonalAccessTokensAPI.CreatePersonalAccessToken(context.Background()).CreatePersonalAccessTokenRequest(createPersonalAccessTokenRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PersonalAccessTokensAPI.CreatePersonalAccessToken``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreatePersonalAccessToken`: CreatePersonalAccessTokenResponse
          fmt.Fprintf(os.Stdout, "Response from `PersonalAccessTokensAPI.CreatePersonalAccessToken`: %v\n", resp)
        }
- path: /personal-access-tokens/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/personal-access-tokens#delete-personal-access-token
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The personal access token id # string | The personal access token id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.PersonalAccessTokensAPI.DeletePersonalAccessToken(context.Background(), id).Execute()
          //r, err := apiClient.Beta.PersonalAccessTokensAPI.DeletePersonalAccessToken(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PersonalAccessTokensAPI.DeletePersonalAccessToken``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /personal-access-tokens
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/personal-access-tokens#list-personal-access-tokens
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          ownerId := `2c9180867b50d088017b554662fb281e` // string | The identity ID of the owner whose personal access tokens should be listed.  If \"me\", the caller should have the following right: 'idn:my-personal-access-tokens:read' If an actual owner ID or if the `owner-id` parameter is omitted in the request,  the caller should have the following right: 'idn:all-personal-access-tokens:read'.  If the caller has the following right, then managed personal access tokens associated with `owner-id` will be retrieved: 'idn:managed-personal-access-tokens:read' (optional) # string | The identity ID of the owner whose personal access tokens should be listed.  If \"me\", the caller should have the following right: 'idn:my-personal-access-tokens:read' If an actual owner ID or if the `owner-id` parameter is omitted in the request,  the caller should have the following right: 'idn:all-personal-access-tokens:read'.  If the caller has the following right, then managed personal access tokens associated with `owner-id` will be retrieved: 'idn:managed-personal-access-tokens:read' (optional)
          filters := `lastUsed le 2023-02-05T10:59:27.214Z` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **lastUsed**: *le, isnull* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **lastUsed**: *le, isnull* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PersonalAccessTokensAPI.ListPersonalAccessTokens(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.PersonalAccessTokensAPI.ListPersonalAccessTokens(context.Background()).OwnerId(ownerId).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PersonalAccessTokensAPI.ListPersonalAccessTokens``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListPersonalAccessTokens`: []GetPersonalAccessTokenResponse
          fmt.Fprintf(os.Stdout, "Response from `PersonalAccessTokensAPI.ListPersonalAccessTokens`: %v\n", resp)
        }
- path: /personal-access-tokens/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/personal-access-tokens#patch-personal-access-token
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The Personal Access Token id # string | The Personal Access Token id
          jsonpatchoperation := []byte(`[{op=replace, path=/name, value=New name}, {op=replace, path=/scope, value=[sp:scopes:all]}]`) // []JsonPatchOperation | A list of OAuth client update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.  The following fields are patchable: * name * scope 

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PersonalAccessTokensAPI.PatchPersonalAccessToken(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.PersonalAccessTokensAPI.PatchPersonalAccessToken(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PersonalAccessTokensAPI.PatchPersonalAccessToken``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchPersonalAccessToken`: GetPersonalAccessTokenResponse
          fmt.Fprintf(os.Stdout, "Response from `PersonalAccessTokensAPI.PatchPersonalAccessToken`: %v\n", resp)
        }
- path: /public-identities-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/public-identities-config#get-public-identity-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PublicIdentitiesConfigAPI.GetPublicIdentityConfig(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.PublicIdentitiesConfigAPI.GetPublicIdentityConfig(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PublicIdentitiesConfigAPI.GetPublicIdentityConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPublicIdentityConfig`: PublicIdentityConfig
          fmt.Fprintf(os.Stdout, "Response from `PublicIdentitiesConfigAPI.GetPublicIdentityConfig`: %v\n", resp)
        }
- path: /public-identities-config
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/public-identities-config#update-public-identity-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           publicidentityconfig := []byte(`{
          "modified" : "2018-06-25T20:22:28.104Z",
          "attributes" : [ {
            "name" : "Country",
            "key" : "country"
          }, {
            "name" : "Country",
            "key" : "country"
          } ],
          "modifiedBy" : {
            "name" : "Thomas Edison",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          }
        }`) // PublicIdentityConfig | 

          
          var publicIdentityConfig beta.PublicIdentityConfig
          if err := json.Unmarshal(publicidentityconfig, &publicIdentityConfig); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.PublicIdentitiesConfigAPI.UpdatePublicIdentityConfig(context.Background()).PublicIdentityConfig(publicIdentityConfig).Execute()
          //resp, r, err := apiClient.Beta.PublicIdentitiesConfigAPI.UpdatePublicIdentityConfig(context.Background()).PublicIdentityConfig(publicIdentityConfig).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `PublicIdentitiesConfigAPI.UpdatePublicIdentityConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdatePublicIdentityConfig`: PublicIdentityConfig
          fmt.Fprintf(os.Stdout, "Response from `PublicIdentitiesConfigAPI.UpdatePublicIdentityConfig`: %v\n", resp)
        }
- path: /requestable-objects
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/requestable-objects#list-requestable-objects
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityId := `e7eab60924f64aa284175b9fa3309599` // string | If present, the value returns only requestable objects for the specified identity.  * Admin users can call this with any identity ID value.  * Non-admin users can only specify *me* or pass their own identity ID value.  * If absent, returns a list of all requestable objects for the tenant. Only admin users can make such a call. In this case, the available, pending, assigned accesses will not be annotated in the result. (optional) # string | If present, the value returns only requestable objects for the specified identity.  * Admin users can call this with any identity ID value.  * Non-admin users can only specify *me* or pass their own identity ID value.  * If absent, returns a list of all requestable objects for the tenant. Only admin users can make such a call. In this case, the available, pending, assigned accesses will not be annotated in the result. (optional)
          types := []byte(`ACCESS_PROFILE,ROLE`) // []string | Filters the results to the specified type/types, where each type is one of `ROLE` or `ACCESS_PROFILE`. If absent, all types are returned. SailPoint may add support for additional types in the future without notice. (optional)
          term := `Finance Role` // string | Allows searching requestable access items with a partial match on the name or description. If `term` is provided, then the API will ignore the `filter` query parameter. (optional) # string | Allows searching requestable access items with a partial match on the name or description. If `term` is provided, then the API will ignore the `filter` query parameter. (optional)
          statuses := []byte(`[ASSIGNED, PENDING]`) // []RequestableObjectRequestStatus | Filters the result to the specified status/statuses, where each status is one of `AVAILABLE`, `ASSIGNED`, or `PENDING`. Specifying this parameter without also specifying an `identity-id` parameter results in an error.  SailPoint may add additional statuses in the future without notice. (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `name sw "bob"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw*  (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw*  (optional)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name**  (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name**  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RequestableObjectsAPI.ListRequestableObjects(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.RequestableObjectsAPI.ListRequestableObjects(context.Background()).IdentityId(identityId).Types(types).Term(term).Statuses(statuses).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RequestableObjectsAPI.ListRequestableObjects``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListRequestableObjects`: []RequestableObject
          fmt.Fprintf(os.Stdout, "Response from `RequestableObjectsAPI.ListRequestableObjects`: %v\n", resp)
        }
- path: /role-insights/requests
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/role-insights#create-role-insight-requests
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RoleInsightsAPI.CreateRoleInsightRequests(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.RoleInsightsAPI.CreateRoleInsightRequests(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RoleInsightsAPI.CreateRoleInsightRequests``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateRoleInsightRequests`: RoleInsightsResponse
          fmt.Fprintf(os.Stdout, "Response from `RoleInsightsAPI.CreateRoleInsightRequests`: %v\n", resp)
        }
- path: /role-insights/{insightId}/entitlement-changes/download
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/role-insights#download-role-insights-entitlements-changes
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          insightId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role insight id # string | The role insight id
          sorters := `identitiesWithAccess` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **identitiesWithAccess**  The default sort is **identitiesWithAccess** in descending order. (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **identitiesWithAccess**  The default sort is **identitiesWithAccess** in descending order. (optional)
          filters := `name sw "r"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **description**: *sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **description**: *sw* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RoleInsightsAPI.DownloadRoleInsightsEntitlementsChanges(context.Background(), insightId).Execute()
          //resp, r, err := apiClient.Beta.RoleInsightsAPI.DownloadRoleInsightsEntitlementsChanges(context.Background(), insightId).Sorters(sorters).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RoleInsightsAPI.DownloadRoleInsightsEntitlementsChanges``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DownloadRoleInsightsEntitlementsChanges`: string
          fmt.Fprintf(os.Stdout, "Response from `RoleInsightsAPI.DownloadRoleInsightsEntitlementsChanges`: %v\n", resp)
        }
- path: /role-insights/{insightId}/entitlement-changes/{entitlementId}/identities
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/role-insights#get-entitlement-changes-identities
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          insightId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role insight id # string | The role insight id
          entitlementId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The entitlement id # string | The entitlement id
          hasEntitlement := true // bool | Identity has this entitlement or not (optional) (default to false) # bool | Identity has this entitlement or not (optional) (default to false)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional)
          filters := `name sw "Jan"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RoleInsightsAPI.GetEntitlementChangesIdentities(context.Background(), insightId, entitlementId).Execute()
          //resp, r, err := apiClient.Beta.RoleInsightsAPI.GetEntitlementChangesIdentities(context.Background(), insightId, entitlementId).HasEntitlement(hasEntitlement).Offset(offset).Limit(limit).Count(count).Sorters(sorters).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RoleInsightsAPI.GetEntitlementChangesIdentities``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetEntitlementChangesIdentities`: []RoleInsightsIdentities
          fmt.Fprintf(os.Stdout, "Response from `RoleInsightsAPI.GetEntitlementChangesIdentities`: %v\n", resp)
        }
- path: /role-insights/{insightId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/role-insights#get-role-insight
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          insightId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role insight id # string | The role insight id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RoleInsightsAPI.GetRoleInsight(context.Background(), insightId).Execute()
          //resp, r, err := apiClient.Beta.RoleInsightsAPI.GetRoleInsight(context.Background(), insightId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RoleInsightsAPI.GetRoleInsight``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleInsight`: RoleInsight
          fmt.Fprintf(os.Stdout, "Response from `RoleInsightsAPI.GetRoleInsight`: %v\n", resp)
        }
- path: /role-insights
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/role-insights#get-role-insights
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          sorters := `numberOfUpdates` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **numberOfUpdates, identitiesWithAccess, totalNumberOfIdentities** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **numberOfUpdates, identitiesWithAccess, totalNumberOfIdentities** (optional)
          filters := `name sw "John"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **ownerName**: *sw*  **description**: *sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **ownerName**: *sw*  **description**: *sw* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RoleInsightsAPI.GetRoleInsights(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.RoleInsightsAPI.GetRoleInsights(context.Background()).Offset(offset).Limit(limit).Count(count).Sorters(sorters).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RoleInsightsAPI.GetRoleInsights``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleInsights`: []RoleInsight
          fmt.Fprintf(os.Stdout, "Response from `RoleInsightsAPI.GetRoleInsights`: %v\n", resp)
        }
- path: /role-insights/{insightId}/current-entitlements
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/role-insights#get-role-insights-current-entitlements
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          insightId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role insight id # string | The role insight id
          filters := `name sw "r"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **description**: *sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **description**: *sw* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RoleInsightsAPI.GetRoleInsightsCurrentEntitlements(context.Background(), insightId).Execute()
          //resp, r, err := apiClient.Beta.RoleInsightsAPI.GetRoleInsightsCurrentEntitlements(context.Background(), insightId).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RoleInsightsAPI.GetRoleInsightsCurrentEntitlements``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleInsightsCurrentEntitlements`: []RoleInsightsEntitlement
          fmt.Fprintf(os.Stdout, "Response from `RoleInsightsAPI.GetRoleInsightsCurrentEntitlements`: %v\n", resp)
        }
- path: /role-insights/{insightId}/entitlement-changes
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/role-insights#get-role-insights-entitlements-changes
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          insightId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role insight id # string | The role insight id
          sorters := `sorters_example` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **identitiesWithAccess, name** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **identitiesWithAccess, name** (optional)
          filters := `name sw "Admin"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **description**: *sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **description**: *sw* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RoleInsightsAPI.GetRoleInsightsEntitlementsChanges(context.Background(), insightId).Execute()
          //resp, r, err := apiClient.Beta.RoleInsightsAPI.GetRoleInsightsEntitlementsChanges(context.Background(), insightId).Sorters(sorters).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RoleInsightsAPI.GetRoleInsightsEntitlementsChanges``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleInsightsEntitlementsChanges`: []RoleInsightsEntitlementChanges
          fmt.Fprintf(os.Stdout, "Response from `RoleInsightsAPI.GetRoleInsightsEntitlementsChanges`: %v\n", resp)
        }
- path: /role-insights/requests/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/role-insights#get-role-insights-requests
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | The role insights request id # string | The role insights request id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RoleInsightsAPI.GetRoleInsightsRequests(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.RoleInsightsAPI.GetRoleInsightsRequests(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RoleInsightsAPI.GetRoleInsightsRequests``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleInsightsRequests`: RoleInsightsResponse
          fmt.Fprintf(os.Stdout, "Response from `RoleInsightsAPI.GetRoleInsightsRequests`: %v\n", resp)
        }
- path: /role-insights/summary
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/role-insights#get-role-insights-summary
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RoleInsightsAPI.GetRoleInsightsSummary(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.RoleInsightsAPI.GetRoleInsightsSummary(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RoleInsightsAPI.GetRoleInsightsSummary``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleInsightsSummary`: RoleInsightsSummary
          fmt.Fprintf(os.Stdout, "Response from `RoleInsightsAPI.GetRoleInsightsSummary`: %v\n", resp)
        }
- path: /roles
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/roles#create-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           role := []byte(`{
          "owner" : {
            "name" : "support",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          },
          "entitlements" : [ {
            "name" : "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local",
            "id" : "2c91809773dee32014e13e122092014e",
            "type" : "ENTITLEMENT"
          }, {
            "name" : "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local",
            "id" : "2c91809773dee32014e13e122092014e",
            "type" : "ENTITLEMENT"
          } ],
          "dimensional" : false,
          "created" : "2021-03-01T22:32:58.104Z",
          "dimensionRefs" : [ {
            "name" : "Role 2",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "DIMENSION"
          }, {
            "name" : "Role 2",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "DIMENSION"
          } ],
          "description" : "Urna amet cursus pellentesque nisl orci maximus lorem nisl euismod fusce morbi placerat adipiscing maecenas nisi tristique et metus et lacus sed morbi nunc nisl maximus magna arcu varius sollicitudin elementum enim maecenas nisi id ipsum tempus fusce diam ipsum tortor.",
          "membership" : {
            "identities" : [ {
              "aliasName" : "t.edison",
              "name" : "Thomas Edison",
              "id" : "2c9180a46faadee4016fb4e018c20639",
              "type" : "IDENTITY"
            }, {
              "aliasName" : "t.edison",
              "name" : "Thomas Edison",
              "id" : "2c9180a46faadee4016fb4e018c20639",
              "type" : "IDENTITY"
            } ],
            "criteria" : {
              "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
              "children" : [ {
                "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
                "children" : [ {
                  "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
                  "operation" : "EQUALS",
                  "key" : {
                    "sourceId" : "2c9180867427f3a301745aec18211519",
                    "property" : "attribute.email",
                    "type" : "ACCOUNT"
                  }
                }, {
                  "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
                  "operation" : "EQUALS",
                  "key" : {
                    "sourceId" : "2c9180867427f3a301745aec18211519",
                    "property" : "attribute.email",
                    "type" : "ACCOUNT"
                  }
                } ],
                "operation" : "EQUALS",
                "key" : {
                  "sourceId" : "2c9180867427f3a301745aec18211519",
                  "property" : "attribute.email",
                  "type" : "ACCOUNT"
                }
              }, {
                "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
                "children" : [ {
                  "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
                  "operation" : "EQUALS",
                  "key" : {
                    "sourceId" : "2c9180867427f3a301745aec18211519",
                    "property" : "attribute.email",
                    "type" : "ACCOUNT"
                  }
                }, {
                  "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
                  "operation" : "EQUALS",
                  "key" : {
                    "sourceId" : "2c9180867427f3a301745aec18211519",
                    "property" : "attribute.email",
                    "type" : "ACCOUNT"
                  }
                } ],
                "operation" : "EQUALS",
                "key" : {
                  "sourceId" : "2c9180867427f3a301745aec18211519",
                  "property" : "attribute.email",
                  "type" : "ACCOUNT"
                }
              } ],
              "operation" : "EQUALS",
              "key" : {
                "sourceId" : "2c9180867427f3a301745aec18211519",
                "property" : "attribute.email",
                "type" : "ACCOUNT"
              }
            },
            "type" : "IDENTITY_LIST"
          },
          "enabled" : true,
          "revocationRequestConfig" : {
            "commentsRequired" : false,
            "approvalSchemes" : [ {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            } ],
            "denialCommentsRequired" : false
          },
          "segments" : [ "f7b1b8a3-5fed-4fd4-ad29-82014e137e19", "29cb6c06-1da8-43ea-8be4-b3125f248f2a" ],
          "legacyMembershipInfo" : {
            "type" : "IDENTITY_LIST"
          },
          "accessRequestConfig" : {
            "commentsRequired" : true,
            "reauthorizationRequired" : true,
            "approvalSchemes" : [ {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            } ],
            "denialCommentsRequired" : true
          },
          "accessProfiles" : [ {
            "name" : "Access Profile 2567",
            "id" : "ff808081751e6e129f1518161919ecca",
            "type" : "ACCESS_PROFILE"
          }, {
            "name" : "Access Profile 2567",
            "id" : "ff808081751e6e129f1518161919ecca",
            "type" : "ACCESS_PROFILE"
          } ],
          "name" : "Role 2567",
          "modified" : "2021-03-02T20:22:28.104Z",
          "accessModelMetadata" : {
            "attributes" : [ {
              "key" : "iscPrivacy",
              "name" : "Privacy",
              "multiselect" : false,
              "status" : "active",
              "type" : "governance",
              "objectTypes" : [ "all" ],
              "description" : "Specifies the level of privacy associated with an access item.",
              "values" : [ {
                "value" : "public",
                "name" : "Public",
                "status" : "active"
              } ]
            } ]
          },
          "id" : "2c918086749d78830174a1a40e121518",
          "requestable" : true
        }`) // Role | 

          
          var role beta.Role
          if err := json.Unmarshal(role, &role); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RolesAPI.CreateRole(context.Background()).Role(role).Execute()
          //resp, r, err := apiClient.Beta.RolesAPI.CreateRole(context.Background()).Role(role).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RolesAPI.CreateRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateRole`: Role
          fmt.Fprintf(os.Stdout, "Response from `RolesAPI.CreateRole`: %v\n", resp)
        }
- path: /roles/bulk-delete
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/roles#delete-bulk-roles
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           rolebulkdeleterequest := []byte(`{
          "roleIds" : [ "2c9180847812e0b1017817051919ecca", "2c9180887812e0b201781e129f151816" ]
        }`) // RoleBulkDeleteRequest | 

          
          var roleBulkDeleteRequest beta.RoleBulkDeleteRequest
          if err := json.Unmarshal(rolebulkdeleterequest, &roleBulkDeleteRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RolesAPI.DeleteBulkRoles(context.Background()).RoleBulkDeleteRequest(roleBulkDeleteRequest).Execute()
          //resp, r, err := apiClient.Beta.RolesAPI.DeleteBulkRoles(context.Background()).RoleBulkDeleteRequest(roleBulkDeleteRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RolesAPI.DeleteBulkRoles``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteBulkRoles`: TaskResultDto
          fmt.Fprintf(os.Stdout, "Response from `RolesAPI.DeleteBulkRoles`: %v\n", resp)
        }
- path: /roles/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/roles#delete-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121e121518` // string | ID of the Role # string | ID of the Role

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.RolesAPI.DeleteRole(context.Background(), id).Execute()
          //r, err := apiClient.Beta.RolesAPI.DeleteRole(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RolesAPI.DeleteRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /roles/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/roles#get-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121e121518` // string | ID of the Role # string | ID of the Role

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RolesAPI.GetRole(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.RolesAPI.GetRole(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RolesAPI.GetRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRole`: Role
          fmt.Fprintf(os.Stdout, "Response from `RolesAPI.GetRole`: %v\n", resp)
        }
- path: /roles/{id}/assigned-identities
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/roles#get-role-assigned-identities
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121e121518` // string | ID of the Role for which the assigned Identities are to be listed # string | ID of the Role for which the assigned Identities are to be listed
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `name sw Joe` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **aliasName**: *eq, sw*  **email**: *eq, sw*  **name**: *eq, sw, co* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **aliasName**: *eq, sw*  **email**: *eq, sw*  **name**: *eq, sw, co* (optional)
          sorters := `aliasName,name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, aliasName, email** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, aliasName, email** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RolesAPI.GetRoleAssignedIdentities(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.RolesAPI.GetRoleAssignedIdentities(context.Background(), id).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RolesAPI.GetRoleAssignedIdentities``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleAssignedIdentities`: []RoleIdentity
          fmt.Fprintf(os.Stdout, "Response from `RolesAPI.GetRoleAssignedIdentities`: %v\n", resp)
        }
- path: /roles/{id}/entitlements
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/roles#get-role-entitlements
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121919ecca` // string | Containing role's ID. # string | Containing role's ID.
          limit := 50 // int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50) # int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `attribute eq "memberOf"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **attribute**: *eq, sw*  **value**: *eq, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **source.id**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **attribute**: *eq, sw*  **value**: *eq, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **source.id**: *eq, in* (optional)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, attribute, value, created, modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, attribute, value, created, modified** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RolesAPI.GetRoleEntitlements(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.RolesAPI.GetRoleEntitlements(context.Background(), id).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RolesAPI.GetRoleEntitlements``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetRoleEntitlements`: []Entitlement
          fmt.Fprintf(os.Stdout, "Response from `RolesAPI.GetRoleEntitlements`: %v\n", resp)
        }
- path: /roles
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/roles#list-roles
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          forSubadmin := `5168015d32f890ca15812c9180835d2e` // string | If provided, filters the returned list according to what is visible to the indicated ROLE_SUBADMIN Identity. The value of the parameter is either an Identity ID, or the special value **me**, which is shorthand for the calling Identity's ID. A 400 Bad Request error is returned if the **for-subadmin** parameter is specified for an Identity that is not a subadmin. (optional) # string | If provided, filters the returned list according to what is visible to the indicated ROLE_SUBADMIN Identity. The value of the parameter is either an Identity ID, or the special value **me**, which is shorthand for the calling Identity's ID. A 400 Bad Request error is returned if the **for-subadmin** parameter is specified for an Identity that is not a subadmin. (optional)
          limit := 50 // int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50) # int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `requestable eq false` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **created**: *gt, ge, le*  **modified**: *lt, ge, le*  **owner.id**: *eq, in*  **requestable**: *eq*  **dimensional**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **created**: *gt, ge, le*  **modified**: *lt, ge, le*  **owner.id**: *eq, in*  **requestable**: *eq*  **dimensional**: *eq* (optional)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional)
          forSegmentIds := `0b5c9f25-83c6-4762-9073-e38f7bb2ae26,2e8d8180-24bc-4d21-91c6-7affdb473b0d` // string | If present and not empty, additionally filters Roles to those which are assigned to the Segment(s) with the specified IDs.  If segmentation is currently unavailable, specifying this parameter results in an error. (optional) # string | If present and not empty, additionally filters Roles to those which are assigned to the Segment(s) with the specified IDs.  If segmentation is currently unavailable, specifying this parameter results in an error. (optional)
          includeUnsegmented := false // bool | Whether or not the response list should contain unsegmented Roles. If *for-segment-ids* is absent or empty, specifying *include-unsegmented* as false results in an error. (optional) (default to true) # bool | Whether or not the response list should contain unsegmented Roles. If *for-segment-ids* is absent or empty, specifying *include-unsegmented* as false results in an error. (optional) (default to true)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RolesAPI.ListRoles(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.RolesAPI.ListRoles(context.Background()).ForSubadmin(forSubadmin).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).ForSegmentIds(forSegmentIds).IncludeUnsegmented(includeUnsegmented).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RolesAPI.ListRoles``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListRoles`: []Role
          fmt.Fprintf(os.Stdout, "Response from `RolesAPI.ListRoles`: %v\n", resp)
        }
- path: /roles/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/roles#patch-role
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c91808a7813090a017814121e121518` // string | ID of the Role to patch # string | ID of the Role to patch
          jsonpatchoperation := []byte(`[{op=replace, path=/requestable, value=true}, {op=replace, path=/enabled, value=true}]`) // []JsonPatchOperation | 

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.RolesAPI.PatchRole(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.RolesAPI.PatchRole(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `RolesAPI.PatchRole``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchRole`: Role
          fmt.Fprintf(os.Stdout, "Response from `RolesAPI.PatchRole`: %v\n", resp)
        }
- path: /sim-integrations
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sim-integrations#create-sim-integration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           simintegrationdetails := []byte(`{
          "cluster" : "xyzzy999",
          "statusMap" : "{closed_cancelled=Failed, closed_complete=Committed, closed_incomplete=Failed, closed_rejected=Failed, in_process=Queued, requested=Queued}",
          "request" : "{description=SailPoint Access Request,, req_description=The Service Request created by SailPoint ServiceNow Service Integration Module (SIM).,, req_short_description=SailPoint New Access Request Created from IdentityNow,, short_description=SailPoint Access Request $!plan.arguments.identityRequestId}",
          "sources" : [ "2c9180835d191a86015d28455b4a2329", "2c5680835d191a85765d28455b4a9823" ],
          "created" : "2023-01-03T21:16:22.432Z",
          "name" : "aName",
          "modified" : "2023-01-03T21:16:22.432Z",
          "description" : "Integration description",
          "attributes" : "{\"uid\":\"Walter White\",\"firstname\":\"walter\",\"cloudStatus\":\"UNREGISTERED\",\"displayName\":\"Walter White\",\"identificationNumber\":\"942\",\"lastSyncDate\":1470348809380,\"email\":\"walter@gmail.com\",\"lastname\":\"white\"}",
          "id" : "id12345",
          "type" : "ServiceNow Service Desk",
          "beforeProvisioningRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "IDENTITY"
          }
        }`) // SimIntegrationDetails | DTO containing the details of the SIM integration

          
          var simIntegrationDetails beta.SimIntegrationDetails
          if err := json.Unmarshal(simintegrationdetails, &simIntegrationDetails); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SIMIntegrationsAPI.CreateSIMIntegration(context.Background()).SimIntegrationDetails(simIntegrationDetails).Execute()
          //resp, r, err := apiClient.Beta.SIMIntegrationsAPI.CreateSIMIntegration(context.Background()).SimIntegrationDetails(simIntegrationDetails).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SIMIntegrationsAPI.CreateSIMIntegration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateSIMIntegration`: ServiceDeskIntegrationDto
          fmt.Fprintf(os.Stdout, "Response from `SIMIntegrationsAPI.CreateSIMIntegration`: %v\n", resp)
        }
- path: /sim-integrations/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sim-integrations#delete-sim-integration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `12345` // string | The id of the integration to delete. # string | The id of the integration to delete.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.SIMIntegrationsAPI.DeleteSIMIntegration(context.Background(), id).Execute()
          //r, err := apiClient.Beta.SIMIntegrationsAPI.DeleteSIMIntegration(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SIMIntegrationsAPI.DeleteSIMIntegration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /sim-integrations/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sim-integrations#get-sim-integration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `12345` // string | The id of the integration. # string | The id of the integration.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SIMIntegrationsAPI.GetSIMIntegration(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SIMIntegrationsAPI.GetSIMIntegration(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SIMIntegrationsAPI.GetSIMIntegration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSIMIntegration`: ServiceDeskIntegrationDto
          fmt.Fprintf(os.Stdout, "Response from `SIMIntegrationsAPI.GetSIMIntegration`: %v\n", resp)
        }
- path: /sim-integrations
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sim-integrations#get-sim-integrations
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SIMIntegrationsAPI.GetSIMIntegrations(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.SIMIntegrationsAPI.GetSIMIntegrations(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SIMIntegrationsAPI.GetSIMIntegrations``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSIMIntegrations`: ServiceDeskIntegrationDto
          fmt.Fprintf(os.Stdout, "Response from `SIMIntegrationsAPI.GetSIMIntegrations`: %v\n", resp)
        }
- path: /sim-integrations/{id}/beforeProvisioningRule
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sim-integrations#patch-before-provisioning-rule
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `12345` // string | SIM integration id # string | SIM integration id
           jsonpatch := []byte(`"[\n  {\n\t  \"op\": \"replace\",\n\t  \"path\": \"/description\",\n\t  \"value\": \"A new description\"\n  }\n]"`) // JsonPatch | The JsonPatch object that describes the changes of SIM beforeProvisioningRule.

          
          var jsonPatch beta.JsonPatch
          if err := json.Unmarshal(jsonpatch, &jsonPatch); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SIMIntegrationsAPI.PatchBeforeProvisioningRule(context.Background(), id).JsonPatch(jsonPatch).Execute()
          //resp, r, err := apiClient.Beta.SIMIntegrationsAPI.PatchBeforeProvisioningRule(context.Background(), id).JsonPatch(jsonPatch).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SIMIntegrationsAPI.PatchBeforeProvisioningRule``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchBeforeProvisioningRule`: ServiceDeskIntegrationDto
          fmt.Fprintf(os.Stdout, "Response from `SIMIntegrationsAPI.PatchBeforeProvisioningRule`: %v\n", resp)
        }
- path: /sim-integrations/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sim-integrations#patch-sim-attributes
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `12345` // string | SIM integration id # string | SIM integration id
           jsonpatch := []byte(`"[\n  {\n\t  \"op\": \"replace\",\n\t  \"path\": \"/description\",\n\t  \"value\": \"A new description\"\n  }\n]"`) // JsonPatch | The JsonPatch object that describes the changes of SIM

          
          var jsonPatch beta.JsonPatch
          if err := json.Unmarshal(jsonpatch, &jsonPatch); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SIMIntegrationsAPI.PatchSIMAttributes(context.Background(), id).JsonPatch(jsonPatch).Execute()
          //resp, r, err := apiClient.Beta.SIMIntegrationsAPI.PatchSIMAttributes(context.Background(), id).JsonPatch(jsonPatch).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SIMIntegrationsAPI.PatchSIMAttributes``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchSIMAttributes`: ServiceDeskIntegrationDto
          fmt.Fprintf(os.Stdout, "Response from `SIMIntegrationsAPI.PatchSIMAttributes`: %v\n", resp)
        }
- path: /sim-integrations/{id}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sim-integrations#put-sim-integration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `12345` // string | The id of the integration. # string | The id of the integration.
           simintegrationdetails := []byte(`{
          "cluster" : "xyzzy999",
          "statusMap" : "{closed_cancelled=Failed, closed_complete=Committed, closed_incomplete=Failed, closed_rejected=Failed, in_process=Queued, requested=Queued}",
          "request" : "{description=SailPoint Access Request,, req_description=The Service Request created by SailPoint ServiceNow Service Integration Module (SIM).,, req_short_description=SailPoint New Access Request Created from IdentityNow,, short_description=SailPoint Access Request $!plan.arguments.identityRequestId}",
          "sources" : [ "2c9180835d191a86015d28455b4a2329", "2c5680835d191a85765d28455b4a9823" ],
          "created" : "2023-01-03T21:16:22.432Z",
          "name" : "aName",
          "modified" : "2023-01-03T21:16:22.432Z",
          "description" : "Integration description",
          "attributes" : "{\"uid\":\"Walter White\",\"firstname\":\"walter\",\"cloudStatus\":\"UNREGISTERED\",\"displayName\":\"Walter White\",\"identificationNumber\":\"942\",\"lastSyncDate\":1470348809380,\"email\":\"walter@gmail.com\",\"lastname\":\"white\"}",
          "id" : "id12345",
          "type" : "ServiceNow Service Desk",
          "beforeProvisioningRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "IDENTITY"
          }
        }`) // SimIntegrationDetails | The full DTO of the integration containing the updated model

          
          var simIntegrationDetails beta.SimIntegrationDetails
          if err := json.Unmarshal(simintegrationdetails, &simIntegrationDetails); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SIMIntegrationsAPI.PutSIMIntegration(context.Background(), id).SimIntegrationDetails(simIntegrationDetails).Execute()
          //resp, r, err := apiClient.Beta.SIMIntegrationsAPI.PutSIMIntegration(context.Background(), id).SimIntegrationDetails(simIntegrationDetails).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SIMIntegrationsAPI.PutSIMIntegration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutSIMIntegration`: ServiceDeskIntegrationDto
          fmt.Fprintf(os.Stdout, "Response from `SIMIntegrationsAPI.PutSIMIntegration`: %v\n", resp)
        }
- path: /sod-policies
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#create-sod-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           sodpolicy := []byte(`{
          "conflictingAccessCriteria" : {
            "leftCriteria" : {
              "name" : "money-in",
              "criteriaList" : [ {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a66",
                "name" : "Administrator"
              }, {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a67",
                "name" : "Administrator"
              } ]
            },
            "rightCriteria" : {
              "name" : "money-in",
              "criteriaList" : [ {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a66",
                "name" : "Administrator"
              }, {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a67",
                "name" : "Administrator"
              } ]
            }
          },
          "ownerRef" : {
            "name" : "Support",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          },
          "created" : "2020-01-01T00:00:00Z",
          "scheduled" : true,
          "creatorId" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "modifierId" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "description" : "This policy ensures compliance of xyz",
          "violationOwnerAssignmentConfig" : {
            "assignmentRule" : "MANAGER",
            "ownerRef" : {
              "name" : "Support",
              "id" : "2c9180a46faadee4016fb4e018c20639",
              "type" : "IDENTITY"
            }
          },
          "correctionAdvice" : "Based on the role of the employee, managers should remove access that is not required for their job function.",
          "type" : "GENERAL",
          "tags" : [ "TAG1", "TAG2" ],
          "name" : "policy-xyz",
          "modified" : "2020-01-01T00:00:00Z",
          "policyQuery" : "@access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdg) AND @access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdf)",
          "compensatingControls" : "Have a manager review the transaction decisions for their \"out of compliance\" employee",
          "id" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "state" : "ENFORCED",
          "externalPolicyReference" : "XYZ policy"
        }`) // SodPolicy | 

          
          var sodPolicy beta.SodPolicy
          if err := json.Unmarshal(sodpolicy, &sodPolicy); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.CreateSodPolicy(context.Background()).SodPolicy(sodPolicy).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.CreateSodPolicy(context.Background()).SodPolicy(sodPolicy).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.CreateSodPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateSodPolicy`: SodPolicy
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.CreateSodPolicy`: %v\n", resp)
        }
- path: /sod-policies/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#delete-sod-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the SOD Policy to delete. # string | The ID of the SOD Policy to delete.
          logical := true // bool | Indicates whether this is a soft delete (logical true) or a hard delete. (optional) (default to true) # bool | Indicates whether this is a soft delete (logical true) or a hard delete. (optional) (default to true)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.SODPoliciesAPI.DeleteSodPolicy(context.Background(), id).Execute()
          //r, err := apiClient.Beta.SODPoliciesAPI.DeleteSodPolicy(context.Background(), id).Logical(logical).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.DeleteSodPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /sod-policies/{id}/schedule
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#delete-sod-policy-schedule
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the SOD policy the schedule must be deleted for. # string | The ID of the SOD policy the schedule must be deleted for.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.SODPoliciesAPI.DeleteSodPolicySchedule(context.Background(), id).Execute()
          //r, err := apiClient.Beta.SODPoliciesAPI.DeleteSodPolicySchedule(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.DeleteSodPolicySchedule``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /sod-violation-report/{reportResultId}/download/{fileName}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#get-custom-violation-report
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          reportResultId := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the report reference to download. # string | The ID of the report reference to download.
          fileName := `custom-name` // string | Custom Name for the  file. # string | Custom Name for the  file.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.GetCustomViolationReport(context.Background(), reportResultId, fileName).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.GetCustomViolationReport(context.Background(), reportResultId, fileName).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.GetCustomViolationReport``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetCustomViolationReport`: *os.File
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.GetCustomViolationReport`: %v\n", resp)
        }
- path: /sod-violation-report/{reportResultId}/download
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#get-default-violation-report
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          reportResultId := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the report reference to download. # string | The ID of the report reference to download.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.GetDefaultViolationReport(context.Background(), reportResultId).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.GetDefaultViolationReport(context.Background(), reportResultId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.GetDefaultViolationReport``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetDefaultViolationReport`: *os.File
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.GetDefaultViolationReport`: %v\n", resp)
        }
- path: /sod-violation-report
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#get-sod-all-report-run-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.GetSodAllReportRunStatus(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.GetSodAllReportRunStatus(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.GetSodAllReportRunStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSodAllReportRunStatus`: ReportResultReference
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.GetSodAllReportRunStatus`: %v\n", resp)
        }
- path: /sod-policies/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#get-sod-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the object reference to retrieve. # string | The ID of the object reference to retrieve.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.GetSodPolicy(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.GetSodPolicy(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.GetSodPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSodPolicy`: SodPolicy
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.GetSodPolicy`: %v\n", resp)
        }
- path: /sod-policies/{id}/schedule
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#get-sod-policy-schedule
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the object reference to retrieve. # string | The ID of the object reference to retrieve.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.GetSodPolicySchedule(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.GetSodPolicySchedule(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.GetSodPolicySchedule``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSodPolicySchedule`: SodPolicySchedule
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.GetSodPolicySchedule`: %v\n", resp)
        }
- path: /sod-policies/sod-violation-report-status/{reportResultId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#get-sod-violation-report-run-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          reportResultId := `2e8d8180-24bc-4d21-91c6-7affdb473b0d` // string | The ID of the report reference to retrieve. # string | The ID of the report reference to retrieve.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.GetSodViolationReportRunStatus(context.Background(), reportResultId).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.GetSodViolationReportRunStatus(context.Background(), reportResultId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.GetSodViolationReportRunStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSodViolationReportRunStatus`: ReportResultReference
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.GetSodViolationReportRunStatus`: %v\n", resp)
        }
- path: /sod-policies/{id}/violation-report
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#get-sod-violation-report-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the object reference to retrieve. # string | The ID of the object reference to retrieve.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.GetSodViolationReportStatus(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.GetSodViolationReportStatus(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.GetSodViolationReportStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSodViolationReportStatus`: ReportResultReference
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.GetSodViolationReportStatus`: %v\n", resp)
        }
- path: /sod-policies
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#list-sod-policies
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `id eq "bc693f07e7b645539626c25954c58554"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in*  **state**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in*  **state**: *eq, in* (optional)
          sorters := `id,name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, description** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, description** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.ListSodPolicies(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.ListSodPolicies(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.ListSodPolicies``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListSodPolicies`: []SodPolicy
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.ListSodPolicies`: %v\n", resp)
        }
- path: /sod-policies/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#patch-sod-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180835d191a86015d28455b4a2329` // string | The ID of the SOD policy being modified. # string | The ID of the SOD policy being modified.
          requestbody := []byte(`[{op=replace, path=/description, value=Modified description}, {op=replace, path=/conflictingAccessCriteria/leftCriteria/name, value=money-in-modified}, {op=replace, path=/conflictingAccessCriteria/rightCriteria, value={name=money-out-modified, criteriaList=[{type=ENTITLEMENT, id=2c918087682f9a86016839c0509c1ab2}]}}]`) // []map[string]interface{} | A list of SOD Policy update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.  The following fields are patchable: * name * description * ownerRef * externalPolicyReference * compensatingControls * correctionAdvice * state * tags * violationOwnerAssignmentConfig * scheduled * conflictingAccessCriteria 

          
          var requestBody []beta.RequestBody
          if err := json.Unmarshal(requestbody, &requestBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.PatchSodPolicy(context.Background(), id).RequestBody(requestBody).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.PatchSodPolicy(context.Background(), id).RequestBody(requestBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.PatchSodPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchSodPolicy`: SodPolicy
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.PatchSodPolicy`: %v\n", resp)
        }
- path: /sod-policies/{id}/schedule
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#put-policy-schedule
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the SOD policy to update its schedule. # string | The ID of the SOD policy to update its schedule.
           sodpolicyschedule := []byte(`{
          "schedule" : {
            "hours" : {
              "accountMatchConfig" : {
                "matchExpression" : {
                  "and" : true,
                  "matchTerms" : [ {
                    "name" : "",
                    "value" : "",
                    "container" : true,
                    "and" : false,
                    "children" : [ {
                      "name" : "businessCategory",
                      "value" : "Service",
                      "op" : "eq",
                      "container" : false,
                      "and" : false
                    } ]
                  } ]
                }
              },
              "applicationId" : "2c91808874ff91550175097daaec161c\""
            },
            "months" : {
              "accountMatchConfig" : {
                "matchExpression" : {
                  "and" : true,
                  "matchTerms" : [ {
                    "name" : "",
                    "value" : "",
                    "container" : true,
                    "and" : false,
                    "children" : [ {
                      "name" : "businessCategory",
                      "value" : "Service",
                      "op" : "eq",
                      "container" : false,
                      "and" : false
                    } ]
                  } ]
                }
              },
              "applicationId" : "2c91808874ff91550175097daaec161c\""
            },
            "timeZoneId" : "America/Chicago",
            "days" : {
              "accountMatchConfig" : {
                "matchExpression" : {
                  "and" : true,
                  "matchTerms" : [ {
                    "name" : "",
                    "value" : "",
                    "container" : true,
                    "and" : false,
                    "children" : [ {
                      "name" : "businessCategory",
                      "value" : "Service",
                      "op" : "eq",
                      "container" : false,
                      "and" : false
                    } ]
                  } ]
                }
              },
              "applicationId" : "2c91808874ff91550175097daaec161c\""
            },
            "expiration" : "2018-06-25T20:22:28.104Z",
            "type" : "WEEKLY"
          },
          "created" : "2020-01-01T00:00:00Z",
          "recipients" : [ {
            "name" : "Michael Michaels",
            "id" : "2c7180a46faadee4016fb4e018c20642",
            "type" : "IDENTITY"
          }, {
            "name" : "Michael Michaels",
            "id" : "2c7180a46faadee4016fb4e018c20642",
            "type" : "IDENTITY"
          } ],
          "name" : "SCH-1584312283015",
          "creatorId" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "modifierId" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "modified" : "2020-01-01T00:00:00Z",
          "description" : "Schedule for policy xyz",
          "emailEmptyResults" : false
        }`) // SodPolicySchedule | 

          
          var sodPolicySchedule beta.SodPolicySchedule
          if err := json.Unmarshal(sodpolicyschedule, &sodPolicySchedule); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.PutPolicySchedule(context.Background(), id).SodPolicySchedule(sodPolicySchedule).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.PutPolicySchedule(context.Background(), id).SodPolicySchedule(sodPolicySchedule).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.PutPolicySchedule``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutPolicySchedule`: SodPolicySchedule
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.PutPolicySchedule`: %v\n", resp)
        }
- path: /sod-policies/{id}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#put-sod-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the SOD policy to update. # string | The ID of the SOD policy to update.
           sodpolicy := []byte(`{
          "conflictingAccessCriteria" : {
            "leftCriteria" : {
              "name" : "money-in",
              "criteriaList" : [ {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a66",
                "name" : "Administrator"
              }, {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a67",
                "name" : "Administrator"
              } ]
            },
            "rightCriteria" : {
              "name" : "money-in",
              "criteriaList" : [ {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a66",
                "name" : "Administrator"
              }, {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a67",
                "name" : "Administrator"
              } ]
            }
          },
          "ownerRef" : {
            "name" : "Support",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          },
          "created" : "2020-01-01T00:00:00Z",
          "scheduled" : true,
          "creatorId" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "modifierId" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "description" : "This policy ensures compliance of xyz",
          "violationOwnerAssignmentConfig" : {
            "assignmentRule" : "MANAGER",
            "ownerRef" : {
              "name" : "Support",
              "id" : "2c9180a46faadee4016fb4e018c20639",
              "type" : "IDENTITY"
            }
          },
          "correctionAdvice" : "Based on the role of the employee, managers should remove access that is not required for their job function.",
          "type" : "GENERAL",
          "tags" : [ "TAG1", "TAG2" ],
          "name" : "policy-xyz",
          "modified" : "2020-01-01T00:00:00Z",
          "policyQuery" : "@access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdg) AND @access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdf)",
          "compensatingControls" : "Have a manager review the transaction decisions for their \"out of compliance\" employee",
          "id" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "state" : "ENFORCED",
          "externalPolicyReference" : "XYZ policy"
        }`) // SodPolicy | 

          
          var sodPolicy beta.SodPolicy
          if err := json.Unmarshal(sodpolicy, &sodPolicy); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.PutSodPolicy(context.Background(), id).SodPolicy(sodPolicy).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.PutSodPolicy(context.Background(), id).SodPolicy(sodPolicy).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.PutSodPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutSodPolicy`: SodPolicy
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.PutSodPolicy`: %v\n", resp)
        }
- path: /sod-violation-report/run
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#start-sod-all-policies-for-org
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           multipolicyrequest := []byte(`{
          "filteredPolicyList" : [ "filteredPolicyList", "filteredPolicyList" ]
        }`) // MultiPolicyRequest |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.StartSodAllPoliciesForOrg(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.StartSodAllPoliciesForOrg(context.Background()).MultiPolicyRequest(multiPolicyRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.StartSodAllPoliciesForOrg``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `StartSodAllPoliciesForOrg`: ReportResultReference
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.StartSodAllPoliciesForOrg`: %v\n", resp)
        }
- path: /sod-policies/{id}/violation-report/run
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-policies#start-sod-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The SOD policy ID to run. # string | The SOD policy ID to run.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODPoliciesAPI.StartSodPolicy(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SODPoliciesAPI.StartSodPolicy(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODPoliciesAPI.StartSodPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `StartSodPolicy`: ReportResultReference
          fmt.Fprintf(os.Stdout, "Response from `SODPoliciesAPI.StartSodPolicy`: %v\n", resp)
        }
- path: /sod-violations/predict
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sod-violations#start-predict-sod-violations
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           identitywithnewaccess := []byte(`{
          "identityId" : "2c91808568c529c60168cca6f90c1313",
          "accessRefs" : [ {
            "type" : "ENTITLEMENT",
            "id" : "2c918087682f9a86016839c050861ab1",
            "name" : "CN=Information Access,OU=test,OU=test-service,DC=TestAD,DC=local"
          }, {
            "type" : "ENTITLEMENT",
            "id" : "2c918087682f9a86016839c0509c1ab2",
            "name" : "CN=Information Technology,OU=test,OU=test-service,DC=TestAD,DC=local"
          } ]
        }`) // IdentityWithNewAccess | 

          
          var identityWithNewAccess beta.IdentityWithNewAccess
          if err := json.Unmarshal(identitywithnewaccess, &identityWithNewAccess); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SODViolationsAPI.StartPredictSodViolations(context.Background()).IdentityWithNewAccess(identityWithNewAccess).Execute()
          //resp, r, err := apiClient.Beta.SODViolationsAPI.StartPredictSodViolations(context.Background()).IdentityWithNewAccess(identityWithNewAccess).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SODViolationsAPI.StartPredictSodViolations``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `StartPredictSodViolations`: ViolationPrediction
          fmt.Fprintf(os.Stdout, "Response from `SODViolationsAPI.StartPredictSodViolations`: %v\n", resp)
        }
- path: /sp-config/export
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sp-config#export-sp-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           exportpayload := []byte(`{
          "description" : "Export Job 1 Test"
        }`) // ExportPayload | Export options control what will be included in the export.

          
          var exportPayload beta.ExportPayload
          if err := json.Unmarshal(exportpayload, &exportPayload); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SPConfigAPI.ExportSpConfig(context.Background()).ExportPayload(exportPayload).Execute()
          //resp, r, err := apiClient.Beta.SPConfigAPI.ExportSpConfig(context.Background()).ExportPayload(exportPayload).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.ExportSpConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ExportSpConfig`: SpConfigExportJob
          fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.ExportSpConfig`: %v\n", resp)
        }
- path: /sp-config/export/{id}/download
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sp-config#get-sp-config-export
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the export job whose results will be downloaded. # string | The ID of the export job whose results will be downloaded.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigExport(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigExport(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.GetSpConfigExport``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSpConfigExport`: SpConfigExportResults
          fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.GetSpConfigExport`: %v\n", resp)
        }
- path: /sp-config/export/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sp-config#get-sp-config-export-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the export job whose status will be returned. # string | The ID of the export job whose status will be returned.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigExportStatus(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigExportStatus(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.GetSpConfigExportStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSpConfigExportStatus`: SpConfigExportJobStatus
          fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.GetSpConfigExportStatus`: %v\n", resp)
        }
- path: /sp-config/import/{id}/download
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sp-config#get-sp-config-import
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the import job whose results will be downloaded. # string | The ID of the import job whose results will be downloaded.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigImport(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigImport(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.GetSpConfigImport``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSpConfigImport`: SpConfigImportResults
          fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.GetSpConfigImport`: %v\n", resp)
        }
- path: /sp-config/import/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sp-config#get-sp-config-import-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the import job whose status will be returned. # string | The ID of the import job whose status will be returned.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigImportStatus(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SPConfigAPI.GetSpConfigImportStatus(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.GetSpConfigImportStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSpConfigImportStatus`: SpConfigImportJobStatus
          fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.GetSpConfigImportStatus`: %v\n", resp)
        }
- path: /sp-config/import
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sp-config#import-sp-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          data := BINARY_DATA_HERE // *os.File | JSON file containing the objects to be imported. # *os.File | JSON file containing the objects to be imported.
          preview := true // bool | This option is intended to give the user information about how an import operation would proceed, without having any effect on the target tenant. If this parameter is \"true\", no objects will be imported. Instead, the import process will pre-process the import file and attempt to resolve references within imported objects. The import result file will contain messages pertaining to how specific references were resolved, any errors associated with the preprocessing, and messages indicating which objects would be imported.  (optional) (default to false) # bool | This option is intended to give the user information about how an import operation would proceed, without having any effect on the target tenant. If this parameter is \"true\", no objects will be imported. Instead, the import process will pre-process the import file and attempt to resolve references within imported objects. The import result file will contain messages pertaining to how specific references were resolved, any errors associated with the preprocessing, and messages indicating which objects would be imported.  (optional) (default to false)
           options := []byte(``) // ImportOptions |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SPConfigAPI.ImportSpConfig(context.Background()).Data(data).Execute()
          //resp, r, err := apiClient.Beta.SPConfigAPI.ImportSpConfig(context.Background()).Data(data).Preview(preview).Options(options).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.ImportSpConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ImportSpConfig`: SpConfigJob
          fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.ImportSpConfig`: %v\n", resp)
        }
- path: /sp-config/config-objects
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sp-config#list-sp-config-objects
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SPConfigAPI.ListSpConfigObjects(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.SPConfigAPI.ListSpConfigObjects(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SPConfigAPI.ListSpConfigObjects``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListSpConfigObjects`: []SpConfigObject
          fmt.Fprintf(os.Stdout, "Response from `SPConfigAPI.ListSpConfigObjects`: %v\n", resp)
        }
- path: /accounts/search-attribute-config
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/search-attribute-configuration#create-search-attribute-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           searchattributeconfig := []byte(`{
          "displayName" : "New Mail Attribute",
          "name" : "newMailAttribute",
          "applicationAttributes" : {
            "2c91808b79fd2422017a0b35d30f3968" : "employeeNumber",
            "2c91808b79fd2422017a0b36008f396b" : "employeeNumber"
          }
        }`) // SearchAttributeConfig | 

          
          var searchAttributeConfig beta.SearchAttributeConfig
          if err := json.Unmarshal(searchattributeconfig, &searchAttributeConfig); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SearchAttributeConfigurationAPI.CreateSearchAttributeConfig(context.Background()).SearchAttributeConfig(searchAttributeConfig).Execute()
          //resp, r, err := apiClient.Beta.SearchAttributeConfigurationAPI.CreateSearchAttributeConfig(context.Background()).SearchAttributeConfig(searchAttributeConfig).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SearchAttributeConfigurationAPI.CreateSearchAttributeConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateSearchAttributeConfig`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `SearchAttributeConfigurationAPI.CreateSearchAttributeConfig`: %v\n", resp)
        }
- path: /accounts/search-attribute-config/{name}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/search-attribute-configuration#delete-search-attribute-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          name := `newMailAttribute` // string | Name of the extended search attribute configuration to delete. # string | Name of the extended search attribute configuration to delete.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.SearchAttributeConfigurationAPI.DeleteSearchAttributeConfig(context.Background(), name).Execute()
          //r, err := apiClient.Beta.SearchAttributeConfigurationAPI.DeleteSearchAttributeConfig(context.Background(), name).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SearchAttributeConfigurationAPI.DeleteSearchAttributeConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /accounts/search-attribute-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/search-attribute-configuration#get-search-attribute-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SearchAttributeConfigurationAPI.GetSearchAttributeConfig(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.SearchAttributeConfigurationAPI.GetSearchAttributeConfig(context.Background()).Limit(limit).Offset(offset).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SearchAttributeConfigurationAPI.GetSearchAttributeConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSearchAttributeConfig`: []SearchAttributeConfig
          fmt.Fprintf(os.Stdout, "Response from `SearchAttributeConfigurationAPI.GetSearchAttributeConfig`: %v\n", resp)
        }
- path: /accounts/search-attribute-config/{name}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/search-attribute-configuration#get-single-search-attribute-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          name := `newMailAttribute` // string | Name of the extended search attribute configuration to get. # string | Name of the extended search attribute configuration to get.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SearchAttributeConfigurationAPI.GetSingleSearchAttributeConfig(context.Background(), name).Execute()
          //resp, r, err := apiClient.Beta.SearchAttributeConfigurationAPI.GetSingleSearchAttributeConfig(context.Background(), name).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SearchAttributeConfigurationAPI.GetSingleSearchAttributeConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSingleSearchAttributeConfig`: []SearchAttributeConfig
          fmt.Fprintf(os.Stdout, "Response from `SearchAttributeConfigurationAPI.GetSingleSearchAttributeConfig`: %v\n", resp)
        }
- path: /accounts/search-attribute-config/{name}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/search-attribute-configuration#patch-search-attribute-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          name := `promotedMailAttribute` // string | Name of the extended search attribute configuration to patch. # string | Name of the extended search attribute configuration to patch.
          jsonpatchoperation := []byte(`[{op=replace, path=/name, value=newAttributeName}, {op=replace, path=/displayName, value=new attribute display name}, {op=add, path=/applicationAttributes, value={2c91808b79fd2422017a0b35d30f3968=employeeNumber}}]`) // []JsonPatchOperation | 

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SearchAttributeConfigurationAPI.PatchSearchAttributeConfig(context.Background(), name).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.SearchAttributeConfigurationAPI.PatchSearchAttributeConfig(context.Background(), name).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SearchAttributeConfigurationAPI.PatchSearchAttributeConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchSearchAttributeConfig`: SearchAttributeConfig
          fmt.Fprintf(os.Stdout, "Response from `SearchAttributeConfigurationAPI.PatchSearchAttributeConfig`: %v\n", resp)
        }
- path: /segments
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/segments#create-segment
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           segment := []byte(`{
          "owner" : {
            "name" : "support",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          },
          "created" : "2020-01-01T00:00:00Z",
          "visibilityCriteria" : {
            "expression" : {
              "children" : [ ],
              "attribute" : "location",
              "value" : {
                "type" : "STRING",
                "value" : "Austin"
              },
              "operator" : "EQUALS"
            }
          },
          "name" : "segment-xyz",
          "modified" : "2020-01-01T00:00:00Z",
          "description" : "This segment represents xyz",
          "active" : true,
          "id" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde"
        }`) // Segment | 

          
          var segment beta.Segment
          if err := json.Unmarshal(segment, &segment); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SegmentsAPI.CreateSegment(context.Background()).Segment(segment).Execute()
          //resp, r, err := apiClient.Beta.SegmentsAPI.CreateSegment(context.Background()).Segment(segment).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SegmentsAPI.CreateSegment``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateSegment`: Segment
          fmt.Fprintf(os.Stdout, "Response from `SegmentsAPI.CreateSegment`: %v\n", resp)
        }
- path: /segments/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/segments#delete-segment
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The segment ID to delete. # string | The segment ID to delete.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.SegmentsAPI.DeleteSegment(context.Background(), id).Execute()
          //r, err := apiClient.Beta.SegmentsAPI.DeleteSegment(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SegmentsAPI.DeleteSegment``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /segments/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/segments#get-segment
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The segment ID to retrieve. # string | The segment ID to retrieve.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SegmentsAPI.GetSegment(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SegmentsAPI.GetSegment(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SegmentsAPI.GetSegment``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSegment`: Segment
          fmt.Fprintf(os.Stdout, "Response from `SegmentsAPI.GetSegment`: %v\n", resp)
        }
- path: /segments
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/segments#list-segments
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SegmentsAPI.ListSegments(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.SegmentsAPI.ListSegments(context.Background()).Limit(limit).Offset(offset).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SegmentsAPI.ListSegments``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListSegments`: []Segment
          fmt.Fprintf(os.Stdout, "Response from `SegmentsAPI.ListSegments`: %v\n", resp)
        }
- path: /segments/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/segments#patch-segment
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The segment ID to modify. # string | The segment ID to modify.
          requestbody := []byte(`[{op=replace, path=/visibilityCriteria, value={expression={operator=AND, children=[{operator=EQUALS, attribute=location, value={type=STRING, value=Philadelphia}}, {operator=EQUALS, attribute=department, value={type=STRING, value=HR}}]}}}]`) // []map[string]interface{} | A list of segment update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.  The following fields are patchable: * name * description * owner * visibilityCriteria * active 

          
          var requestBody []beta.RequestBody
          if err := json.Unmarshal(requestbody, &requestBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SegmentsAPI.PatchSegment(context.Background(), id).RequestBody(requestBody).Execute()
          //resp, r, err := apiClient.Beta.SegmentsAPI.PatchSegment(context.Background(), id).RequestBody(requestBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SegmentsAPI.PatchSegment``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchSegment`: Segment
          fmt.Fprintf(os.Stdout, "Response from `SegmentsAPI.PatchSegment`: %v\n", resp)
        }
- path: /service-desk-integrations
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/service-desk-integration#create-service-desk-integration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           servicedeskintegrationdto := []byte(`{
          "ownerRef" : "",
          "cluster" : "xyzzy999",
          "managedSources" : [ "2c9180835d191a86015d28455b4a2329", "2c5680835d191a85765d28455b4a9823" ],
          "provisioningConfig" : {
            "managedResourceRefs" : [ {
              "type" : "SOURCE",
              "id" : "2c9180855d191c59015d291ceb051111",
              "name" : "My Source 1"
            }, {
              "type" : "SOURCE",
              "id" : "2c9180855d191c59015d291ceb052222",
              "name" : "My Source 2"
            } ],
            "provisioningRequestExpiration" : 7,
            "noProvisioningRequests" : true,
            "universalManager" : true,
            "planInitializerScript" : {
              "source" : "<?xml version='1.0' encoding='UTF-8'?>\\r\\n<!DOCTYPE Rule PUBLIC \\\"sailpoint.dtd\\\" \\\"sailpoint.dtd\\\">\\r\\n<Rule name=\\\"Example Rule\\\" type=\\\"BeforeProvisioning\\\">\\r\\n  <Description>Before Provisioning Rule which changes disables and enables to a modify.</Description>\\r\\n  <Source><![CDATA[\\r\\nimport sailpoint.object.*;\\r\\nimport sailpoint.object.ProvisioningPlan.AccountRequest;\\r\\nimport sailpoint.object.ProvisioningPlan.AccountRequest.Operation;\\r\\nimport sailpoint.object.ProvisioningPlan.AttributeRequest;\\r\\nimport sailpoint.object.ProvisioningPlan;\\r\\nimport sailpoint.object.ProvisioningPlan.Operation;\\r\\n\\r\\nfor ( AccountRequest accountRequest : plan.getAccountRequests() ) {\\r\\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Disable ) ) {\\r\\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\\r\\n  }\\r\\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Enable ) ) {\\r\\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\\r\\n  }\\r\\n}\\r\\n\\r\\n  ]]></Source>\n"
            }
          },
          "name" : "Service Desk Integration Name",
          "description" : "A very nice Service Desk integration",
          "attributes" : {
            "property" : "value",
            "key" : "value"
          },
          "clusterRef" : "",
          "type" : "ServiceNowSDIM",
          "beforeProvisioningRule" : ""
        }`) // ServiceDeskIntegrationDto | The specifics of a new integration to create

          
          var serviceDeskIntegrationDto beta.ServiceDeskIntegrationDto
          if err := json.Unmarshal(servicedeskintegrationdto, &serviceDeskIntegrationDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.CreateServiceDeskIntegration(context.Background()).ServiceDeskIntegrationDto(serviceDeskIntegrationDto).Execute()
          //resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.CreateServiceDeskIntegration(context.Background()).ServiceDeskIntegrationDto(serviceDeskIntegrationDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ServiceDeskIntegrationAPI.CreateServiceDeskIntegration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateServiceDeskIntegration`: ServiceDeskIntegrationDto
          fmt.Fprintf(os.Stdout, "Response from `ServiceDeskIntegrationAPI.CreateServiceDeskIntegration`: %v\n", resp)
        }
- path: /service-desk-integrations/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/service-desk-integration#delete-service-desk-integration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `anId` // string | ID of Service Desk integration to delete # string | ID of Service Desk integration to delete

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.ServiceDeskIntegrationAPI.DeleteServiceDeskIntegration(context.Background(), id).Execute()
          //r, err := apiClient.Beta.ServiceDeskIntegrationAPI.DeleteServiceDeskIntegration(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ServiceDeskIntegrationAPI.DeleteServiceDeskIntegration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /service-desk-integrations/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/service-desk-integration#get-service-desk-integration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `anId` // string | ID of the Service Desk integration to get # string | ID of the Service Desk integration to get

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.GetServiceDeskIntegration(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.GetServiceDeskIntegration(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ServiceDeskIntegrationAPI.GetServiceDeskIntegration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetServiceDeskIntegration`: ServiceDeskIntegrationDto
          fmt.Fprintf(os.Stdout, "Response from `ServiceDeskIntegrationAPI.GetServiceDeskIntegration`: %v\n", resp)
        }
- path: /service-desk-integrations
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/service-desk-integration#get-service-desk-integration-list
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional)
          filters := `id eq 2c91808b6ef1d43e016efba0ce470904` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq*  **type**: *eq, in*  **cluster**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq*  **type**: *eq, in*  **cluster**: *eq, in* (optional)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.GetServiceDeskIntegrationList(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.GetServiceDeskIntegrationList(context.Background()).Offset(offset).Limit(limit).Sorters(sorters).Filters(filters).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ServiceDeskIntegrationAPI.GetServiceDeskIntegrationList``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetServiceDeskIntegrationList`: []ServiceDeskIntegrationDto
          fmt.Fprintf(os.Stdout, "Response from `ServiceDeskIntegrationAPI.GetServiceDeskIntegrationList`: %v\n", resp)
        }
- path: /service-desk-integrations/templates/{scriptName}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/service-desk-integration#get-service-desk-integration-template
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          scriptName := `aScriptName` // string | The scriptName value of the Service Desk integration template to get # string | The scriptName value of the Service Desk integration template to get

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.GetServiceDeskIntegrationTemplate(context.Background(), scriptName).Execute()
          //resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.GetServiceDeskIntegrationTemplate(context.Background(), scriptName).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ServiceDeskIntegrationAPI.GetServiceDeskIntegrationTemplate``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetServiceDeskIntegrationTemplate`: ServiceDeskIntegrationTemplateDto
          fmt.Fprintf(os.Stdout, "Response from `ServiceDeskIntegrationAPI.GetServiceDeskIntegrationTemplate`: %v\n", resp)
        }
- path: /service-desk-integrations/types
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/service-desk-integration#get-service-desk-integration-types
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.GetServiceDeskIntegrationTypes(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.GetServiceDeskIntegrationTypes(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ServiceDeskIntegrationAPI.GetServiceDeskIntegrationTypes``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetServiceDeskIntegrationTypes`: []ServiceDeskIntegrationTemplateType
          fmt.Fprintf(os.Stdout, "Response from `ServiceDeskIntegrationAPI.GetServiceDeskIntegrationTypes`: %v\n", resp)
        }
- path: /service-desk-integrations/status-check-configuration
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/service-desk-integration#get-status-check-details
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.GetStatusCheckDetails(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.GetStatusCheckDetails(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ServiceDeskIntegrationAPI.GetStatusCheckDetails``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetStatusCheckDetails`: QueuedCheckConfigDetails
          fmt.Fprintf(os.Stdout, "Response from `ServiceDeskIntegrationAPI.GetStatusCheckDetails`: %v\n", resp)
        }
- path: /service-desk-integrations/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/service-desk-integration#patch-service-desk-integration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `anId` // string | ID of the Service Desk integration to update # string | ID of the Service Desk integration to update
          jsonpatchoperation := []byte(``) // []JsonPatchOperation | A list of SDIM update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.  Only `replace` operations are accepted by this endpoint.  A 403 Forbidden Error indicates that a PATCH operation was attempted that is not allowed. 

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.PatchServiceDeskIntegration(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.PatchServiceDeskIntegration(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ServiceDeskIntegrationAPI.PatchServiceDeskIntegration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchServiceDeskIntegration`: ServiceDeskIntegrationDto
          fmt.Fprintf(os.Stdout, "Response from `ServiceDeskIntegrationAPI.PatchServiceDeskIntegration`: %v\n", resp)
        }
- path: /service-desk-integrations/{id}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/service-desk-integration#put-service-desk-integration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `anId` // string | ID of the Service Desk integration to update # string | ID of the Service Desk integration to update
           servicedeskintegrationdto := []byte(`{
          "ownerRef" : "",
          "cluster" : "xyzzy999",
          "managedSources" : [ "2c9180835d191a86015d28455b4a2329", "2c5680835d191a85765d28455b4a9823" ],
          "provisioningConfig" : {
            "managedResourceRefs" : [ {
              "type" : "SOURCE",
              "id" : "2c9180855d191c59015d291ceb051111",
              "name" : "My Source 1"
            }, {
              "type" : "SOURCE",
              "id" : "2c9180855d191c59015d291ceb052222",
              "name" : "My Source 2"
            } ],
            "provisioningRequestExpiration" : 7,
            "noProvisioningRequests" : true,
            "universalManager" : true,
            "planInitializerScript" : {
              "source" : "<?xml version='1.0' encoding='UTF-8'?>\\r\\n<!DOCTYPE Rule PUBLIC \\\"sailpoint.dtd\\\" \\\"sailpoint.dtd\\\">\\r\\n<Rule name=\\\"Example Rule\\\" type=\\\"BeforeProvisioning\\\">\\r\\n  <Description>Before Provisioning Rule which changes disables and enables to a modify.</Description>\\r\\n  <Source><![CDATA[\\r\\nimport sailpoint.object.*;\\r\\nimport sailpoint.object.ProvisioningPlan.AccountRequest;\\r\\nimport sailpoint.object.ProvisioningPlan.AccountRequest.Operation;\\r\\nimport sailpoint.object.ProvisioningPlan.AttributeRequest;\\r\\nimport sailpoint.object.ProvisioningPlan;\\r\\nimport sailpoint.object.ProvisioningPlan.Operation;\\r\\n\\r\\nfor ( AccountRequest accountRequest : plan.getAccountRequests() ) {\\r\\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Disable ) ) {\\r\\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\\r\\n  }\\r\\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Enable ) ) {\\r\\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\\r\\n  }\\r\\n}\\r\\n\\r\\n  ]]></Source>\n"
            }
          },
          "name" : "Service Desk Integration Name",
          "description" : "A very nice Service Desk integration",
          "attributes" : {
            "property" : "value",
            "key" : "value"
          },
          "clusterRef" : "",
          "type" : "ServiceNowSDIM",
          "beforeProvisioningRule" : ""
        }`) // ServiceDeskIntegrationDto | The specifics of the integration to update

          
          var serviceDeskIntegrationDto beta.ServiceDeskIntegrationDto
          if err := json.Unmarshal(servicedeskintegrationdto, &serviceDeskIntegrationDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.PutServiceDeskIntegration(context.Background(), id).ServiceDeskIntegrationDto(serviceDeskIntegrationDto).Execute()
          //resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.PutServiceDeskIntegration(context.Background(), id).ServiceDeskIntegrationDto(serviceDeskIntegrationDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ServiceDeskIntegrationAPI.PutServiceDeskIntegration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutServiceDeskIntegration`: ServiceDeskIntegrationDto
          fmt.Fprintf(os.Stdout, "Response from `ServiceDeskIntegrationAPI.PutServiceDeskIntegration`: %v\n", resp)
        }
- path: /service-desk-integrations/status-check-configuration
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/service-desk-integration#update-status-check-details
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           queuedcheckconfigdetails := []byte(`{
          "provisioningStatusCheckIntervalMinutes" : "30",
          "provisioningMaxStatusCheckDays" : "2"
        }`) // QueuedCheckConfigDetails | The modified time check configuration

          
          var queuedCheckConfigDetails beta.QueuedCheckConfigDetails
          if err := json.Unmarshal(queuedcheckconfigdetails, &queuedCheckConfigDetails); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.UpdateStatusCheckDetails(context.Background()).QueuedCheckConfigDetails(queuedCheckConfigDetails).Execute()
          //resp, r, err := apiClient.Beta.ServiceDeskIntegrationAPI.UpdateStatusCheckDetails(context.Background()).QueuedCheckConfigDetails(queuedCheckConfigDetails).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `ServiceDeskIntegrationAPI.UpdateStatusCheckDetails``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateStatusCheckDetails`: QueuedCheckConfigDetails
          fmt.Fprintf(os.Stdout, "Response from `ServiceDeskIntegrationAPI.UpdateStatusCheckDetails`: %v\n", resp)
        }
- path: /source-usages/{sourceId}/status
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/source-usages#get-status-by-source-id
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | ID of IDN source # string | ID of IDN source

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourceUsagesAPI.GetStatusBySourceId(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourceUsagesAPI.GetStatusBySourceId(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourceUsagesAPI.GetStatusBySourceId``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetStatusBySourceId`: SourceUsageStatus
          fmt.Fprintf(os.Stdout, "Response from `SourceUsagesAPI.GetStatusBySourceId`: %v\n", resp)
        }
- path: /source-usages/{sourceId}/summaries
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/source-usages#get-usages-by-source-id
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | ID of IDN source # string | ID of IDN source
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          sorters := `-date` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **date** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **date** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourceUsagesAPI.GetUsagesBySourceId(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourceUsagesAPI.GetUsagesBySourceId(context.Background(), sourceId).Limit(limit).Offset(offset).Count(count).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourceUsagesAPI.GetUsagesBySourceId``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetUsagesBySourceId`: []SourceUsage
          fmt.Fprintf(os.Stdout, "Response from `SourceUsagesAPI.GetUsagesBySourceId`: %v\n", resp)
        }
- path: /sources/{sourceId}/provisioning-policies
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#create-provisioning-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The Source id # string | The Source id
           provisioningpolicydto := []byte(`{
          "name" : "example provisioning policy for inactive identities",
          "description" : "this provisioning policy creates access based on an identity going inactive",
          "fields" : [ {
            "isRequired" : false,
            "transform" : {
              "type" : "rule",
              "attributes" : {
                "name" : "Create Unique LDAP Attribute"
              }
            },
            "isMultiValued" : false,
            "name" : "userName",
            "attributes" : {
              "template" : "${firstname}.${lastname}${uniqueCounter}",
              "cloudMaxUniqueChecks" : "50",
              "cloudMaxSize" : "20",
              "cloudRequired" : "true"
            },
            "type" : "string"
          }, {
            "isRequired" : false,
            "transform" : {
              "type" : "rule",
              "attributes" : {
                "name" : "Create Unique LDAP Attribute"
              }
            },
            "isMultiValued" : false,
            "name" : "userName",
            "attributes" : {
              "template" : "${firstname}.${lastname}${uniqueCounter}",
              "cloudMaxUniqueChecks" : "50",
              "cloudMaxSize" : "20",
              "cloudRequired" : "true"
            },
            "type" : "string"
          } ],
          "usageType" : "CREATE"
        }`) // ProvisioningPolicyDto | 

          
          var provisioningPolicyDto beta.ProvisioningPolicyDto
          if err := json.Unmarshal(provisioningpolicydto, &provisioningPolicyDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.CreateProvisioningPolicy(context.Background(), sourceId).ProvisioningPolicyDto(provisioningPolicyDto).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.CreateProvisioningPolicy(context.Background(), sourceId).ProvisioningPolicyDto(provisioningPolicyDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.CreateProvisioningPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateProvisioningPolicy`: ProvisioningPolicyDto
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.CreateProvisioningPolicy`: %v\n", resp)
        }
- path: /sources
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#create-source
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           source := []byte(`{
          "cluster" : {
            "name" : "Corporate Cluster",
            "id" : "2c9180866166b5b0016167c32ef31a66",
            "type" : "CLUSTER"
          },
          "deleteThreshold" : 10,
          "connectorId" : "active-directory",
          "description" : "This is the corporate directory.",
          "type" : "OpenLDAP - Direct",
          "connectorClass" : "sailpoint.connector.LDAPConnector",
          "connectionType" : "file",
          "features" : [ "PROVISIONING", "NO_PERMISSIONS_PROVISIONING", "GROUPS_HAVE_MEMBERS" ],
          "passwordPolicies" : [ {
            "type" : "PASSWORD_POLICY",
            "id" : "2c9180855d191c59015d291ceb053980",
            "name" : "Corporate Password Policy"
          }, {
            "type" : "PASSWORD_POLICY",
            "id" : "2c9180855d191c59015d291ceb057777",
            "name" : "Vendor Password Policy"
          } ],
          "modified" : "2024-01-23T18:08:50.897Z",
          "id" : "2c91808568c529c60168cca6f90c1324",
          "connectorImplementationId" : "delimited-file",
          "managerCorrelationRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "RULE"
          },
          "owner" : {
            "name" : "MyName",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "managementWorkgroup" : {
            "name" : "My Management Workgroup",
            "id" : "2c91808568c529c60168cca6f90c2222",
            "type" : "GOVERNANCE_GROUP"
          },
          "accountCorrelationRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "RULE"
          },
          "authoritative" : false,
          "connectorAttributes" : {
            "healthCheckTimeout" : 30,
            "authSearchAttributes" : [ "cn", "uid", "mail" ]
          },
          "created" : "2022-02-08T14:50:03.827Z",
          "managerCorrelationMapping" : {
            "accountAttributeName" : "manager",
            "identityAttributeName" : "manager"
          },
          "credentialProviderEnabled" : false,
          "accountCorrelationConfig" : {
            "name" : "Directory [source-62867] Account Correlation",
            "id" : "2c9180855d191c59015d28583727245a",
            "type" : "ACCOUNT_CORRELATION_CONFIG"
          },
          "connector" : "active-directory",
          "healthy" : true,
          "schemas" : [ {
            "type" : "CONNECTOR_SCHEMA",
            "id" : "2c9180835d191a86015d28455b4b232a",
            "name" : "account"
          }, {
            "type" : "CONNECTOR_SCHEMA",
            "id" : "2c9180835d191a86015d28455b4b232b",
            "name" : "group"
          } ],
          "name" : "My Source",
          "connectorName" : "Active Directory",
          "category" : "CredentialProvider",
          "beforeProvisioningRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "RULE"
          },
          "status" : "SOURCE_STATE_HEALTHY",
          "since" : "2021-09-28T15:48:29.3801666300Z"
        }`) // Source | 
          provisionAsCsv := false // bool | If this parameter is `true`, it configures the source as a Delimited File (CSV) source. Setting this to `true` will automatically set the `type` of the source to `DelimitedFile`.  You must use this query parameter to create a Delimited File source as you would in the UI.  If you don't set this query parameter and you attempt to set the `type` attribute directly, the request won't correctly generate the source.   (optional) # bool | If this parameter is `true`, it configures the source as a Delimited File (CSV) source. Setting this to `true` will automatically set the `type` of the source to `DelimitedFile`.  You must use this query parameter to create a Delimited File source as you would in the UI.  If you don't set this query parameter and you attempt to set the `type` attribute directly, the request won't correctly generate the source.   (optional)

          
          var source beta.Source
          if err := json.Unmarshal(source, &source); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.CreateSource(context.Background()).Source(source).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.CreateSource(context.Background()).Source(source).ProvisionAsCsv(provisionAsCsv).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.CreateSource``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateSource`: Source
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.CreateSource`: %v\n", resp)
        }
- path: /sources/{sourceId}/schemas
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#create-source-schema
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | Source ID. # string | Source ID.
           schema := []byte(`{
          "features" : [ "PROVISIONING", "NO_PERMISSIONS_PROVISIONING", "GROUPS_HAVE_MEMBERS" ],
          "nativeObjectType" : "User",
          "configuration" : {
            "groupMemberAttribute" : "member"
          },
          "created" : "2019-12-24T22:32:58.104Z",
          "includePermissions" : false,
          "name" : "account",
          "hierarchyAttribute" : "memberOf",
          "modified" : "2019-12-31T20:22:28.104Z",
          "attributes" : [ {
            "name" : "sAMAccountName",
            "type" : "STRING",
            "isMultiValued" : false,
            "isEntitlement" : false,
            "isGroup" : false
          }, {
            "name" : "memberOf",
            "type" : "STRING",
            "schema" : {
              "type" : "CONNECTOR_SCHEMA",
              "id" : "2c9180887671ff8c01767b4671fc7d60",
              "name" : "group"
            },
            "description" : "Group membership",
            "isMultiValued" : true,
            "isEntitlement" : true,
            "isGroup" : true
          } ],
          "id" : "2c9180835d191a86015d28455b4a2329",
          "displayAttribute" : "distinguishedName",
          "identityAttribute" : "sAMAccountName"
        }`) // Schema | 

          
          var schema beta.Schema
          if err := json.Unmarshal(schema, &schema); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.CreateSourceSchema(context.Background(), sourceId).Schema(schema).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.CreateSourceSchema(context.Background(), sourceId).Schema(schema).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.CreateSourceSchema``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateSourceSchema`: Schema
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.CreateSourceSchema`: %v\n", resp)
        }
- path: /sources/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#delete
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180835d191a86015d28455b4a2329` // string | Source ID. # string | Source ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.Delete(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.Delete(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.Delete``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `Delete`: Delete202Response
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.Delete`: %v\n", resp)
        }
- path: /sources/{sourceId}/remove-accounts
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#delete-accounts-async
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `ebbf35756e1140699ce52b233121384a` // string | The source id # string | The source id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.DeleteAccountsAsync(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.DeleteAccountsAsync(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.DeleteAccountsAsync``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteAccountsAsync`: TaskResultDto
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.DeleteAccountsAsync`: %v\n", resp)
        }
- path: /sources/{sourceId}/native-change-detection-config
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#delete-native-change-detection-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The source id # string | The source id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.SourcesAPI.DeleteNativeChangeDetectionConfig(context.Background(), sourceId).Execute()
          //r, err := apiClient.Beta.SourcesAPI.DeleteNativeChangeDetectionConfig(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.DeleteNativeChangeDetectionConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /sources/{sourceId}/provisioning-policies/{usageType}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#delete-provisioning-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The Source ID. # string | The Source ID.
          usageType := CREATE // UsageType | The type of provisioning policy usage.  In IdentityNow, a source can support various provisioning operations. For example, when a joiner is added to a source, this may trigger both CREATE and UPDATE provisioning operations.  Each usage type is considered a provisioning policy.  A source can have any number of these provisioning policies defined.  These are the common usage types:  CREATE - This usage type relates to 'Create Account Profile', the provisioning template for the account to be created. For example, this would be used for a joiner on a source.   UPDATE - This usage type relates to 'Update Account Profile', the provisioning template for the 'Update' connector operations. For example, this would be used for an attribute sync on a source. ENABLE - This usage type relates to 'Enable Account Profile', the provisioning template for the account to be enabled. For example, this could be used for a joiner on a source once the joiner's account is created.  DISABLE - This usage type relates to 'Disable Account Profile', the provisioning template for the account to be disabled. For example, this could be used when a leaver is removed temporarily from a source.  You can use these four usage types for all your provisioning policy needs.  # UsageType | The type of provisioning policy usage.  In IdentityNow, a source can support various provisioning operations. For example, when a joiner is added to a source, this may trigger both CREATE and UPDATE provisioning operations.  Each usage type is considered a provisioning policy.  A source can have any number of these provisioning policies defined.  These are the common usage types:  CREATE - This usage type relates to 'Create Account Profile', the provisioning template for the account to be created. For example, this would be used for a joiner on a source.   UPDATE - This usage type relates to 'Update Account Profile', the provisioning template for the 'Update' connector operations. For example, this would be used for an attribute sync on a source. ENABLE - This usage type relates to 'Enable Account Profile', the provisioning template for the account to be enabled. For example, this could be used for a joiner on a source once the joiner's account is created.  DISABLE - This usage type relates to 'Disable Account Profile', the provisioning template for the account to be disabled. For example, this could be used when a leaver is removed temporarily from a source.  You can use these four usage types for all your provisioning policy needs. 

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.SourcesAPI.DeleteProvisioningPolicy(context.Background(), sourceId, usageType).Execute()
          //r, err := apiClient.Beta.SourcesAPI.DeleteProvisioningPolicy(context.Background(), sourceId, usageType).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.DeleteProvisioningPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /sources/{sourceId}/schemas/{schemaId}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#delete-source-schema
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The Source ID. # string | The Source ID.
          schemaId := `2c9180835d191a86015d28455b4a2329` // string | The Schema ID. # string | The Schema ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.SourcesAPI.DeleteSourceSchema(context.Background(), sourceId, schemaId).Execute()
          //r, err := apiClient.Beta.SourcesAPI.DeleteSourceSchema(context.Background(), sourceId, schemaId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.DeleteSourceSchema``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /sources/{sourceId}/correlation-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#get-correlation-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The source id # string | The source id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.GetCorrelationConfig(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.GetCorrelationConfig(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.GetCorrelationConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetCorrelationConfig`: CorrelationConfig
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.GetCorrelationConfig`: %v\n", resp)
        }
- path: /sources/{sourceId}/native-change-detection-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#get-native-change-detection-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The source id # string | The source id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.GetNativeChangeDetectionConfig(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.GetNativeChangeDetectionConfig(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.GetNativeChangeDetectionConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetNativeChangeDetectionConfig`: NativeChangeDetectionConfig
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.GetNativeChangeDetectionConfig`: %v\n", resp)
        }
- path: /sources/{sourceId}/provisioning-policies/{usageType}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#get-provisioning-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The Source ID. # string | The Source ID.
          usageType := CREATE // UsageType | The type of provisioning policy usage.  In IdentityNow, a source can support various provisioning operations. For example, when a joiner is added to a source, this may trigger both CREATE and UPDATE provisioning operations.  Each usage type is considered a provisioning policy.  A source can have any number of these provisioning policies defined.  These are the common usage types:  CREATE - This usage type relates to 'Create Account Profile', the provisioning template for the account to be created. For example, this would be used for a joiner on a source.   UPDATE - This usage type relates to 'Update Account Profile', the provisioning template for the 'Update' connector operations. For example, this would be used for an attribute sync on a source. ENABLE - This usage type relates to 'Enable Account Profile', the provisioning template for the account to be enabled. For example, this could be used for a joiner on a source once the joiner's account is created.  DISABLE - This usage type relates to 'Disable Account Profile', the provisioning template for the account to be disabled. For example, this could be used when a leaver is removed temporarily from a source.  You can use these four usage types for all your provisioning policy needs.  # UsageType | The type of provisioning policy usage.  In IdentityNow, a source can support various provisioning operations. For example, when a joiner is added to a source, this may trigger both CREATE and UPDATE provisioning operations.  Each usage type is considered a provisioning policy.  A source can have any number of these provisioning policies defined.  These are the common usage types:  CREATE - This usage type relates to 'Create Account Profile', the provisioning template for the account to be created. For example, this would be used for a joiner on a source.   UPDATE - This usage type relates to 'Update Account Profile', the provisioning template for the 'Update' connector operations. For example, this would be used for an attribute sync on a source. ENABLE - This usage type relates to 'Enable Account Profile', the provisioning template for the account to be enabled. For example, this could be used for a joiner on a source once the joiner's account is created.  DISABLE - This usage type relates to 'Disable Account Profile', the provisioning template for the account to be disabled. For example, this could be used when a leaver is removed temporarily from a source.  You can use these four usage types for all your provisioning policy needs. 

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.GetProvisioningPolicy(context.Background(), sourceId, usageType).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.GetProvisioningPolicy(context.Background(), sourceId, usageType).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.GetProvisioningPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetProvisioningPolicy`: ProvisioningPolicyDto
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.GetProvisioningPolicy`: %v\n", resp)
        }
- path: /sources/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#get-source
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180835d191a86015d28455b4a2329` // string | Source ID. # string | Source ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.GetSource(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.GetSource(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.GetSource``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSource`: Source
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.GetSource`: %v\n", resp)
        }
- path: /sources/{sourceId}/schemas/accounts
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#get-source-accounts-schema
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The Source id # string | The Source id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.SourcesAPI.GetSourceAccountsSchema(context.Background(), sourceId).Execute()
          //r, err := apiClient.Beta.SourcesAPI.GetSourceAccountsSchema(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.GetSourceAccountsSchema``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /sources/{id}/attribute-sync-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#get-source-attr-sync-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180835d191a86015d28455b4a2329` // string | The source id # string | The source id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.GetSourceAttrSyncConfig(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.GetSourceAttrSyncConfig(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.GetSourceAttrSyncConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSourceAttrSyncConfig`: AttrSyncSourceConfig
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.GetSourceAttrSyncConfig`: %v\n", resp)
        }
- path: /sources/{id}/connectors/source-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#get-source-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `id_example` // string | The Source id # string | The Source id
          locale := `locale_example` // string | The locale to apply to the config. If no viable locale is given, it will default to \"en\" (optional) # string | The locale to apply to the config. If no viable locale is given, it will default to \"en\" (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.GetSourceConfig(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.GetSourceConfig(context.Background(), id).Locale(locale).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.GetSourceConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSourceConfig`: ConnectorDetail
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.GetSourceConfig`: %v\n", resp)
        }
- path: /sources/{sourceId}/entitlement-request-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#get-source-entitlement-request-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The Source id # string | The Source id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.GetSourceEntitlementRequestConfig(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.GetSourceEntitlementRequestConfig(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.GetSourceEntitlementRequestConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSourceEntitlementRequestConfig`: SourceEntitlementRequestConfig
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.GetSourceEntitlementRequestConfig`: %v\n", resp)
        }
- path: /sources/{sourceId}/schemas/entitlements
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#get-source-entitlements-schema
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The Source id # string | The Source id
          schemaName := `?schemaName=group` // string | Name of entitlement schema (optional) # string | Name of entitlement schema (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.SourcesAPI.GetSourceEntitlementsSchema(context.Background(), sourceId).Execute()
          //r, err := apiClient.Beta.SourcesAPI.GetSourceEntitlementsSchema(context.Background(), sourceId).SchemaName(schemaName).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.GetSourceEntitlementsSchema``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /sources/{sourceId}/schemas/{schemaId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#get-source-schema
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The Source ID. # string | The Source ID.
          schemaId := `2c9180835d191a86015d28455b4a2329` // string | The Schema ID. # string | The Schema ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.GetSourceSchema(context.Background(), sourceId, schemaId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.GetSourceSchema(context.Background(), sourceId, schemaId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.GetSourceSchema``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSourceSchema`: Schema
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.GetSourceSchema`: %v\n", resp)
        }
- path: /sources/{sourceId}/schemas
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#get-source-schemas
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | Source ID. # string | Source ID.
          includeTypes := `group` // string | If set to 'group', then the account schema is filtered and only group schemas are returned. Only a value of 'group' is recognized presently.  Note: The API will check whether include-types is group or not, if not, it will list schemas based on include-names, if include-names is not provided, it will list all schemas. (optional) # string | If set to 'group', then the account schema is filtered and only group schemas are returned. Only a value of 'group' is recognized presently.  Note: The API will check whether include-types is group or not, if not, it will list schemas based on include-names, if include-names is not provided, it will list all schemas. (optional)
          includeNames := `account` // string | A comma-separated list of schema names to filter result. (optional) # string | A comma-separated list of schema names to filter result. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.GetSourceSchemas(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.GetSourceSchemas(context.Background(), sourceId).IncludeTypes(includeTypes).IncludeNames(includeNames).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.GetSourceSchemas``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSourceSchemas`: []Schema
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.GetSourceSchemas`: %v\n", resp)
        }
- path: /sources/{sourceId}/load-accounts
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#import-accounts
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `ef38f94347e94562b5bb8424a56397d8` // string | Source Id # string | Source Id
          file := BINARY_DATA_HERE // *os.File | The CSV file containing the source accounts to aggregate. (optional) # *os.File | The CSV file containing the source accounts to aggregate. (optional)
          disableOptimization := `disableOptimization_example` // string | Use this flag to reprocess every account whether or not the data has changed. (optional) # string | Use this flag to reprocess every account whether or not the data has changed. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.ImportAccounts(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.ImportAccounts(context.Background(), sourceId).File(file).DisableOptimization(disableOptimization).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.ImportAccounts``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ImportAccounts`: LoadAccountsTask
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.ImportAccounts`: %v\n", resp)
        }
- path: /sources/{sourceId}/load-entitlements
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#import-entitlements
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `ef38f94347e94562b5bb8424a56397d8` // string | Source Id # string | Source Id
          file := BINARY_DATA_HERE // *os.File | The CSV file containing the source entitlements to aggregate. (optional) # *os.File | The CSV file containing the source entitlements to aggregate. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.ImportEntitlements(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.ImportEntitlements(context.Background(), sourceId).File(file).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.ImportEntitlements``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ImportEntitlements`: LoadEntitlementTask
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.ImportEntitlements`: %v\n", resp)
        }
- path: /sources/{sourceId}/schemas/accounts
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#import-source-accounts-schema
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The Source id # string | The Source id
          file := BINARY_DATA_HERE // *os.File |  (optional) # *os.File |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.ImportSourceAccountsSchema(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.ImportSourceAccountsSchema(context.Background(), sourceId).File(file).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.ImportSourceAccountsSchema``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ImportSourceAccountsSchema`: Schema
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.ImportSourceAccountsSchema`: %v\n", resp)
        }
- path: /sources/{sourceId}/upload-connector-file
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#import-source-connector-file
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The Source id # string | The Source id
          file := BINARY_DATA_HERE // *os.File |  (optional) # *os.File |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.ImportSourceConnectorFile(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.ImportSourceConnectorFile(context.Background(), sourceId).File(file).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.ImportSourceConnectorFile``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ImportSourceConnectorFile`: Source
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.ImportSourceConnectorFile`: %v\n", resp)
        }
- path: /sources/{sourceId}/schemas/entitlements
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#import-source-entitlements-schema
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The Source id # string | The Source id
          schemaName := `?schemaName=group` // string | Name of entitlement schema (optional) # string | Name of entitlement schema (optional)
          file := BINARY_DATA_HERE // *os.File |  (optional) # *os.File |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.ImportSourceEntitlementsSchema(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.ImportSourceEntitlementsSchema(context.Background(), sourceId).SchemaName(schemaName).File(file).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.ImportSourceEntitlementsSchema``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ImportSourceEntitlementsSchema`: Schema
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.ImportSourceEntitlementsSchema`: %v\n", resp)
        }
- path: /sources/{sourceId}/load-uncorrelated-accounts
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#import-uncorrelated-accounts
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `75dbec1ebe154d5785da27b95e1dd5d7` // string | Source Id # string | Source Id
          file := BINARY_DATA_HERE // *os.File |  (optional) # *os.File |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.ImportUncorrelatedAccounts(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.ImportUncorrelatedAccounts(context.Background(), sourceId).File(file).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.ImportUncorrelatedAccounts``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ImportUncorrelatedAccounts`: LoadUncorrelatedAccountsTask
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.ImportUncorrelatedAccounts`: %v\n", resp)
        }
- path: /sources/{sourceId}/provisioning-policies
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#list-provisioning-policies
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The Source id # string | The Source id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.ListProvisioningPolicies(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.ListProvisioningPolicies(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.ListProvisioningPolicies``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListProvisioningPolicies`: []ProvisioningPolicyDto
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.ListProvisioningPolicies`: %v\n", resp)
        }
- path: /sources
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#list-sources
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `name eq "Employees"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **name**: *co, eq, in, sw, ge, gt, ne, isnull*  **type**: *eq, in, ge, gt, ne, isnull, sw*  **owner.id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **features**: *ca, co*  **created**: *eq*  **modified**: *eq*  **managementWorkgroup.id**: *eq, ge, gt, in, le, lt, ne, isnull, sw*  **description**: *eq, sw*  **authoritative**: *eq, ne, isnull*  **healthy**: *isnull*  **status**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **connectionType**: *eq, ge, gt, in, le, lt, ne, isnull, sw*  **connectorName**: *eq, ge, gt, in, ne, isnull, sw*  **category**: *co, eq, ge, gt, in, le, lt, ne, sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **name**: *co, eq, in, sw, ge, gt, ne, isnull*  **type**: *eq, in, ge, gt, ne, isnull, sw*  **owner.id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **features**: *ca, co*  **created**: *eq*  **modified**: *eq*  **managementWorkgroup.id**: *eq, ge, gt, in, le, lt, ne, isnull, sw*  **description**: *eq, sw*  **authoritative**: *eq, ne, isnull*  **healthy**: *isnull*  **status**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **connectionType**: *eq, ge, gt, in, le, lt, ne, isnull, sw*  **connectorName**: *eq, ge, gt, in, ne, isnull, sw*  **category**: *co, eq, ge, gt, in, le, lt, ne, sw* (optional)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status, id, description, owner.id, accountCorrelationConfig.id, accountCorrelationConfig.name, managerCorrelationRule.type, managerCorrelationRule.id, managerCorrelationRule.name, authoritative, managementWorkgroup.id, connectorName, connectionType** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status, id, description, owner.id, accountCorrelationConfig.id, accountCorrelationConfig.name, managerCorrelationRule.type, managerCorrelationRule.id, managerCorrelationRule.name, authoritative, managementWorkgroup.id, connectorName, connectionType** (optional)
          forSubadmin := `name` // string | Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user. Subadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned. (optional) # string | Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user. Subadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned. (optional)
          includeIDNSource := true // bool | Include the IdentityNow source in the response. (optional) (default to false) # bool | Include the IdentityNow source in the response. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.ListSources(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.ListSources(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).ForSubadmin(forSubadmin).IncludeIDNSource(includeIDNSource).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.ListSources``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListSources`: []Source
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.ListSources`: %v\n", resp)
        }
- path: /sources/{sourceId}/connector/peek-resource-objects
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#peek-resource-objects
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `cef3ee201db947c5912551015ba0c679` // string | The ID of the Source # string | The ID of the Source
           resourceobjectsrequest := []byte(`{
          "maxCount" : 100,
          "objectType" : "group"
        }`) // ResourceObjectsRequest | 

          
          var resourceObjectsRequest beta.ResourceObjectsRequest
          if err := json.Unmarshal(resourceobjectsrequest, &resourceObjectsRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.PeekResourceObjects(context.Background(), sourceId).ResourceObjectsRequest(resourceObjectsRequest).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.PeekResourceObjects(context.Background(), sourceId).ResourceObjectsRequest(resourceObjectsRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.PeekResourceObjects``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PeekResourceObjects`: ResourceObjectsResponse
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.PeekResourceObjects`: %v\n", resp)
        }
- path: /sources/{sourceId}/connector/ping-cluster
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#ping-cluster
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `cef3ee201db947c5912551015ba0c679` // string | The ID of the Source # string | The ID of the Source

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.PingCluster(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.PingCluster(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.PingCluster``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PingCluster`: StatusResponse
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.PingCluster`: %v\n", resp)
        }
- path: /sources/{sourceId}/correlation-config
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#put-correlation-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The source id # string | The source id
           correlationconfig := []byte(`{
          "attributeAssignments" : [ {
            "sequence" : 1,
            "filterString" : "first_name == \"John\"",
            "ignoreCase" : false,
            "complex" : false,
            "property" : "first_name",
            "value" : "firstName",
            "operation" : "EQ",
            "matchMode" : "ANYWHERE"
          }, {
            "sequence" : 1,
            "filterString" : "first_name == \"John\"",
            "ignoreCase" : false,
            "complex" : false,
            "property" : "first_name",
            "value" : "firstName",
            "operation" : "EQ",
            "matchMode" : "ANYWHERE"
          } ],
          "name" : "Source [source] Account Correlation",
          "id" : "2c9180835d191a86015d28455b4a2329"
        }`) // CorrelationConfig | 

          
          var correlationConfig beta.CorrelationConfig
          if err := json.Unmarshal(correlationconfig, &correlationConfig); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.PutCorrelationConfig(context.Background(), sourceId).CorrelationConfig(correlationConfig).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.PutCorrelationConfig(context.Background(), sourceId).CorrelationConfig(correlationConfig).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.PutCorrelationConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutCorrelationConfig`: CorrelationConfig
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.PutCorrelationConfig`: %v\n", resp)
        }
- path: /sources/{sourceId}/native-change-detection-config
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#put-native-change-detection-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The source id # string | The source id
           nativechangedetectionconfig := []byte(`{
          "selectedEntitlements" : [ "memberOf", "memberOfSharedMailbox" ],
          "operations" : [ "ACCOUNT_UPDATED", "ACCOUNT_DELETED" ],
          "selectedNonEntitlementAttributes" : [ "lastName", "phoneNumber", "objectType", "servicePrincipalName" ],
          "allNonEntitlementAttributes" : false,
          "allEntitlements" : false,
          "enabled" : true
        }`) // NativeChangeDetectionConfig | 

          
          var nativeChangeDetectionConfig beta.NativeChangeDetectionConfig
          if err := json.Unmarshal(nativechangedetectionconfig, &nativeChangeDetectionConfig); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.PutNativeChangeDetectionConfig(context.Background(), sourceId).NativeChangeDetectionConfig(nativeChangeDetectionConfig).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.PutNativeChangeDetectionConfig(context.Background(), sourceId).NativeChangeDetectionConfig(nativeChangeDetectionConfig).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.PutNativeChangeDetectionConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutNativeChangeDetectionConfig`: NativeChangeDetectionConfig
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.PutNativeChangeDetectionConfig`: %v\n", resp)
        }
- path: /sources/{sourceId}/provisioning-policies/{usageType}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#put-provisioning-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The Source ID. # string | The Source ID.
          usageType := CREATE // UsageType | The type of provisioning policy usage.  In IdentityNow, a source can support various provisioning operations. For example, when a joiner is added to a source, this may trigger both CREATE and UPDATE provisioning operations.  Each usage type is considered a provisioning policy.  A source can have any number of these provisioning policies defined.  These are the common usage types:  CREATE - This usage type relates to 'Create Account Profile', the provisioning template for the account to be created. For example, this would be used for a joiner on a source.   UPDATE - This usage type relates to 'Update Account Profile', the provisioning template for the 'Update' connector operations. For example, this would be used for an attribute sync on a source. ENABLE - This usage type relates to 'Enable Account Profile', the provisioning template for the account to be enabled. For example, this could be used for a joiner on a source once the joiner's account is created.  DISABLE - This usage type relates to 'Disable Account Profile', the provisioning template for the account to be disabled. For example, this could be used when a leaver is removed temporarily from a source.  You can use these four usage types for all your provisioning policy needs.  # UsageType | The type of provisioning policy usage.  In IdentityNow, a source can support various provisioning operations. For example, when a joiner is added to a source, this may trigger both CREATE and UPDATE provisioning operations.  Each usage type is considered a provisioning policy.  A source can have any number of these provisioning policies defined.  These are the common usage types:  CREATE - This usage type relates to 'Create Account Profile', the provisioning template for the account to be created. For example, this would be used for a joiner on a source.   UPDATE - This usage type relates to 'Update Account Profile', the provisioning template for the 'Update' connector operations. For example, this would be used for an attribute sync on a source. ENABLE - This usage type relates to 'Enable Account Profile', the provisioning template for the account to be enabled. For example, this could be used for a joiner on a source once the joiner's account is created.  DISABLE - This usage type relates to 'Disable Account Profile', the provisioning template for the account to be disabled. For example, this could be used when a leaver is removed temporarily from a source.  You can use these four usage types for all your provisioning policy needs. 
           provisioningpolicydto := []byte(`{
          "name" : "example provisioning policy for inactive identities",
          "description" : "this provisioning policy creates access based on an identity going inactive",
          "fields" : [ {
            "isRequired" : false,
            "transform" : {
              "type" : "rule",
              "attributes" : {
                "name" : "Create Unique LDAP Attribute"
              }
            },
            "isMultiValued" : false,
            "name" : "userName",
            "attributes" : {
              "template" : "${firstname}.${lastname}${uniqueCounter}",
              "cloudMaxUniqueChecks" : "50",
              "cloudMaxSize" : "20",
              "cloudRequired" : "true"
            },
            "type" : "string"
          }, {
            "isRequired" : false,
            "transform" : {
              "type" : "rule",
              "attributes" : {
                "name" : "Create Unique LDAP Attribute"
              }
            },
            "isMultiValued" : false,
            "name" : "userName",
            "attributes" : {
              "template" : "${firstname}.${lastname}${uniqueCounter}",
              "cloudMaxUniqueChecks" : "50",
              "cloudMaxSize" : "20",
              "cloudRequired" : "true"
            },
            "type" : "string"
          } ],
          "usageType" : "CREATE"
        }`) // ProvisioningPolicyDto | 

          
          var provisioningPolicyDto beta.ProvisioningPolicyDto
          if err := json.Unmarshal(provisioningpolicydto, &provisioningPolicyDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.PutProvisioningPolicy(context.Background(), sourceId, usageType).ProvisioningPolicyDto(provisioningPolicyDto).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.PutProvisioningPolicy(context.Background(), sourceId, usageType).ProvisioningPolicyDto(provisioningPolicyDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.PutProvisioningPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutProvisioningPolicy`: ProvisioningPolicyDto
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.PutProvisioningPolicy`: %v\n", resp)
        }
- path: /sources/{id}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#put-source
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180835d191a86015d28455b4a2329` // string | Source ID. # string | Source ID.
           source := []byte(`{
          "cluster" : {
            "name" : "Corporate Cluster",
            "id" : "2c9180866166b5b0016167c32ef31a66",
            "type" : "CLUSTER"
          },
          "deleteThreshold" : 10,
          "connectorId" : "active-directory",
          "description" : "This is the corporate directory.",
          "type" : "OpenLDAP - Direct",
          "connectorClass" : "sailpoint.connector.LDAPConnector",
          "connectionType" : "file",
          "features" : [ "PROVISIONING", "NO_PERMISSIONS_PROVISIONING", "GROUPS_HAVE_MEMBERS" ],
          "passwordPolicies" : [ {
            "type" : "PASSWORD_POLICY",
            "id" : "2c9180855d191c59015d291ceb053980",
            "name" : "Corporate Password Policy"
          }, {
            "type" : "PASSWORD_POLICY",
            "id" : "2c9180855d191c59015d291ceb057777",
            "name" : "Vendor Password Policy"
          } ],
          "modified" : "2024-01-23T18:08:50.897Z",
          "id" : "2c91808568c529c60168cca6f90c1324",
          "connectorImplementationId" : "delimited-file",
          "managerCorrelationRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "RULE"
          },
          "owner" : {
            "name" : "MyName",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "managementWorkgroup" : {
            "name" : "My Management Workgroup",
            "id" : "2c91808568c529c60168cca6f90c2222",
            "type" : "GOVERNANCE_GROUP"
          },
          "accountCorrelationRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "RULE"
          },
          "authoritative" : false,
          "connectorAttributes" : {
            "healthCheckTimeout" : 30,
            "authSearchAttributes" : [ "cn", "uid", "mail" ]
          },
          "created" : "2022-02-08T14:50:03.827Z",
          "managerCorrelationMapping" : {
            "accountAttributeName" : "manager",
            "identityAttributeName" : "manager"
          },
          "credentialProviderEnabled" : false,
          "accountCorrelationConfig" : {
            "name" : "Directory [source-62867] Account Correlation",
            "id" : "2c9180855d191c59015d28583727245a",
            "type" : "ACCOUNT_CORRELATION_CONFIG"
          },
          "connector" : "active-directory",
          "healthy" : true,
          "schemas" : [ {
            "type" : "CONNECTOR_SCHEMA",
            "id" : "2c9180835d191a86015d28455b4b232a",
            "name" : "account"
          }, {
            "type" : "CONNECTOR_SCHEMA",
            "id" : "2c9180835d191a86015d28455b4b232b",
            "name" : "group"
          } ],
          "name" : "My Source",
          "connectorName" : "Active Directory",
          "category" : "CredentialProvider",
          "beforeProvisioningRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "RULE"
          },
          "status" : "SOURCE_STATE_HEALTHY",
          "since" : "2021-09-28T15:48:29.3801666300Z"
        }`) // Source | 

          
          var source beta.Source
          if err := json.Unmarshal(source, &source); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.PutSource(context.Background(), id).Source(source).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.PutSource(context.Background(), id).Source(source).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.PutSource``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutSource`: Source
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.PutSource`: %v\n", resp)
        }
- path: /sources/{id}/attribute-sync-config
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#put-source-attr-sync-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180835d191a86015d28455b4a2329` // string | The source id # string | The source id
           attrsyncsourceconfig := []byte(`{
          "attributes" : [ {
            "name" : "email",
            "displayName" : "Email",
            "enabled" : true,
            "target" : "mail"
          }, {
            "name" : "firstname",
            "displayName" : "First Name",
            "enabled" : false,
            "target" : "givenName"
          } ],
          "source" : {
            "name" : "HR Active Directory",
            "id" : "2c9180835d191a86015d28455b4b232a",
            "type" : "SOURCE"
          }
        }`) // AttrSyncSourceConfig | 

          
          var attrSyncSourceConfig beta.AttrSyncSourceConfig
          if err := json.Unmarshal(attrsyncsourceconfig, &attrSyncSourceConfig); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.PutSourceAttrSyncConfig(context.Background(), id).AttrSyncSourceConfig(attrSyncSourceConfig).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.PutSourceAttrSyncConfig(context.Background(), id).AttrSyncSourceConfig(attrSyncSourceConfig).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.PutSourceAttrSyncConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutSourceAttrSyncConfig`: AttrSyncSourceConfig
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.PutSourceAttrSyncConfig`: %v\n", resp)
        }
- path: /sources/{sourceId}/schemas/{schemaId}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#put-source-schema
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The Source ID. # string | The Source ID.
          schemaId := `2c9180835d191a86015d28455b4a2329` // string | The Schema ID. # string | The Schema ID.
           schema := []byte(`{
          "features" : [ "PROVISIONING", "NO_PERMISSIONS_PROVISIONING", "GROUPS_HAVE_MEMBERS" ],
          "nativeObjectType" : "User",
          "configuration" : {
            "groupMemberAttribute" : "member"
          },
          "created" : "2019-12-24T22:32:58.104Z",
          "includePermissions" : false,
          "name" : "account",
          "hierarchyAttribute" : "memberOf",
          "modified" : "2019-12-31T20:22:28.104Z",
          "attributes" : [ {
            "name" : "sAMAccountName",
            "type" : "STRING",
            "isMultiValued" : false,
            "isEntitlement" : false,
            "isGroup" : false
          }, {
            "name" : "memberOf",
            "type" : "STRING",
            "schema" : {
              "type" : "CONNECTOR_SCHEMA",
              "id" : "2c9180887671ff8c01767b4671fc7d60",
              "name" : "group"
            },
            "description" : "Group membership",
            "isMultiValued" : true,
            "isEntitlement" : true,
            "isGroup" : true
          } ],
          "id" : "2c9180835d191a86015d28455b4a2329",
          "displayAttribute" : "distinguishedName",
          "identityAttribute" : "sAMAccountName"
        }`) // Schema | 

          
          var schema beta.Schema
          if err := json.Unmarshal(schema, &schema); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.PutSourceSchema(context.Background(), sourceId, schemaId).Schema(schema).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.PutSourceSchema(context.Background(), sourceId, schemaId).Schema(schema).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.PutSourceSchema``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutSourceSchema`: Schema
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.PutSourceSchema`: %v\n", resp)
        }
- path: /sources/{sourceId}/synchronize-attributes
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#sync-attributes-for-source
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `sourceId_example` // string | The Source id # string | The Source id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.SyncAttributesForSource(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.SyncAttributesForSource(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.SyncAttributesForSource``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SyncAttributesForSource`: SourceSyncJob
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.SyncAttributesForSource`: %v\n", resp)
        }
- path: /sources/{sourceId}/connector/test-configuration
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#test-source-configuration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `cef3ee201db947c5912551015ba0c679` // string | The ID of the Source # string | The ID of the Source

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.TestSourceConfiguration(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.TestSourceConfiguration(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.TestSourceConfiguration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `TestSourceConfiguration`: StatusResponse
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.TestSourceConfiguration`: %v\n", resp)
        }
- path: /sources/{sourceId}/connector/check-connection
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#test-source-connection
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `cef3ee201db947c5912551015ba0c679` // string | The ID of the Source. # string | The ID of the Source.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.TestSourceConnection(context.Background(), sourceId).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.TestSourceConnection(context.Background(), sourceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.TestSourceConnection``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `TestSourceConnection`: StatusResponse
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.TestSourceConnection`: %v\n", resp)
        }
- path: /sources/{sourceId}/provisioning-policies/bulk-update
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#update-provisioning-policies-in-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The Source id. # string | The Source id.
          provisioningpolicydto := []byte(``) // []ProvisioningPolicyDto | 

          
          var provisioningPolicyDto []beta.ProvisioningPolicyDto
          if err := json.Unmarshal(provisioningpolicydto, &provisioningPolicyDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.UpdateProvisioningPoliciesInBulk(context.Background(), sourceId).ProvisioningPolicyDto(provisioningPolicyDto).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.UpdateProvisioningPoliciesInBulk(context.Background(), sourceId).ProvisioningPolicyDto(provisioningPolicyDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.UpdateProvisioningPoliciesInBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateProvisioningPoliciesInBulk`: []ProvisioningPolicyDto
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.UpdateProvisioningPoliciesInBulk`: %v\n", resp)
        }
- path: /sources/{sourceId}/provisioning-policies/{usageType}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#update-provisioning-policy
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The Source id. # string | The Source id.
          usageType := CREATE // UsageType | The type of provisioning policy usage.  In IdentityNow, a source can support various provisioning operations. For example, when a joiner is added to a source, this may trigger both CREATE and UPDATE provisioning operations.  Each usage type is considered a provisioning policy.  A source can have any number of these provisioning policies defined.  These are the common usage types:  CREATE - This usage type relates to 'Create Account Profile', the provisioning template for the account to be created. For example, this would be used for a joiner on a source.   UPDATE - This usage type relates to 'Update Account Profile', the provisioning template for the 'Update' connector operations. For example, this would be used for an attribute sync on a source. ENABLE - This usage type relates to 'Enable Account Profile', the provisioning template for the account to be enabled. For example, this could be used for a joiner on a source once the joiner's account is created.  DISABLE - This usage type relates to 'Disable Account Profile', the provisioning template for the account to be disabled. For example, this could be used when a leaver is removed temporarily from a source.  You can use these four usage types for all your provisioning policy needs.  # UsageType | The type of provisioning policy usage.  In IdentityNow, a source can support various provisioning operations. For example, when a joiner is added to a source, this may trigger both CREATE and UPDATE provisioning operations.  Each usage type is considered a provisioning policy.  A source can have any number of these provisioning policies defined.  These are the common usage types:  CREATE - This usage type relates to 'Create Account Profile', the provisioning template for the account to be created. For example, this would be used for a joiner on a source.   UPDATE - This usage type relates to 'Update Account Profile', the provisioning template for the 'Update' connector operations. For example, this would be used for an attribute sync on a source. ENABLE - This usage type relates to 'Enable Account Profile', the provisioning template for the account to be enabled. For example, this could be used for a joiner on a source once the joiner's account is created.  DISABLE - This usage type relates to 'Disable Account Profile', the provisioning template for the account to be disabled. For example, this could be used when a leaver is removed temporarily from a source.  You can use these four usage types for all your provisioning policy needs. 
          jsonpatchoperation := []byte(`[{op=add, path=/fields/0, value={name=email, transform={type=identityAttribute, attributes={name=email}}, attributes={}, isRequired=false, type=string, isMultiValued=false}}]`) // []JsonPatchOperation | The JSONPatch payload used to update the schema.

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.UpdateProvisioningPolicy(context.Background(), sourceId, usageType).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.UpdateProvisioningPolicy(context.Background(), sourceId, usageType).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.UpdateProvisioningPolicy``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateProvisioningPolicy`: ProvisioningPolicyDto
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.UpdateProvisioningPolicy`: %v\n", resp)
        }
- path: /sources/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#update-source
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180835d191a86015d28455b4a2329` // string | Source ID. # string | Source ID.
          jsonpatchoperation := []byte(`[{op=replace, path=/description, value=new description}]`) // []JsonPatchOperation | A list of account update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard. Any password changes are submitted as plain-text and encrypted upon receipt in Identity Security Cloud (ISC).

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.UpdateSource(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.UpdateSource(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.UpdateSource``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateSource`: Source
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.UpdateSource`: %v\n", resp)
        }
- path: /sources/{sourceId}/entitlement-request-config
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#update-source-entitlement-request-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `8c190e6787aa4ed9a90bd9d5344523fb` // string | The Source id # string | The Source id
           sourceentitlementrequestconfig := []byte(`{
          "accessRequestConfig" : {
            "denialCommentRequired" : false,
            "approvalSchemes" : [ {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            } ],
            "reauthorizationRequired" : false,
            "requestCommentRequired" : true
          },
          "revocationRequestConfig" : {
            "approvalSchemes" : [ {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            } ]
          }
        }`) // SourceEntitlementRequestConfig | 

          
          var sourceEntitlementRequestConfig beta.SourceEntitlementRequestConfig
          if err := json.Unmarshal(sourceentitlementrequestconfig, &sourceEntitlementRequestConfig); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.UpdateSourceEntitlementRequestConfig(context.Background(), sourceId).SourceEntitlementRequestConfig(sourceEntitlementRequestConfig).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.UpdateSourceEntitlementRequestConfig(context.Background(), sourceId).SourceEntitlementRequestConfig(sourceEntitlementRequestConfig).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.UpdateSourceEntitlementRequestConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateSourceEntitlementRequestConfig`: SourceEntitlementRequestConfig
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.UpdateSourceEntitlementRequestConfig`: %v\n", resp)
        }
- path: /sources/{sourceId}/schemas/{schemaId}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/sources#update-source-schema
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sourceId := `2c9180835d191a86015d28455b4a2329` // string | The Source id. # string | The Source id.
          schemaId := `2c9180835d191a86015d28455b4a2329` // string | The Schema id. # string | The Schema id.
          jsonpatchoperation := []byte(`[{op=replace, path=/displayAttribute, value={new-display-attribute=null}}]`) // []JsonPatchOperation | The JSONPatch payload used to update the schema.

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SourcesAPI.UpdateSourceSchema(context.Background(), sourceId, schemaId).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.SourcesAPI.UpdateSourceSchema(context.Background(), sourceId, schemaId).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SourcesAPI.UpdateSourceSchema``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateSourceSchema`: Schema
          fmt.Fprintf(os.Stdout, "Response from `SourcesAPI.UpdateSourceSchema`: %v\n", resp)
        }
- path: /suggested-entitlement-description-batches/{batchId}/stats
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/suggested-entitlement-description#get-sed-batch-stats
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          batchId := `8c190e67-87aa-4ed9-a90b-d9d5344523fb` // string | Batch Id # string | Batch Id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.GetSedBatchStats(context.Background(), batchId).Execute()
          //resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.GetSedBatchStats(context.Background(), batchId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SuggestedEntitlementDescriptionAPI.GetSedBatchStats``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSedBatchStats`: SedBatchStats
          fmt.Fprintf(os.Stdout, "Response from `SuggestedEntitlementDescriptionAPI.GetSedBatchStats`: %v\n", resp)
        }
- path: /suggested-entitlement-description-batches
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/suggested-entitlement-description#get-sed-batches
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          offset := 0 // int64 | Offset  Integer specifying the offset of the first result from the beginning of the collection. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). The offset value is record-based, not page-based, and the index starts at 0. (optional) (default to 0) # int64 | Offset  Integer specifying the offset of the first result from the beginning of the collection. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). The offset value is record-based, not page-based, and the index starts at 0. (optional) (default to 0)
          limit := 250 // int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 250) # int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 250)
          count := true // bool | If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored.  The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). Since requesting a total count can have a performance impact, it is recommended not to send `count=true` if that value will not be used. (optional) (default to false) # bool | If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored.  The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). Since requesting a total count can have a performance impact, it is recommended not to send `count=true` if that value will not be used. (optional) (default to false)
          countOnly := true // bool | If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored. This parameter differs from the count parameter in that this one skips executing the actual query and always return an empty array. (optional) (default to false) # bool | If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored. This parameter differs from the count parameter in that this one skips executing the actual query and always return an empty array. (optional) (default to false)
          status := `completed, failed, submitted, materialized, failed` // string | Batch Status (optional) # string | Batch Status (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.GetSedBatches(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.GetSedBatches(context.Background()).Offset(offset).Limit(limit).Count(count).CountOnly(countOnly).Status(status).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SuggestedEntitlementDescriptionAPI.GetSedBatches``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetSedBatches`: []Sed
          fmt.Fprintf(os.Stdout, "Response from `SuggestedEntitlementDescriptionAPI.GetSedBatches`: %v\n", resp)
        }
- path: /suggested-entitlement-descriptions
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/suggested-entitlement-description#list-seds
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := limit=25 // int64 | Integer specifying the maximum number of records to return in a single API call.  The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) # int64 | Integer specifying the maximum number of records to return in a single API call.  The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional)
          filters := `displayName co "Read and Write"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **batchId**: *eq, ne*  **displayName**: *eq, ne, co*  **sourceName**: *eq, ne, co*  **sourceId**: *eq, ne*  **status**: *eq, ne*  **fullText**: *co* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **batchId**: *eq, ne*  **displayName**: *eq, ne, co*  **sourceName**: *eq, ne, co*  **sourceId**: *eq, ne*  **status**: *eq, ne*  **fullText**: *co* (optional)
          sorters := `sorters=displayName` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **displayName, sourceName, status** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **displayName, sourceName, status** (optional)
          count := count=true // bool | If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored.  The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). Since requesting a total count can have a performance impact, it is recommended not to send `count=true` if that value will not be used. (optional) # bool | If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored.  The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). Since requesting a total count can have a performance impact, it is recommended not to send `count=true` if that value will not be used. (optional)
          countOnly := count-only=true // bool | If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored. This parameter differs from the Coun parameter in that this one skip executing the actual query and always return an empty array. (optional) # bool | If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored. This parameter differs from the Coun parameter in that this one skip executing the actual query and always return an empty array. (optional)
          requestedByAnyone := requested-by-anyone=true // bool | By default, the ListSeds API will only return items that you have requested to be generated.   This option will allow you to see all items that have been requested (optional) # bool | By default, the ListSeds API will only return items that you have requested to be generated.   This option will allow you to see all items that have been requested (optional)
          showPendingStatusOnly := show-pending-status-only=true // bool | Will limit records to items that are in \"suggested\" or \"approved\" status (optional) # bool | Will limit records to items that are in \"suggested\" or \"approved\" status (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.ListSeds(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.ListSeds(context.Background()).Limit(limit).Filters(filters).Sorters(sorters).Count(count).CountOnly(countOnly).RequestedByAnyone(requestedByAnyone).ShowPendingStatusOnly(showPendingStatusOnly).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SuggestedEntitlementDescriptionAPI.ListSeds``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListSeds`: []Sed
          fmt.Fprintf(os.Stdout, "Response from `SuggestedEntitlementDescriptionAPI.ListSeds`: %v\n", resp)
        }
- path: /suggested-entitlement-descriptions
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/suggested-entitlement-description#patch-sed
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ebab396f-0af1-4050-89b7-dafc63ec70e7` // string | id is sed id # string | id is sed id
          sedpatch := []byte(``) // []SedPatch | Sed Patch Request

          
          var sedPatch []beta.SedPatch
          if err := json.Unmarshal(sedpatch, &sedPatch); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.PatchSed(context.Background(), id).SedPatch(sedPatch).Execute()
          //resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.PatchSed(context.Background(), id).SedPatch(sedPatch).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SuggestedEntitlementDescriptionAPI.PatchSed``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchSed`: Sed
          fmt.Fprintf(os.Stdout, "Response from `SuggestedEntitlementDescriptionAPI.PatchSed`: %v\n", resp)
        }
- path: /suggested-entitlement-description-approvals
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/suggested-entitlement-description#submit-sed-approval
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          sedapproval := []byte(``) // []SedApproval | Sed Approval

          
          var sedApproval []beta.SedApproval
          if err := json.Unmarshal(sedapproval, &sedApproval); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.SubmitSedApproval(context.Background()).SedApproval(sedApproval).Execute()
          //resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.SubmitSedApproval(context.Background()).SedApproval(sedApproval).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SuggestedEntitlementDescriptionAPI.SubmitSedApproval``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SubmitSedApproval`: []SedApprovalStatus
          fmt.Fprintf(os.Stdout, "Response from `SuggestedEntitlementDescriptionAPI.SubmitSedApproval`: %v\n", resp)
        }
- path: /suggested-entitlement-description-assignments
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/suggested-entitlement-description#submit-sed-assignment
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           sedassignment := []byte(`{
          "assignee" : {
            "type" : "SOURCE_OWNER",
            "value" : "016629d1-1d25-463f-97f3-c6686846650"
          },
          "items" : [ "016629d1-1d25-463f-97f3-0c6686846650", "016629d1-1d25-463f-97f3-0c6686846650" ]
        }`) // SedAssignment | Sed Assignment Request

          
          var sedAssignment beta.SedAssignment
          if err := json.Unmarshal(sedassignment, &sedAssignment); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.SubmitSedAssignment(context.Background()).SedAssignment(sedAssignment).Execute()
          //resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.SubmitSedAssignment(context.Background()).SedAssignment(sedAssignment).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SuggestedEntitlementDescriptionAPI.SubmitSedAssignment``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SubmitSedAssignment`: SedAssignmentResponse
          fmt.Fprintf(os.Stdout, "Response from `SuggestedEntitlementDescriptionAPI.SubmitSedAssignment`: %v\n", resp)
        }
- path: /suggested-entitlement-description-batches
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/suggested-entitlement-description#submit-sed-batch-request
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           sedbatchrequest := []byte(`{
          "entitlements" : [ "016629d1-1d25-463f-97f3-c6686846650", "016629d1-1d25-463f-97f3-c6686846650" ],
          "seds" : [ "016629d1-1d25-463f-97f3-c6686846650", "016629d1-1d25-463f-97f3-c6686846650" ],
          "searchCriteria" : {
            "key" : {
              "indices" : [ "entitlements" ],
              "query" : {
                "query" : "status:active"
              },
              "textQuery" : {
                "terms" : [ "admin", "user" ],
                "matchAny" : true,
                "fields" : [ "role", "name" ]
              },
              "searchAfter" : [ "12345", "67890" ],
              "filters" : {
                "status" : {
                  "type" : "TERMS",
                  "terms" : [ "active", "inactive" ]
                }
              },
              "sort" : [ "name:asc", "createdAt:desc" ],
              "queryType" : "TEXT",
              "includeNested" : true
            }
          }
        }`) // SedBatchRequest | Sed Batch Request (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.SubmitSedBatchRequest(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.SuggestedEntitlementDescriptionAPI.SubmitSedBatchRequest(context.Background()).SedBatchRequest(sedBatchRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `SuggestedEntitlementDescriptionAPI.SubmitSedBatchRequest``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SubmitSedBatchRequest`: SedBatchResponse
          fmt.Fprintf(os.Stdout, "Response from `SuggestedEntitlementDescriptionAPI.SubmitSedBatchRequest`: %v\n", resp)
        }
- path: /tagged-objects/{type}/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/tagged-objects#delete-tagged-object
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          type_ := `ROLE` // string | The type of object to delete tags from. # string | The type of object to delete tags from.
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the object to delete tags from. # string | The ID of the object to delete tags from.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.TaggedObjectsAPI.DeleteTaggedObject(context.Background(), type_, id).Execute()
          //r, err := apiClient.Beta.TaggedObjectsAPI.DeleteTaggedObject(context.Background(), type_, id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TaggedObjectsAPI.DeleteTaggedObject``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /tagged-objects/bulk-remove
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/tagged-objects#delete-tags-to-many-object
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           bulktaggedobject := []byte(`{
          "objectRefs" : [ {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          }, {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          } ],
          "operation" : "MERGE",
          "tags" : [ "BU_FINANCE", "PCI" ]
        }`) // BulkTaggedObject | Supported object types are ACCESS_PROFILE, APPLICATION, CAMPAIGN, ENTITLEMENT, IDENTITY, ROLE, SOD_POLICY, SOURCE.

          
          var bulkTaggedObject beta.BulkTaggedObject
          if err := json.Unmarshal(bulktaggedobject, &bulkTaggedObject); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.TaggedObjectsAPI.DeleteTagsToManyObject(context.Background()).BulkTaggedObject(bulkTaggedObject).Execute()
          //r, err := apiClient.Beta.TaggedObjectsAPI.DeleteTagsToManyObject(context.Background()).BulkTaggedObject(bulkTaggedObject).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TaggedObjectsAPI.DeleteTagsToManyObject``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /tagged-objects/{type}/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/tagged-objects#get-tagged-object
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          type_ := `ROLE` // string | The type of tagged object to retrieve. # string | The type of tagged object to retrieve.
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the object reference to retrieve. # string | The ID of the object reference to retrieve.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TaggedObjectsAPI.GetTaggedObject(context.Background(), type_, id).Execute()
          //resp, r, err := apiClient.Beta.TaggedObjectsAPI.GetTaggedObject(context.Background(), type_, id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TaggedObjectsAPI.GetTaggedObject``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetTaggedObject`: TaggedObject
          fmt.Fprintf(os.Stdout, "Response from `TaggedObjectsAPI.GetTaggedObject`: %v\n", resp)
        }
- path: /tagged-objects
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/tagged-objects#list-tagged-objects
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `tagName eq "BU_FINANCE"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **objectRef.id**: *eq, in*  **objectRef.type**: *eq, in*  **tagName**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **objectRef.id**: *eq, in*  **objectRef.type**: *eq, in*  **tagName**: *eq, in* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TaggedObjectsAPI.ListTaggedObjects(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.TaggedObjectsAPI.ListTaggedObjects(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TaggedObjectsAPI.ListTaggedObjects``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListTaggedObjects`: []TaggedObject
          fmt.Fprintf(os.Stdout, "Response from `TaggedObjectsAPI.ListTaggedObjects`: %v\n", resp)
        }
- path: /tagged-objects/{type}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/tagged-objects#list-tagged-objects-by-type
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          type_ := `ROLE` // string | The type of tagged object to retrieve. # string | The type of tagged object to retrieve.
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `objectRef.id eq "2c91808568c529c60168cca6f90c1313"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **objectRef.id**: *eq*  **objectRef.type**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **objectRef.id**: *eq*  **objectRef.type**: *eq* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TaggedObjectsAPI.ListTaggedObjectsByType(context.Background(), type_).Execute()
          //resp, r, err := apiClient.Beta.TaggedObjectsAPI.ListTaggedObjectsByType(context.Background(), type_).Limit(limit).Offset(offset).Count(count).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TaggedObjectsAPI.ListTaggedObjectsByType``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListTaggedObjectsByType`: []TaggedObject
          fmt.Fprintf(os.Stdout, "Response from `TaggedObjectsAPI.ListTaggedObjectsByType`: %v\n", resp)
        }
- path: /tagged-objects/{type}/{id}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/tagged-objects#put-tagged-object
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          type_ := `ROLE` // string | The type of tagged object to update. # string | The type of tagged object to update.
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the object reference to update. # string | The ID of the object reference to update.
           taggedobject := []byte(`{
          "objectRef" : {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "tags" : [ "BU_FINANCE", "PCI" ]
        }`) // TaggedObject | 

          
          var taggedObject beta.TaggedObject
          if err := json.Unmarshal(taggedobject, &taggedObject); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TaggedObjectsAPI.PutTaggedObject(context.Background(), type_, id).TaggedObject(taggedObject).Execute()
          //resp, r, err := apiClient.Beta.TaggedObjectsAPI.PutTaggedObject(context.Background(), type_, id).TaggedObject(taggedObject).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TaggedObjectsAPI.PutTaggedObject``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutTaggedObject`: TaggedObject
          fmt.Fprintf(os.Stdout, "Response from `TaggedObjectsAPI.PutTaggedObject`: %v\n", resp)
        }
- path: /tagged-objects
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/tagged-objects#set-tag-to-object
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           taggedobject := []byte(`{
          "objectRef" : {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "tags" : [ "BU_FINANCE", "PCI" ]
        }`) // TaggedObject | 

          
          var taggedObject beta.TaggedObject
          if err := json.Unmarshal(taggedobject, &taggedObject); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.TaggedObjectsAPI.SetTagToObject(context.Background()).TaggedObject(taggedObject).Execute()
          //r, err := apiClient.Beta.TaggedObjectsAPI.SetTagToObject(context.Background()).TaggedObject(taggedObject).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TaggedObjectsAPI.SetTagToObject``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /tagged-objects/bulk-add
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/tagged-objects#set-tags-to-many-objects
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           bulktaggedobject := []byte(`{
          "objectRefs" : [ {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          }, {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          } ],
          "operation" : "MERGE",
          "tags" : [ "BU_FINANCE", "PCI" ]
        }`) // BulkTaggedObject | Supported object types are ACCESS_PROFILE, APPLICATION, CAMPAIGN, ENTITLEMENT, IDENTITY, ROLE, SOD_POLICY, SOURCE.

          
          var bulkTaggedObject beta.BulkTaggedObject
          if err := json.Unmarshal(bulktaggedobject, &bulkTaggedObject); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TaggedObjectsAPI.SetTagsToManyObjects(context.Background()).BulkTaggedObject(bulkTaggedObject).Execute()
          //resp, r, err := apiClient.Beta.TaggedObjectsAPI.SetTagsToManyObjects(context.Background()).BulkTaggedObject(bulkTaggedObject).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TaggedObjectsAPI.SetTagsToManyObjects``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SetTagsToManyObjects`: BulkTaggedObject
          fmt.Fprintf(os.Stdout, "Response from `TaggedObjectsAPI.SetTagsToManyObjects`: %v\n", resp)
        }
- path: /tags
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/tags#create-tag
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            "time"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           tag := []byte(`{
          "created" : "2022-05-04T14:48:49Z",
          "tagCategoryRefs" : [ {
            "name" : "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local",
            "id" : "2c91809773dee32014e13e122092014e",
            "type" : "ENTITLEMENT"
          }, {
            "name" : "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local",
            "id" : "2c91809773dee32014e13e122092014e",
            "type" : "ENTITLEMENT"
          } ],
          "name" : "PCI",
          "modified" : "2022-07-14T16:31:11Z",
          "id" : "449ecdc0-d4ff-4341-acf6-92f6f7ce604f"
        }`) // Tag | 

          
          var tag beta.Tag
          if err := json.Unmarshal(tag, &tag); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TagsAPI.CreateTag(context.Background()).Tag(tag).Execute()
          //resp, r, err := apiClient.Beta.TagsAPI.CreateTag(context.Background()).Tag(tag).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TagsAPI.CreateTag``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateTag`: Tag
          fmt.Fprintf(os.Stdout, "Response from `TagsAPI.CreateTag`: %v\n", resp)
        }
- path: /tags/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/tags#delete-tag-by-id
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `329d96cf-3bdb-40a9-988a-b5037ab89022` // string | The ID of the object reference to delete. # string | The ID of the object reference to delete.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.TagsAPI.DeleteTagById(context.Background(), id).Execute()
          //r, err := apiClient.Beta.TagsAPI.DeleteTagById(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TagsAPI.DeleteTagById``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /tags/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/tags#get-tag-by-id
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `329d96cf-3bdb-40a9-988a-b5037ab89022` // string | The ID of the object reference to retrieve. # string | The ID of the object reference to retrieve.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TagsAPI.GetTagById(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.TagsAPI.GetTagById(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TagsAPI.GetTagById``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetTagById`: Tag
          fmt.Fprintf(os.Stdout, "Response from `TagsAPI.GetTagById`: %v\n", resp)
        }
- path: /tags
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/tags#list-tags
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `id eq "27462f54-61c7-4140-b5da-d5dbe27fc6db"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw* (optional)
          sorters := `name,-modified` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TagsAPI.ListTags(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.TagsAPI.ListTags(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TagsAPI.ListTags``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListTags`: []Tag
          fmt.Fprintf(os.Stdout, "Response from `TagsAPI.ListTags`: %v\n", resp)
        }
- path: /task-status/pending-tasks
  method: Head
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/task-management#get-pending-task-headers
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.TaskManagementAPI.GetPendingTaskHeaders(context.Background()).Execute()
          //r, err := apiClient.Beta.TaskManagementAPI.GetPendingTaskHeaders(context.Background()).Offset(offset).Limit(limit).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TaskManagementAPI.GetPendingTaskHeaders``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /task-status/pending-tasks
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/task-management#get-pending-tasks
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TaskManagementAPI.GetPendingTasks(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.TaskManagementAPI.GetPendingTasks(context.Background()).Offset(offset).Limit(limit).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TaskManagementAPI.GetPendingTasks``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetPendingTasks`: []TaskStatus
          fmt.Fprintf(os.Stdout, "Response from `TaskManagementAPI.GetPendingTasks`: %v\n", resp)
        }
- path: /task-status/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/task-management#get-task-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `00eebcf881994e419d72e757fd30dc0e` // string | Task ID. # string | Task ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TaskManagementAPI.GetTaskStatus(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.TaskManagementAPI.GetTaskStatus(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TaskManagementAPI.GetTaskStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetTaskStatus`: TaskStatus
          fmt.Fprintf(os.Stdout, "Response from `TaskManagementAPI.GetTaskStatus`: %v\n", resp)
        }
- path: /task-status
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/task-management#get-task-status-list
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `completionStatus eq "Success"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **sourceId**: *eq, in*  **completionStatus**: *eq, in*  **type**: *eq, in* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **sourceId**: *eq, in*  **completionStatus**: *eq, in*  **type**: *eq, in* (optional)
          sorters := `-created` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TaskManagementAPI.GetTaskStatusList(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.TaskManagementAPI.GetTaskStatusList(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TaskManagementAPI.GetTaskStatusList``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetTaskStatusList`: []TaskStatus
          fmt.Fprintf(os.Stdout, "Response from `TaskManagementAPI.GetTaskStatusList`: %v\n", resp)
        }
- path: /task-status/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/task-management#update-task-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `00eebcf881994e419d72e757fd30dc0e` // string | Task ID. # string | Task ID.
          jsonpatchoperation := []byte(``) // []JsonPatchOperation | The JSONPatch payload used to update the object.

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TaskManagementAPI.UpdateTaskStatus(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.TaskManagementAPI.UpdateTaskStatus(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TaskManagementAPI.UpdateTaskStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateTaskStatus`: TaskStatus
          fmt.Fprintf(os.Stdout, "Response from `TaskManagementAPI.UpdateTaskStatus`: %v\n", resp)
        }
- path: /tenant
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/tenant#get-tenant
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TenantAPI.GetTenant(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.TenantAPI.GetTenant(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TenantAPI.GetTenant``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetTenant`: Tenant
          fmt.Fprintf(os.Stdout, "Response from `TenantAPI.GetTenant`: %v\n", resp)
        }
- path: /transforms
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/transforms#create-transform
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           transform := []byte(`{
          "name" : "Timestamp To Date",
          "attributes" : "{}",
          "type" : "dateFormat"
        }`) // Transform | The transform to be created.

          
          var transform beta.Transform
          if err := json.Unmarshal(transform, &transform); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TransformsAPI.CreateTransform(context.Background()).Transform(transform).Execute()
          //resp, r, err := apiClient.Beta.TransformsAPI.CreateTransform(context.Background()).Transform(transform).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TransformsAPI.CreateTransform``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateTransform`: TransformRead
          fmt.Fprintf(os.Stdout, "Response from `TransformsAPI.CreateTransform`: %v\n", resp)
        }
- path: /transforms/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/transforms#delete-transform
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2cd78adghjkja34jh2b1hkjhasuecd` // string | ID of the transform to delete # string | ID of the transform to delete

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.TransformsAPI.DeleteTransform(context.Background(), id).Execute()
          //r, err := apiClient.Beta.TransformsAPI.DeleteTransform(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TransformsAPI.DeleteTransform``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /transforms/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/transforms#get-transform
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2cd78adghjkja34jh2b1hkjhasuecd` // string | ID of the transform to retrieve # string | ID of the transform to retrieve

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TransformsAPI.GetTransform(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.TransformsAPI.GetTransform(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TransformsAPI.GetTransform``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetTransform`: TransformRead
          fmt.Fprintf(os.Stdout, "Response from `TransformsAPI.GetTransform`: %v\n", resp)
        }
- path: /transforms
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/transforms#list-transforms
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          name := `ExampleTransformName123` // string | Name of the transform to retrieve from the list. (optional) # string | Name of the transform to retrieve from the list. (optional)
          filters := `name eq "Uppercase"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **internal**: *eq*  **name**: *eq, sw* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **internal**: *eq*  **name**: *eq, sw* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TransformsAPI.ListTransforms(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.TransformsAPI.ListTransforms(context.Background()).Offset(offset).Limit(limit).Count(count).Name(name).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TransformsAPI.ListTransforms``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListTransforms`: []TransformRead
          fmt.Fprintf(os.Stdout, "Response from `TransformsAPI.ListTransforms`: %v\n", resp)
        }
- path: /transforms/{id}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/transforms#update-transform
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2cd78adghjkja34jh2b1hkjhasuecd` // string | ID of the transform to update # string | ID of the transform to update
           transform := []byte(`{
          "name" : "Timestamp To Date",
          "attributes" : "{}",
          "type" : "dateFormat"
        }`) // Transform | The updated transform object. Must include \"name\", \"type\", and \"attributes\" fields, but \"name\" and \"type\" must not be modified. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TransformsAPI.UpdateTransform(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.TransformsAPI.UpdateTransform(context.Background(), id).Transform(transform).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TransformsAPI.UpdateTransform``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateTransform`: TransformRead
          fmt.Fprintf(os.Stdout, "Response from `TransformsAPI.UpdateTransform`: %v\n", resp)
        }
- path: /trigger-invocations/{id}/complete
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/triggers#complete-trigger-invocation
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `0f11f2a4-7c94-4bf3-a2bd-742580fe3bde` // string | The ID of the invocation to complete. # string | The ID of the invocation to complete.
           completeinvocation := []byte(`{
          "output" : {
            "approved" : false
          },
          "secret" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "error" : "Access request is denied."
        }`) // CompleteInvocation | 

          
          var completeInvocation beta.CompleteInvocation
          if err := json.Unmarshal(completeinvocation, &completeInvocation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.TriggersAPI.CompleteTriggerInvocation(context.Background(), id).CompleteInvocation(completeInvocation).Execute()
          //r, err := apiClient.Beta.TriggersAPI.CompleteTriggerInvocation(context.Background(), id).CompleteInvocation(completeInvocation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TriggersAPI.CompleteTriggerInvocation``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /trigger-subscriptions
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/triggers#create-subscription
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           subscriptionpostrequest := []byte(`{
          "filter" : "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]",
          "httpConfig" : {
            "bearerTokenAuthConfig" : {
              "bearerToken" : "bearerToken"
            },
            "httpAuthenticationType" : "BASIC_AUTH",
            "httpDispatchMode" : "SYNC",
            "basicAuthConfig" : {
              "password" : "password",
              "userName" : "user@example.com"
            },
            "url" : "https://www.example.com"
          },
          "triggerId" : "idn:access-requested",
          "name" : "Access request subscription",
          "description" : "Access requested to site xyz",
          "eventBridgeConfig" : {
            "awsRegion" : "us-west-1",
            "awsAccount" : "123456789012"
          },
          "responseDeadline" : "PT1H",
          "type" : "HTTP",
          "enabled" : true
        }`) // SubscriptionPostRequest | 

          
          var subscriptionPostRequest beta.SubscriptionPostRequest
          if err := json.Unmarshal(subscriptionpostrequest, &subscriptionPostRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TriggersAPI.CreateSubscription(context.Background()).SubscriptionPostRequest(subscriptionPostRequest).Execute()
          //resp, r, err := apiClient.Beta.TriggersAPI.CreateSubscription(context.Background()).SubscriptionPostRequest(subscriptionPostRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TriggersAPI.CreateSubscription``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateSubscription`: Subscription
          fmt.Fprintf(os.Stdout, "Response from `TriggersAPI.CreateSubscription`: %v\n", resp)
        }
- path: /trigger-subscriptions/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/triggers#delete-subscription
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `0f11f2a4-7c94-4bf3-a2bd-742580fe3bde` // string | Subscription ID # string | Subscription ID

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.TriggersAPI.DeleteSubscription(context.Background(), id).Execute()
          //r, err := apiClient.Beta.TriggersAPI.DeleteSubscription(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TriggersAPI.DeleteSubscription``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /trigger-subscriptions
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/triggers#list-subscriptions
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `id eq "12cff757-c0c0-413b-8ad7-2a47956d1e89"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq*  **triggerId**: *eq*  **type**: *eq, le* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq*  **triggerId**: *eq*  **type**: *eq, le* (optional)
          sorters := `triggerName` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **triggerId, triggerName** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **triggerId, triggerName** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TriggersAPI.ListSubscriptions(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.TriggersAPI.ListSubscriptions(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TriggersAPI.ListSubscriptions``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListSubscriptions`: []Subscription
          fmt.Fprintf(os.Stdout, "Response from `TriggersAPI.ListSubscriptions`: %v\n", resp)
        }
- path: /trigger-invocations/status
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/triggers#list-trigger-invocation-status
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `triggerId eq "idn:access-request-dynamic-approver"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **triggerId**: *eq*  **subscriptionId**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **triggerId**: *eq*  **subscriptionId**: *eq* (optional)
          sorters := `created` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **triggerId, subscriptionName, created, completed** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **triggerId, subscriptionName, created, completed** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TriggersAPI.ListTriggerInvocationStatus(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.TriggersAPI.ListTriggerInvocationStatus(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TriggersAPI.ListTriggerInvocationStatus``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListTriggerInvocationStatus`: []InvocationStatus
          fmt.Fprintf(os.Stdout, "Response from `TriggersAPI.ListTriggerInvocationStatus`: %v\n", resp)
        }
- path: /triggers
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/triggers#list-triggers
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          filters := `id eq "idn:access-request-post-approval"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, ge, le* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, ge, le* (optional)
          sorters := `name` // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name** (optional) # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name** (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TriggersAPI.ListTriggers(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.TriggersAPI.ListTriggers(context.Background()).Limit(limit).Offset(offset).Count(count).Filters(filters).Sorters(sorters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TriggersAPI.ListTriggers``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListTriggers`: []Trigger
          fmt.Fprintf(os.Stdout, "Response from `TriggersAPI.ListTriggers`: %v\n", resp)
        }
- path: /trigger-subscriptions/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/triggers#patch-subscription
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `0f11f2a4-7c94-4bf3-a2bd-742580fe3bde` // string | ID of the Subscription to patch # string | ID of the Subscription to patch
          subscriptionpatchrequestinner := []byte(``) // []SubscriptionPatchRequestInner | 

          
          var subscriptionPatchRequestInner []beta.SubscriptionPatchRequestInner
          if err := json.Unmarshal(subscriptionpatchrequestinner, &subscriptionPatchRequestInner); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TriggersAPI.PatchSubscription(context.Background(), id).SubscriptionPatchRequestInner(subscriptionPatchRequestInner).Execute()
          //resp, r, err := apiClient.Beta.TriggersAPI.PatchSubscription(context.Background(), id).SubscriptionPatchRequestInner(subscriptionPatchRequestInner).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TriggersAPI.PatchSubscription``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchSubscription`: Subscription
          fmt.Fprintf(os.Stdout, "Response from `TriggersAPI.PatchSubscription`: %v\n", resp)
        }
- path: /trigger-invocations/test
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/triggers#start-test-trigger-invocation
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           testinvocation := []byte(`{
          "input" : {
            "identityId" : "201327fda1c44704ac01181e963d463c"
          },
          "subscriptionIds" : [ "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde" ],
          "triggerId" : "idn:access-request-post-approval",
          "contentJson" : {
            "workflowId" : 1234
          }
        }`) // TestInvocation | 

          
          var testInvocation beta.TestInvocation
          if err := json.Unmarshal(testinvocation, &testInvocation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TriggersAPI.StartTestTriggerInvocation(context.Background()).TestInvocation(testInvocation).Execute()
          //resp, r, err := apiClient.Beta.TriggersAPI.StartTestTriggerInvocation(context.Background()).TestInvocation(testInvocation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TriggersAPI.StartTestTriggerInvocation``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `StartTestTriggerInvocation`: []Invocation
          fmt.Fprintf(os.Stdout, "Response from `TriggersAPI.StartTestTriggerInvocation`: %v\n", resp)
        }
- path: /trigger-subscriptions/validate-filter
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/triggers#test-subscription-filter
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           validatefilterinputdto := []byte(`{
          "filter" : "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]",
          "input" : {
            "identityId" : "201327fda1c44704ac01181e963d463c"
          }
        }`) // ValidateFilterInputDto | 

          
          var validateFilterInputDto beta.ValidateFilterInputDto
          if err := json.Unmarshal(validatefilterinputdto, &validateFilterInputDto); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TriggersAPI.TestSubscriptionFilter(context.Background()).ValidateFilterInputDto(validateFilterInputDto).Execute()
          //resp, r, err := apiClient.Beta.TriggersAPI.TestSubscriptionFilter(context.Background()).ValidateFilterInputDto(validateFilterInputDto).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TriggersAPI.TestSubscriptionFilter``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `TestSubscriptionFilter`: ValidateFilterOutputDto
          fmt.Fprintf(os.Stdout, "Response from `TriggersAPI.TestSubscriptionFilter`: %v\n", resp)
        }
- path: /trigger-subscriptions/{id}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/triggers#update-subscription
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `0f11f2a4-7c94-4bf3-a2bd-742580fe3bde` // string | Subscription ID # string | Subscription ID
           subscriptionputrequest := []byte(`{
          "filter" : "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]",
          "httpConfig" : {
            "bearerTokenAuthConfig" : {
              "bearerToken" : "bearerToken"
            },
            "httpAuthenticationType" : "BASIC_AUTH",
            "httpDispatchMode" : "SYNC",
            "basicAuthConfig" : {
              "password" : "password",
              "userName" : "user@example.com"
            },
            "url" : "https://www.example.com"
          },
          "name" : "Access request subscription",
          "description" : "Access requested to site xyz",
          "eventBridgeConfig" : {
            "awsRegion" : "us-west-1",
            "awsAccount" : "123456789012"
          },
          "responseDeadline" : "PT1H",
          "type" : "HTTP",
          "enabled" : true
        }`) // SubscriptionPutRequest | 

          
          var subscriptionPutRequest beta.SubscriptionPutRequest
          if err := json.Unmarshal(subscriptionputrequest, &subscriptionPutRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.TriggersAPI.UpdateSubscription(context.Background(), id).SubscriptionPutRequest(subscriptionPutRequest).Execute()
          //resp, r, err := apiClient.Beta.TriggersAPI.UpdateSubscription(context.Background(), id).SubscriptionPutRequest(subscriptionPutRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `TriggersAPI.UpdateSubscription``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `UpdateSubscription`: Subscription
          fmt.Fprintf(os.Stdout, "Response from `TriggersAPI.UpdateSubscription`: %v\n", resp)
        }
- path: /ui-metadata/tenant
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/ui-metadata#get-tenant-ui-metadata
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.UIMetadataAPI.GetTenantUiMetadata(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.UIMetadataAPI.GetTenantUiMetadata(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `UIMetadataAPI.GetTenantUiMetadata``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetTenantUiMetadata`: TenantUiMetadataItemResponse
          fmt.Fprintf(os.Stdout, "Response from `UIMetadataAPI.GetTenantUiMetadata`: %v\n", resp)
        }
- path: /ui-metadata/tenant
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/ui-metadata#set-tenant-ui-metadata
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           tenantuimetadataitemupdaterequest := []byte(`{
          "usernameEmptyText" : "Please provide your work email address...",
          "usernameLabel" : "Email",
          "iframeWhiteList" : "http://example.com http://example2.com"
        }`) // TenantUiMetadataItemUpdateRequest | 

          
          var tenantUiMetadataItemUpdateRequest beta.TenantUiMetadataItemUpdateRequest
          if err := json.Unmarshal(tenantuimetadataitemupdaterequest, &tenantUiMetadataItemUpdateRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.UIMetadataAPI.SetTenantUiMetadata(context.Background()).TenantUiMetadataItemUpdateRequest(tenantUiMetadataItemUpdateRequest).Execute()
          //resp, r, err := apiClient.Beta.UIMetadataAPI.SetTenantUiMetadata(context.Background()).TenantUiMetadataItemUpdateRequest(tenantUiMetadataItemUpdateRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `UIMetadataAPI.SetTenantUiMetadata``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SetTenantUiMetadata`: TenantUiMetadataItemResponse
          fmt.Fprintf(os.Stdout, "Response from `UIMetadataAPI.SetTenantUiMetadata`: %v\n", resp)
        }
- path: /vendor-connector-mappings
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/vendor-connector-mappings#create-vendor-connector-mapping
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           vendorconnectormapping := []byte(`{
          "createdAt" : "2024-03-13T12:56:19.391294Z",
          "deletedAt" : {
            "Valid" : false,
            "Time" : "0001-01-01T00:00:00Z"
          },
          "updatedBy" : {
            "Valid" : true,
            "String" : "user-67891"
          },
          "connector" : "Example connector",
          "createdBy" : "admin",
          "vendor" : "Example vendor",
          "id" : "78733556-9ea3-4f59-bf69-e5cd92b011b4",
          "deletedBy" : {
            "Valid" : false,
            "String" : ""
          },
          "updatedAt" : {
            "Valid" : true,
            "Time" : "2024-03-14T12:56:19.391294Z"
          }
        }`) // VendorConnectorMapping | 

          
          var vendorConnectorMapping beta.VendorConnectorMapping
          if err := json.Unmarshal(vendorconnectormapping, &vendorConnectorMapping); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.VendorConnectorMappingsAPI.CreateVendorConnectorMapping(context.Background()).VendorConnectorMapping(vendorConnectorMapping).Execute()
          //resp, r, err := apiClient.Beta.VendorConnectorMappingsAPI.CreateVendorConnectorMapping(context.Background()).VendorConnectorMapping(vendorConnectorMapping).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `VendorConnectorMappingsAPI.CreateVendorConnectorMapping``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateVendorConnectorMapping`: VendorConnectorMapping
          fmt.Fprintf(os.Stdout, "Response from `VendorConnectorMappingsAPI.CreateVendorConnectorMapping`: %v\n", resp)
        }
- path: /vendor-connector-mappings
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/vendor-connector-mappings#delete-vendor-connector-mapping
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           vendorconnectormapping := []byte(`{
          "createdAt" : "2024-03-13T12:56:19.391294Z",
          "deletedAt" : {
            "Valid" : false,
            "Time" : "0001-01-01T00:00:00Z"
          },
          "updatedBy" : {
            "Valid" : true,
            "String" : "user-67891"
          },
          "connector" : "Example connector",
          "createdBy" : "admin",
          "vendor" : "Example vendor",
          "id" : "78733556-9ea3-4f59-bf69-e5cd92b011b4",
          "deletedBy" : {
            "Valid" : false,
            "String" : ""
          },
          "updatedAt" : {
            "Valid" : true,
            "Time" : "2024-03-14T12:56:19.391294Z"
          }
        }`) // VendorConnectorMapping | 

          
          var vendorConnectorMapping beta.VendorConnectorMapping
          if err := json.Unmarshal(vendorconnectormapping, &vendorConnectorMapping); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.VendorConnectorMappingsAPI.DeleteVendorConnectorMapping(context.Background()).VendorConnectorMapping(vendorConnectorMapping).Execute()
          //resp, r, err := apiClient.Beta.VendorConnectorMappingsAPI.DeleteVendorConnectorMapping(context.Background()).VendorConnectorMapping(vendorConnectorMapping).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `VendorConnectorMappingsAPI.DeleteVendorConnectorMapping``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `DeleteVendorConnectorMapping`: DeleteVendorConnectorMapping200Response
          fmt.Fprintf(os.Stdout, "Response from `VendorConnectorMappingsAPI.DeleteVendorConnectorMapping`: %v\n", resp)
        }
- path: /vendor-connector-mappings
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/vendor-connector-mappings#get-vendor-connector-mappings
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.VendorConnectorMappingsAPI.GetVendorConnectorMappings(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.VendorConnectorMappingsAPI.GetVendorConnectorMappings(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `VendorConnectorMappingsAPI.GetVendorConnectorMappings``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetVendorConnectorMappings`: []VendorConnectorMapping
          fmt.Fprintf(os.Stdout, "Response from `VendorConnectorMappingsAPI.GetVendorConnectorMappings`: %v\n", resp)
        }
- path: /work-items/{id}/approve/{approvalItemId}
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-items#approve-approval-item
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the work item # string | The ID of the work item
          approvalItemId := `1211bcaa32112bcef6122adb21cef1ac` // string | The ID of the approval item. # string | The ID of the approval item.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkItemsAPI.ApproveApprovalItem(context.Background(), id, approvalItemId).Execute()
          //resp, r, err := apiClient.Beta.WorkItemsAPI.ApproveApprovalItem(context.Background(), id, approvalItemId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkItemsAPI.ApproveApprovalItem``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ApproveApprovalItem`: WorkItems
          fmt.Fprintf(os.Stdout, "Response from `WorkItemsAPI.ApproveApprovalItem`: %v\n", resp)
        }
- path: /work-items/bulk-approve/{id}
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-items#approve-approval-items-in-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the work item # string | The ID of the work item

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkItemsAPI.ApproveApprovalItemsInBulk(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.WorkItemsAPI.ApproveApprovalItemsInBulk(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkItemsAPI.ApproveApprovalItemsInBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ApproveApprovalItemsInBulk`: WorkItems
          fmt.Fprintf(os.Stdout, "Response from `WorkItemsAPI.ApproveApprovalItemsInBulk`: %v\n", resp)
        }
- path: /work-items/{id}
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-items#complete-work-item
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the work item # string | The ID of the work item
          body := `body_example` // string | Body is the request payload to create form definition request (optional) # string | Body is the request payload to create form definition request (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkItemsAPI.CompleteWorkItem(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.WorkItemsAPI.CompleteWorkItem(context.Background(), id).Body(body).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkItemsAPI.CompleteWorkItem``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CompleteWorkItem`: WorkItems
          fmt.Fprintf(os.Stdout, "Response from `WorkItemsAPI.CompleteWorkItem`: %v\n", resp)
        }
- path: /work-items/completed
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-items#get-completed-work-items
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          ownerId := `2c91808571bcfcf80171c23e4b4221fc` // string | The id of the owner of the work item list being requested.  Either an admin, or the owning/current user must make this request. (optional) # string | The id of the owner of the work item list being requested.  Either an admin, or the owning/current user must make this request. (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkItemsAPI.GetCompletedWorkItems(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.WorkItemsAPI.GetCompletedWorkItems(context.Background()).OwnerId(ownerId).Limit(limit).Offset(offset).Count(count).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkItemsAPI.GetCompletedWorkItems``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetCompletedWorkItems`: []WorkItems
          fmt.Fprintf(os.Stdout, "Response from `WorkItemsAPI.GetCompletedWorkItems`: %v\n", resp)
        }
- path: /work-items/completed/count
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-items#get-count-completed-work-items
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          ownerId := `2c91808571bcfcf80171c23e4b4221fc` // string | ID of the work item owner. (optional) # string | ID of the work item owner. (optional)
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkItemsAPI.GetCountCompletedWorkItems(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.WorkItemsAPI.GetCountCompletedWorkItems(context.Background()).OwnerId(ownerId).Limit(limit).Offset(offset).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkItemsAPI.GetCountCompletedWorkItems``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetCountCompletedWorkItems`: []WorkItemsCount
          fmt.Fprintf(os.Stdout, "Response from `WorkItemsAPI.GetCountCompletedWorkItems`: %v\n", resp)
        }
- path: /work-items/count
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-items#get-count-work-items
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          ownerId := `2c91808571bcfcf80171c23e4b4221fc` // string | ID of the work item owner. (optional) # string | ID of the work item owner. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkItemsAPI.GetCountWorkItems(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.WorkItemsAPI.GetCountWorkItems(context.Background()).OwnerId(ownerId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkItemsAPI.GetCountWorkItems``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetCountWorkItems`: WorkItemsCount
          fmt.Fprintf(os.Stdout, "Response from `WorkItemsAPI.GetCountWorkItems`: %v\n", resp)
        }
- path: /work-items/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-items#get-work-item
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `2c9180835d191a86015d28455b4a2329` // string | ID of the work item. # string | ID of the work item.
          ownerId := `2c9180835d191a86015d28455b4a2329` // string | ID of the work item owner. (optional) # string | ID of the work item owner. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkItemsAPI.GetWorkItem(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.WorkItemsAPI.GetWorkItem(context.Background(), id).OwnerId(ownerId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkItemsAPI.GetWorkItem``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetWorkItem`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `WorkItemsAPI.GetWorkItem`: %v\n", resp)
        }
- path: /work-items/summary
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-items#get-work-items-summary
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          ownerId := `ef38f94347e94562b5bb8424a56397d8` // string | ID of the work item owner. (optional) # string | ID of the work item owner. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkItemsAPI.GetWorkItemsSummary(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.WorkItemsAPI.GetWorkItemsSummary(context.Background()).OwnerId(ownerId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkItemsAPI.GetWorkItemsSummary``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetWorkItemsSummary`: WorkItemsSummary
          fmt.Fprintf(os.Stdout, "Response from `WorkItemsAPI.GetWorkItemsSummary`: %v\n", resp)
        }
- path: /work-items
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-items#list-work-items
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          count := true // bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false) # bool | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
          ownerId := `ef38f94347e94562b5bb8424a56397d8` // string | ID of the work item owner. (optional) # string | ID of the work item owner. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkItemsAPI.ListWorkItems(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.WorkItemsAPI.ListWorkItems(context.Background()).Limit(limit).Offset(offset).Count(count).OwnerId(ownerId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkItemsAPI.ListWorkItems``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListWorkItems`: []WorkItems
          fmt.Fprintf(os.Stdout, "Response from `WorkItemsAPI.ListWorkItems`: %v\n", resp)
        }
- path: /work-items/{id}/reject/{approvalItemId}
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-items#reject-approval-item
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the work item # string | The ID of the work item
          approvalItemId := `1211bcaa32112bcef6122adb21cef1ac` // string | The ID of the approval item. # string | The ID of the approval item.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkItemsAPI.RejectApprovalItem(context.Background(), id, approvalItemId).Execute()
          //resp, r, err := apiClient.Beta.WorkItemsAPI.RejectApprovalItem(context.Background(), id, approvalItemId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkItemsAPI.RejectApprovalItem``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `RejectApprovalItem`: WorkItems
          fmt.Fprintf(os.Stdout, "Response from `WorkItemsAPI.RejectApprovalItem`: %v\n", resp)
        }
- path: /work-items/bulk-reject/{id}
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-items#reject-approval-items-in-bulk
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the work item # string | The ID of the work item

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkItemsAPI.RejectApprovalItemsInBulk(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.WorkItemsAPI.RejectApprovalItemsInBulk(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkItemsAPI.RejectApprovalItemsInBulk``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `RejectApprovalItemsInBulk`: WorkItems
          fmt.Fprintf(os.Stdout, "Response from `WorkItemsAPI.RejectApprovalItemsInBulk`: %v\n", resp)
        }
- path: /work-items/{id}/submit-account-selection
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-items#submit-account-selection
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the work item # string | The ID of the work item
          requestBody := {fieldName=fieldValue} // map[string]interface{} | Account Selection Data map, keyed on fieldName # map[string]interface{} | Account Selection Data map, keyed on fieldName

          
          var requestBody beta.RequestBody
          if err := json.Unmarshal(requestbody, &requestBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkItemsAPI.SubmitAccountSelection(context.Background(), id).RequestBody(requestBody).Execute()
          //resp, r, err := apiClient.Beta.WorkItemsAPI.SubmitAccountSelection(context.Background(), id).RequestBody(requestBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkItemsAPI.SubmitAccountSelection``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `SubmitAccountSelection`: WorkItems
          fmt.Fprintf(os.Stdout, "Response from `WorkItemsAPI.SubmitAccountSelection`: %v\n", resp)
        }
- path: /work-items/{id}/forward
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-items#submit-forward-work-item
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `ef38f94347e94562b5bb8424a56397d8` // string | The ID of the work item # string | The ID of the work item
           workitemforward := []byte(`{
          "targetOwnerId" : "2c9180835d2e5168015d32f890ca1581",
          "comment" : "I'm going on vacation.",
          "sendNotifications" : true
        }`) // WorkItemForward | 

          
          var workItemForward beta.WorkItemForward
          if err := json.Unmarshal(workitemforward, &workItemForward); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.WorkItemsAPI.SubmitForwardWorkItem(context.Background(), id).WorkItemForward(workItemForward).Execute()
          //r, err := apiClient.Beta.WorkItemsAPI.SubmitForwardWorkItem(context.Background(), id).WorkItemForward(workItemForward).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkItemsAPI.SubmitForwardWorkItem``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /reassignment-configurations
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-reassignment#create-reassignment-configuration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           configurationitemrequest := []byte(`{
          "endDate" : "2022-07-30T17:00:00Z",
          "reassignedFromId" : "2c91808781a71ddb0181b9090b5c504e",
          "configType" : "ACCESS_REQUESTS",
          "reassignedToId" : "2c91808781a71ddb0181b9090b53504a",
          "startDate" : "2022-07-21T11:13:12.345Z"
        }`) // ConfigurationItemRequest | 

          
          var configurationItemRequest beta.ConfigurationItemRequest
          if err := json.Unmarshal(configurationitemrequest, &configurationItemRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkReassignmentAPI.CreateReassignmentConfiguration(context.Background()).ConfigurationItemRequest(configurationItemRequest).Execute()
          //resp, r, err := apiClient.Beta.WorkReassignmentAPI.CreateReassignmentConfiguration(context.Background()).ConfigurationItemRequest(configurationItemRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkReassignmentAPI.CreateReassignmentConfiguration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateReassignmentConfiguration`: ConfigurationItemResponse
          fmt.Fprintf(os.Stdout, "Response from `WorkReassignmentAPI.CreateReassignmentConfiguration`: %v\n", resp)
        }
- path: /reassignment-configurations/{identityId}/{configType}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-reassignment#delete-reassignment-configuration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityId := `2c91808781a71ddb0181b9090b5c504e` // string | unique identity id # string | unique identity id
          configType :=  // ConfigTypeEnum |  # ConfigTypeEnum | 

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.WorkReassignmentAPI.DeleteReassignmentConfiguration(context.Background(), identityId, configType).Execute()
          //r, err := apiClient.Beta.WorkReassignmentAPI.DeleteReassignmentConfiguration(context.Background(), identityId, configType).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkReassignmentAPI.DeleteReassignmentConfiguration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /reassignment-configurations/{identityId}/evaluate/{configType}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-reassignment#get-evaluate-reassignment-configuration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityId := `2c91808781a71ddb0181b9090b5c504e` // string | unique identity id # string | unique identity id
          configType := accessRequests // ConfigTypeEnum | Reassignment work type # ConfigTypeEnum | Reassignment work type
          exclusionfilters := []byte(`SELF_REVIEW_DELEGATION`) // []string | Exclusion filters that disable parts of the reassignment evaluation. Possible values are listed below: - `SELF_REVIEW_DELEGATION`: This will exclude delegations of self-review reassignments (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkReassignmentAPI.GetEvaluateReassignmentConfiguration(context.Background(), identityId, configType).Execute()
          //resp, r, err := apiClient.Beta.WorkReassignmentAPI.GetEvaluateReassignmentConfiguration(context.Background(), identityId, configType).ExclusionFilters(exclusionFilters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkReassignmentAPI.GetEvaluateReassignmentConfiguration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetEvaluateReassignmentConfiguration`: []EvaluateResponse
          fmt.Fprintf(os.Stdout, "Response from `WorkReassignmentAPI.GetEvaluateReassignmentConfiguration`: %v\n", resp)
        }
- path: /reassignment-configurations/types
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-reassignment#get-reassignment-config-types
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkReassignmentAPI.GetReassignmentConfigTypes(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.WorkReassignmentAPI.GetReassignmentConfigTypes(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkReassignmentAPI.GetReassignmentConfigTypes``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetReassignmentConfigTypes`: []ConfigType
          fmt.Fprintf(os.Stdout, "Response from `WorkReassignmentAPI.GetReassignmentConfigTypes`: %v\n", resp)
        }
- path: /reassignment-configurations/{identityId}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-reassignment#get-reassignment-configuration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityId := `2c91808781a71ddb0181b9090b5c504f` // string | unique identity id # string | unique identity id

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkReassignmentAPI.GetReassignmentConfiguration(context.Background(), identityId).Execute()
          //resp, r, err := apiClient.Beta.WorkReassignmentAPI.GetReassignmentConfiguration(context.Background(), identityId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkReassignmentAPI.GetReassignmentConfiguration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetReassignmentConfiguration`: ConfigurationResponse
          fmt.Fprintf(os.Stdout, "Response from `WorkReassignmentAPI.GetReassignmentConfiguration`: %v\n", resp)
        }
- path: /reassignment-configurations/tenant-config
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-reassignment#get-tenant-config-configuration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkReassignmentAPI.GetTenantConfigConfiguration(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.WorkReassignmentAPI.GetTenantConfigConfiguration(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkReassignmentAPI.GetTenantConfigConfiguration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetTenantConfigConfiguration`: TenantConfigurationResponse
          fmt.Fprintf(os.Stdout, "Response from `WorkReassignmentAPI.GetTenantConfigConfiguration`: %v\n", resp)
        }
- path: /reassignment-configurations
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-reassignment#list-reassignment-configurations
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 20 // int32 | Max number of results to return. (optional) (default to 20) # int32 | Max number of results to return. (optional) (default to 20)
          offset := 10 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. Defaults to 0 if not specified. (optional) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. Defaults to 0 if not specified. (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkReassignmentAPI.ListReassignmentConfigurations(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.WorkReassignmentAPI.ListReassignmentConfigurations(context.Background()).Limit(limit).Offset(offset).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkReassignmentAPI.ListReassignmentConfigurations``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListReassignmentConfigurations`: []ConfigurationResponse
          fmt.Fprintf(os.Stdout, "Response from `WorkReassignmentAPI.ListReassignmentConfigurations`: %v\n", resp)
        }
- path: /reassignment-configurations/{identityId}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-reassignment#put-reassignment-config
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          identityId := `2c91808781a71ddb0181b9090b5c504e` // string | unique identity id # string | unique identity id
           configurationitemrequest := []byte(`{
          "endDate" : "2022-07-30T17:00:00Z",
          "reassignedFromId" : "2c91808781a71ddb0181b9090b5c504e",
          "configType" : "ACCESS_REQUESTS",
          "reassignedToId" : "2c91808781a71ddb0181b9090b53504a",
          "startDate" : "2022-07-21T11:13:12.345Z"
        }`) // ConfigurationItemRequest | 

          
          var configurationItemRequest beta.ConfigurationItemRequest
          if err := json.Unmarshal(configurationitemrequest, &configurationItemRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkReassignmentAPI.PutReassignmentConfig(context.Background(), identityId).ConfigurationItemRequest(configurationItemRequest).Execute()
          //resp, r, err := apiClient.Beta.WorkReassignmentAPI.PutReassignmentConfig(context.Background(), identityId).ConfigurationItemRequest(configurationItemRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkReassignmentAPI.PutReassignmentConfig``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutReassignmentConfig`: ConfigurationItemResponse
          fmt.Fprintf(os.Stdout, "Response from `WorkReassignmentAPI.PutReassignmentConfig`: %v\n", resp)
        }
- path: /reassignment-configurations/tenant-config
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/work-reassignment#put-tenant-configuration
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           tenantconfigurationrequest := []byte(`{
          "configDetails" : {
            "disabled" : true
          }
        }`) // TenantConfigurationRequest | 

          
          var tenantConfigurationRequest beta.TenantConfigurationRequest
          if err := json.Unmarshal(tenantconfigurationrequest, &tenantConfigurationRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkReassignmentAPI.PutTenantConfiguration(context.Background()).TenantConfigurationRequest(tenantConfigurationRequest).Execute()
          //resp, r, err := apiClient.Beta.WorkReassignmentAPI.PutTenantConfiguration(context.Background()).TenantConfigurationRequest(tenantConfigurationRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkReassignmentAPI.PutTenantConfiguration``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutTenantConfiguration`: TenantConfigurationResponse
          fmt.Fprintf(os.Stdout, "Response from `WorkReassignmentAPI.PutTenantConfiguration`: %v\n", resp)
        }
- path: /workflow-executions/{id}/cancel
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#cancel-workflow-execution
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c17bea3a-574d-453c-9e04-4365fbf5af0b` // string | The workflow execution ID # string | The workflow execution ID

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.WorkflowsAPI.CancelWorkflowExecution(context.Background(), id).Execute()
          //r, err := apiClient.Beta.WorkflowsAPI.CancelWorkflowExecution(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.CancelWorkflowExecution``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /workflows
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#create-workflow
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
           createworkflowrequest := []byte(`{name=Send Email, owner={type=IDENTITY, id=2c91808568c529c60168cca6f90c1313, name=William Wilson}, description=Send an email to the identity who's attributes changed., definition={start=Send Email Test, steps={Send Email={actionId=sp:send-email, attributes={body=This is a test, from=sailpoint@sailpoint.com, recipientId.$=$.identity.id, subject=test}, nextStep=success, selectResult=null, type=action}, success={type=success}}}, enabled=false, trigger={type=EVENT, attributes={id=idn:identity-attributes-changed, filter=$.changes[?(@.attribute == 'manager')]}}}`) // CreateWorkflowRequest | 

          
          var createWorkflowRequest beta.CreateWorkflowRequest
          if err := json.Unmarshal(createworkflowrequest, &createWorkflowRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.CreateWorkflow(context.Background()).CreateWorkflowRequest(createWorkflowRequest).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.CreateWorkflow(context.Background()).CreateWorkflowRequest(createWorkflowRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.CreateWorkflow``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `CreateWorkflow`: Workflow
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.CreateWorkflow`: %v\n", resp)
        }
- path: /workflows/{id}
  method: Delete
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#delete-workflow
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c17bea3a-574d-453c-9e04-4365fbf5af0b` // string | Id of the Workflow # string | Id of the Workflow

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          r, err := apiClient.Beta.WorkflowsAPI.DeleteWorkflow(context.Background(), id).Execute()
          //r, err := apiClient.Beta.WorkflowsAPI.DeleteWorkflow(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.DeleteWorkflow``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
        }
- path: /workflows/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#get-workflow
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c17bea3a-574d-453c-9e04-4365fbf5af0b` // string | Id of the workflow # string | Id of the workflow
          workflowMetrics := false // bool | disable workflow metrics (optional) (default to true) # bool | disable workflow metrics (optional) (default to true)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.GetWorkflow(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.GetWorkflow(context.Background(), id).WorkflowMetrics(workflowMetrics).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.GetWorkflow``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetWorkflow`: Workflow
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.GetWorkflow`: %v\n", resp)
        }
- path: /workflow-executions/{id}
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#get-workflow-execution
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c17bea3a-574d-453c-9e04-4365fbf5af0b` // string | Workflow execution ID. # string | Workflow execution ID.

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.GetWorkflowExecution(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.GetWorkflowExecution(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.GetWorkflowExecution``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetWorkflowExecution`: map[string]interface{}
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.GetWorkflowExecution`: %v\n", resp)
        }
- path: /workflow-executions/{id}/history
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#get-workflow-execution-history
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c17bea3a-574d-453c-9e04-4365fbf5af0b` // string | Id of the workflow execution # string | Id of the workflow execution

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.GetWorkflowExecutionHistory(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.GetWorkflowExecutionHistory(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.GetWorkflowExecutionHistory``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetWorkflowExecutionHistory`: []WorkflowExecutionEvent
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.GetWorkflowExecutionHistory`: %v\n", resp)
        }
- path: /workflows/{id}/executions
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#get-workflow-executions
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c17bea3a-574d-453c-9e04-4365fbf5af0b` // string | Workflow ID. # string | Workflow ID.
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          filters := `status eq "Failed"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **startTime**: *eq, lt, le, gt, ge*  **status**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **startTime**: *eq, lt, le, gt, ge*  **status**: *eq* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.GetWorkflowExecutions(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.GetWorkflowExecutions(context.Background(), id).Limit(limit).Offset(offset).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.GetWorkflowExecutions``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `GetWorkflowExecutions`: []WorkflowExecution
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.GetWorkflowExecutions`: %v\n", resp)
        }
- path: /workflow-library
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#list-complete-workflow-library
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.ListCompleteWorkflowLibrary(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.ListCompleteWorkflowLibrary(context.Background()).Limit(limit).Offset(offset).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.ListCompleteWorkflowLibrary``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListCompleteWorkflowLibrary`: []ListCompleteWorkflowLibrary200ResponseInner
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.ListCompleteWorkflowLibrary`: %v\n", resp)
        }
- path: /workflow-library/actions
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#list-workflow-library-actions
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          filters := `id eq "sp:create-campaign"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.ListWorkflowLibraryActions(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.ListWorkflowLibraryActions(context.Background()).Limit(limit).Offset(offset).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.ListWorkflowLibraryActions``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListWorkflowLibraryActions`: []WorkflowLibraryAction
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.ListWorkflowLibraryActions`: %v\n", resp)
        }
- path: /workflow-library/operators
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#list-workflow-library-operators
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.ListWorkflowLibraryOperators(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.ListWorkflowLibraryOperators(context.Background()).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.ListWorkflowLibraryOperators``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListWorkflowLibraryOperators`: []WorkflowLibraryOperator
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.ListWorkflowLibraryOperators`: %v\n", resp)
        }
- path: /workflow-library/triggers
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#list-workflow-library-triggers
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          filters := `id eq "idn:identity-attributes-changed"` // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq* (optional) # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq* (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.ListWorkflowLibraryTriggers(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.ListWorkflowLibraryTriggers(context.Background()).Limit(limit).Offset(offset).Filters(filters).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.ListWorkflowLibraryTriggers``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListWorkflowLibraryTriggers`: []WorkflowLibraryTrigger
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.ListWorkflowLibraryTriggers`: %v\n", resp)
        }
- path: /workflows
  method: Get
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#list-workflows
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          limit := 250 // int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250) # int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
          offset := 0 // int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0) # int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
          triggerId := `idn:identity-created` // string | Trigger ID (optional) # string | Trigger ID (optional)
          connectorInstanceId := `28541fec-bb81-4ad4-88ef-0f7d213adcad` // string | Connector Instance ID (optional) # string | Connector Instance ID (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.ListWorkflows(context.Background()).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.ListWorkflows(context.Background()).Limit(limit).Offset(offset).TriggerId(triggerId).ConnectorInstanceId(connectorInstanceId).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.ListWorkflows``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `ListWorkflows`: []Workflow
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.ListWorkflows`: %v\n", resp)
        }
- path: /workflows/{id}
  method: Patch
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#patch-workflow
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c17bea3a-574d-453c-9e04-4365fbf5af0b` // string | Id of the Workflow # string | Id of the Workflow
          jsonpatchoperation := []byte(`[{op=replace, path=/name, value=Send Email}, {op=replace, path=/owner, value={type=IDENTITY, id=2c91808568c529c60168cca6f90c1313, name=William Wilson}}, {op=replace, path=/description, value=Send an email to the identity who's attributes changed.}, {op=replace, path=/enabled, value=false}, {op=replace, path=/definition, value={start=Send Email Test, steps={Send Email={actionId=sp:send-email, attributes={body=This is a test, from=sailpoint@sailpoint.com, recipientId.$=$.identity.id, subject=test}, nextStep=success, selectResult=null, type=action}, success={type=success}}}}, {op=replace, path=/trigger, value={type=EVENT, attributes={id=idn:identity-attributes-changed}}}]`) // []JsonPatchOperation | 

          
          var jsonPatchOperation []beta.JsonPatchOperation
          if err := json.Unmarshal(jsonpatchoperation, &jsonPatchOperation); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.PatchWorkflow(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.PatchWorkflow(context.Background(), id).JsonPatchOperation(jsonPatchOperation).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.PatchWorkflow``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PatchWorkflow`: Workflow
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.PatchWorkflow`: %v\n", resp)
        }
- path: /workflows/execute/external/{id}
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#post-external-execute-workflow
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c17bea3a-574d-453c-9e04-4365fbf5af0b` // string | Id of the workflow # string | Id of the workflow
           postexternalexecuteworkflowrequest := []byte(``) // PostExternalExecuteWorkflowRequest |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.PostExternalExecuteWorkflow(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.PostExternalExecuteWorkflow(context.Background(), id).PostExternalExecuteWorkflowRequest(postExternalExecuteWorkflowRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.PostExternalExecuteWorkflow``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PostExternalExecuteWorkflow`: PostExternalExecuteWorkflow200Response
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.PostExternalExecuteWorkflow`: %v\n", resp)
        }
- path: /workflows/{id}/external/oauth-clients
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#post-workflow-external-trigger
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c17bea3a-574d-453c-9e04-4365fbf5af0b` // string | Id of the workflow # string | Id of the workflow

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.PostWorkflowExternalTrigger(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.PostWorkflowExternalTrigger(context.Background(), id).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.PostWorkflowExternalTrigger``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PostWorkflowExternalTrigger`: WorkflowOAuthClient
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.PostWorkflowExternalTrigger`: %v\n", resp)
        }
- path: /workflows/{id}
  method: Put
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#put-workflow
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c17bea3a-574d-453c-9e04-4365fbf5af0b` // string | Id of the Workflow # string | Id of the Workflow
           workflowbody := []byte(`{
          "owner" : {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "name" : "Send Email",
          "description" : "Send an email to the identity who's attributes changed.",
          "definition" : {
            "start" : "Send Email Test",
            "steps" : {
              "Send Email" : {
                "actionId" : "sp:send-email",
                "attributes" : {
                  "body" : "This is a test",
                  "from" : "sailpoint@sailpoint.com",
                  "recipientId.$" : "$.identity.id",
                  "subject" : "test"
                },
                "nextStep" : "success",
                "type" : "ACTION"
              },
              "success" : {
                "type" : "success"
              }
            }
          },
          "trigger" : {
            "displayName" : "displayName",
            "attributes" : "{}",
            "type" : "EVENT"
          },
          "enabled" : false
        }`) // WorkflowBody | 

          
          var workflowBody beta.WorkflowBody
          if err := json.Unmarshal(workflowbody, &workflowBody); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.PutWorkflow(context.Background(), id).WorkflowBody(workflowBody).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.PutWorkflow(context.Background(), id).WorkflowBody(workflowBody).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.PutWorkflow``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `PutWorkflow`: Workflow
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.PutWorkflow`: %v\n", resp)
        }
- path: /workflows/execute/external/{id}/test
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#test-external-execute-workflow
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
            
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c17bea3a-574d-453c-9e04-4365fbf5af0b` // string | Id of the workflow # string | Id of the workflow
           testexternalexecuteworkflowrequest := []byte(``) // TestExternalExecuteWorkflowRequest |  (optional)

          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.TestExternalExecuteWorkflow(context.Background(), id).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.TestExternalExecuteWorkflow(context.Background(), id).TestExternalExecuteWorkflowRequest(testExternalExecuteWorkflowRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.TestExternalExecuteWorkflow``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `TestExternalExecuteWorkflow`: TestExternalExecuteWorkflow200Response
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.TestExternalExecuteWorkflow`: %v\n", resp)
        }
- path: /workflows/{id}/test
  method: Post
  xCodeSample:
    - lang: Go
      label: SDK_tools/sdk/go/beta/methods/workflows#test-workflow
      source: |
        package main

        import (
          "context"
          "fmt"
          "os"
             "encoding/json"
            beta "github.com/sailpoint-oss/golang-sdk/v2/api_beta"
          sailpoint "github.com/sailpoint-oss/golang-sdk/v2"
        )

        func main() {
          id := `c17bea3a-574d-453c-9e04-4365fbf5af0b` // string | Id of the workflow # string | Id of the workflow
           testworkflowrequest := []byte(`{input={identity={id=ee769173319b41d19ccec6cea52f237b, name=john.doe, type=IDENTITY}, changes=[{attribute=department, oldValue=sales, newValue=marketing}, {attribute=manager, oldValue={id=ee769173319b41d19ccec6c235423237b, name=nice.guy, type=IDENTITY}, newValue={id=ee769173319b41d19ccec6c235423236c, name=mean.guy, type=IDENTITY}}, {attribute=email, oldValue=john.doe@hotmail.com, newValue=john.doe@gmail.com}]}}`) // TestWorkflowRequest | 

          
          var testWorkflowRequest beta.TestWorkflowRequest
          if err := json.Unmarshal(testworkflowrequest, &testWorkflowRequest); err != nil {
            fmt.Println("Error:", err)
            return
          }
          


          configuration := sailpoint.NewDefaultConfiguration()
          apiClient := sailpoint.NewAPIClient(configuration)
          resp, r, err := apiClient.Beta.WorkflowsAPI.TestWorkflow(context.Background(), id).TestWorkflowRequest(testWorkflowRequest).Execute()
          //resp, r, err := apiClient.Beta.WorkflowsAPI.TestWorkflow(context.Background(), id).TestWorkflowRequest(testWorkflowRequest).Execute()
          if err != nil {
            fmt.Fprintf(os.Stderr, "Error when calling `WorkflowsAPI.TestWorkflow``: %v\n", err)
            fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
          }
          // response from `TestWorkflow`: TestWorkflow200Response
          fmt.Fprintf(os.Stdout, "Response from `WorkflowsAPI.TestWorkflow`: %v\n", resp)
        }
