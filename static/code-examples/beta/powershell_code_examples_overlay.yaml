- path: /access-model-metadata/attributes/{key}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-model-metadata#get-access-model-metadata-attribute
      source: |
        $Key = "iscPrivacy" # String | Technical name of the Attribute.
        
        # Get access model metadata attribute
        
        try {
            Get-BetaAccessModelMetadataAttribute -Key $Key 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessModelMetadataAttribute -Key $Key   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessModelMetadataAttribute"
            Write-Host $_.ErrorDetails
        }
- path: /access-model-metadata/attributes/{key}/values/{value}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-model-metadata#get-access-model-metadata-attribute-value
      source: |
        $Key = "iscPrivacy" # String | Technical name of the Attribute.
        $Value = "public" # String | Technical name of the Attribute value.
        
        # Get access model metadata value
        
        try {
            Get-BetaAccessModelMetadataAttributeValue -Key $Key -Value $Value 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessModelMetadataAttributeValue -Key $Key -Value $Value   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessModelMetadataAttributeValue"
            Write-Host $_.ErrorDetails
        }
- path: /access-model-metadata/attributes
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-model-metadata#list-access-model-metadata-attribute
      source: |
        $Filters = "name eq "Privacy"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *eq*  **type**: *eq*  **status**: *eq*  **objectTypes**: *eq*  Supported composite operators: *and* (optional)
        
        # List access model metadata attributes
        
        try {
            Get-BetaAccessModelMetadataAttribute 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessModelMetadataAttribute -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessModelMetadataAttribute"
            Write-Host $_.ErrorDetails
        }
- path: /access-model-metadata/attributes/{key}/values
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-model-metadata#list-access-model-metadata-attribute-value
      source: |
        $Key = "iscPrivacy" # String | Technical name of the Attribute.
        
        # List access model metadata values
        
        try {
            Get-BetaAccessModelMetadataAttributeValue -Key $Key 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessModelMetadataAttributeValue -Key $Key   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessModelMetadataAttributeValue"
            Write-Host $_.ErrorDetails
        }
- path: /access-profiles
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-profiles#create-access-profile
      source: |
        $AccessProfile = @"
        {
          "owner" : {
            "name" : "support",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          },
          "entitlements" : [ {
            "name" : "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local",
            "id" : "2c91809773dee32014e13e122092014e",
            "type" : "ENTITLEMENT"
          }, {
            "name" : "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local",
            "id" : "2c91809773dee32014e13e122092014e",
            "type" : "ENTITLEMENT"
          } ],
          "created" : "2021-03-01T22:32:58.104Z",
          "description" : "Collection of entitlements to read/write the employee database",
          "source" : {
            "name" : "ODS-AD-SOURCE",
            "id" : "2c91809773dee3610173fdb0b6061ef4",
            "type" : "SOURCE"
          },
          "enabled" : true,
          "revocationRequestConfig" : {
            "approvalSchemes" : [ {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            } ]
          },
          "segments" : [ "f7b1b8a3-5fed-4fd4-ad29-82014e137e19", "29cb6c06-1da8-43ea-8be4-b3125f248f2a" ],
          "accessRequestConfig" : {
            "commentsRequired" : true,
            "reauthorizationRequired" : true,
            "approvalSchemes" : [ {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            } ],
            "denialCommentsRequired" : true
          },
          "name" : "Employee-database-read-write",
          "provisioningCriteria" : {
            "children" : [ {
              "children" : [ {
                "children" : "children",
                "attribute" : "email",
                "operation" : "EQUALS",
                "value" : "carlee.cert1c9f9b6fd@mailinator.com"
              }, {
                "children" : "children",
                "attribute" : "email",
                "operation" : "EQUALS",
                "value" : "carlee.cert1c9f9b6fd@mailinator.com"
              } ],
              "attribute" : "email",
              "operation" : "EQUALS",
              "value" : "carlee.cert1c9f9b6fd@mailinator.com"
            }, {
              "children" : [ {
                "children" : "children",
                "attribute" : "email",
                "operation" : "EQUALS",
                "value" : "carlee.cert1c9f9b6fd@mailinator.com"
              }, {
                "children" : "children",
                "attribute" : "email",
                "operation" : "EQUALS",
                "value" : "carlee.cert1c9f9b6fd@mailinator.com"
              } ],
              "attribute" : "email",
              "operation" : "EQUALS",
              "value" : "carlee.cert1c9f9b6fd@mailinator.com"
            } ],
            "attribute" : "email",
            "operation" : "EQUALS",
            "value" : "carlee.cert1c9f9b6fd@mailinator.com"
          },
          "modified" : "2021-03-02T20:22:28.104Z",
          "id" : "2c91808a7190d06e01719938fcd20792",
          "requestable" : true
        }
        "@
        
        # Create access profile
        
        try {
            $Result = ConvertFrom-JsonToAccessProfile -Json $AccessProfile
            New-BetaAccessProfile -AccessProfile $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaAccessProfile -AccessProfile $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaAccessProfile"
            Write-Host $_.ErrorDetails
        }
- path: /access-profiles/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-profiles#delete-access-profile
      source: |
        $Id = "2c91808a7813090a017814121919ecca" # String | ID of the Access Profile to delete
        
        # Delete the specified access profile
        
        try {
            Remove-BetaAccessProfile -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaAccessProfile -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaAccessProfile"
            Write-Host $_.ErrorDetails
        }
- path: /access-profiles/bulk-delete
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-profiles#delete-access-profiles-in-bulk
      source: |
        $AccessProfileBulkDeleteRequest = @"
        {
          "accessProfileIds" : [ "2c9180847812e0b1017817051919ecca", "2c9180887812e0b201781e129f151816" ],
          "bestEffortOnly" : true
        }
        "@
        
        # Delete access profile(s)
        
        try {
            $Result = ConvertFrom-JsonToAccessProfileBulkDeleteRequest -Json $AccessProfileBulkDeleteRequest
            Remove-BetaAccessProfilesInBulk -AccessProfileBulkDeleteRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaAccessProfilesInBulk -AccessProfileBulkDeleteRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaAccessProfilesInBulk"
            Write-Host $_.ErrorDetails
        }
- path: /access-profiles/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-profiles#get-access-profile
      source: |
        $Id = "2c9180837ca6693d017ca8d097500149" # String | ID of the Access Profile
        
        # Get an access profile
        
        try {
            Get-BetaAccessProfile -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessProfile -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessProfile"
            Write-Host $_.ErrorDetails
        }
- path: /access-profiles/{id}/entitlements
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-profiles#get-access-profile-entitlements
      source: |
        $Id = "2c91808a7813090a017814121919ecca" # String | ID of the access profile containing the entitlements.
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "attribute eq "memberOf"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **attribute**: *eq, sw*  **value**: *eq, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **source.id**: *eq, in*  Filtering is not supported for access profiles and entitlements that have the '+' symbol in their names.   (optional)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, attribute, value, created, modified** (optional)
        
        # List access profile's entitlements
        
        try {
            Get-BetaAccessProfileEntitlements -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessProfileEntitlements -Id $Id -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessProfileEntitlements"
            Write-Host $_.ErrorDetails
        }
- path: /access-profiles
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-profiles#list-access-profiles
      source: |
        $ForSubadmin = "8c190e6787aa4ed9a90bd9d5344523fb" # String | Filters the returned list according to what is visible to the indicated ROLE_SUBADMIN or SOURCE_SUBADMIN identity. The value of the parameter is either an identity ID or the special value **me**, which is shorthand for the calling identity's ID.  If you specify an identity that isn't a subadmin, the API returns a 400 Bad Request error. (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "name eq "SailPoint Support"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **created**: *gt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **requestable**: *eq*  **source.id**: *eq, in*  Filtering is not supported for access profiles and entitlements that have the '+' symbol in their names.  (optional)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional)
        $ForSegmentIds = "0b5c9f25-83c6-4762-9073-e38f7bb2ae26,2e8d8180-24bc-4d21-91c6-7affdb473b0d" # String | Filters access profiles to only those assigned to the segment(s) with the specified IDs. If segmentation is currently unavailable, specifying this parameter results in an error. (optional)
        $IncludeUnsegmented = $false # Boolean | Indicates whether the response list should contain unsegmented access profiles. If `for-segment-ids` is absent or empty, specifying *include-unsegmented* as `false` results in an error. (optional) (default to $true)
        
        # List access profiles
        
        try {
            Get-BetaAccessProfiles 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessProfiles -ForSubadmin $ForSubadmin -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters -ForSegmentIds $ForSegmentIds -IncludeUnsegmented $IncludeUnsegmented   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessProfiles"
            Write-Host $_.ErrorDetails
        }
- path: /access-profiles/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-profiles#patch-access-profile
      source: |
        $Id = "2c91808a7813090a017814121919ecca" # String | ID of the Access Profile to patch
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch a specified access profile
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaAccessProfile -Id $Id -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaAccessProfile -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaAccessProfile"
            Write-Host $_.ErrorDetails
        }
- path: /access-profiles/bulk-update-requestable
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-profiles#update-access-profiles-in-bulk
      source: |
        $AccessProfileBulkUpdateRequestInner = @"[{id=464ae7bf-791e-49fd-b746-06a2e4a89635, requestable=false}]"@ 
        
        
        # Update access profile(s) requestable field.
        
        try {
            $Result = ConvertFrom-JsonToAccessProfileBulkUpdateRequestInner -Json $AccessProfileBulkUpdateRequestInner
            Update-BetaAccessProfilesInBulk -AccessProfileBulkUpdateRequestInner $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaAccessProfilesInBulk -AccessProfileBulkUpdateRequestInner $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaAccessProfilesInBulk"
            Write-Host $_.ErrorDetails
        }
- path: /access-request-approvals/{approvalId}/approve
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-request-approvals#approve-access-request
      source: |
        $ApprovalId = "2c91808b7294bea301729568c68c002e" # String | Approval ID.
        $CommentDto = @"
        {
          "author" : {
            "name" : "Adam Kennedy",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "created" : "2017-07-11T18:45:37.098Z",
          "comment" : "This is a comment."
        }
        "@
        
        # Approve access request approval
        
        try {
            $Result = ConvertFrom-JsonToCommentDto -Json $CommentDto
            Approve-BetaAccessRequest -ApprovalId $ApprovalId -CommentDto $Result 
    
            # Below is a request that includes all optional parameters
            # Approve-BetaAccessRequest -ApprovalId $ApprovalId -CommentDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Approve-BetaAccessRequest"
            Write-Host $_.ErrorDetails
        }
- path: /access-request-approvals/{approvalId}/forward
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-request-approvals#forward-access-request
      source: |
        $ApprovalId = "2c91808b7294bea301729568c68c002e" # String | Approval ID.
        $ForwardApprovalDto = @"
        {
          "newOwnerId" : "newOwnerId",
          "comment" : "comment"
        }
        "@
        
        # Forward access request approval
        
        try {
            $Result = ConvertFrom-JsonToForwardApprovalDto -Json $ForwardApprovalDto
            Invoke-BetaForwardAccessRequest -ApprovalId $ApprovalId -ForwardApprovalDto $Result 
    
            # Below is a request that includes all optional parameters
            # Invoke-BetaForwardAccessRequest -ApprovalId $ApprovalId -ForwardApprovalDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Invoke-BetaForwardAccessRequest"
            Write-Host $_.ErrorDetails
        }
- path: /access-request-approvals/approval-summary
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-request-approvals#get-access-request-approval-summary
      source: |
        $OwnerId = "2c91808568c529c60168cca6f90c1313" # String | The ID of the owner or approver identity of the approvals. If present, the value returns approval summary for the specified identity.    * ORG_ADMIN users can call this with any identity ID value.    * ORG_ADMIN user can also fetch all the approvals in the org, when owner-id is not used.    * Non ORG_ADMIN users can only specify *me* or pass their own identity ID value. (optional)
        $FromDate = "from-date=2020-03-19T19:59:11Z" # String | This is the date and time the results will be shown from. It must be in a valid ISO-8601 format. (optional)
        
        # Get access requests approvals number
        
        try {
            Get-BetaAccessRequestApprovalSummary 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessRequestApprovalSummary -OwnerId $OwnerId -FromDate $FromDate   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessRequestApprovalSummary"
            Write-Host $_.ErrorDetails
        }
- path: /access-request-approvals/completed
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-request-approvals#list-completed-approvals
      source: |
        $OwnerId = "MyOwnerId" # String | If present, the value returns only completed approvals for the specified identity.    * ORG_ADMIN users can call this with any identity ID value.    * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.    * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value. (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "MyFilters" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **requestedFor.id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **modified**: *gt, lt, ge, le, eq, in, ne, sw* (optional)
        $Sorters = "MySorters" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, modified** (optional)
        
        # Completed access request approvals list
        
        try {
            Get-BetaCompletedApprovals 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCompletedApprovals -OwnerId $OwnerId -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCompletedApprovals"
            Write-Host $_.ErrorDetails
        }
- path: /access-request-approvals/pending
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-request-approvals#list-pending-approvals
      source: |
        $OwnerId = "MyOwnerId" # String | If present, the value returns only pending approvals for the specified identity.    * ORG_ADMIN users can call this with any identity ID value.    * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.    * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value. (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "MyFilters" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **requestedFor.id**: *eq, in*  **modified**: *gt, lt, ge, le, eq, in* (optional)
        $Sorters = "MySorters" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, modified** (optional)
        
        # Pending access request approvals list
        
        try {
            Get-BetaPendingApprovals 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPendingApprovals -OwnerId $OwnerId -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPendingApprovals"
            Write-Host $_.ErrorDetails
        }
- path: /access-request-approvals/{approvalId}/reject
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-request-approvals#reject-access-request
      source: |
        $ApprovalId = "2c91808b7294bea301729568c68c002e" # String | Approval ID.
        $CommentDto = @"
        {
          "author" : {
            "name" : "Adam Kennedy",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "created" : "2017-07-11T18:45:37.098Z",
          "comment" : "This is a comment."
        }
        "@
        
        # Reject access request approval
        
        try {
            $Result = ConvertFrom-JsonToCommentDto -Json $CommentDto
            Deny-BetaAccessRequest -ApprovalId $ApprovalId -CommentDto $Result 
    
            # Below is a request that includes all optional parameters
            # Deny-BetaAccessRequest -ApprovalId $ApprovalId -CommentDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Deny-BetaAccessRequest"
            Write-Host $_.ErrorDetails
        }
- path: /access-request-identity-metrics/{identityId}/requested-objects/{requestedObjectId}/type/{type}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-request-identity-metrics#get-access-request-identity-metrics
      source: |
        $IdentityId = "7025c863-c270-4ba6-beea-edf3cb091573" # String | Manager's identity ID.
        $RequestedObjectId = "2db501be-f0fb-4cc5-a695-334133c52891" # String | Requested access item's ID.
        $Type = "ENTITLEMENT" # String | Requested access item's type.
        
        # Return access request identity metrics
        
        try {
            Get-BetaAccessRequestIdentityMetrics -IdentityId $IdentityId -RequestedObjectId $RequestedObjectId -Type $Type 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessRequestIdentityMetrics -IdentityId $IdentityId -RequestedObjectId $RequestedObjectId -Type $Type   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessRequestIdentityMetrics"
            Write-Host $_.ErrorDetails
        }
- path: /access-requests/cancel
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-requests#cancel-access-request
      source: |
        $CancelAccessRequest = @"
        {
          "accountActivityId" : "2c9180835d2e5168015d32f890ca1581",
          "comment" : "I requested this role by mistake."
        }
        "@
        
        # Cancel access request
        
        try {
            $Result = ConvertFrom-JsonToCancelAccessRequest -Json $CancelAccessRequest
            Suspend-BetaAccessRequest -CancelAccessRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Suspend-BetaAccessRequest -CancelAccessRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Suspend-BetaAccessRequest"
            Write-Host $_.ErrorDetails
        }
- path: /access-requests/close
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-requests#close-access-request
      source: |
        $CloseAccessRequest = @"
        {
          "executionStatus" : "Terminated",
          "accessRequestIds" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
          "completionStatus" : "Failure",
          "message" : "The IdentityNow Administrator manually closed this request."
        }
        "@
        
        # Close access request
        
        try {
            $Result = ConvertFrom-JsonToCloseAccessRequest -Json $CloseAccessRequest
            Close-BetaAccessRequest -CloseAccessRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Close-BetaAccessRequest -CloseAccessRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Close-BetaAccessRequest"
            Write-Host $_.ErrorDetails
        }
- path: /access-requests
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-requests#create-access-request
      source: |
        $AccessRequest = @"
        {
          "requestedFor" : "2c918084660f45d6016617daa9210584",
          "clientMetadata" : {
            "requestedAppId" : "2c91808f7892918f0178b78da4a305a1",
            "requestedAppName" : "test-app"
          },
          "requestType" : "GRANT_ACCESS",
          "requestedItems" : [ {
            "clientMetadata" : {
              "requestedAppName" : "test-app",
              "requestedAppId" : "2c91808f7892918f0178b78da4a305a1"
            },
            "removeDate" : "2020-07-11T21:23:15Z",
            "comment" : "Requesting access profile for John Doe",
            "id" : "2c9180835d2e5168015d32f890ca1581",
            "type" : "ACCESS_PROFILE",
            "assignmentId" : "ee48a191c00d49bf9264eb0a4fc3a9fc",
            "nativeIdentity" : "CN=User db3377de14bf,OU=YOURCONTAINER, DC=YOURDOMAIN"
          }, {
            "clientMetadata" : {
              "requestedAppName" : "test-app",
              "requestedAppId" : "2c91808f7892918f0178b78da4a305a1"
            },
            "removeDate" : "2020-07-11T21:23:15Z",
            "comment" : "Requesting access profile for John Doe",
            "id" : "2c9180835d2e5168015d32f890ca1581",
            "type" : "ACCESS_PROFILE",
            "assignmentId" : "ee48a191c00d49bf9264eb0a4fc3a9fc",
            "nativeIdentity" : "CN=User db3377de14bf,OU=YOURCONTAINER, DC=YOURDOMAIN"
          } ],
          "requestedForWithRequestedItems" : [ {
            "identityId" : "cb89bc2f1ee6445fbea12224c526ba3a",
            "requestedItems" : [ {
              "clientMetadata" : {
                "requestedAppName" : "test-app",
                "requestedAppId" : "2c91808f7892918f0178b78da4a305a1"
              },
              "removeDate" : "2020-07-11T21:23:15Z",
              "accountSelection" : [ {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              }, {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              } ],
              "comment" : "Requesting access profile for John Doe",
              "id" : "2c9180835d2e5168015d32f890ca1581",
              "type" : "ACCESS_PROFILE"
            }, {
              "clientMetadata" : {
                "requestedAppName" : "test-app",
                "requestedAppId" : "2c91808f7892918f0178b78da4a305a1"
              },
              "removeDate" : "2020-07-11T21:23:15Z",
              "accountSelection" : [ {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              }, {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              } ],
              "comment" : "Requesting access profile for John Doe",
              "id" : "2c9180835d2e5168015d32f890ca1581",
              "type" : "ACCESS_PROFILE"
            } ]
          }, {
            "identityId" : "cb89bc2f1ee6445fbea12224c526ba3a",
            "requestedItems" : [ {
              "clientMetadata" : {
                "requestedAppName" : "test-app",
                "requestedAppId" : "2c91808f7892918f0178b78da4a305a1"
              },
              "removeDate" : "2020-07-11T21:23:15Z",
              "accountSelection" : [ {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              }, {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              } ],
              "comment" : "Requesting access profile for John Doe",
              "id" : "2c9180835d2e5168015d32f890ca1581",
              "type" : "ACCESS_PROFILE"
            }, {
              "clientMetadata" : {
                "requestedAppName" : "test-app",
                "requestedAppId" : "2c91808f7892918f0178b78da4a305a1"
              },
              "removeDate" : "2020-07-11T21:23:15Z",
              "accountSelection" : [ {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              }, {
                "sourceId" : "cb89bc2f1ee6445fbea12224c526ba3a",
                "accounts" : [ {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                }, {
                  "accountUuid" : "{fab7119e-004f-4822-9c33-b8d570d6c6a6}",
                  "nativeIdentity" : "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
                } ]
              } ],
              "comment" : "Requesting access profile for John Doe",
              "id" : "2c9180835d2e5168015d32f890ca1581",
              "type" : "ACCESS_PROFILE"
            } ]
          } ]
        }
        "@
        
        # Submit access request
        
        try {
            $Result = ConvertFrom-JsonToAccessRequest -Json $AccessRequest
            New-BetaAccessRequest -AccessRequest $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaAccessRequest -AccessRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaAccessRequest"
            Write-Host $_.ErrorDetails
        }
- path: /access-request-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-requests#get-access-request-config
      source: |
        
        # Get access request configuration
        
        try {
            Get-BetaAccessRequestConfig 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessRequestConfig   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessRequestConfig"
            Write-Host $_.ErrorDetails
        }
- path: /access-request-status
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-requests#list-access-request-status
      source: |
        $RequestedFor = "2c9180877b2b6ea4017b2c545f971429" # String | Filter the results by the identity the requests were made for. *me* indicates the current user. Mutually exclusive with *regarding-identity*. (optional)
        $RequestedBy = "2c9180877b2b6ea4017b2c545f971429" # String | Filter the results by the identity who made the requests. *me* indicates the current user. Mutually exclusive with *regarding-identity*. (optional)
        $RegardingIdentity = "2c9180877b2b6ea4017b2c545f971429" # String | Filter the results by the specified identity who is either the requester or target of the requests. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*. (optional)
        $AssignedTo = "2c9180877b2b6ea4017b2c545f971429" # String | Filter the results by the specified identity who is the owner of the Identity Request Work Item. *me* indicates the current user. (optional)
        $Count = $false # Boolean | If this is true, the *X-Total-Count* response header populates with the number of results that would be returned if limit and offset were ignored. (optional) (default to $false)
        $Limit = 100 # Int32 | Max number of results to return. (optional) (default to 250)
        $Offset = 10 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. Defaults to 0 if not specified. (optional)
        $Filters = "accountActivityItemId eq "2c918086771c86df0177401efcdf54c0"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **accessRequestId**: *eq, in, ge, gt, le, lt, ne, sw*  **accountActivityItemId**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **created**: *eq, in, ge, gt, le, lt, ne, isnull, sw* (optional)
        $Sorters = "created" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, modified, accountActivityItemId, name** (optional)
        $RequestState = "request-state=EXECUTING" # String | Filter the results by the state of the request. The only valid value is *EXECUTING*. (optional)
        
        # Access request status
        
        try {
            Get-BetaAccessRequestStatus 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessRequestStatus -RequestedFor $RequestedFor -RequestedBy $RequestedBy -RegardingIdentity $RegardingIdentity -AssignedTo $AssignedTo -Count $Count -Limit $Limit -Offset $Offset -Filters $Filters -Sorters $Sorters -RequestState $RequestState   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessRequestStatus"
            Write-Host $_.ErrorDetails
        }
- path: /access-request-config
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/access-requests#set-access-request-config
      source: |
        $AccessRequestConfig = @"
        {
          "requestOnBehalfOfConfig" : {
            "allowRequestOnBehalfOfEmployeeByManager" : true,
            "allowRequestOnBehalfOfAnyoneByAnyone" : true
          },
          "approvalReminderAndEscalationConfig" : {
            "fallbackApproverRef" : {
              "name" : "Alison Ferguso",
              "id" : "5168015d32f890ca15812c9180835d2e",
              "type" : "IDENTITY",
              "email" : "alison.ferguso@identitysoon.com"
            },
            "maxReminders" : 1,
            "daysUntilEscalation" : 0,
            "daysBetweenReminders" : 0
          },
          "autoApprovalEnabled" : true,
          "entitlementRequestConfig" : {
            "requestCommentsRequired" : false,
            "deniedCommentsRequired" : false,
            "allowEntitlementRequest" : true,
            "grantRequestApprovalSchemes" : "entitlementOwner, sourceOwner, manager, workgroup:2c918084660f45d6016617daa9210584"
          },
          "reauthorizationEnabled" : true,
          "approvalsMustBeExternal" : true
        }
        "@
        
        # Update access request configuration
        
        try {
            $Result = ConvertFrom-JsonToAccessRequestConfig -Json $AccessRequestConfig
            Set-BetaAccessRequestConfig -AccessRequestConfig $Result 
    
            # Below is a request that includes all optional parameters
            # Set-BetaAccessRequestConfig -AccessRequestConfig $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Set-BetaAccessRequestConfig"
            Write-Host $_.ErrorDetails
        }
- path: /account-activities/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/account-activities#get-account-activity
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The account activity id
        
        # Get account activity
        
        try {
            Get-BetaAccountActivity -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccountActivity -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccountActivity"
            Write-Host $_.ErrorDetails
        }
- path: /account-activities
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/account-activities#list-account-activities
      source: |
        $RequestedFor = "MyRequestedFor" # String | The identity that the activity was requested for. *me* indicates the current user. Mutually exclusive with *regarding-identity*. (optional)
        $RequestedBy = "MyRequestedBy" # String | The identity that requested the activity. *me* indicates the current user. Mutually exclusive with *regarding-identity*. (optional)
        $RegardingIdentity = "MyRegardingIdentity" # String | The specified identity will be either the requester or target of the account activity. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*. (optional)
        $Type = "MyType" # String | The type of account activity. (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "MyFilters" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **type**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **created**: *gt, lt, ge, le, eq, in, ne, isnull, sw*  **modified**: *gt, lt, ge, le, eq, in, ne, isnull, sw* (optional)
        $Sorters = "MySorters" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **type, created, modified** (optional)
        
        # List account activities
        
        try {
            Get-BetaAccountActivities 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccountActivities -RequestedFor $RequestedFor -RequestedBy $RequestedBy -RegardingIdentity $RegardingIdentity -Type $Type -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccountActivities"
            Write-Host $_.ErrorDetails
        }
- path: /account-aggregations/{id}/status
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/account-aggregations#get-account-aggregation-status
      source: |
        $Id = "2c91808477a6b0c60177a81146b8110b" # String | The account aggregation id
        
        # In-progress account aggregation status
        
        try {
            Get-BetaAccountAggregationStatus -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccountAggregationStatus -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccountAggregationStatus"
            Write-Host $_.ErrorDetails
        }
- path: /account-usages/{accountId}/summaries
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/account-usages#get-usages-by-account-id
      source: |
        $AccountId = "ef38f94347e94562b5bb8424a56397d8" # String | ID of IDN account
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Sorters = "-date" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **date** (optional)
        
        # Returns account usage insights
        
        try {
            Get-BetaUsagesByAccountId -AccountId $AccountId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaUsagesByAccountId -AccountId $AccountId -Limit $Limit -Offset $Offset -Count $Count -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaUsagesByAccountId"
            Write-Host $_.ErrorDetails
        }
- path: /accounts
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#create-account
      source: |
        $AccountAttributesCreate = @"
        {
          "attributes" : {
            "sourceId" : "34bfcbe116c9407464af37acbaf7a4dc",
            "city" : "Austin",
            "displayName" : "John Doe",
            "userName" : "jdoe",
            "sAMAccountName" : "jDoe",
            "mail" : "john.doe@sailpoint.com"
          }
        }
        "@
        
        # Create account
        
        try {
            $Result = ConvertFrom-JsonToAccountAttributesCreate -Json $AccountAttributesCreate
            New-BetaAccount -AccountAttributesCreate $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaAccount -AccountAttributesCreate $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaAccount"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#delete-account
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | Account ID.
        
        # Delete account
        
        try {
            Remove-BetaAccount -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaAccount -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaAccount"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/{id}/remove
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#delete-account-async
      source: |
        $Id = "c350d6aa4f104c61b062cb632421ad10" # String | The account id
        
        # Remove account
        
        try {
            Remove-BetaAccountAsync -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaAccountAsync -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaAccountAsync"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/{id}/disable
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#disable-account
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The account id
        $AccountToggleRequest = @"
        {
          "forceProvisioning" : false,
          "externalVerificationId" : "3f9180835d2e5168015d32f890ca1581"
        }
        "@
        
        # Disable account
        
        try {
            $Result = ConvertFrom-JsonToAccountToggleRequest -Json $AccountToggleRequest
            Disable-BetaAccount -Id $Id -AccountToggleRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Disable-BetaAccount -Id $Id -AccountToggleRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Disable-BetaAccount"
            Write-Host $_.ErrorDetails
        }
- path: /identities-accounts/{id}/disable
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#disable-account-for-identity
      source: |
        $Id = "2c91808384203c2d018437e631158309" # String | The identity id.
        
        # Disable idn account for identity
        
        try {
            Disable-BetaAccountForIdentity -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Disable-BetaAccountForIdentity -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Disable-BetaAccountForIdentity"
            Write-Host $_.ErrorDetails
        }
- path: /identities-accounts/disable
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#disable-accounts-for-identities
      source: |
        $IdentitiesAccountsBulkRequest = @"
        {
          "identityIds" : [ "2c91808384203c2d018437e631158308", "2c9180858082150f0180893dbaf553fe" ]
        }
        "@
        
        # Disable idn accounts for identities
        
        try {
            $Result = ConvertFrom-JsonToIdentitiesAccountsBulkRequest -Json $IdentitiesAccountsBulkRequest
            Disable-BetaAccountsForIdentities -IdentitiesAccountsBulkRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Disable-BetaAccountsForIdentities -IdentitiesAccountsBulkRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Disable-BetaAccountsForIdentities"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/{id}/enable
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#enable-account
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The account id
        $AccountToggleRequest = @"
        {
          "forceProvisioning" : false,
          "externalVerificationId" : "3f9180835d2e5168015d32f890ca1581"
        }
        "@
        
        # Enable account
        
        try {
            $Result = ConvertFrom-JsonToAccountToggleRequest -Json $AccountToggleRequest
            Enable-BetaAccount -Id $Id -AccountToggleRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Enable-BetaAccount -Id $Id -AccountToggleRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Enable-BetaAccount"
            Write-Host $_.ErrorDetails
        }
- path: /identities-accounts/{id}/enable
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#enable-account-for-identity
      source: |
        $Id = "2c91808384203c2d018437e631158309" # String | The identity id.
        
        # Enable idn account for identity
        
        try {
            Enable-BetaAccountForIdentity -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Enable-BetaAccountForIdentity -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Enable-BetaAccountForIdentity"
            Write-Host $_.ErrorDetails
        }
- path: /identities-accounts/enable
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#enable-accounts-for-identities
      source: |
        $IdentitiesAccountsBulkRequest = @"
        {
          "identityIds" : [ "2c91808384203c2d018437e631158308", "2c9180858082150f0180893dbaf553fe" ]
        }
        "@
        
        # Enable idn accounts for identities
        
        try {
            $Result = ConvertFrom-JsonToIdentitiesAccountsBulkRequest -Json $IdentitiesAccountsBulkRequest
            Enable-BetaAccountsForIdentities -IdentitiesAccountsBulkRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Enable-BetaAccountsForIdentities -IdentitiesAccountsBulkRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Enable-BetaAccountsForIdentities"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#get-account
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | Account ID.
        
        # Account details
        
        try {
            Get-BetaAccount -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccount -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccount"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/{id}/entitlements
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#get-account-entitlements
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The account id
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Account entitlements
        
        try {
            Get-BetaAccountEntitlements -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccountEntitlements -Id $Id -Offset $Offset -Limit $Limit -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccountEntitlements"
            Write-Host $_.ErrorDetails
        }
- path: /accounts
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#list-accounts
      source: |
        $DetailLevel = "SLIM" # String | This value determines whether the API provides `SLIM` or increased level of detail (`FULL`) for each account in the returned list. `FULL` is the default behavior. (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "identityId eq "2c9180858082150f0180893dbaf44201"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in, sw*  **identityId**: *eq, in, sw*  **name**: *eq, in, sw*  **nativeIdentity**: *eq, in, sw*  **sourceId**: *eq, in, sw*  **uncorrelated**: *eq*  **entitlements**: *eq*  **origin**: *eq, in*  **manuallyCorrelated**: *eq*  **hasEntitlements**: *eq*  **identity.name**: *eq, in, sw*  **identity.correlated**: *eq*  **identity.identityState**: *eq, in*  **source.displayableName**: *eq, in*  **source.authoritative**: *eq*  **source.connectionType**: *eq, in*  **recommendation.method**: *eq, in, isnull*  **created**: *eq, ge, gt, le*  **modified**: *eq, ge, gt, le, lt* (optional)
        $Sorters = "id,name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, sourceId, identityId, nativeIdentity, uuid, manuallyCorrelated, hasEntitlements, entitlements, origin, identity.name, identity.identityState, identity.correlated, source.displayableName, source.authoritative, source.connectionType, sourceOwner.name** (optional)
        
        # Accounts list
        
        try {
            Get-BetaAccounts 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccounts -DetailLevel $DetailLevel -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccounts"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/{id}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#put-account
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | Account ID.
        $AccountAttributes = @"
        {
          "attributes" : {
            "city" : "Austin",
            "displayName" : "John Doe",
            "userName" : "jdoe",
            "sAMAccountName" : "jDoe",
            "mail" : "john.doe@sailpoint.com"
          }
        }
        "@
        
        # Update account
        
        try {
            $Result = ConvertFrom-JsonToAccountAttributes -Json $AccountAttributes
            Send-BetaAccount -Id $Id -AccountAttributes $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaAccount -Id $Id -AccountAttributes $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaAccount"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/{id}/reload
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#submit-reload-account
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The account id
        
        # Reload account
        
        try {
            Submit-BetaReloadAccount -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Submit-BetaReloadAccount -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Submit-BetaReloadAccount"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/{id}/unlock
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#unlock-account
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The account ID.
        $AccountUnlockRequest = @"
        {
          "forceProvisioning" : false,
          "externalVerificationId" : "3f9180835d2e5168015d32f890ca1581",
          "unlockIDNAccount" : false
        }
        "@
        
        # Unlock account
        
        try {
            $Result = ConvertFrom-JsonToAccountUnlockRequest -Json $AccountUnlockRequest
            Unlock-BetaAccount -Id $Id -AccountUnlockRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Unlock-BetaAccount -Id $Id -AccountUnlockRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Unlock-BetaAccount"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/accounts#update-account
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | Account ID.
        $RequestBody =  # SystemCollectionsHashtable[] | A list of account update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.
        $RequestBody = @"{Uncorrelate account={description=Remove account from Identity, value=[{op=remove, path=/identityId}]}, Reassign account={description=Move account from one Identity to another Identity, value=[{op=replace, path=/identityId, value=2c9180857725c14301772a93bb77242d}]}, Add account attribute={description=Add flat file account's attribute, value=[{op=add, path=/attributes/familyName, value=Smith}]}, Replace account attribute={description=Replace flat file account's attribute, value=[{op=replace, path=/attributes/familyName, value=Smith}]}, Remove account attribute={description=Remove flat file account's attribute, value=[{op=remove, path=/attributes/familyName}]}}"@ 
        
        
        # Update account
        
        try {
            $Result = ConvertFrom-JsonToRequestBody -Json $RequestBody
            Update-BetaAccount -Id $Id -RequestBody $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaAccount -Id $Id -RequestBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaAccount"
            Write-Host $_.ErrorDetails
        }
- path: /discovered-applications/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/application-discovery#get-discovered-application-by-id
      source: |
        $Id = "123e4567-e89b-12d3-a456-426655440000" # String | Discovered application's ID.
        
        # Get discovered application by id
        
        try {
            Get-BetaDiscoveredApplicationByID -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaDiscoveredApplicationByID -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaDiscoveredApplicationByID"
            Write-Host $_.ErrorDetails
        }
- path: /discovered-applications
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/application-discovery#get-discovered-applications
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Detail = "SLIM" # String | Determines whether slim, or increased level of detail is provided for each discovered application in the returned list. SLIM is the default behavior. (optional)
        $Filter = "name eq "Okta" and description co "Okta" and discoverySource in ("csv", "Okta Saas")" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)       Filtering is supported for the following fields and operators:  **name**: *eq, sw, co*  **description**: *eq, sw, co*  **createdAtStart**: *eq, le, ge*  **createdAtEnd**: *eq, le, ge*  **discoveredAtStart**: *eq, le, ge*  **discoveredAtEnd**: *eq, le, ge*  **discoverySource**: *eq, in*  (optional)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, description, discoveredAt, discoverySource** (optional)
        
        # Retrieve discovered applications for tenant
        
        try {
            Get-BetaDiscoveredApplications 
    
            # Below is a request that includes all optional parameters
            # Get-BetaDiscoveredApplications -Limit $Limit -Offset $Offset -Detail $Detail -Filter $Filter -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaDiscoveredApplications"
            Write-Host $_.ErrorDetails
        }
- path: /manual-discover-applications-template
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/application-discovery#get-manual-discover-applications-csv-template
      source: |
        
        # Download csv template for discovery
        
        try {
            Get-BetaManualDiscoverApplicationsCsvTemplate 
    
            # Below is a request that includes all optional parameters
            # Get-BetaManualDiscoverApplicationsCsvTemplate   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaManualDiscoverApplicationsCsvTemplate"
            Write-Host $_.ErrorDetails
        }
- path: /discovered-applications/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/application-discovery#patch-discovered-application-by-id
      source: |
        $Id = "123e4567-e89b-12d3-a456-426655440000" # String | Discovered application's ID.
        $JsonPatchOperations = @"{
          "op" : "replace",
          "path" : "/dismissed",
          "value" : true
        }"@ 
        
        
        # Patch discovered application by id
        
        try {
            Update-BetaDiscoveredApplicationByID -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Update-BetaDiscoveredApplicationByID -Id $Id -JsonPatchOperations $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaDiscoveredApplicationByID"
            Write-Host $_.ErrorDetails
        }
- path: /manual-discover-applications
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/application-discovery#send-manual-discover-applications-csv-template
      source: |
        $File =  # System.IO.FileInfo | The CSV file to upload containing `application_name` and `description` columns. Each row represents an application to be discovered.
        
        # Upload csv to discover applications
        
        try {
            Send-BetaManualDiscoverApplicationsCsvTemplate -File $File 
    
            # Below is a request that includes all optional parameters
            # Send-BetaManualDiscoverApplicationsCsvTemplate -File $File   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaManualDiscoverApplicationsCsvTemplate"
            Write-Host $_.ErrorDetails
        }
- path: /generic-approvals/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/approvals#get-approval
      source: |
        $Id = "38453251-6be2-5f8f-df93-5ce19e295837" # String | ID of the approval that to be returned.
        
        # Get approval
        
        try {
            Get-BetaApproval -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaApproval -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaApproval"
            Write-Host $_.ErrorDetails
        }
- path: /generic-approvals
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/approvals#get-approvals
      source: |
        $Mine = $true # Boolean | Returns the list of approvals for the current caller. (optional)
        $RequesterId = "17e633e7d57e481569df76323169deb6a" # String | Returns the list of approvals for a given requester ID. (optional)
        $Filters = "filters=status eq PENDING" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **status**: *eq*  **referenceType**: *eq* (optional)
        
        # Get approvals
        
        try {
            Get-BetaApprovals 
    
            # Below is a request that includes all optional parameters
            # Get-BetaApprovals -Mine $Mine -RequesterId $RequesterId -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaApprovals"
            Write-Host $_.ErrorDetails
        }
- path: /source-apps
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#create-source-app
      source: |
        $SourceAppCreateDto = @"
        {
          "name" : "my app",
          "description" : "the source app for engineers",
          "accountSource" : {
            "name" : "ODS-AD-Source",
            "id" : "2c9180827ca885d7017ca8ce28a000eb",
            "type" : "SOURCE"
          },
          "matchAllAccounts" : true
        }
        "@
        
        # Create source app
        
        try {
            $Result = ConvertFrom-JsonToSourceAppCreateDto -Json $SourceAppCreateDto
            New-BetaSourceApp -SourceAppCreateDto $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaSourceApp -SourceAppCreateDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaSourceApp"
            Write-Host $_.ErrorDetails
        }
- path: /source-apps/{id}/access-profiles/bulk-remove
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#delete-access-profiles-from-source-app-by-bulk
      source: |
        $Id = "2c91808a7813090a017814121e121518" # String | ID of the source app
        $RequestBody = "MyRequestBody" # String[] | 
        $RequestBody = @""@ 
        
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        
        # Bulk remove access profiles from the specified source app
        
        try {
            $Result = ConvertFrom-JsonToRequestBody -Json $RequestBody
            Remove-BetaAccessProfilesFromSourceAppByBulk -Id $Id -RequestBody $Result 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaAccessProfilesFromSourceAppByBulk -Id $Id -RequestBody $Result -Limit $Limit   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaAccessProfilesFromSourceAppByBulk"
            Write-Host $_.ErrorDetails
        }
- path: /source-apps/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#delete-source-app
      source: |
        $Id = "2c9180835d191a86015d28455b4a2329" # String | source app ID.
        
        # Delete source app by id
        
        try {
            Remove-BetaSourceApp -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaSourceApp -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaSourceApp"
            Write-Host $_.ErrorDetails
        }
- path: /source-apps/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#get-source-app
      source: |
        $Id = "2c91808a7813090a017814121e121518" # String | ID of the source app
        
        # Get source app by id
        
        try {
            Get-BetaSourceApp -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSourceApp -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSourceApp"
            Write-Host $_.ErrorDetails
        }
- path: /source-apps/{id}/access-profiles
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#list-access-profiles-for-source-app
      source: |
        $Id = "2c91808a7813090a017814121e121518" # String | ID of the source app
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Filters = "name eq "developer access profile"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le* (optional)
        
        # List access profiles for the specified source app
        
        try {
            Get-BetaAccessProfilesForSourceApp -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessProfilesForSourceApp -Id $Id -Limit $Limit -Offset $Offset -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessProfilesForSourceApp"
            Write-Host $_.ErrorDetails
        }
- path: /source-apps/all
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#list-all-source-app
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, owner.id, accountSource.id** (optional)
        $Filters = "enabled eq true" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, co, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **accountSource.id**: *eq, in*  **enabled**: *eq* (optional)
        
        # List all source apps
        
        try {
            Get-BetaAllSourceApp 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAllSourceApp -Limit $Limit -Count $Count -Offset $Offset -Sorters $Sorters -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAllSourceApp"
            Write-Host $_.ErrorDetails
        }
- path: /user-apps/all
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#list-all-user-apps
      source: |
        $Filters = "name eq "user app name"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq*  **ownerId**: *eq*  **ownerName**: *eq, sw*  **ownerAlias**: *eq, sw*  **accountId**: *eq*  **sourceAppId**: *eq*
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        
        # List all user apps
        
        try {
            Get-BetaAllUserApps -Filters $Filters 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAllUserApps -Filters $Filters -Limit $Limit -Count $Count -Offset $Offset   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAllUserApps"
            Write-Host $_.ErrorDetails
        }
- path: /source-apps/assigned
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#list-assigned-source-app
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, accountSource.id** (optional)
        $Filters = "name eq "source app name"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, co, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **accountSource.id**: *eq, in* (optional)
        
        # List assigned source apps
        
        try {
            Get-BetaAssignedSourceApp 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAssignedSourceApp -Limit $Limit -Count $Count -Offset $Offset -Sorters $Sorters -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAssignedSourceApp"
            Write-Host $_.ErrorDetails
        }
- path: /user-apps/{id}/available-accounts
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#list-available-accounts-for-user-app
      source: |
        $Id = "2c91808a7813090a017814121e121518" # String | ID of the user app
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        
        # List available accounts for user app
        
        try {
            Get-BetaAvailableAccountsForUserApp -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAvailableAccountsForUserApp -Id $Id -Limit $Limit -Count $Count -Offset $Offset   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAvailableAccountsForUserApp"
            Write-Host $_.ErrorDetails
        }
- path: /source-apps
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#list-available-source-apps
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, owner.id, accountSource.id** (optional)
        $Filters = "name eq "source app name"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, co, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **accountSource.id**: *eq, in* (optional)
        
        # List available source apps
        
        try {
            Get-BetaAvailableSourceApps 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAvailableSourceApps -Limit $Limit -Count $Count -Offset $Offset -Sorters $Sorters -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAvailableSourceApps"
            Write-Host $_.ErrorDetails
        }
- path: /user-apps
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#list-owned-user-apps
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Filters = "name eq "user app name"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq*  **ownerName**: *eq, sw*  **ownerAlias**: *eq, sw*  **accountId**: *eq*  **sourceAppId**: *eq* (optional)
        
        # List owned user apps
        
        try {
            Get-BetaOwnedUserApps 
    
            # Below is a request that includes all optional parameters
            # Get-BetaOwnedUserApps -Limit $Limit -Count $Count -Offset $Offset -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaOwnedUserApps"
            Write-Host $_.ErrorDetails
        }
- path: /source-apps/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#patch-source-app
      source: |
        $Id = "2c91808a7813090a017814121e121518" # String | ID of the source app to patch
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch source app by id
        
        try {
            Update-BetaSourceApp -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Update-BetaSourceApp -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaSourceApp"
            Write-Host $_.ErrorDetails
        }
- path: /user-apps/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#patch-user-app
      source: |
        $Id = "2c91808a7813090a017814121e121518" # String | ID of the user app to patch
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch user app by id
        
        try {
            Update-BetaUserApp -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Update-BetaUserApp -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaUserApp"
            Write-Host $_.ErrorDetails
        }
- path: /source-apps/bulk-update
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/apps#update-source-apps-in-bulk
      source: |
        $SourceAppBulkUpdateRequest = @"
        {
          "appIds" : [ "2c91808a7624751a01762f19d665220d", "2c91808a7624751a01762f19d67c220e", "2c91808a7624751a01762f19d692220f" ],
          "jsonPatch" : [ {
            "op" : "replace",
            "path" : "/enabled",
            "value" : false
          }, {
            "op" : "replace",
            "path" : "/matchAllAccounts",
            "value" : false
          } ]
        }
        "@
        
        # Bulk update source apps
        
        try {
            Update-BetaSourceAppsInBulk 
    
            # Below is a request that includes all optional parameters
            # Update-BetaSourceAppsInBulk -SourceAppBulkUpdateRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaSourceAppsInBulk"
            Write-Host $_.ErrorDetails
        }
- path: /auth-profiles/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/auth-profile#get-profile-config
      source: |
        $Id = "2c91808a7813090a017814121919ecca" # String | ID of the Auth Profile to get.
        
        # Get auth profile.
        
        try {
            Get-BetaProfileConfig -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaProfileConfig -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaProfileConfig"
            Write-Host $_.ErrorDetails
        }
- path: /auth-profiles
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/auth-profile#get-profile-config-list
      source: |
        
        # Get list of auth profiles.
        
        try {
            Get-BetaProfileConfigList 
    
            # Below is a request that includes all optional parameters
            # Get-BetaProfileConfigList   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaProfileConfigList"
            Write-Host $_.ErrorDetails
        }
- path: /auth-profiles/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/auth-profile#patch-profile-config
      source: |
        $Id = "2c91808a7813090a017814121919ecca" # String | ID of the Auth Profile to patch.
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch a specified auth profile
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaProfileConfig -Id $Id -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaProfileConfig -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaProfileConfig"
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}/complete
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#complete-campaign
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | Campaign ID.
        $CompleteCampaignOptions = @"
        {
          "autoCompleteAction" : "REVOKE"
        }
        "@
        
        # Complete a campaign
        
        try {
            Complete-BetaCampaign -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Complete-BetaCampaign -Id $Id -CompleteCampaignOptions $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Complete-BetaCampaign"
            Write-Host $_.ErrorDetails
        }
- path: /campaigns
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#create-campaign
      source: |
        $Campaign = @"
        {
          "totalCertifications" : 100,
          "sourcesWithOrphanEntitlements" : [ {
            "name" : "Source with orphan entitlements",
            "id" : "2c90ad2a70ace7d50170acf22ca90010",
            "type" : "SOURCE"
          }, {
            "name" : "Source with orphan entitlements",
            "id" : "2c90ad2a70ace7d50170acf22ca90010",
            "type" : "SOURCE"
          } ],
          "recommendationsEnabled" : true,
          "sunsetCommentsRequired" : true,
          "created" : "2020-03-03T22:15:13.611Z",
          "machineAccountCampaignInfo" : {
            "reviewerType" : "ACCOUNT_OWNER",
            "sourceIds" : [ "0fbe863c063c4c88a35fd7f17e8a3df5" ]
          },
          "description" : "Everyone needs to be reviewed by their manager",
          "type" : "MANAGER",
          "sourceOwnerCampaignInfo" : {
            "sourceIds" : [ "0fbe863c063c4c88a35fd7f17e8a3df5" ]
          },
          "emailNotificationEnabled" : false,
          "alerts" : [ {
            "level" : "ERROR",
            "localizations" : [ {
              "localeOrigin" : "DEFAULT",
              "text" : "The request was syntactically correct but its content is semantically invalid.",
              "locale" : "en-US"
            }, {
              "localeOrigin" : "DEFAULT",
              "text" : "The request was syntactically correct but its content is semantically invalid.",
              "locale" : "en-US"
            } ]
          }, {
            "level" : "ERROR",
            "localizations" : [ {
              "localeOrigin" : "DEFAULT",
              "text" : "The request was syntactically correct but its content is semantically invalid.",
              "locale" : "en-US"
            }, {
              "localeOrigin" : "DEFAULT",
              "text" : "The request was syntactically correct but its content is semantically invalid.",
              "locale" : "en-US"
            } ]
          } ],
          "filter" : {
            "name" : "Test Filter",
            "id" : "0fbe863c063c4c88a35fd7f17e8a3df5",
            "type" : "CAMPAIGN_FILTER"
          },
          "searchCampaignInfo" : {
            "identityIds" : [ "0fbe863c063c4c88a35fd7f17e8a3df5" ],
            "query" : "Search Campaign query description",
            "description" : "Search Campaign description",
            "reviewer" : {
              "name" : "William Wilson",
              "id" : "2c91808568c529c60168cca6f90c1313",
              "type" : "IDENTITY"
            },
            "type" : "ACCESS",
            "accessConstraints" : [ {
              "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
              "type" : "ENTITLEMENT",
              "operator" : "SELECTED"
            }, {
              "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
              "type" : "ENTITLEMENT",
              "operator" : "SELECTED"
            }, {
              "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
              "type" : "ENTITLEMENT",
              "operator" : "SELECTED"
            }, {
              "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
              "type" : "ENTITLEMENT",
              "operator" : "SELECTED"
            }, {
              "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
              "type" : "ENTITLEMENT",
              "operator" : "SELECTED"
            } ]
          },
          "autoRevokeAllowed" : false,
          "name" : "Manager Campaign",
          "mandatoryCommentRequirement" : "NO_DECISIONS",
          "modified" : "2020-03-03T22:20:12.674Z",
          "roleCompositionCampaignInfo" : {
            "remediatorRef" : {
              "name" : "Role Admin",
              "id" : "2c90ad2a70ace7d50170acf22ca90010",
              "type" : "IDENTITY"
            },
            "roleIds" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
            "query" : "Search Query",
            "description" : "Role Composition Description",
            "reviewer" : {
              "name" : "William Wilson",
              "id" : "2c91808568c529c60168cca6f90c1313",
              "type" : "IDENTITY"
            }
          },
          "completedCertifications" : 10,
          "id" : "2c9079b270a266a60170a2779fcb0007",
          "deadline" : "2020-03-15T10:00:01.456Z",
          "status" : "ACTIVE",
          "correlatedStatus" : "CORRELATED"
        }
        "@
        
        # Create campaign
        
        try {
            $Result = ConvertFrom-JsonToCampaign -Json $Campaign
            New-BetaCampaign -Campaign $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaCampaign -Campaign $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaCampaign"
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#create-campaign-template
      source: |
        $CampaignTemplate = @"
        {
          "ownerRef" : {
            "name" : "Mister Manager",
            "id" : "2c918086676d3e0601677611dbde220f",
            "type" : "IDENTITY",
            "email" : "mr.manager@example.com"
          },
          "deadlineDuration" : "P2W",
          "created" : "2020-03-05T22:44:00.364Z",
          "scheduled" : false,
          "name" : "Manager Campaign Template",
          "description" : "Template for the annual manager campaign.",
          "modified" : "2020-03-05T22:52:09.969Z",
          "campaign" : {
            "totalCertifications" : 100,
            "sourcesWithOrphanEntitlements" : [ {
              "name" : "Source with orphan entitlements",
              "id" : "2c90ad2a70ace7d50170acf22ca90010",
              "type" : "SOURCE"
            }, {
              "name" : "Source with orphan entitlements",
              "id" : "2c90ad2a70ace7d50170acf22ca90010",
              "type" : "SOURCE"
            } ],
            "recommendationsEnabled" : true,
            "sunsetCommentsRequired" : true,
            "created" : "2020-03-03T22:15:13.611Z",
            "machineAccountCampaignInfo" : {
              "reviewerType" : "ACCOUNT_OWNER",
              "sourceIds" : [ "0fbe863c063c4c88a35fd7f17e8a3df5" ]
            },
            "description" : "Everyone needs to be reviewed by their manager",
            "type" : "MANAGER",
            "sourceOwnerCampaignInfo" : {
              "sourceIds" : [ "0fbe863c063c4c88a35fd7f17e8a3df5" ]
            },
            "emailNotificationEnabled" : false,
            "alerts" : [ {
              "level" : "ERROR",
              "localizations" : [ {
                "localeOrigin" : "DEFAULT",
                "text" : "The request was syntactically correct but its content is semantically invalid.",
                "locale" : "en-US"
              }, {
                "localeOrigin" : "DEFAULT",
                "text" : "The request was syntactically correct but its content is semantically invalid.",
                "locale" : "en-US"
              } ]
            }, {
              "level" : "ERROR",
              "localizations" : [ {
                "localeOrigin" : "DEFAULT",
                "text" : "The request was syntactically correct but its content is semantically invalid.",
                "locale" : "en-US"
              }, {
                "localeOrigin" : "DEFAULT",
                "text" : "The request was syntactically correct but its content is semantically invalid.",
                "locale" : "en-US"
              } ]
            } ],
            "filter" : {
              "name" : "Test Filter",
              "id" : "0fbe863c063c4c88a35fd7f17e8a3df5",
              "type" : "CAMPAIGN_FILTER"
            },
            "searchCampaignInfo" : {
              "identityIds" : [ "0fbe863c063c4c88a35fd7f17e8a3df5" ],
              "query" : "Search Campaign query description",
              "description" : "Search Campaign description",
              "reviewer" : {
                "name" : "William Wilson",
                "id" : "2c91808568c529c60168cca6f90c1313",
                "type" : "IDENTITY"
              },
              "type" : "ACCESS",
              "accessConstraints" : [ {
                "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
                "type" : "ENTITLEMENT",
                "operator" : "SELECTED"
              }, {
                "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
                "type" : "ENTITLEMENT",
                "operator" : "SELECTED"
              }, {
                "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
                "type" : "ENTITLEMENT",
                "operator" : "SELECTED"
              }, {
                "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
                "type" : "ENTITLEMENT",
                "operator" : "SELECTED"
              }, {
                "ids" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
                "type" : "ENTITLEMENT",
                "operator" : "SELECTED"
              } ]
            },
            "autoRevokeAllowed" : false,
            "name" : "Manager Campaign",
            "mandatoryCommentRequirement" : "NO_DECISIONS",
            "modified" : "2020-03-03T22:20:12.674Z",
            "roleCompositionCampaignInfo" : {
              "remediatorRef" : {
                "name" : "Role Admin",
                "id" : "2c90ad2a70ace7d50170acf22ca90010",
                "type" : "IDENTITY"
              },
              "roleIds" : [ "2c90ad2a70ace7d50170acf22ca90010" ],
              "query" : "Search Query",
              "description" : "Role Composition Description",
              "reviewer" : {
                "name" : "William Wilson",
                "id" : "2c91808568c529c60168cca6f90c1313",
                "type" : "IDENTITY"
              }
            },
            "completedCertifications" : 10,
            "id" : "2c9079b270a266a60170a2779fcb0007",
            "deadline" : "2020-03-15T10:00:01.456Z",
            "status" : "ACTIVE",
            "correlatedStatus" : "CORRELATED"
          },
          "id" : "2c9079b270a266a60170a277bb960008"
        }
        "@
        
        # Create a campaign template
        
        try {
            $Result = ConvertFrom-JsonToCampaignTemplate -Json $CampaignTemplate
            New-BetaCampaignTemplate -CampaignTemplate $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaCampaignTemplate -CampaignTemplate $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaCampaignTemplate"
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#delete-campaign-template
      source: |
        $Id = "2c9180835d191a86015d28455b4a2329" # String | ID of the campaign template being deleted.
        
        # Delete a campaign template
        
        try {
            Remove-BetaCampaignTemplate -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaCampaignTemplate -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaCampaignTemplate"
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}/schedule
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#delete-campaign-template-schedule
      source: |
        $Id = "04bedce387bd47b2ae1f86eb0bb36dee" # String | ID of the campaign template whose schedule is being deleted.
        
        # Delete campaign template schedule
        
        try {
            Remove-BetaCampaignTemplateSchedule -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaCampaignTemplateSchedule -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaCampaignTemplateSchedule"
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/delete
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#delete-campaigns
      source: |
        $DeleteCampaignsRequest = @"
        {
          "ids" : [ "2c9180887335cee10173490db1776c26", "2c9180836a712436016a7125a90c0021" ]
        }
        "@
        
        # Delete campaigns
        
        try {
            $Result = ConvertFrom-JsonToDeleteCampaignsRequest -Json $DeleteCampaignsRequest
            Remove-BetaCampaigns -DeleteCampaignsRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaCampaigns -DeleteCampaignsRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaCampaigns"
            Write-Host $_.ErrorDetails
        }
- path: /campaigns
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#get-active-campaigns
      source: |
        $Detail = "SLIM" # String | Determines whether slim, or increased level of detail is provided for each campaign in the returned list. Slim is the default behavior. (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "name eq "Manager Campaign"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **status**: *eq, in* (optional)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created** (optional)
        
        # List campaigns
        
        try {
            Get-BetaActiveCampaigns 
    
            # Below is a request that includes all optional parameters
            # Get-BetaActiveCampaigns -Detail $Detail -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaActiveCampaigns"
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#get-campaign
      source: |
        $Id = "2c91808571bcfcf80171c23e4b4221fc" # String | ID of the campaign to be retrieved.
        
        # Get campaign
        
        try {
            Get-BetaCampaign -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCampaign -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCampaign"
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}/reports
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#get-campaign-reports
      source: |
        $Id = "2c91808571bcfcf80171c23e4b4221fc" # String | ID of the campaign whose reports are being fetched.
        
        # Get campaign reports
        
        try {
            Get-BetaCampaignReports -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCampaignReports -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCampaignReports"
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/reports-configuration
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#get-campaign-reports-config
      source: |
        
        # Get campaign reports configuration
        
        try {
            Get-BetaCampaignReportsConfig 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCampaignReportsConfig   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCampaignReportsConfig"
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#get-campaign-template
      source: |
        $Id = "2c9180835d191a86015d28455b4a2329" # String | Requested campaign template's ID.
        
        # Get a campaign template
        
        try {
            Get-BetaCampaignTemplate -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCampaignTemplate -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCampaignTemplate"
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}/schedule
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#get-campaign-template-schedule
      source: |
        $Id = "04bedce387bd47b2ae1f86eb0bb36dee" # String | ID of the campaign template whose schedule is being fetched.
        
        # Get campaign template schedule
        
        try {
            Get-BetaCampaignTemplateSchedule -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCampaignTemplateSchedule -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCampaignTemplateSchedule"
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#get-campaign-templates
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional)
        $Filters = "name eq "manager template"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *eq, ge, gt, in, le, lt, ne, sw*  **id**: *eq, ge, gt, in, le, lt, ne, sw* (optional)
        
        # List campaign templates
        
        try {
            Get-BetaCampaignTemplates 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCampaignTemplates -Limit $Limit -Offset $Offset -Count $Count -Sorters $Sorters -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCampaignTemplates"
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}/reassign
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#move
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The certification campaign ID
        $AdminReviewReassign = @"
        {
          "certificationIds" : [ "af3859464779471211bb8424a563abc1", "af3859464779471211bb8424a563abc2", "af3859464779471211bb8424a563abc3" ],
          "reason" : "reassigned for some reason",
          "reassignTo" : {
            "id" : "ef38f94347e94562b5bb8424a56397d8",
            "type" : "IDENTITY"
          }
        }
        "@
        
        # Reassign certifications
        
        try {
            $Result = ConvertFrom-JsonToAdminReviewReassign -Json $AdminReviewReassign
            Move-Beta -Id $Id -AdminReviewReassign $Result 
    
            # Below is a request that includes all optional parameters
            # Move-Beta -Id $Id -AdminReviewReassign $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Move-Beta"
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#patch-campaign-template
      source: |
        $Id = "2c9180835d191a86015d28455b4a2329" # String | ID of the campaign template being modified.
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Update a campaign template
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaCampaignTemplate -Id $Id -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaCampaignTemplate -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaCampaignTemplate"
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/reports-configuration
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#set-campaign-reports-config
      source: |
        $CampaignReportsConfig = @"
        {
          "identityAttributeColumns" : [ "firstname", "lastname" ]
        }
        "@
        
        # Set campaign reports configuration
        
        try {
            $Result = ConvertFrom-JsonToCampaignReportsConfig -Json $CampaignReportsConfig
            Set-BetaCampaignReportsConfig -CampaignReportsConfig $Result 
    
            # Below is a request that includes all optional parameters
            # Set-BetaCampaignReportsConfig -CampaignReportsConfig $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Set-BetaCampaignReportsConfig"
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}/schedule
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#set-campaign-template-schedule
      source: |
        $Id = "04bedce387bd47b2ae1f86eb0bb36dee" # String | ID of the campaign template being scheduled.
        $Schedule = @"
        {
          "hours" : {
            "values" : [ "1" ],
            "interval" : 2,
            "type" : "LIST"
          },
          "months" : {
            "values" : [ "1" ],
            "interval" : 2,
            "type" : "LIST"
          },
          "timeZoneId" : "CST",
          "days" : {
            "values" : [ "1" ],
            "interval" : 2,
            "type" : "LIST"
          },
          "expiration" : "2000-01-23T04:56:07.000+00:00",
          "type" : "WEEKLY"
        }
        "@
        
        # Set campaign template schedule
        
        try {
            Set-BetaCampaignTemplateSchedule -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Set-BetaCampaignTemplateSchedule -Id $Id -Schedule $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Set-BetaCampaignTemplateSchedule"
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}/activate
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#start-campaign
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | Campaign ID.
        $ActivateCampaignOptions = @"
        {
          "timeZone" : "-05:00"
        }
        "@
        
        # Activate a campaign
        
        try {
            Start-BetaCampaign -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Start-BetaCampaign -Id $Id -ActivateCampaignOptions $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Start-BetaCampaign"
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}/run-remediation-scan
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#start-campaign-remediation-scan
      source: |
        $Id = "2c91808571bcfcf80171c23e4b4221fc" # String | ID of the campaign the remediation scan is being run for.
        
        # Run campaign remediation scan
        
        try {
            Start-BetaCampaignRemediationScan -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Start-BetaCampaignRemediationScan -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Start-BetaCampaignRemediationScan"
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}/run-report/{type}
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#start-campaign-report
      source: |
        $Id = "2c91808571bcfcf80171c23e4b4221fc" # String | ID of the campaign the report is being run for.
        $Type = "CAMPAIGN_COMPOSITION_REPORT" # ReportType | Type of report to run.
        
        # Run campaign report
        
        try {
            Start-BetaCampaignReport -Id $Id -Type $Type 
    
            # Below is a request that includes all optional parameters
            # Start-BetaCampaignReport -Id $Id -Type $Type   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Start-BetaCampaignReport"
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}/generate
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#start-generate-campaign-template
      source: |
        $Id = "2c9180835d191a86015d28455b4a2329" # String | ID of the campaign template to use for generation.
        
        # Generate a campaign from template
        
        try {
            Start-BetaGenerateCampaignTemplate -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Start-BetaGenerateCampaignTemplate -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Start-BetaGenerateCampaignTemplate"
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certification-campaigns#update-campaign
      source: |
        $Id = "2c91808571bcfcf80171c23e4b4221fc" # String | ID of the campaign being modified.
        $RequestBody =  # SystemCollectionsHashtable[] | A list of campaign update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard. The fields that can be patched differ based on the status of the campaign.  When the campaign is in the *STAGED* status, you can patch these fields: * name * description * recommendationsEnabled * deadline * emailNotificationEnabled * autoRevokeAllowed  When the campaign is in the *ACTIVE* status, you can patch these fields: * deadline 
        $RequestBody = @"[{op=replace, path=/name, value=This field has been updated!}, {op=copy, from=/name, path=/description}]"@ 
        
        
        # Update a campaign
        
        try {
            $Result = ConvertFrom-JsonToRequestBody -Json $RequestBody
            Update-BetaCampaign -Id $Id -RequestBody $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaCampaign -Id $Id -RequestBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaCampaign"
            Write-Host $_.ErrorDetails
        }
- path: /certifications/{certificationId}/access-review-items/{itemId}/permissions
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certifications#get-identity-certification-item-permissions
      source: |
        $CertificationId = "ef38f94347e94562b5bb8424a56397d8" # String | The certification ID
        $ItemId = "2c91808671bcbab40171bd945d961227" # String | The certification item ID
        $Filters = "target eq "SYS.OBJAUTH2"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **target**: *eq, sw*  **rights**: *ca*  All field values (second filter operands) are case-insensitive for this API.  Only a single *and* or *or* composite filter operator may be used. It must also be used between a target filter and a rights filter, not between 2 filters for the same field.  For example, the following is valid: `?filters=rights+ca+(%22CREATE%22)+and+target+eq+%22SYS.OBJAUTH2%22`  The following is invalid: `?filters=rights+ca+(%22CREATE%22)+and+rights+ca+(%SELECT%22)` (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Permissions for entitlement certification item
        
        try {
            Get-BetaIdentityCertificationItemPermissions -CertificationId $CertificationId -ItemId $ItemId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentityCertificationItemPermissions -CertificationId $CertificationId -ItemId $ItemId -Filters $Filters -Limit $Limit -Offset $Offset -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityCertificationItemPermissions"
            Write-Host $_.ErrorDetails
        }
- path: /certifications/{id}/tasks-pending
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certifications#get-identity-certification-pending-tasks
      source: |
        $Id = "MyId" # String | The identity campaign certification ID
        
        # Pending certification tasks
        
        try {
            Get-BetaIdentityCertificationPendingTasks -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentityCertificationPendingTasks -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityCertificationPendingTasks"
            Write-Host $_.ErrorDetails
        }
- path: /certifications/{id}/tasks/{taskId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certifications#get-identity-certification-task-status
      source: |
        $Id = "MyId" # String | The identity campaign certification ID
        $TaskId = "MyTaskId" # String | The certification task ID
        
        # Certification task status
        
        try {
            Get-BetaIdentityCertificationTaskStatus -Id $Id -TaskId $TaskId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentityCertificationTaskStatus -Id $Id -TaskId $TaskId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityCertificationTaskStatus"
            Write-Host $_.ErrorDetails
        }
- path: /certifications/{id}/reviewers
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certifications#list-certification-reviewers
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The certification ID
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "name eq "Bob"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **email**: *eq, sw* (optional)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, email** (optional)
        
        # List of reviewers for certification
        
        try {
            Get-BetaCertificationReviewers -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCertificationReviewers -Id $Id -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCertificationReviewers"
            Write-Host $_.ErrorDetails
        }
- path: /certifications
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certifications#list-certifications
      source: |
        $ReviewerIdentitiy = "MyReviewerIdentitiy" # String | The ID of reviewer identity. *me* indicates the current user. (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "MyFilters" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **phase**: *eq*  **completed**: *eq, ne*  **campaignRef.campaignType**: *eq, in*  **campaignRef.id**: *eq, in* (optional)
        $Sorters = "MySorters" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, due, signed** (optional)
        
        # Certifications by ids
        
        try {
            Get-BetaCertifications 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCertifications -ReviewerIdentitiy $ReviewerIdentitiy -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCertifications"
            Write-Host $_.ErrorDetails
        }
- path: /certifications/{id}/reassign-async
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/certifications#submit-reassign-certs-async
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The identity campaign certification ID
        $ReviewReassign = @"
        {
          "reason" : "reassigned for some reason",
          "reassignTo" : "ef38f94347e94562b5bb8424a56397d8",
          "reassign" : [ {
            "id" : "ef38f94347e94562b5bb8424a56397d8",
            "type" : "ITEM"
          }, {
            "id" : "ef38f94347e94562b5bb8424a56397d8",
            "type" : "ITEM"
          } ]
        }
        "@
        
        # Reassign certifications asynchronously
        
        try {
            $Result = ConvertFrom-JsonToReviewReassign -Json $ReviewReassign
            Submit-BetaReassignCertsAsync -Id $Id -ReviewReassign $Result 
    
            # Below is a request that includes all optional parameters
            # Submit-BetaReassignCertsAsync -Id $Id -ReviewReassign $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Submit-BetaReassignCertsAsync"
            Write-Host $_.ErrorDetails
        }
- path: /connector-rules
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/connector-rule-management#create-connector-rule
      source: |
        $ConnectorRuleCreateRequest = @"
        {
          "sourceCode" : {
            "version" : "1.0",
            "script" : "return \"Mr. \" + firstName;"
          },
          "signature" : {
            "output" : {
              "name" : "firstName",
              "description" : "the first name of the identity",
              "type" : "String"
            },
            "input" : [ {
              "name" : "firstName",
              "description" : "the first name of the identity",
              "type" : "String"
            }, {
              "name" : "firstName",
              "description" : "the first name of the identity",
              "type" : "String"
            } ]
          },
          "name" : "WebServiceBeforeOperationRule",
          "description" : "This rule does that",
          "attributes" : { },
          "type" : "BuildMap"
        }
        "@
        
        # Create connector rule
        
        try {
            $Result = ConvertFrom-JsonToConnectorRuleCreateRequest -Json $ConnectorRuleCreateRequest
            New-BetaConnectorRule -ConnectorRuleCreateRequest $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaConnectorRule -ConnectorRuleCreateRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaConnectorRule"
            Write-Host $_.ErrorDetails
        }
- path: /connector-rules/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/connector-rule-management#delete-connector-rule
      source: |
        $Id = "8c190e6787aa4ed9a90bd9d5344523fb" # String | ID of the connector rule to delete
        
        # Delete a connector-rule
        
        try {
            Remove-BetaConnectorRule -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaConnectorRule -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaConnectorRule"
            Write-Host $_.ErrorDetails
        }
- path: /connector-rules/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/connector-rule-management#get-connector-rule
      source: |
        $Id = "8c190e6787aa4ed9a90bd9d5344523fb" # String | ID of the connector rule to retrieve
        
        # Connector-rule by id
        
        try {
            Get-BetaConnectorRule -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaConnectorRule -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaConnectorRule"
            Write-Host $_.ErrorDetails
        }
- path: /connector-rules
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/connector-rule-management#get-connector-rule-list
      source: |
        
        # List connector rules
        
        try {
            Get-BetaConnectorRuleList 
    
            # Below is a request that includes all optional parameters
            # Get-BetaConnectorRuleList   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaConnectorRuleList"
            Write-Host $_.ErrorDetails
        }
- path: /connector-rules/{id}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/connector-rule-management#update-connector-rule
      source: |
        $Id = "8c190e6787aa4ed9a90bd9d5344523fb" # String | ID of the connector rule to update
        $ConnectorRuleUpdateRequest = @"
        {
          "sourceCode" : {
            "version" : "1.0",
            "script" : "return \"Mr. \" + firstName;"
          },
          "signature" : {
            "output" : {
              "name" : "firstName",
              "description" : "the first name of the identity",
              "type" : "String"
            },
            "input" : [ {
              "name" : "firstName",
              "description" : "the first name of the identity",
              "type" : "String"
            }, {
              "name" : "firstName",
              "description" : "the first name of the identity",
              "type" : "String"
            } ]
          },
          "name" : "WebServiceBeforeOperationRule",
          "description" : "This rule does that",
          "attributes" : { },
          "id" : "8113d48c0b914f17b4c6072d4dcb9dfe",
          "type" : "BuildMap"
        }
        "@
        
        # Update a connector rule
        
        try {
            Update-BetaConnectorRule -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Update-BetaConnectorRule -Id $Id -ConnectorRuleUpdateRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaConnectorRule"
            Write-Host $_.ErrorDetails
        }
- path: /connector-rules/validate
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/connector-rule-management#validate-connector-rule
      source: |
        $SourceCode = @"
        {
          "version" : "1.0",
          "script" : "return \"Mr. \" + firstName;"
        }
        "@
        
        # Validate connector rule
        
        try {
            $Result = ConvertFrom-JsonToSourceCode -Json $SourceCode
            Confirm-BetaConnectorRule -SourceCode $Result 
    
            # Below is a request that includes all optional parameters
            # Confirm-BetaConnectorRule -SourceCode $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Confirm-BetaConnectorRule"
            Write-Host $_.ErrorDetails
        }
- path: /connectors
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/connectors#get-connector-list
      source: |
        $Filters = "directConnect eq "true"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **type**: *eq*  **directConnect**: *eq*  **category**: *eq*  **features**: *ca* (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Locale = "de" # String | The locale to apply to the config. If no viable locale is given, it will default to ""en"" (optional)
        
        # Get connector list
        
        try {
            Get-BetaConnectorList 
    
            # Below is a request that includes all optional parameters
            # Get-BetaConnectorList -Filters $Filters -Limit $Limit -Offset $Offset -Count $Count -Locale $Locale   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaConnectorList"
            Write-Host $_.ErrorDetails
        }
- path: /form-definitions
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#create-form-definition
      source: |
        $CreateFormDefinitionRequest = @"
        {
          "owner" : {
            "name" : "Grant Smith",
            "id" : "2c9180867624cbd7017642d8c8c81f67",
            "type" : "IDENTITY"
          },
          "formConditions" : [ {
            "ruleOperator" : "AND",
            "effects" : [ {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            }, {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            } ],
            "rules" : [ {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            }, {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            } ]
          }, {
            "ruleOperator" : "AND",
            "effects" : [ {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            }, {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            } ],
            "rules" : [ {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            }, {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            } ]
          } ],
          "formInput" : [ {
            "description" : "A single dynamic scalar value (i.e. number, string, date, etc.) that can be passed into the form for use in conditional logic",
            "id" : "00000000-0000-0000-0000-000000000000",
            "label" : "input1",
            "type" : "STRING"
          }, {
            "description" : "A single dynamic scalar value (i.e. number, string, date, etc.) that can be passed into the form for use in conditional logic",
            "id" : "00000000-0000-0000-0000-000000000000",
            "label" : "input1",
            "type" : "STRING"
          } ],
          "name" : "My form",
          "description" : "My form description",
          "usedBy" : [ {
            "name" : "Access Request Form",
            "id" : "61940a92-5484-42bc-bc10-b9982b218cdf",
            "type" : "WORKFLOW"
          }, {
            "name" : "Access Request Form",
            "id" : "61940a92-5484-42bc-bc10-b9982b218cdf",
            "type" : "WORKFLOW"
          } ],
          "formElements" : [ {
            "id" : "00000000-0000-0000-0000-000000000000",
            "validations" : [ {
              "validationType" : "REQUIRED"
            }, {
              "validationType" : "REQUIRED"
            } ],
            "elementType" : "TEXT",
            "config" : {
              "label" : "Department"
            },
            "key" : "department"
          }, {
            "id" : "00000000-0000-0000-0000-000000000000",
            "validations" : [ {
              "validationType" : "REQUIRED"
            }, {
              "validationType" : "REQUIRED"
            } ],
            "elementType" : "TEXT",
            "config" : {
              "label" : "Department"
            },
            "key" : "department"
          } ]
        }
        "@
        
        # Creates a form definition.
        
        try {
            New-BetaFormDefinition 
    
            # Below is a request that includes all optional parameters
            # New-BetaFormDefinition -CreateFormDefinitionRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaFormDefinition"
            Write-Host $_.ErrorDetails
        }
- path: /form-definitions/template
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#create-form-definition-by-template
      source: |
        $CreateFormDefinitionRequest = @"
        {
          "owner" : {
            "name" : "Grant Smith",
            "id" : "2c9180867624cbd7017642d8c8c81f67",
            "type" : "IDENTITY"
          },
          "formConditions" : [ {
            "ruleOperator" : "AND",
            "effects" : [ {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            }, {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            } ],
            "rules" : [ {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            }, {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            } ]
          }, {
            "ruleOperator" : "AND",
            "effects" : [ {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            }, {
              "config" : {
                "defaultValueLabel" : "Access to Remove",
                "element" : "8110662963316867"
              },
              "effectType" : "HIDE"
            } ],
            "rules" : [ {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            }, {
              "sourceType" : "ELEMENT",
              "valueType" : "STRING",
              "source" : "department",
              "value" : "Engineering",
              "operator" : "EQ"
            } ]
          } ],
          "formInput" : [ {
            "description" : "A single dynamic scalar value (i.e. number, string, date, etc.) that can be passed into the form for use in conditional logic",
            "id" : "00000000-0000-0000-0000-000000000000",
            "label" : "input1",
            "type" : "STRING"
          }, {
            "description" : "A single dynamic scalar value (i.e. number, string, date, etc.) that can be passed into the form for use in conditional logic",
            "id" : "00000000-0000-0000-0000-000000000000",
            "label" : "input1",
            "type" : "STRING"
          } ],
          "name" : "My form",
          "description" : "My form description",
          "usedBy" : [ {
            "name" : "Access Request Form",
            "id" : "61940a92-5484-42bc-bc10-b9982b218cdf",
            "type" : "WORKFLOW"
          }, {
            "name" : "Access Request Form",
            "id" : "61940a92-5484-42bc-bc10-b9982b218cdf",
            "type" : "WORKFLOW"
          } ],
          "formElements" : [ {
            "id" : "00000000-0000-0000-0000-000000000000",
            "validations" : [ {
              "validationType" : "REQUIRED"
            }, {
              "validationType" : "REQUIRED"
            } ],
            "elementType" : "TEXT",
            "config" : {
              "label" : "Department"
            },
            "key" : "department"
          }, {
            "id" : "00000000-0000-0000-0000-000000000000",
            "validations" : [ {
              "validationType" : "REQUIRED"
            }, {
              "validationType" : "REQUIRED"
            } ],
            "elementType" : "TEXT",
            "config" : {
              "label" : "Department"
            },
            "key" : "department"
          } ]
        }
        "@
        
        # Create a form definition by template.
        
        try {
            New-BetaFormDefinitionByTemplate 
    
            # Below is a request that includes all optional parameters
            # New-BetaFormDefinitionByTemplate -CreateFormDefinitionRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaFormDefinitionByTemplate"
            Write-Host $_.ErrorDetails
        }
- path: /form-definitions/forms-action-dynamic-schema
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#create-form-definition-dynamic-schema
      source: |
        $Body = @"
        {
          "description" : "A description",
          "attributes" : {
            "formDefinitionId" : "00000000-0000-0000-0000-000000000000"
          },
          "id" : "00000000-0000-0000-0000-000000000000",
          "type" : "action",
          "versionNumber" : 1
        }
        "@
        
        # Generate json schema dynamically.
        
        try {
            New-BetaFormDefinitionDynamicSchema 
    
            # Below is a request that includes all optional parameters
            # New-BetaFormDefinitionDynamicSchema -Body $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaFormDefinitionDynamicSchema"
            Write-Host $_.ErrorDetails
        }
- path: /form-definitions/{formDefinitionID}/upload
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#create-form-definition-file-request
      source: |
        $FormDefinitionID = "00000000-0000-0000-0000-000000000000" # String | FormDefinitionID  String specifying FormDefinitionID
        $File =  # System.IO.FileInfo | File specifying the multipart
        
        # Upload new form definition file.
        
        try {
            New-BetaFormDefinitionFileRequest -FormDefinitionID $FormDefinitionID -File $File 
    
            # Below is a request that includes all optional parameters
            # New-BetaFormDefinitionFileRequest -FormDefinitionID $FormDefinitionID -File $File   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaFormDefinitionFileRequest"
            Write-Host $_.ErrorDetails
        }
- path: /form-instances
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#create-form-instance
      source: |
        $Body = @"
        {
          "formInput" : {
            "input1" : "Sales"
          },
          "standAloneForm" : false,
          "createdBy" : {
            "id" : "00000000-0000-0000-0000-000000000000",
            "type" : "WORKFLOW_EXECUTION"
          },
          "recipients" : [ {
            "id" : "00000000-0000-0000-0000-000000000000",
            "type" : "IDENTITY"
          }, {
            "id" : "00000000-0000-0000-0000-000000000000",
            "type" : "IDENTITY"
          } ],
          "expire" : "2023-08-12T20:14:57.74486Z",
          "formDefinitionId" : "00000000-0000-0000-0000-000000000000",
          "state" : "ASSIGNED",
          "ttl" : 1571827560
        }
        "@
        
        # Creates a form instance.
        
        try {
            New-BetaFormInstance 
    
            # Below is a request that includes all optional parameters
            # New-BetaFormInstance -Body $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaFormInstance"
            Write-Host $_.ErrorDetails
        }
- path: /form-definitions/{formDefinitionID}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#delete-form-definition
      source: |
        $FormDefinitionID = "00000000-0000-0000-0000-000000000000" # String | Form definition ID
        
        # Deletes a form definition.
        
        try {
            Remove-BetaFormDefinition -FormDefinitionID $FormDefinitionID 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaFormDefinition -FormDefinitionID $FormDefinitionID   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaFormDefinition"
            Write-Host $_.ErrorDetails
        }
- path: /form-definitions/export
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#export-form-definitions-by-tenant
      source: |
        $Offset = 0 # Int64 | Offset  Integer specifying the offset of the first result from the beginning of the collection. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). The offset value is record-based, not page-based, and the index starts at 0. (optional) (default to 0)
        $Limit = 250 # Int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 250)
        $Filters = "name sw "my form"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *eq, gt, sw, in*  **description**: *eq, gt, sw, in*  **created**: *eq, gt, sw, in*  **modified**: *eq, gt, sw, in* (optional)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, description, created, modified** (optional) (default to "name")
        
        # List form definitions by tenant.
        
        try {
            Export-BetaFormDefinitionsByTenant 
    
            # Below is a request that includes all optional parameters
            # Export-BetaFormDefinitionsByTenant -Offset $Offset -Limit $Limit -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Export-BetaFormDefinitionsByTenant"
            Write-Host $_.ErrorDetails
        }
- path: /form-definitions/{formDefinitionID}/file/{fileID}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#get-file-from-s3
      source: |
        $FormDefinitionID = "00000000-0000-0000-0000-000000000000" # String | FormDefinitionID  Form definition ID
        $FileID = "00000031N0J7R2B57M8YG73J7M.png" # String | FileID  String specifying the hashed name of the uploaded file we are retrieving.
        
        # Download definition file by fileid.
        
        try {
            Get-BetaFileFromS3 -FormDefinitionID $FormDefinitionID -FileID $FileID 
    
            # Below is a request that includes all optional parameters
            # Get-BetaFileFromS3 -FormDefinitionID $FormDefinitionID -FileID $FileID   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaFileFromS3"
            Write-Host $_.ErrorDetails
        }
- path: /form-definitions/{formDefinitionID}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#get-form-definition-by-key
      source: |
        $FormDefinitionID = "00000000-0000-0000-0000-000000000000" # String | Form definition ID
        
        # Return a form definition.
        
        try {
            Get-BetaFormDefinitionByKey -FormDefinitionID $FormDefinitionID 
    
            # Below is a request that includes all optional parameters
            # Get-BetaFormDefinitionByKey -FormDefinitionID $FormDefinitionID   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaFormDefinitionByKey"
            Write-Host $_.ErrorDetails
        }
- path: /form-instances/{formInstanceID}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#get-form-instance-by-key
      source: |
        $FormInstanceID = "00000000-0000-0000-0000-000000000000" # String | Form instance ID
        
        # Returns a form instance.
        
        try {
            Get-BetaFormInstanceByKey -FormInstanceID $FormInstanceID 
    
            # Below is a request that includes all optional parameters
            # Get-BetaFormInstanceByKey -FormInstanceID $FormInstanceID   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaFormInstanceByKey"
            Write-Host $_.ErrorDetails
        }
- path: /form-instances/{formInstanceID}/file/{fileID}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#get-form-instance-file
      source: |
        $FormInstanceID = "00000000-0000-0000-0000-000000000000" # String | FormInstanceID  Form instance ID
        $FileID = "00000031N0J7R2B57M8YG73J7M.png" # String | FileID  String specifying the hashed name of the uploaded file we are retrieving.
        
        # Download instance file by fileid.
        
        try {
            Get-BetaFormInstanceFile -FormInstanceID $FormInstanceID -FileID $FileID 
    
            # Below is a request that includes all optional parameters
            # Get-BetaFormInstanceFile -FormInstanceID $FormInstanceID -FileID $FileID   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaFormInstanceFile"
            Write-Host $_.ErrorDetails
        }
- path: /form-definitions/import
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#import-form-definitions
      source: |






        $Body = @"[{version=1, self={name=All fields not required, id=05ed4edb-d0a9-41d9-ad0c-2f6e486ec4aa, type=FORM_DEFINITION}, object={id=05ed4edb-d0a9-41d9-ad0c-2f6e486ec4aa, name=All fields not required, description=description, owner={type=IDENTITY, id=3447d8ec2602455ab6f1e8408a0f0150}, usedBy=[{type=WORKFLOW, id=5008594c-dacc-4295-8fee-41df60477304}, {type=WORKFLOW, id=97e75a75-c179-4fbc-a2da-b5fa4aaa8743}], formInput=[{type=STRING, label=input1, description=A single dynamic scalar value (i.e. number, string, date, etc) that can be passed into the form for use in conditional logic}], formElements=[{id=3069272797630701, elementType=SECTION, config={label=First Section, formElements=[{id=3069272797630700, elementType=TEXT, key=firstName, config={label=First Name}}, {id=3498415402897539, elementType=TEXT, key=lastName, config={label=Last Name}}]}}], formConditions=[{ruleOperator=AND, rules=[{sourceType=INPUT, source=Department, operator=EQ, valueType=STRING, value=Sales}], effects=[{effectType=HIDE, config={element=2614088730489570}}]}], created=2022-10-04T19:27:04.456Z, modified=2022-11-16T20:45:02.172Z}}]"@ 
        
        
        # Import form definitions from export.
        
        try {
            Import-BetaFormDefinitions 
    
            # Below is a request that includes all optional parameters
            # Import-BetaFormDefinitions -Body $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Import-BetaFormDefinitions"
            Write-Host $_.ErrorDetails
        }
- path: /form-definitions/{formDefinitionID}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#patch-form-definition
      source: |
        $FormDefinitionID = "00000000-0000-0000-0000-000000000000" # String | Form definition ID
        $Body = @{ key_example =  } # Map[] | Body is the request payload to patch a form definition, check: https://jsonpatch.com (optional)
        $Body = @"[{op=replace, path=/description, value=test-description}]"@ 
        
        
        # Patch a form definition.
        
        try {
            Update-BetaFormDefinition -FormDefinitionID $FormDefinitionID 
    
            # Below is a request that includes all optional parameters
            # Update-BetaFormDefinition -FormDefinitionID $FormDefinitionID -Body $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaFormDefinition"
            Write-Host $_.ErrorDetails
        }
- path: /form-instances/{formInstanceID}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#patch-form-instance
      source: |
        $FormInstanceID = "00000000-0000-0000-0000-000000000000" # String | Form instance ID
        $Body = @{ key_example =  } # Map[] | Body is the request payload to patch a form instance, check: https://jsonpatch.com (optional)
        $Body = @"[{op=replace, path=/state, value=SUBMITTED}, {op=replace, path=/formData, value={a-key-1=a-value-1, a-key-2=true, a-key-3=1}}]"@ 
        
        
        # Patch a form instance.
        
        try {
            Update-BetaFormInstance -FormInstanceID $FormInstanceID 
    
            # Below is a request that includes all optional parameters
            # Update-BetaFormInstance -FormInstanceID $FormInstanceID -Body $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaFormInstance"
            Write-Host $_.ErrorDetails
        }
- path: /form-definitions
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#search-form-definitions-by-tenant
      source: |
        $Offset = 250 # Int64 | Offset  Integer specifying the offset of the first result from the beginning of the collection. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). The offset value is record-based, not page-based, and the index starts at 0. (optional) (default to 0)
        $Limit = 250 # Int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 250)
        $Filters = "name sw "my form"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *eq, gt, sw, in*  **description**: *eq, gt, sw, in*  **created**: *eq, gt, sw, in*  **modified**: *eq, gt, sw, in* (optional)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, description, created, modified** (optional) (default to "name")
        
        # Export form definitions by tenant.
        
        try {
            Search-BetaFormDefinitionsByTenant 
    
            # Below is a request that includes all optional parameters
            # Search-BetaFormDefinitionsByTenant -Offset $Offset -Limit $Limit -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Search-BetaFormDefinitionsByTenant"
            Write-Host $_.ErrorDetails
        }
- path: /form-instances/{formInstanceID}/data-source/{formElementID}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#search-form-element-data-by-element-id
      source: |
        $FormInstanceID = "00000000-0000-0000-0000-000000000000" # String | Form instance ID
        $FormElementID = "1" # String | Form element ID
        $Limit = 250 # Int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 250)
        $Filters = "value eq "ID01"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **value**: *eq, ne, in*  Supported composite operators: *not*  Only a single *not* may be used, and it can only be used with the `in` operator. The `not` composite operator must be used in front of the field. For example, the following is valid: `not value in (""ID01"")` (optional)
        $Query = "support" # String | String that is passed to the underlying API to filter other (non-ID) fields.  For example, for access  profile data sources, this string will be passed to the access profile api and used with a ""starts with"" filter against  several fields. (optional)
        
        # Retrieves dynamic data by element.
        
        try {
            Search-BetaFormElementDataByElementID -FormInstanceID $FormInstanceID -FormElementID $FormElementID 
    
            # Below is a request that includes all optional parameters
            # Search-BetaFormElementDataByElementID -FormInstanceID $FormInstanceID -FormElementID $FormElementID -Limit $Limit -Filters $Filters -Query $Query   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Search-BetaFormElementDataByElementID"
            Write-Host $_.ErrorDetails
        }
- path: /form-instances
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#search-form-instances-by-tenant
      source: |
        
        # List form instances by tenant.
        
        try {
            Search-BetaFormInstancesByTenant 
    
            # Below is a request that includes all optional parameters
            # Search-BetaFormInstancesByTenant   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Search-BetaFormInstancesByTenant"
            Write-Host $_.ErrorDetails
        }
- path: /form-definitions/predefined-select-options
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#search-pre-defined-select-options
      source: |
        
        # List predefined select options.
        
        try {
            Search-BetaPreDefinedSelectOptions 
    
            # Below is a request that includes all optional parameters
            # Search-BetaPreDefinedSelectOptions   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Search-BetaPreDefinedSelectOptions"
            Write-Host $_.ErrorDetails
        }
- path: /form-definitions/{formDefinitionID}/data-source
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-forms#show-preview-data-source
      source: |
        $FormDefinitionID = "00000000-0000-0000-0000-000000000000" # String | Form definition ID
        $Limit = 10 # Int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 10)
        $Filters = "value eq "ID01"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **value**: *eq, ne, in*  Supported composite operators: *not*  Only a single *not* may be used, and it can only be used with the `in` operator. The `not` composite operator must be used in front of the field. For example, the following is valid: `not value in (""ID01"")` (optional)
        $Query = "ac" # String | String that is passed to the underlying API to filter other (non-ID) fields.  For example, for access  profile data sources, this string will be passed to the access profile api and used with a ""starts with"" filter against  several fields. (optional)
        $FormElementPreviewRequest = @"
        {
          "dataSource" : {
            "config" : {
              "indices" : [ "identities" ],
              "query" : "*",
              "aggregationBucketField" : "attributes.cloudStatus.exact",
              "objectType" : "IDENTITY"
            },
            "dataSourceType" : "STATIC"
          }
        }
        "@
        
        # Preview form definition data source.
        
        try {
            Show-BetaPreviewDataSource -FormDefinitionID $FormDefinitionID 
    
            # Below is a request that includes all optional parameters
            # Show-BetaPreviewDataSource -FormDefinitionID $FormDefinitionID -Limit $Limit -Filters $Filters -Query $Query -FormElementPreviewRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Show-BetaPreviewDataSource"
            Write-Host $_.ErrorDetails
        }
- path: /custom-password-instructions
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-password-instructions#create-custom-password-instructions
      source: |
        $CustomPasswordInstruction = @"
        {
          "pageContent" : "Please enter a new password. Your password must be at least 8 characters long and contain at least one number and one letter.",
          "pageId" : "change-password:enter-password",
          "locale" : "en"
        }
        "@
        
        # Create custom password instructions
        
        try {
            $Result = ConvertFrom-JsonToCustomPasswordInstruction -Json $CustomPasswordInstruction
            New-BetaCustomPasswordInstructions -CustomPasswordInstruction $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaCustomPasswordInstructions -CustomPasswordInstruction $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaCustomPasswordInstructions"
            Write-Host $_.ErrorDetails
        }
- path: /custom-password-instructions/{pageId}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-password-instructions#delete-custom-password-instructions
      source: |
        $PageId = "change-password:enter-password" # String | The page ID of custom password instructions to delete.
        $Locale = "MyLocale" # String | The locale for the custom instructions, a BCP47 language tag. The default value is \""default\"". (optional)
        
        # Delete custom password instructions by page id
        
        try {
            Remove-BetaCustomPasswordInstructions -PageId $PageId 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaCustomPasswordInstructions -PageId $PageId -Locale $Locale   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaCustomPasswordInstructions"
            Write-Host $_.ErrorDetails
        }
- path: /custom-password-instructions/{pageId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/custom-password-instructions#get-custom-password-instructions
      source: |
        $PageId = "change-password:enter-password" # String | The page ID of custom password instructions to query.
        $Locale = "MyLocale" # String | The locale for the custom instructions, a BCP47 language tag. The default value is \""default\"". (optional)
        
        # Get custom password instructions by page id
        
        try {
            Get-BetaCustomPasswordInstructions -PageId $PageId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCustomPasswordInstructions -PageId $PageId -Locale $Locale   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCustomPasswordInstructions"
            Write-Host $_.ErrorDetails
        }
- path: /entitlements/{id}/access-model-metadata/{attributeKey}/values/{attributeValue}
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/entitlements#create-access-model-metadata-for-entitlement
      source: |
        $Id = "2c91808c74ff913f0175097daa9d59cd" # String | The entitlement id.
        $AttributeKey = "iscPrivacy" # String | Technical name of the Attribute.
        $AttributeValue = "public" # String | Technical name of the Attribute Value.
        
        # Add metadata to an entitlement.
        
        try {
            New-BetaAccessModelMetadataForEntitlement -Id $Id -AttributeKey $AttributeKey -AttributeValue $AttributeValue 
    
            # Below is a request that includes all optional parameters
            # New-BetaAccessModelMetadataForEntitlement -Id $Id -AttributeKey $AttributeKey -AttributeValue $AttributeValue   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaAccessModelMetadataForEntitlement"
            Write-Host $_.ErrorDetails
        }
- path: /entitlements/{id}/access-model-metadata/{attributeKey}/values/{attributeValue}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/entitlements#delete-access-model-metadata-from-entitlement
      source: |
        $Id = "2c91808c74ff913f0175097daa9d59cd" # String | The entitlement id.
        $AttributeKey = "iscPrivacy" # String | Technical name of the Attribute.
        $AttributeValue = "public" # String | Technical name of the Attribute Value.
        
        # Remove metadata from an entitlement.
        
        try {
            Remove-BetaAccessModelMetadataFromEntitlement -Id $Id -AttributeKey $AttributeKey -AttributeValue $AttributeValue 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaAccessModelMetadataFromEntitlement -Id $Id -AttributeKey $AttributeKey -AttributeValue $AttributeValue   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaAccessModelMetadataFromEntitlement"
            Write-Host $_.ErrorDetails
        }
- path: /entitlements/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/entitlements#get-entitlement
      source: |
        $Id = "2c91808874ff91550175097daaec161c" # String | The entitlement ID
        
        # Get an entitlement
        
        try {
            Get-BetaEntitlement -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaEntitlement -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaEntitlement"
            Write-Host $_.ErrorDetails
        }
- path: /entitlements/{id}/entitlement-request-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/entitlements#get-entitlement-request-config
      source: |
        $Id = "2c91808874ff91550175097daaec161c" # String | Entitlement Id
        
        # Get entitlement request config
        
        try {
            Get-BetaEntitlementRequestConfig -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaEntitlementRequestConfig -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaEntitlementRequestConfig"
            Write-Host $_.ErrorDetails
        }
- path: /entitlements/aggregate/sources/{id}
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/entitlements#import-entitlements-by-source
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | Source Id
        $CsvFile =  # System.IO.FileInfo | The CSV file containing the source entitlements to aggregate. (optional)
        
        # Aggregate entitlements
        
        try {
            Import-BetaEntitlementsBySource -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Import-BetaEntitlementsBySource -Id $Id -CsvFile $CsvFile   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Import-BetaEntitlementsBySource"
            Write-Host $_.ErrorDetails
        }
- path: /entitlements/{id}/children
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/entitlements#list-entitlement-children
      source: |
        $Id = "2c91808874ff91550175097daaec161c" # String | Entitlement Id
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, type, attribute, value, source.id** (optional)
        $Filters = "attribute eq "memberOf"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw*  **type**: *eq, in*  **attribute**: *eq, in*  **value**: *eq, in, sw*  **source.id**: *eq, in*  **requestable**: *eq*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le* (optional)
        
        # List of entitlements children
        
        try {
            Get-BetaEntitlementChildren -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaEntitlementChildren -Id $Id -Limit $Limit -Offset $Offset -Count $Count -Sorters $Sorters -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaEntitlementChildren"
            Write-Host $_.ErrorDetails
        }
- path: /entitlements/{id}/parents
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/entitlements#list-entitlement-parents
      source: |
        $Id = "2c91808c74ff913f0175097daa9d59cd" # String | Entitlement Id
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, type, attribute, value, source.id** (optional)
        $Filters = "attribute eq "memberOf"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw*  **type**: *eq, in*  **attribute**: *eq, in*  **value**: *eq, in, sw*  **source.id**: *eq, in*  **requestable**: *eq*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le* (optional)
        
        # List of entitlements parents
        
        try {
            Get-BetaEntitlementParents -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaEntitlementParents -Id $Id -Limit $Limit -Offset $Offset -Count $Count -Sorters $Sorters -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaEntitlementParents"
            Write-Host $_.ErrorDetails
        }
- path: /entitlements
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/entitlements#list-entitlements
      source: |
        $AccountId = "ef38f94347e94562b5bb8424a56397d8" # String | The account ID. If specified, returns only entitlements associated with the given Account. Cannot be specified with the **filters**, **segmented-for-identity**, **for-segment-ids**, or **include-unsegmented** param(s). This parameter is deprecated. Please use [Account Entitlements API](https://developer.sailpoint.com/apis/beta/#operation/getAccountEntitlements) to get account entitlements. (optional)
        $SegmentedForIdentity = "e554098913544630b5985e9042f5e44b" # String | If present and not empty, additionally filters Entitlements to those which are assigned to the Segment(s) which are visible to the Identity with the specified ID.  Cannot be specified with the **account-id** or **for-segment-ids** param(s). It is also illegal to specify a value that refers to a different user's Identity. (optional)
        $ForSegmentIds = "041727d4-7d95-4779-b891-93cf41e98249,a378c9fa-bae5-494c-804e-a1e30f69f649" # String | If present and not empty, additionally filters Access Profiles to those which are assigned to the Segment(s) with the specified IDs. Cannot be specified with the **account-id** or **segmented-for-identity** param(s). (optional)
        $IncludeUnsegmented = $true # Boolean | Whether or not the response list should contain unsegmented Entitlements. If **for-segment-ids** and **segmented-for-identity** are both absent or empty, specifying **include-unsegmented=false** results in an error. (optional) (default to $true)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, type, attribute, value, source.id, requestable** (optional)
        $Filters = "attribute eq "memberOf"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw*  **type**: *eq, in*  **attribute**: *eq, in*  **value**: *eq, in, sw*  **source.id**: *eq, in*  **requestable**: *eq*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in* (optional)
        
        # Gets a list of entitlements.
        
        try {
            Get-BetaEntitlements 
    
            # Below is a request that includes all optional parameters
            # Get-BetaEntitlements -AccountId $AccountId -SegmentedForIdentity $SegmentedForIdentity -ForSegmentIds $ForSegmentIds -IncludeUnsegmented $IncludeUnsegmented -Offset $Offset -Limit $Limit -Count $Count -Sorters $Sorters -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaEntitlements"
            Write-Host $_.ErrorDetails
        }
- path: /entitlements/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/entitlements#patch-entitlement
      source: |
        $Id = "2c91808a7813090a017814121e121518" # String | ID of the entitlement to patch
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch an entitlement
        
        try {
            Update-BetaEntitlement -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Update-BetaEntitlement -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaEntitlement"
            Write-Host $_.ErrorDetails
        }
- path: /entitlements/{id}/entitlement-request-config
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/entitlements#put-entitlement-request-config
      source: |
        $Id = "2c91808a7813090a017814121e121518" # String | Entitlement ID
        $EntitlementRequestConfig = @"
        {
          "accessRequestConfig" : {
            "denialCommentRequired" : false,
            "approvalSchemes" : [ {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            } ],
            "reauthorizationRequired" : false,
            "requestCommentRequired" : true
          },
          "revocationRequestConfig" : {
            "approvalSchemes" : [ {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            } ]
          }
        }
        "@
        
        # Replace entitlement request config
        
        try {
            $Result = ConvertFrom-JsonToEntitlementRequestConfig -Json $EntitlementRequestConfig
            Send-BetaEntitlementRequestConfig -Id $Id -EntitlementRequestConfig $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaEntitlementRequestConfig -Id $Id -EntitlementRequestConfig $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaEntitlementRequestConfig"
            Write-Host $_.ErrorDetails
        }
- path: /entitlements/reset/sources/{sourceId}
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/entitlements#reset-source-entitlements
      source: |
        $SourceId = "2c91808a7813090a017814121919ecca" # String | ID of source for the entitlement reset
        
        # Reset source entitlements
        
        try {
            Reset-BetaSourceEntitlements -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Reset-BetaSourceEntitlements -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Reset-BetaSourceEntitlements"
            Write-Host $_.ErrorDetails
        }
- path: /entitlements/bulk-update
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/entitlements#update-entitlements-in-bulk
      source: |
        $EntitlementBulkUpdateRequest = @"
        {
          "entitlementIds" : [ "2c91808a7624751a01762f19d665220d", "2c91808a7624751a01762f19d67c220e", "2c91808a7624751a01762f19d692220f" ],
          "jsonPatch" : [ {
            "op" : "replace",
            "path" : "/privileged",
            "value" : false
          }, {
            "op" : "replace",
            "path" : "/requestable",
            "value" : false
          } ]
        }
        "@
        
        # Bulk update an entitlement list
        
        try {
            $Result = ConvertFrom-JsonToEntitlementBulkUpdateRequest -Json $EntitlementBulkUpdateRequest
            Update-BetaEntitlementsInBulk -EntitlementBulkUpdateRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaEntitlementsInBulk -EntitlementBulkUpdateRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaEntitlementsInBulk"
            Write-Host $_.ErrorDetails
        }
- path: /workgroups
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/governance-groups#create-workgroup
      source: |
        $WorkgroupDto = @"
        {
          "owner" : {
            "emailAddress" : "support@sailpoint.com",
            "displayName" : "Support",
            "name" : "Support",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          },
          "connectionCount" : 1641498673000,
          "created" : "2022-01-06T19:51:13Z",
          "memberCount" : 1641498673000,
          "name" : "DB Access Governance Group",
          "description" : "Description of the Governance Group",
          "modified" : "2022-01-06T19:51:13Z",
          "id" : "2c91808568c529c60168cca6f90c1313"
        }
        "@
        
        # Create a new governance group.
        
        try {
            $Result = ConvertFrom-JsonToWorkgroupDto -Json $WorkgroupDto
            New-BetaWorkgroup -WorkgroupDto $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaWorkgroup -WorkgroupDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaWorkgroup"
            Write-Host $_.ErrorDetails
        }
- path: /workgroups/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/governance-groups#delete-workgroup
      source: |
        $Id = "2c9180837ca6693d017ca8d097500149" # String | ID of the Governance Group
        
        # Delete a governance group
        
        try {
            Remove-BetaWorkgroup -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaWorkgroup -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaWorkgroup"
            Write-Host $_.ErrorDetails
        }
- path: /workgroups/{workgroupId}/members/bulk-delete
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/governance-groups#delete-workgroup-members
      source: |
        $WorkgroupId = "2c91808a7813090a017814121919ecca" # String | ID of the Governance Group.
        $BulkWorkgroupMembersRequestInner = @""@ 
        
        
        # Remove members from governance group
        
        try {
            $Result = ConvertFrom-JsonToBulkWorkgroupMembersRequestInner -Json $BulkWorkgroupMembersRequestInner
            Remove-BetaWorkgroupMembers -WorkgroupId $WorkgroupId -BulkWorkgroupMembersRequestInner $Result 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaWorkgroupMembers -WorkgroupId $WorkgroupId -BulkWorkgroupMembersRequestInner $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaWorkgroupMembers"
            Write-Host $_.ErrorDetails
        }
- path: /workgroups/bulk-delete
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/governance-groups#delete-workgroups-in-bulk
      source: |
        $WorkgroupBulkDeleteRequest = @"
        {
          "ids" : [ "567a697e-885b-495a-afc5-d55e1c23a302", "c7b0f7b2-1e78-4063-b294-a555333dacd2" ]
        }
        "@
        
        # Delete governance group(s)
        
        try {
            $Result = ConvertFrom-JsonToWorkgroupBulkDeleteRequest -Json $WorkgroupBulkDeleteRequest
            Remove-BetaWorkgroupsInBulk -WorkgroupBulkDeleteRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaWorkgroupsInBulk -WorkgroupBulkDeleteRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaWorkgroupsInBulk"
            Write-Host $_.ErrorDetails
        }
- path: /workgroups/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/governance-groups#get-workgroup
      source: |
        $Id = "2c9180837ca6693d017ca8d097500149" # String | ID of the Governance Group
        
        # Get governance group by id
        
        try {
            Get-BetaWorkgroup -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkgroup -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkgroup"
            Write-Host $_.ErrorDetails
        }
- path: /workgroups/{workgroupId}/connections
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/governance-groups#list-connections
      source: |
        $WorkgroupId = "2c91808a7813090a017814121919ecca" # String | ID of the Governance Group.
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 50 # Int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional)
        
        # List connections for governance group
        
        try {
            Get-BetaConnections -WorkgroupId $WorkgroupId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaConnections -WorkgroupId $WorkgroupId -Offset $Offset -Limit $Limit -Count $Count -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaConnections"
            Write-Host $_.ErrorDetails
        }
- path: /workgroups/{workgroupId}/members
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/governance-groups#list-workgroup-members
      source: |
        $WorkgroupId = "2c91808a7813090a017814121919ecca" # String | ID of the Governance Group.
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 50 # Int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional)
        
        # List governance group members
        
        try {
            Get-BetaWorkgroupMembers -WorkgroupId $WorkgroupId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkgroupMembers -WorkgroupId $WorkgroupId -Offset $Offset -Limit $Limit -Count $Count -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkgroupMembers"
            Write-Host $_.ErrorDetails
        }
- path: /workgroups
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/governance-groups#list-workgroups
      source: |
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 50 # Int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "name sw "Test"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in, sw*  **name**: *eq, sw, in*  **memberships.identityId**: *eq, in* (optional)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified, id, description** (optional)
        
        # List governance groups
        
        try {
            Get-BetaWorkgroups 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkgroups -Offset $Offset -Limit $Limit -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkgroups"
            Write-Host $_.ErrorDetails
        }
- path: /workgroups/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/governance-groups#patch-workgroup
      source: |
        $Id = "2c9180837ca6693d017ca8d097500149" # String | ID of the Governance Group
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch a governance group
        
        try {
            Update-BetaWorkgroup -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Update-BetaWorkgroup -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaWorkgroup"
            Write-Host $_.ErrorDetails
        }
- path: /workgroups/{workgroupId}/members/bulk-add
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/governance-groups#update-workgroup-members
      source: |
        $WorkgroupId = "2c91808a7813090a017814121919ecca" # String | ID of the Governance Group.
        $BulkWorkgroupMembersRequestInner = @""@ 
        
        
        # Add members to governance group
        
        try {
            $Result = ConvertFrom-JsonToBulkWorkgroupMembersRequestInner -Json $BulkWorkgroupMembersRequestInner
            Update-BetaWorkgroupMembers -WorkgroupId $WorkgroupId -BulkWorkgroupMembersRequestInner $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaWorkgroupMembers -WorkgroupId $WorkgroupId -BulkWorkgroupMembersRequestInner $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaWorkgroupMembers"
            Write-Host $_.ErrorDetails
        }
- path: /ai-access-request-recommendations/ignored-items
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-access-request-recommendations#add-access-request-recommendations-ignored-item
      source: |
        $AccessRequestRecommendationActionItemDto = @"
        {
          "access" : {
            "id" : "2c9180835d2e5168015d32f890ca1581",
            "type" : "ACCESS_PROFILE"
          },
          "identityId" : "2c91808570313110017040b06f344ec9"
        }
        "@
        
        # Ignore access request recommendation
        
        try {
            $Result = ConvertFrom-JsonToAccessRequestRecommendationActionItemDto -Json $AccessRequestRecommendationActionItemDto
            Add-BetaAccessRequestRecommendationsIgnoredItem -AccessRequestRecommendationActionItemDto $Result 
    
            # Below is a request that includes all optional parameters
            # Add-BetaAccessRequestRecommendationsIgnoredItem -AccessRequestRecommendationActionItemDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Add-BetaAccessRequestRecommendationsIgnoredItem"
            Write-Host $_.ErrorDetails
        }
- path: /ai-access-request-recommendations/requested-items
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-access-request-recommendations#add-access-request-recommendations-requested-item
      source: |
        $AccessRequestRecommendationActionItemDto = @"
        {
          "access" : {
            "id" : "2c9180835d2e5168015d32f890ca1581",
            "type" : "ACCESS_PROFILE"
          },
          "identityId" : "2c91808570313110017040b06f344ec9"
        }
        "@
        
        # Accept access request recommendation
        
        try {
            $Result = ConvertFrom-JsonToAccessRequestRecommendationActionItemDto -Json $AccessRequestRecommendationActionItemDto
            Add-BetaAccessRequestRecommendationsRequestedItem -AccessRequestRecommendationActionItemDto $Result 
    
            # Below is a request that includes all optional parameters
            # Add-BetaAccessRequestRecommendationsRequestedItem -AccessRequestRecommendationActionItemDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Add-BetaAccessRequestRecommendationsRequestedItem"
            Write-Host $_.ErrorDetails
        }
- path: /ai-access-request-recommendations/viewed-items
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-access-request-recommendations#add-access-request-recommendations-viewed-item
      source: |
        $AccessRequestRecommendationActionItemDto = @"
        {
          "access" : {
            "id" : "2c9180835d2e5168015d32f890ca1581",
            "type" : "ACCESS_PROFILE"
          },
          "identityId" : "2c91808570313110017040b06f344ec9"
        }
        "@
        
        # Mark viewed access request recommendations
        
        try {
            $Result = ConvertFrom-JsonToAccessRequestRecommendationActionItemDto -Json $AccessRequestRecommendationActionItemDto
            Add-BetaAccessRequestRecommendationsViewedItem -AccessRequestRecommendationActionItemDto $Result 
    
            # Below is a request that includes all optional parameters
            # Add-BetaAccessRequestRecommendationsViewedItem -AccessRequestRecommendationActionItemDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Add-BetaAccessRequestRecommendationsViewedItem"
            Write-Host $_.ErrorDetails
        }
- path: /ai-access-request-recommendations/viewed-items/bulk-create
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-access-request-recommendations#add-access-request-recommendations-viewed-items
      source: |
        $AccessRequestRecommendationActionItemDto = @"{
          "access" : {
            "id" : "2c9180835d2e5168015d32f890ca1581",
            "type" : "ACCESS_PROFILE"
          },
          "identityId" : "2c91808570313110017040b06f344ec9"
        }"@ 
        
        
        # Bulk mark viewed access request recommendations
        
        try {
            $Result = ConvertFrom-JsonToAccessRequestRecommendationActionItemDto -Json $AccessRequestRecommendationActionItemDto
            Add-BetaAccessRequestRecommendationsViewedItems -AccessRequestRecommendationActionItemDto $Result 
    
            # Below is a request that includes all optional parameters
            # Add-BetaAccessRequestRecommendationsViewedItems -AccessRequestRecommendationActionItemDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Add-BetaAccessRequestRecommendationsViewedItems"
            Write-Host $_.ErrorDetails
        }
- path: /ai-access-request-recommendations
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-access-request-recommendations#get-access-request-recommendations
      source: |
        $IdentityId = "2c91808570313110017040b06f344ec9" # String | Get access request recommendations for an identityId. *me* indicates the current user. (optional) (default to "me")
        $Limit = 15 # Int32 | Max number of results to return. (optional) (default to 15)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $IncludeTranslationMessages = $false # Boolean | If *true* it will populate a list of translation messages in the response. (optional) (default to $false)
        $Filters = "access.name co "admin"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **access.name**: *co*  **access.type**: *eq, in*  **access.description**: *co, eq, in* (optional)
        $Sorters = "access.name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.name, access.type**  By default the recommendations are sorted by highest confidence first. (optional)
        
        # Identity access request recommendations
        
        try {
            Get-BetaAccessRequestRecommendations 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessRequestRecommendations -IdentityId $IdentityId -Limit $Limit -Offset $Offset -Count $Count -IncludeTranslationMessages $IncludeTranslationMessages -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessRequestRecommendations"
            Write-Host $_.ErrorDetails
        }
- path: /ai-access-request-recommendations/ignored-items
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-access-request-recommendations#get-access-request-recommendations-ignored-items
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "identityId eq "2c9180846b0a0583016b299f210c1314"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **access.id**: *eq, in*  **access.type**: *eq, in*  **identityId**: *eq, in* (optional)
        $Sorters = "access.id" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.id, access.type, identityId, timestamp** (optional)
        
        # List ignored access request recommendations
        
        try {
            Get-BetaAccessRequestRecommendationsIgnoredItems 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessRequestRecommendationsIgnoredItems -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessRequestRecommendationsIgnoredItems"
            Write-Host $_.ErrorDetails
        }
- path: /ai-access-request-recommendations/requested-items
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-access-request-recommendations#get-access-request-recommendations-requested-items
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "access.id eq "2c9180846b0a0583016b299f210c1314"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **access.id**: *eq, in*  **access.type**: *eq, in*  **identityId**: *eq, in* (optional)
        $Sorters = "access.id" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.id, access.type, identityId, timestamp** (optional)
        
        # List accepted access request recommendations
        
        try {
            Get-BetaAccessRequestRecommendationsRequestedItems 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessRequestRecommendationsRequestedItems -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessRequestRecommendationsRequestedItems"
            Write-Host $_.ErrorDetails
        }
- path: /ai-access-request-recommendations/viewed-items
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-access-request-recommendations#get-access-request-recommendations-viewed-items
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "access.id eq "2c9180846b0a0583016b299f210c1314"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **access.id**: *eq, in*  **access.type**: *eq, in*  **identityId**: *eq, in* (optional)
        $Sorters = "access.id" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.id, access.type, identityId, timestamp** (optional)
        
        # List viewed access request recommendations
        
        try {
            Get-BetaAccessRequestRecommendationsViewedItems 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAccessRequestRecommendationsViewedItems -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAccessRequestRecommendationsViewedItems"
            Write-Host $_.ErrorDetails
        }
- path: /common-access
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-common-access#create-common-access
      source: |
        $CommonAccessItemRequest = @"
        {
          "access" : {
            "ownerName" : "ownerName",
            "name" : "name",
            "description" : "description",
            "id" : "id",
            "type" : "ACCESS_PROFILE",
            "ownerId" : "ownerId"
          },
          "status" : "CONFIRMED"
        }
        "@
        
        # Create common access items
        
        try {
            $Result = ConvertFrom-JsonToCommonAccessItemRequest -Json $CommonAccessItemRequest
            New-BetaCommonAccess -CommonAccessItemRequest $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaCommonAccess -CommonAccessItemRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaCommonAccess"
            Write-Host $_.ErrorDetails
        }
- path: /common-access
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-common-access#get-common-access
      source: |
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "access.type eq "ROLE"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **status**: *eq, sw*  **reviewedByUser** *eq*  **access.id**: *eq, sw*  **access.type**: *eq*  **access.name**: *sw, eq*  **access.description**: *sw, eq* (optional)
        $Sorters = "access.name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **access.name, status**  By default the common access items are sorted by name, ascending. (optional)
        
        # Get a paginated list of common access
        
        try {
            Get-BetaCommonAccess 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCommonAccess -Offset $Offset -Limit $Limit -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCommonAccess"
            Write-Host $_.ErrorDetails
        }
- path: /common-access/update-status
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-common-access#update-common-access-status-in-bulk
      source: |
        $CommonAccessIDStatus = @"{
          "confirmedIds" : [ "046b6c7f-0b8a-43b9-b35d-6489e6daee91", "046b6c7f-0b8a-43b9-b35d-6489e6daee91" ],
          "deniedIds" : [ "046b6c7f-0b8a-43b9-b35d-6489e6daee91", "046b6c7f-0b8a-43b9-b35d-6489e6daee91" ]
        }"@ 
        
        
        # Bulk update common access status
        
        try {
            $Result = ConvertFrom-JsonToCommonAccessIDStatus -Json $CommonAccessIDStatus
            Update-BetaCommonAccessStatusInBulk -CommonAccessIDStatus $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaCommonAccessStatusInBulk -CommonAccessIDStatus $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaCommonAccessStatusInBulk"
            Write-Host $_.ErrorDetails
        }
- path: /translation-catalogs/{catalog-id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-message-catalogs#get-message-catalogs
      source: |
        $CatalogId = "recommender" # String | The ID of the message catalog.
        
        # Get message catalogs
        
        try {
            Get-BetaMessageCatalogs -CatalogId $CatalogId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaMessageCatalogs -CatalogId $CatalogId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaMessageCatalogs"
            Write-Host $_.ErrorDetails
        }
- path: /outliers/export
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-outliers#export-outliers-zip
      source: |
        $Type = "LOW_SIMILARITY" # String | Type of the identity outliers snapshot to filter on (optional)
        
        # Iai identity outliers export
        
        try {
            Export-BetaOutliersZip 
    
            # Below is a request that includes all optional parameters
            # Export-BetaOutliersZip -Type $Type   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Export-BetaOutliersZip"
            Write-Host $_.ErrorDetails
        }
- path: /outlier-summaries
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-outliers#get-identity-outlier-snapshots
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Type = "LOW_SIMILARITY" # String | Type of the identity outliers snapshot to filter on (optional)
        $Filters = "snapshotDate ge "2022-02-07T20:13:29.356648026Z"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **snapshotDate**: *ge, le* (optional)
        $Sorters = "snapshotDate" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **snapshotDate** (optional)
        
        # Iai identity outliers summary
        
        try {
            Get-BetaIdentityOutlierSnapshots 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentityOutlierSnapshots -Limit $Limit -Offset $Offset -Type $Type -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityOutlierSnapshots"
            Write-Host $_.ErrorDetails
        }
- path: /outliers
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-outliers#get-identity-outliers
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Type = "LOW_SIMILARITY" # String | Type of the identity outliers snapshot to filter on (optional)
        $Filters = "attributes.displayName sw "John" and certStatus eq "false"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **attributes**: *eq, sw, co, in*  **firstDetectionDate**: *ge, le*  **certStatus**: *eq*  **ignored**: *eq*  **score**: *ge, le* (optional)
        $Sorters = "attributes.displayName,firstDetectionDate,-score" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **firstDetectionDate, attributes, score** (optional)
        
        # Iai get identity outliers
        
        try {
            Get-BetaIdentityOutliers 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentityOutliers -Limit $Limit -Offset $Offset -Count $Count -Type $Type -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityOutliers"
            Write-Host $_.ErrorDetails
        }
- path: /outlier-summaries/latest
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-outliers#get-latest-identity-outlier-snapshots
      source: |
        $Type = "LOW_SIMILARITY" # String | Type of the identity outliers snapshot to filter on (optional)
        
        # Iai identity outliers latest summary
        
        try {
            Get-BetaLatestIdentityOutlierSnapshots 
    
            # Below is a request that includes all optional parameters
            # Get-BetaLatestIdentityOutlierSnapshots -Type $Type   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaLatestIdentityOutlierSnapshots"
            Write-Host $_.ErrorDetails
        }
- path: /outlier-feature-summaries/{outlierFeatureId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-outliers#get-outlier-contributing-feature-summary
      source: |
        $OutlierFeatureId = "04654b66-7561-4090-94f9-abee0722a1af" # String | Contributing feature id
        
        # Get identity outlier contibuting feature summary
        
        try {
            Get-BetaOutlierContributingFeatureSummary -OutlierFeatureId $OutlierFeatureId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaOutlierContributingFeatureSummary -OutlierFeatureId $OutlierFeatureId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaOutlierContributingFeatureSummary"
            Write-Host $_.ErrorDetails
        }
- path: /outliers/{outlierId}/contributing-features
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-outliers#get-peer-group-outliers-contributing-features
      source: |
        $OutlierId = "2c918085842e69ae018432d22ccb212f" # String | The outlier id
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $IncludeTranslationMessages = "include-translation-messages=" # String | Whether or not to include translation messages object in returned response (optional)
        $Sorters = "importance" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **importance** (optional)
        
        # Get identity outlier's contibuting features
        
        try {
            Get-BetaPeerGroupOutliersContributingFeatures -OutlierId $OutlierId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPeerGroupOutliersContributingFeatures -OutlierId $OutlierId -Limit $Limit -Offset $Offset -Count $Count -IncludeTranslationMessages $IncludeTranslationMessages -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPeerGroupOutliersContributingFeatures"
            Write-Host $_.ErrorDetails
        }
- path: /outliers/ignore
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-outliers#ignore-identity-outliers
      source: |
        $RequestBody = "MyRequestBody" # String[] | 
        $RequestBody = @""@ 
        
        
        # Iai identity outliers ignore
        
        try {
            $Result = ConvertFrom-JsonToRequestBody -Json $RequestBody
            Invoke-BetaIgnoreIdentityOutliers -RequestBody $Result 
    
            # Below is a request that includes all optional parameters
            # Invoke-BetaIgnoreIdentityOutliers -RequestBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Invoke-BetaIgnoreIdentityOutliers"
            Write-Host $_.ErrorDetails
        }
- path: /outliers/{outlierId}/feature-details/{contributingFeatureName}/access-items
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-outliers#list-outliers-contributing-feature-access-items
      source: |
        $OutlierId = "2c918085842e69ae018432d22ccb212f" # String | The outlier id
        $ContributingFeatureName = "radical_entitlement_count" # String | The name of contributing feature
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $AccessType = "ENTITLEMENT" # String | The type of access item for the identity outlier contributing feature. If not provided, it returns all. (optional)
        $Sorters = "displayName" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **displayName** (optional)
        
        # Gets a list of access items associated with each identity outlier contributing feature
        
        try {
            Get-BetaOutliersContributingFeatureAccessItems -OutlierId $OutlierId -ContributingFeatureName $ContributingFeatureName 
    
            # Below is a request that includes all optional parameters
            # Get-BetaOutliersContributingFeatureAccessItems -OutlierId $OutlierId -ContributingFeatureName $ContributingFeatureName -Limit $Limit -Offset $Offset -Count $Count -AccessType $AccessType -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaOutliersContributingFeatureAccessItems"
            Write-Host $_.ErrorDetails
        }
- path: /outliers/unignore
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-outliers#un-ignore-identity-outliers
      source: |
        $RequestBody = "MyRequestBody" # String[] | 
        $RequestBody = @""@ 
        
        
        # Iai identity outliers unignore
        
        try {
            $Result = ConvertFrom-JsonToRequestBody -Json $RequestBody
            Invoke-BetaUnIgnoreIdentityOutliers -RequestBody $Result 
    
            # Below is a request that includes all optional parameters
            # Invoke-BetaUnIgnoreIdentityOutliers -RequestBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Invoke-BetaUnIgnoreIdentityOutliers"
            Write-Host $_.ErrorDetails
        }
- path: /peer-group-strategies/{strategy}/identity-outliers
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-peer-group-strategies#get-peer-group-outliers
      source: |
        $Strategy = "entitlement" # String | The strategy used to create peer groups. Currently, 'entitlement' is supported.
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Identity outliers list
        
        try {
            Get-BetaPeerGroupOutliers -Strategy $Strategy 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPeerGroupOutliers -Strategy $Strategy -Limit $Limit -Offset $Offset -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPeerGroupOutliers"
            Write-Host $_.ErrorDetails
        }
- path: /recommendations/request
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-recommendations#get-recommendations
      source: |
        $RecommendationRequestDto = @"
        {
          "prescribeMode" : false,
          "excludeInterpretations" : false,
          "requests" : [ {
            "item" : {
              "id" : "2c938083633d259901633d2623ec0375",
              "type" : "ENTITLEMENT"
            },
            "identityId" : "2c938083633d259901633d25c68c00fa"
          }, {
            "item" : {
              "id" : "2c938083633d259901633d2623ec0375",
              "type" : "ENTITLEMENT"
            },
            "identityId" : "2c938083633d259901633d25c68c00fa"
          } ],
          "includeTranslationMessages" : false,
          "includeDebugInformation" : true
        }
        "@
        
        # Returns recommendation based on object
        
        try {
            $Result = ConvertFrom-JsonToRecommendationRequestDto -Json $RecommendationRequestDto
            Get-BetaRecommendations -RecommendationRequestDto $Result 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRecommendations -RecommendationRequestDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRecommendations"
            Write-Host $_.ErrorDetails
        }
- path: /recommendations/config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-recommendations#get-recommendations-config
      source: |
        
        # Get certification recommendation config values
        
        try {
            Get-BetaRecommendationsConfig 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRecommendationsConfig   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRecommendationsConfig"
            Write-Host $_.ErrorDetails
        }
- path: /recommendations/config
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-recommendations#update-recommendations-config
      source: |
        $RecommendationConfigDto = @"
        {
          "recommenderFeatures" : [ "jobTitle", "location", "peer_group", "department", "active" ],
          "peerGroupPercentageThreshold" : 0.5,
          "runAutoSelectOnce" : false,
          "onlyTuneThreshold" : false
        }
        "@
        
        # Update certification recommendation config values
        
        try {
            $Result = ConvertFrom-JsonToRecommendationConfigDto -Json $RecommendationConfigDto
            Update-BetaRecommendationsConfig -RecommendationConfigDto $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaRecommendationsConfig -RecommendationConfigDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaRecommendationsConfig"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/provision
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#create-potential-role-provision-request
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | A potential role id in a role mining session
        $MinEntitlementPopularity = 56 # Int32 | Minimum popularity required for an entitlement to be included in the provisioned role. (optional) (default to 0)
        $IncludeCommonAccess = $true # Boolean | Boolean determining whether common access entitlements will be included in the provisioned role. (optional) (default to $true)
        $RoleMiningPotentialRoleProvisionRequest = @"
        {
          "includeIdentities" : true,
          "roleName" : "Finance - Accounting",
          "ownerId" : "2b568c65bc3c4c57a43bd97e3a8e41",
          "roleDescription" : "General access for accounting department",
          "directlyAssignedEntitlements" : false
        }
        "@
        
        # Create request to provision a potential role into an actual role.
        
        try {
            New-BetaPotentialRoleProvisionRequest -SessionId $SessionId -PotentialRoleId $PotentialRoleId 
    
            # Below is a request that includes all optional parameters
            # New-BetaPotentialRoleProvisionRequest -SessionId $SessionId -PotentialRoleId $PotentialRoleId -MinEntitlementPopularity $MinEntitlementPopularity -IncludeCommonAccess $IncludeCommonAccess -RoleMiningPotentialRoleProvisionRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaPotentialRoleProvisionRequest"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#create-role-mining-sessions
      source: |
        $RoleMiningSessionDto = @"
        {
          "emailRecipientId" : "2c918090761a5aac0176215c46a62d58",
          "prescribedPruneThreshold" : 10,
          "pruneThreshold" : 50,
          "saved" : true,
          "potentialRolesReadyCount" : 0,
          "scope" : {
            "identityIds" : [ "2c918090761a5aac0176215c46a62d58", "2c918090761a5aac01722015c46a62d42" ],
            "attributeFilterCriteria" : {
              "displayName" : {
                "untranslated" : "Location: Miami"
              },
              "ariaLabel" : {
                "untranslated" : "Location: Miami"
              },
              "data" : {
                "displayName" : {
                  "translateKey" : "IDN.IDENTITY_ATTRIBUTES.LOCATION"
                },
                "name" : "location",
                "operator" : "EQUALS",
                "values" : [ "Miami" ]
              }
            },
            "criteria" : "source.name:DataScienceDataset"
          },
          "potentialRoleCount" : 0,
          "name" : "Saved RM Session - 07/10",
          "minNumIdentitiesInPotentialRole" : 20,
          "identityCount" : 0,
          "type" : "SPECIALIZED"
        }
        "@
        
        # Create a role mining session
        
        try {
            $Result = ConvertFrom-JsonToRoleMiningSessionDto -Json $RoleMiningSessionDto
            New-BetaRoleMiningSessions -RoleMiningSessionDto $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaRoleMiningSessions -RoleMiningSessionDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaRoleMiningSessions"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async/{exportId}/download
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#download-role-mining-potential-role-zip
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "278359a6-04b7-4669-9468-924cf580964a" # String | A potential role id in a role mining session
        $ExportId = "4940ffd4-836f-48a3-b2b0-6d498c3fdf40" # String | The id of a previously run export job for this potential role
        
        # Export (download) details for a potential role in a role mining session
        
        try {
            Invoke-BetaDownloadRoleMiningPotentialRoleZip -SessionId $SessionId -PotentialRoleId $PotentialRoleId -ExportId $ExportId 
    
            # Below is a request that includes all optional parameters
            # Invoke-BetaDownloadRoleMiningPotentialRoleZip -SessionId $SessionId -PotentialRoleId $PotentialRoleId -ExportId $ExportId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Invoke-BetaDownloadRoleMiningPotentialRoleZip"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#export-role-mining-potential-role
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | A potential role id in a role mining session
        
        # Export (download) details for a potential role in a role mining session
        
        try {
            Export-BetaRoleMiningPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId 
    
            # Below is a request that includes all optional parameters
            # Export-BetaRoleMiningPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Export-BetaRoleMiningPotentialRole"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#export-role-mining-potential-role-async
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "278359a6-04b7-4669-9468-924cf580964a" # String | A potential role id in a role mining session
        $RoleMiningPotentialRoleExportRequest = @"
        {
          "minEntitlementPopularity" : 0,
          "includeCommonAccess" : true
        }
        "@
        
        # Asynchronously export details for a potential role in a role mining session and upload to s3
        
        try {
            Export-BetaRoleMiningPotentialRoleAsync -SessionId $SessionId -PotentialRoleId $PotentialRoleId 
    
            # Below is a request that includes all optional parameters
            # Export-BetaRoleMiningPotentialRoleAsync -SessionId $SessionId -PotentialRoleId $PotentialRoleId -RoleMiningPotentialRoleExportRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Export-BetaRoleMiningPotentialRoleAsync"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async/{exportId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#export-role-mining-potential-role-status
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "278359a6-04b7-4669-9468-924cf580964a" # String | A potential role id in a role mining session
        $ExportId = "4940ffd4-836f-48a3-b2b0-6d498c3fdf40" # String | The id of a previously run export job for this potential role
        
        # Retrieve status of a potential role export job
        
        try {
            Export-BetaRoleMiningPotentialRoleStatus -SessionId $SessionId -PotentialRoleId $PotentialRoleId -ExportId $ExportId 
    
            # Below is a request that includes all optional parameters
            # Export-BetaRoleMiningPotentialRoleStatus -SessionId $SessionId -PotentialRoleId $PotentialRoleId -ExportId $ExportId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Export-BetaRoleMiningPotentialRoleStatus"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-potential-roles
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-all-potential-role-summaries
      source: |
        $Sorters = "createdDate" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **createdDate, identityCount, entitlementCount, freshness, quality** (optional)
        $Filters = "(createdByName co "int") and (createdById sw "2c9180907") and (type eq "COMMON") and ((name co "entt") or (saved eq true))" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **createdById**: *eq, sw, co*  **createdByName**: *eq, sw, co*  **description**: *sw, co*  **endDate**: *le, lt*  **freshness**: *eq, ge, gt, le, lt*  **name**: *eq, sw, co, ge, gt, le, lt*  **quality**: *eq, ge, gt, le, lt*  **startDate**: *ge, gt*  **saved**: *eq*  **type**: *eq, ge, gt, le, lt*  **scopingMethod**: *eq*  **sessionState**: *eq*  **identityAttribute**: *co* (optional)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Retrieves all potential role summaries
        
        try {
            Get-BetaAllPotentialRoleSummaries 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAllPotentialRoleSummaries -Sorters $Sorters -Filters $Filters -Offset $Offset -Limit $Limit -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAllPotentialRoleSummaries"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/entitlement-popularity-distribution
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-entitlement-distribution-potential-role
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | A potential role id in a role mining session
        $IncludeCommonAccess = $true # Boolean | Boolean determining whether common access entitlements will be included or not (optional)
        
        # Retrieves entitlement popularity distribution for a potential role in a role mining session
        
        try {
            Get-BetaEntitlementDistributionPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaEntitlementDistributionPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId -IncludeCommonAccess $IncludeCommonAccess   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaEntitlementDistributionPotentialRole"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/entitlement-popularities
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-entitlements-potential-role
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | A potential role id in a role mining session
        $IncludeCommonAccess = $true # Boolean | Boolean determining whether common access entitlements will be included or not (optional) (default to $true)
        $Sorters = "popularity" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **popularity, entitlementName, applicationName**  The default sort is **popularity** in descending order.  (optional)
        $Filters = "applicationName sw "AD"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **applicationName**: *sw*  **entitlementRef.name**: *sw* (optional)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Retrieves entitlements for a potential role in a role mining session
        
        try {
            Get-BetaEntitlementsPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaEntitlementsPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId -IncludeCommonAccess $IncludeCommonAccess -Sorters $Sorters -Filters $Filters -Offset $Offset -Limit $Limit -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaEntitlementsPotentialRole"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/excluded-entitlements
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-excluded-entitlements-potential-role
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | A potential role id in a role mining session
        $Sorters = "populariity" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **popularity** (optional)
        $Filters = "applicationName sw "AD"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **applicationName**: *sw*  **entitlementRef.name**: *sw* (optional)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Retrieves excluded entitlements for a potential role in a role mining session
        
        try {
            Get-BetaExcludedEntitlementsPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaExcludedEntitlementsPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId -Sorters $Sorters -Filters $Filters -Offset $Offset -Limit $Limit -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaExcludedEntitlementsPotentialRole"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/identities
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-identities-potential-role
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | A potential role id in a role mining session
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional)
        $Filters = "MyFilters" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw* (optional)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Retrieves identities for a potential role in a role mining session
        
        try {
            Get-BetaIdentitiesPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentitiesPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId -Sorters $Sorters -Filters $Filters -Offset $Offset -Limit $Limit -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentitiesPotentialRole"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-potential-role
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | A potential role id in a role mining session
        
        # Retrieve potential role in session
        
        try {
            Get-BetaPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPotentialRole"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}/applications
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-potential-role-applications
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "62f28d91-7d9f-4d17-be15-666d5b41d77f" # String | A potential role id in a role mining session
        $Filters = "applicationName sw "test"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **applicationName**: *sw* (optional)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Retrieves the applications of a potential role for a role mining session
        
        try {
            Get-BetaPotentialRoleApplications -SessionId $SessionId -PotentialRoleId $PotentialRoleId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPotentialRoleApplications -SessionId $SessionId -PotentialRoleId $PotentialRoleId -Filters $Filters -Offset $Offset -Limit $Limit -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPotentialRoleApplications"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}/entitlements
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-potential-role-entitlements
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "62f28d91-7d9f-4d17-be15-666d5b41d77f" # String | A potential role id in a role mining session
        $Filters = "entitlementRef.name sw "test"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **entitlementRef.name**: *sw* (optional)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Retrieves the entitlements of a potential role for a role mining session
        
        try {
            Get-BetaPotentialRoleEntitlements -SessionId $SessionId -PotentialRoleId $PotentialRoleId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPotentialRoleEntitlements -SessionId $SessionId -PotentialRoleId $PotentialRoleId -Filters $Filters -Offset $Offset -Limit $Limit -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPotentialRoleEntitlements"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-potential-roles/{potentialRoleId}/sources/{sourceId}/identityUsage
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-potential-role-source-identity-usage
      source: |
        $PotentialRoleId = "e0cc5d7d-bf7f-4f81-b2af-8885b09d9923" # String | A potential role id
        $SourceId = "2c9180877620c1460176267f336a106f" # String | A source id
        $Sorters = "-usageCount" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters/) Sorting is supported for the following fields: **displayName, email, usageCount** (optional)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Retrieves potential role source usage
        
        try {
            Get-BetaPotentialRoleSourceIdentityUsage -PotentialRoleId $PotentialRoleId -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPotentialRoleSourceIdentityUsage -PotentialRoleId $PotentialRoleId -SourceId $SourceId -Sorters $Sorters -Offset $Offset -Limit $Limit -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPotentialRoleSourceIdentityUsage"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-role-summaries
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-potential-role-summaries
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $Sorters = "createdDate" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **createdDate** (optional)
        $Filters = "(createdByName co "int")and (createdById sw "2c9180907")and (type eq "COMMON")and ((name co "entt")or (saved eq true))" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **createdById**: *eq, sw, co*  **createdByName**: *eq, sw, co*  **description**: *sw, co*  **endDate**: *le, lt*  **freshness**: *eq, ge, gt, le, lt*  **name**: *eq, sw, co*  **quality**: *eq, ge, gt, le, lt*  **startDate**: *ge, gt*  **saved**: *eq*  **type**: *eq* (optional)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Retrieve session's potential role summaries
        
        try {
            Get-BetaPotentialRoleSummaries -SessionId $SessionId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPotentialRoleSummaries -SessionId $SessionId -Sorters $Sorters -Filters $Filters -Offset $Offset -Limit $Limit -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPotentialRoleSummaries"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-potential-roles/{potentialRoleId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-role-mining-potential-role
      source: |
        $PotentialRoleId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | A potential role id
        
        # Retrieves a specific potential role
        
        try {
            Get-BetaRoleMiningPotentialRole -PotentialRoleId $PotentialRoleId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleMiningPotentialRole -PotentialRoleId $PotentialRoleId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleMiningPotentialRole"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-role-mining-session
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id to be retrieved.
        
        # Get a role mining session
        
        try {
            Get-BetaRoleMiningSession -SessionId $SessionId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleMiningSession -SessionId $SessionId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleMiningSession"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/status
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-role-mining-session-status
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        
        # Get role mining session status state
        
        try {
            Get-BetaRoleMiningSessionStatus -SessionId $SessionId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleMiningSessionStatus -SessionId $SessionId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleMiningSessionStatus"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-role-mining-sessions
      source: |
        $Filters = "saved eq "true" and name sw "RM Session"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **saved**: *eq*  **name**: *eq, sw* (optional)
        $Sorters = "createdBy,createdDate" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **createdBy, createdDate** (optional)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Retrieves all role mining sessions
        
        try {
            Get-BetaRoleMiningSessions 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleMiningSessions -Filters $Filters -Sorters $Sorters -Offset $Offset -Limit $Limit -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleMiningSessions"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-potential-roles/saved
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#get-saved-potential-roles
      source: |
        $Sorters = "modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters/) Sorting is supported for the following fields: **modified** (optional)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Retrieves all saved potential roles
        
        try {
            Get-BetaSavedPotentialRoles 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSavedPotentialRoles -Sorters $Sorters -Offset $Offset -Limit $Limit -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSavedPotentialRoles"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#patch-potential-role
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The potential role summary id
        $PatchPotentialRoleRequestInner = @"[{op=remove, path=/description}, {op=replace, path=/description, value=Acct I - Potential Role}, {op=remove, path=/saved}, {op=replace, path=/saved, value=false}, {op=remove, path=/name}, {op=replace, path=/name, value=Potential Role Accounting}]"@ 
        
        
        # Update a potential role in session
        
        try {
            $Result = ConvertFrom-JsonToPatchPotentialRoleRequestInner -Json $PatchPotentialRoleRequestInner
            Update-BetaPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId -PatchPotentialRoleRequestInner $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId -PatchPotentialRoleRequestInner $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaPotentialRole"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-potential-roles/{potentialRoleId}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#patch-role-mining-potential-role
      source: |
        $PotentialRoleId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The potential role summary id
        $PatchPotentialRoleRequestInner = @"[{op=remove, path=/description}, {op=replace, path=/description, value=Acct I - Potential Role}, {op=remove, path=/saved}, {op=replace, path=/saved, value=false}, {op=remove, path=/name}, {op=replace, path=/name, value=Potential Role Accounting}]"@ 
        
        
        # Update a potential role
        
        try {
            $Result = ConvertFrom-JsonToPatchPotentialRoleRequestInner -Json $PatchPotentialRoleRequestInner
            Update-BetaRoleMiningPotentialRole -PotentialRoleId $PotentialRoleId -PatchPotentialRoleRequestInner $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaRoleMiningPotentialRole -PotentialRoleId $PotentialRoleId -PatchPotentialRoleRequestInner $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaRoleMiningPotentialRole"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#patch-role-mining-session
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id to be patched
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch a role mining session
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaRoleMiningSession -SessionId $SessionId -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaRoleMiningSession -SessionId $SessionId -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaRoleMiningSession"
            Write-Host $_.ErrorDetails
        }
- path: /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/edit-entitlements
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/iai-role-mining#update-entitlements-potential-role
      source: |
        $SessionId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role mining session id
        $PotentialRoleId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | A potential role id in a role mining session
        $RoleMiningPotentialRoleEditEntitlements = @"
        {
          "ids" : [ "entId1", "entId2" ],
          "exclude" : true
        }
        "@
        
        # Edit entitlements for a potential role to exclude some entitlements
        
        try {
            $Result = ConvertFrom-JsonToRoleMiningPotentialRoleEditEntitlements -Json $RoleMiningPotentialRoleEditEntitlements
            Update-BetaEntitlementsPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId -RoleMiningPotentialRoleEditEntitlements $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaEntitlementsPotentialRole -SessionId $SessionId -PotentialRoleId $PotentialRoleId -RoleMiningPotentialRoleEditEntitlements $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaEntitlementsPotentialRole"
            Write-Host $_.ErrorDetails
        }
- path: /icons/{objectType}/{objectId}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/icons#delete-icon
      source: |
        $ObjectType = "application" # String | Object type
        $ObjectId = "a291e870-48c3-4953-b656-fb5ce2a93169" # String | Object id.
        
        # Delete an icon
        
        try {
            Remove-BetaIcon -ObjectType $ObjectType -ObjectId $ObjectId 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaIcon -ObjectType $ObjectType -ObjectId $ObjectId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaIcon"
            Write-Host $_.ErrorDetails
        }
- path: /icons/{objectType}/{objectId}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/icons#set-icon
      source: |
        $ObjectType = "application" # String | Object type
        $ObjectId = "a291e870-48c3-4953-b656-fb5ce2a93169" # String | Object id.
        $Image =  # System.IO.FileInfo | file with icon. Allowed mime-types ['image/png', 'image/jpeg']
        
        # Update an icon
        
        try {
            Set-BetaIcon -ObjectType $ObjectType -ObjectId $ObjectId -Image $Image 
    
            # Below is a request that includes all optional parameters
            # Set-BetaIcon -ObjectType $ObjectType -ObjectId $ObjectId -Image $Image   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Set-BetaIcon"
            Write-Host $_.ErrorDetails
        }
- path: /identities/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identities#delete-identity
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | Identity Id
        
        # Delete identity
        
        try {
            Remove-BetaIdentity -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaIdentity -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaIdentity"
            Write-Host $_.ErrorDetails
        }
- path: /identities/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identities#get-identity
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | Identity Id
        
        # Identity details
        
        try {
            Get-BetaIdentity -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentity -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentity"
            Write-Host $_.ErrorDetails
        }
- path: /identities/{identityId}/ownership
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identities#get-identity-ownership-details
      source: |
        $IdentityId = "ff8081814d2a8036014d701f3fbf53fa" # String | Identity ID.
        
        # Get ownership details
        
        try {
            Get-BetaIdentityOwnershipDetails -IdentityId $IdentityId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentityOwnershipDetails -IdentityId $IdentityId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityOwnershipDetails"
            Write-Host $_.ErrorDetails
        }
- path: /identities/{identityId}/role-assignments/{assignmentId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identities#get-role-assignment
      source: |
        $IdentityId = "ef38f94347e94562b5bb8424a56397d8" # String | Identity Id
        $AssignmentId = "1cbb0705b38c4226b1334eadd8874086" # String | Assignment Id
        
        # Role assignment details
        
        try {
            Get-BetaRoleAssignment -IdentityId $IdentityId -AssignmentId $AssignmentId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleAssignment -IdentityId $IdentityId -AssignmentId $AssignmentId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleAssignment"
            Write-Host $_.ErrorDetails
        }
- path: /identities/{identityId}/role-assignments
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identities#get-role-assignments
      source: |
        $IdentityId = "ef38f94347e94562b5bb8424a56397d8" # String | Identity Id to get the role assignments for
        $RoleId = "e7697a1e96d04db1ac7b0f4544915d2c" # String | Role Id to filter the role assignments with (optional)
        $RoleName = "Engineer" # String | Role name to filter the role assignments with (optional)
        
        # List role assignments
        
        try {
            Get-BetaRoleAssignments -IdentityId $IdentityId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleAssignments -IdentityId $IdentityId -RoleId $RoleId -RoleName $RoleName   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleAssignments"
            Write-Host $_.ErrorDetails
        }
- path: /identities
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identities#list-identities
      source: |
        $Filters = "id eq "6c9079b270a266a60170a2779fcb0006" or correlated eq false" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **alias**: *eq, sw*  **firstname**: *eq, sw*  **lastname**: *eq, sw*  **email**: *eq, sw*  **cloudStatus**: *eq*  **processingState**: *eq*  **correlated**: *eq*  **protected**: *eq* (optional)
        $Sorters = "name,-cloudStatus" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, alias, cloudStatus** (optional)
        $DefaultFilter = "CORRELATED_ONLY" # String | Adds additional filter to filters query parameter.  CORRELATED_ONLY adds correlated=true and returns only identities that are correlated.  NONE does not add any and returns all identities that satisfy filters query parameter. (optional) (default to "CORRELATED_ONLY")
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        
        # List identities
        
        try {
            Get-BetaIdentities 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentities -Filters $Filters -Sorters $Sorters -DefaultFilter $DefaultFilter -Count $Count -Limit $Limit -Offset $Offset   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentities"
            Write-Host $_.ErrorDetails
        }
- path: /identities/{identityId}/reset
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identities#reset-identity
      source: |
        $IdentityId = "ef38f94347e94562b5bb8424a56397d8" # String | Identity Id
        
        # Reset an identity
        
        try {
            Reset-BetaIdentity -IdentityId $IdentityId 
    
            # Below is a request that includes all optional parameters
            # Reset-BetaIdentity -IdentityId $IdentityId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Reset-BetaIdentity"
            Write-Host $_.ErrorDetails
        }
- path: /identities/{id}/verification/account/send
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identities#send-identity-verification-account-token
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | Identity ID
        $SendAccountVerificationRequest = @"
        {
          "sourceName" : "Active Directory Source",
          "via" : "EMAIL_WORK"
        }
        "@
        
        # Send password reset email
        
        try {
            $Result = ConvertFrom-JsonToSendAccountVerificationRequest -Json $SendAccountVerificationRequest
            Send-BetaIdentityVerificationAccountToken -Id $Id -SendAccountVerificationRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaIdentityVerificationAccountToken -Id $Id -SendAccountVerificationRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaIdentityVerificationAccountToken"
            Write-Host $_.ErrorDetails
        }
- path: /identities/invite
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identities#start-identities-invite
      source: |
        $InviteIdentitiesRequest = @"
        {
          "ids" : [ "2b568c65bc3c4c57a43bd97e3a8e55", "2c9180867769897d01776ed5f125512f" ],
          "uninvited" : false
        }
        "@
        
        # Invite identities to register
        
        try {
            $Result = ConvertFrom-JsonToInviteIdentitiesRequest -Json $InviteIdentitiesRequest
            Start-BetaIdentitiesInvite -InviteIdentitiesRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Start-BetaIdentitiesInvite -InviteIdentitiesRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Start-BetaIdentitiesInvite"
            Write-Host $_.ErrorDetails
        }
- path: /identities/process
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identities#start-identity-processing
      source: |
        $ProcessIdentitiesRequest = @"
        {
          "identityIds" : [ "ef38f94347e94562b5bb8424a56397d8", "ef38f94347e94562b5bb8424a56397d8", "ef38f94347e94562b5bb8424a56397d8", "ef38f94347e94562b5bb8424a56397d8", "ef38f94347e94562b5bb8424a56397d8" ]
        }
        "@
        
        # Process a list of identityids
        
        try {
            $Result = ConvertFrom-JsonToProcessIdentitiesRequest -Json $ProcessIdentitiesRequest
            Start-BetaIdentityProcessing -ProcessIdentitiesRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Start-BetaIdentityProcessing -ProcessIdentitiesRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Start-BetaIdentityProcessing"
            Write-Host $_.ErrorDetails
        }
- path: /identities/{identityId}/synchronize-attributes
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identities#synchronize-attributes-for-identity
      source: |
        $IdentityId = "MyIdentityId" # String | The Identity id
        
        # Attribute synchronization for single identity.
        
        try {
            Sync-BetahronizeAttributesForIdentity -IdentityId $IdentityId 
    
            # Below is a request that includes all optional parameters
            # Sync-BetahronizeAttributesForIdentity -IdentityId $IdentityId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Sync-BetahronizeAttributesForIdentity"
            Write-Host $_.ErrorDetails
        }
- path: /identity-attributes
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-attributes#create-identity-attribute
      source: |
        $IdentityAttribute = @"
        {
          "standard" : false,
          "system" : false,
          "sources" : [ {
            "type" : "rule",
            "properties" : {
              "ruleType" : "IdentityAttribute",
              "ruleName" : "Cloud Promote Identity Attribute"
            }
          }, {
            "type" : "rule",
            "properties" : {
              "ruleType" : "IdentityAttribute",
              "ruleName" : "Cloud Promote Identity Attribute"
            }
          } ],
          "displayName" : "Cost Center",
          "name" : "costCenter",
          "type" : "string",
          "searchable" : false,
          "multi" : false
        }
        "@
        
        # Create identity attribute
        
        try {
            $Result = ConvertFrom-JsonToIdentityAttribute -Json $IdentityAttribute
            New-BetaIdentityAttribute -IdentityAttribute $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaIdentityAttribute -IdentityAttribute $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaIdentityAttribute"
            Write-Host $_.ErrorDetails
        }
- path: /identity-attributes/{name}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-attributes#delete-identity-attribute
      source: |
        $Name = "displayName" # String | The attribute's technical name.
        
        # Delete identity attribute
        
        try {
            Remove-BetaIdentityAttribute -Name $Name 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaIdentityAttribute -Name $Name   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaIdentityAttribute"
            Write-Host $_.ErrorDetails
        }
- path: /identity-attributes/bulk-delete
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-attributes#delete-identity-attributes-in-bulk
      source: |
        $IdentityAttributeNames = @"
        {
          "ids" : [ "name", "displayName" ]
        }
        "@
        
        # Bulk delete identity attributes
        
        try {
            $Result = ConvertFrom-JsonToIdentityAttributeNames -Json $IdentityAttributeNames
            Remove-BetaIdentityAttributesInBulk -IdentityAttributeNames $Result 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaIdentityAttributesInBulk -IdentityAttributeNames $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaIdentityAttributesInBulk"
            Write-Host $_.ErrorDetails
        }
- path: /identity-attributes/{name}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-attributes#get-identity-attribute
      source: |
        $Name = "displayName" # String | The attribute's technical name.
        
        # Get identity attribute
        
        try {
            Get-BetaIdentityAttribute -Name $Name 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentityAttribute -Name $Name   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityAttribute"
            Write-Host $_.ErrorDetails
        }
- path: /identity-attributes
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-attributes#list-identity-attributes
      source: |
        $IncludeSystem = $false # Boolean | Include 'system' attributes in the response. (optional) (default to $false)
        $IncludeSilent = $false # Boolean | Include 'silent' attributes in the response. (optional) (default to $false)
        $SearchableOnly = $false # Boolean | Include only 'searchable' attributes in the response. (optional) (default to $false)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # List identity attributes
        
        try {
            Get-BetaIdentityAttributes 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentityAttributes -IncludeSystem $IncludeSystem -IncludeSilent $IncludeSilent -SearchableOnly $SearchableOnly -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityAttributes"
            Write-Host $_.ErrorDetails
        }
- path: /identity-attributes/{name}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-attributes#put-identity-attribute
      source: |
        $Name = "displayName" # String | The attribute's technical name.
        $IdentityAttribute = @"
        {
          "standard" : false,
          "system" : false,
          "sources" : [ {
            "type" : "rule",
            "properties" : {
              "ruleType" : "IdentityAttribute",
              "ruleName" : "Cloud Promote Identity Attribute"
            }
          }, {
            "type" : "rule",
            "properties" : {
              "ruleType" : "IdentityAttribute",
              "ruleName" : "Cloud Promote Identity Attribute"
            }
          } ],
          "displayName" : "Cost Center",
          "name" : "costCenter",
          "type" : "string",
          "searchable" : false,
          "multi" : false
        }
        "@
        
        # Update identity attribute
        
        try {
            $Result = ConvertFrom-JsonToIdentityAttribute -Json $IdentityAttribute
            Send-BetaIdentityAttribute -Name $Name -IdentityAttribute $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaIdentityAttribute -Name $Name -IdentityAttribute $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaIdentityAttribute"
            Write-Host $_.ErrorDetails
        }
- path: /historical-identities/{id}/compare
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-history#compare-identity-snapshots
      source: |
        $Id = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The identity id
        $Snapshot1 = "2007-03-01T13:00:00Z" # String | The snapshot 1 of identity (optional)
        $Snapshot2 = "2008-03-01T13:00:00Z" # String | The snapshot 2 of identity (optional)
        $AccessItemTypes = "MyAccessItemTypes" # String[] | An optional list of access item types (app, account, entitlement, etc...) to return.   If null or empty, all access items types are returned  (optional)
        
        
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Gets a difference of count for each access item types for the given identity between 2 snapshots
        
        try {
            Compare-BetaIdentitySnapshots -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Compare-BetaIdentitySnapshots -Id $Id -Snapshot1 $Snapshot1 -Snapshot2 $Snapshot2 -AccessItemTypes $AccessItemTypes -Limit $Limit -Offset $Offset -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Compare-BetaIdentitySnapshots"
            Write-Host $_.ErrorDetails
        }
- path: /historical-identities/{id}/compare/{accessType}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-history#compare-identity-snapshots-access-type
      source: |
        $Id = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The identity id
        $AccessType = "accessProfile" # String | The specific type which needs to be compared
        $AccessAssociated = $false # Boolean | Indicates if added or removed access needs to be returned. true - added, false - removed, null - both added & removed (optional)
        $Snapshot1 = "2008-03-01T13:00:00Z" # String | The snapshot 1 of identity (optional)
        $Snapshot2 = "2009-03-01T13:00:00Z" # String | The snapshot 2 of identity (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Gets a list of differences of specific accesstype for the given identity between 2 snapshots
        
        try {
            Compare-BetaIdentitySnapshotsAccessType -Id $Id -AccessType $AccessType 
    
            # Below is a request that includes all optional parameters
            # Compare-BetaIdentitySnapshotsAccessType -Id $Id -AccessType $AccessType -AccessAssociated $AccessAssociated -Snapshot1 $Snapshot1 -Snapshot2 $Snapshot2 -Limit $Limit -Offset $Offset -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Compare-BetaIdentitySnapshotsAccessType"
            Write-Host $_.ErrorDetails
        }
- path: /historical-identities/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-history#get-historical-identity
      source: |
        $Id = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The identity id
        
        # Get latest snapshot of identity
        
        try {
            Get-BetaHistoricalIdentity -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaHistoricalIdentity -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaHistoricalIdentity"
            Write-Host $_.ErrorDetails
        }
- path: /historical-identities/{id}/events
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-history#get-historical-identity-events
      source: |
        $Id = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The identity id
        $From = "2024-03-01T13:00:00Z" # String | The optional instant until which access events are returned (optional)
        $EventTypes = "MyEventTypes" # String[] | An optional list of event types to return.  If null or empty, all events are returned (optional)
        
        $EventTypes = @"[AccessAddedEvent, AccessRemovedEvent]"@
        $AccessItemTypes = "MyAccessItemTypes" # String[] | An optional list of access item types (app, account, entitlement, etc...) to return.   If null or empty, all access items types are returned (optional)
        
        $AccessItemTypes = @"[entitlement, account]"@
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Lists all events for the given identity
        
        try {
            Get-BetaHistoricalIdentityEvents -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaHistoricalIdentityEvents -Id $Id -From $From -EventTypes $EventTypes -AccessItemTypes $AccessItemTypes -Limit $Limit -Offset $Offset -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaHistoricalIdentityEvents"
            Write-Host $_.ErrorDetails
        }
- path: /historical-identities/{id}/snapshots/{date}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-history#get-identity-snapshot
      source: |
        $Id = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The identity id
        $Date = "2007-03-01T13:00:00Z" # String | The specified date
        
        # Gets an identity snapshot at a given date
        
        try {
            Get-BetaIdentitySnapshot -Id $Id -Date $Date 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentitySnapshot -Id $Id -Date $Date   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentitySnapshot"
            Write-Host $_.ErrorDetails
        }
- path: /historical-identities/{id}/snapshot-summary
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-history#get-identity-snapshot-summary
      source: |
        $Id = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The identity id
        $Before = "2007-03-01T13:00:00Z" # String | The date before which snapshot summary is required (optional)
        $Interval = "day" # String | The interval indicating day or month. Defaults to month if not specified (optional)
        $TimeZone = "UTC" # String | The time zone. Defaults to UTC if not provided (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Gets the summary for the event count for a specific identity
        
        try {
            Get-BetaIdentitySnapshotSummary -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentitySnapshotSummary -Id $Id -Before $Before -Interval $Interval -TimeZone $TimeZone -Limit $Limit -Offset $Offset -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentitySnapshotSummary"
            Write-Host $_.ErrorDetails
        }
- path: /historical-identities/{id}/start-date
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-history#get-identity-start-date
      source: |
        $Id = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The identity id
        
        # Gets the start date of the identity
        
        try {
            Get-BetaIdentityStartDate -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentityStartDate -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityStartDate"
            Write-Host $_.ErrorDetails
        }
- path: /historical-identities
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-history#list-historical-identities
      source: |
        $StartsWithQuery = "Ada" # String | This param is used for starts-with search for first, last and display name of the identity (optional)
        $IsDeleted = $true # Boolean | Indicates if we want to only list down deleted identities or not. (optional)
        $IsActive = $true # Boolean | Indicates if we want to only list active or inactive identities. (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        
        # Lists all the identities
        
        try {
            Get-BetaHistoricalIdentities 
    
            # Below is a request that includes all optional parameters
            # Get-BetaHistoricalIdentities -StartsWithQuery $StartsWithQuery -IsDeleted $IsDeleted -IsActive $IsActive -Limit $Limit -Offset $Offset   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaHistoricalIdentities"
            Write-Host $_.ErrorDetails
        }
- path: /historical-identities/{id}/access-items
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-history#list-identity-access-items
      source: |
        $Id = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The identity id
        $Type = "account" # String | The type of access item for the identity. If not provided, it defaults to account.  Types of access items: **accessProfile, account, app, entitlement, role** (optional)
        $Filters = "source eq "DataScienceDataset"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **source**: *eq*  **standalone**: *eq*  **privileged**: *eq*  **attribute**: *eq*  **cloudGoverned**: *eq* (optional)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, value, standalone, privileged, attribute, source, cloudGoverned, removeDate, nativeIdentity, entitlementCount** (optional)
        $Query = "Dr. Arden" # String | This param is used to search if certain fields of the access item contain the string provided.  Searching is supported for the following fields depending on the type:  Access Profiles: **name, description**  Accounts: **name, nativeIdentity**  Apps: **name**  Entitlements: **name, value, description**  Roles: **name, description** (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        
        # List access items by identity
        
        try {
            Get-BetaIdentityAccessItems -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentityAccessItems -Id $Id -Type $Type -Filters $Filters -Sorters $Sorters -Query $Query -Limit $Limit -Count $Count -Offset $Offset   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityAccessItems"
            Write-Host $_.ErrorDetails
        }
- path: /historical-identities/{id}/snapshots/{date}/access-items
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-history#list-identity-snapshot-access-items
      source: |
        $Id = "8c190e6787aa4ed9a90bd9d5344523fb" # String | Identity ID.
        $Date = "2007-03-01T13:00:00Z" # String | Specified date.
        $Type = "role" # String | Access item type. (optional)
        
        # Get identity access items snapshot
        
        try {
            Get-BetaIdentitySnapshotAccessItems -Id $Id -Date $Date 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentitySnapshotAccessItems -Id $Id -Date $Date -Type $Type   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentitySnapshotAccessItems"
            Write-Host $_.ErrorDetails
        }
- path: /historical-identities/{id}/snapshots
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-history#list-identity-snapshots
      source: |
        $Id = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The identity id
        $Start = "2007-03-01T13:00:00Z" # String | The specified start date (optional)
        $Interval = "day" # String | The interval indicating the range in day or month for the specified interval-name (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Lists all the snapshots for the identity
        
        try {
            Get-BetaIdentitySnapshots -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentitySnapshots -Id $Id -Start $Start -Interval $Interval -Limit $Limit -Offset $Offset -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentitySnapshots"
            Write-Host $_.ErrorDetails
        }
- path: /identity-profiles
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-profiles#create-identity-profile
      source: |
        $IdentityProfile = @"
        {
          "owner" : {
            "name" : "William Wilson",
            "id" : "2c9180835d191a86015d28455b4b232a",
            "type" : "IDENTITY"
          },
          "identityExceptionReportReference" : {
            "reportName" : "My annual report",
            "taskResultId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          },
          "authoritativeSource" : {
            "name" : "HR Active Directory",
            "id" : "2c9180835d191a86015d28455b4b232a",
            "type" : "SOURCE"
          },
          "hasTimeBasedAttr" : true,
          "created" : "2023-01-03T21:16:22.432Z",
          "description" : "My custom flat file profile",
          "identityRefreshRequired" : true,
          "identityCount" : 8,
          "priority" : 10,
          "identityAttributeConfig" : {
            "attributeTransforms" : [ {
              "transformDefinition" : {
                "attributes" : {
                  "attributeName" : "e-mail",
                  "sourceName" : "MySource",
                  "sourceId" : "2c9180877a826e68017a8c0b03da1a53"
                },
                "type" : "accountAttribute"
              },
              "identityAttributeName" : "email"
            }, {
              "transformDefinition" : {
                "attributes" : {
                  "attributeName" : "e-mail",
                  "sourceName" : "MySource",
                  "sourceId" : "2c9180877a826e68017a8c0b03da1a53"
                },
                "type" : "accountAttribute"
              },
              "identityAttributeName" : "email"
            } ],
            "enabled" : true
          },
          "name" : "aName",
          "modified" : "2023-01-03T21:16:22.432Z",
          "id" : "id12345"
        }
        "@
        
        # Create identity profile
        
        try {
            $Result = ConvertFrom-JsonToIdentityProfile -Json $IdentityProfile
            New-BetaIdentityProfile -IdentityProfile $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaIdentityProfile -IdentityProfile $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaIdentityProfile"
            Write-Host $_.ErrorDetails
        }
- path: /identity-profiles/{identity-profile-id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-profiles#delete-identity-profile
      source: |
        $IdentityProfileId = "ef38f94347e94562b5bb8424a56397d8" # String | Identity profile ID.
        
        # Delete identity profile
        
        try {
            Remove-BetaIdentityProfile -IdentityProfileId $IdentityProfileId 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaIdentityProfile -IdentityProfileId $IdentityProfileId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaIdentityProfile"
            Write-Host $_.ErrorDetails
        }
- path: /identity-profiles/bulk-delete
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-profiles#delete-identity-profiles
      source: |
        $RequestBody = "MyRequestBody" # String[] | Identity Profile bulk delete request body.
        $RequestBody = @""@ 
        
        
        # Delete identity profiles
        
        try {
            $Result = ConvertFrom-JsonToRequestBody -Json $RequestBody
            Remove-BetaIdentityProfiles -RequestBody $Result 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaIdentityProfiles -RequestBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaIdentityProfiles"
            Write-Host $_.ErrorDetails
        }
- path: /identity-profiles/export
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-profiles#export-identity-profiles
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "id eq 8c190e6787aa4ed9a90bd9d5344523fb" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, ne*  **name**: *eq, ne*  **priority**: *eq, ne* (optional)
        $Sorters = "name,-priority" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, priority** (optional)
        
        # Export identity profiles
        
        try {
            Export-BetaIdentityProfiles 
    
            # Below is a request that includes all optional parameters
            # Export-BetaIdentityProfiles -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Export-BetaIdentityProfiles"
            Write-Host $_.ErrorDetails
        }
- path: /identity-profiles/{identity-profile-id}/default-identity-attribute-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-profiles#get-default-identity-attribute-config
      source: |
        $IdentityProfileId = "ef38f94347e94562b5bb8424a56397d8" # String | The Identity Profile ID
        
        # Default identity attribute config
        
        try {
            Get-BetaDefaultIdentityAttributeConfig -IdentityProfileId $IdentityProfileId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaDefaultIdentityAttributeConfig -IdentityProfileId $IdentityProfileId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaDefaultIdentityAttributeConfig"
            Write-Host $_.ErrorDetails
        }
- path: /identity-profiles/{identity-profile-id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-profiles#get-identity-profile
      source: |
        $IdentityProfileId = "ef38f94347e94562b5bb8424a56397d8" # String | Identity profile ID.
        
        # Get identity profile
        
        try {
            Get-BetaIdentityProfile -IdentityProfileId $IdentityProfileId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentityProfile -IdentityProfileId $IdentityProfileId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityProfile"
            Write-Host $_.ErrorDetails
        }
- path: /identity-profiles/import
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-profiles#import-identity-profiles
      source: |





        $IdentityProfileExportedObject = @"{
          "self" : {
            "name" : "HR Active Directory",
            "id" : "2c9180835d191a86015d28455b4b232a",
            "type" : "SOURCE"
          },
          "version" : 1,
          "object" : {
            "owner" : {
              "name" : "William Wilson",
              "id" : "2c9180835d191a86015d28455b4b232a",
              "type" : "IDENTITY"
            },
            "identityExceptionReportReference" : {
              "reportName" : "My annual report",
              "taskResultId" : "2b838de9-db9b-abcf-e646-d4f274ad4238"
            },
            "authoritativeSource" : {
              "name" : "HR Active Directory",
              "id" : "2c9180835d191a86015d28455b4b232a",
              "type" : "SOURCE"
            },
            "hasTimeBasedAttr" : true,
            "created" : "2015-05-28T14:07:17Z",
            "description" : "My custom flat file profile",
            "identityRefreshRequired" : true,
            "identityCount" : 8,
            "priority" : 10,
            "identityAttributeConfig" : {
              "attributeTransforms" : [ {
                "transformDefinition" : {
                  "attributes" : {
                    "attributeName" : "e-mail",
                    "sourceName" : "MySource",
                    "sourceId" : "2c9180877a826e68017a8c0b03da1a53"
                  },
                  "type" : "accountAttribute"
                },
                "identityAttributeName" : "email"
              }, {
                "transformDefinition" : {
                  "attributes" : {
                    "attributeName" : "e-mail",
                    "sourceName" : "MySource",
                    "sourceId" : "2c9180877a826e68017a8c0b03da1a53"
                  },
                  "type" : "accountAttribute"
                },
                "identityAttributeName" : "email"
              } ],
              "enabled" : true
            },
            "name" : "aName",
            "modified" : "2015-05-28T14:07:17Z",
            "id" : "id12345"
          }
        }"@ 
        
        
        # Import identity profiles
        
        try {
            $Result = ConvertFrom-JsonToIdentityProfileExportedObject -Json $IdentityProfileExportedObject
            Import-BetaIdentityProfiles -IdentityProfileExportedObject $Result 
    
            # Below is a request that includes all optional parameters
            # Import-BetaIdentityProfiles -IdentityProfileExportedObject $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Import-BetaIdentityProfiles"
            Write-Host $_.ErrorDetails
        }
- path: /identity-profiles
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-profiles#list-identity-profiles
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "id eq 8c190e6787aa4ed9a90bd9d5344523fb" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, ne, ge, gt, in, le, sw*  **name**: *eq, ne, ge, gt, in, le, sw*  **priority**: *eq, ne* (optional)
        $Sorters = "name,-priority" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, priority, created, modified, owner.id, owner.name** (optional)
        
        # List identity profiles
        
        try {
            Get-BetaIdentityProfiles 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentityProfiles -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityProfiles"
            Write-Host $_.ErrorDetails
        }
- path: /identity-profiles/identity-preview
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-profiles#show-generate-identity-preview
      source: |
        $IdentityPreviewRequest = @"
        {
          "identityId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "identityAttributeConfig" : {
            "attributeTransforms" : [ {
              "transformDefinition" : {
                "attributes" : {
                  "attributeName" : "e-mail",
                  "sourceName" : "MySource",
                  "sourceId" : "2c9180877a826e68017a8c0b03da1a53"
                },
                "type" : "accountAttribute"
              },
              "identityAttributeName" : "email"
            }, {
              "transformDefinition" : {
                "attributes" : {
                  "attributeName" : "e-mail",
                  "sourceName" : "MySource",
                  "sourceId" : "2c9180877a826e68017a8c0b03da1a53"
                },
                "type" : "accountAttribute"
              },
              "identityAttributeName" : "email"
            } ],
            "enabled" : true
          }
        }
        "@
        
        # Generate identity profile preview
        
        try {
            $Result = ConvertFrom-JsonToIdentityPreviewRequest -Json $IdentityPreviewRequest
            Show-BetaGenerateIdentityPreview -IdentityPreviewRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Show-BetaGenerateIdentityPreview -IdentityPreviewRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Show-BetaGenerateIdentityPreview"
            Write-Host $_.ErrorDetails
        }
- path: /identity-profiles/{identity-profile-id}/process-identities
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-profiles#sync-identity-profile
      source: |
        $IdentityProfileId = "ef38f94347e94562b5bb8424a56397d8" # String | The Identity Profile ID to be processed
        
        # Process identities under profile
        
        try {
            Sync-BetaIdentityProfile -IdentityProfileId $IdentityProfileId 
    
            # Below is a request that includes all optional parameters
            # Sync-BetaIdentityProfile -IdentityProfileId $IdentityProfileId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Sync-BetaIdentityProfile"
            Write-Host $_.ErrorDetails
        }
- path: /identity-profiles/{identity-profile-id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/identity-profiles#update-identity-profile
      source: |
        $IdentityProfileId = "ef38f94347e94562b5bb8424a56397d8" # String | Identity profile ID.
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Update identity profile
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaIdentityProfile -IdentityProfileId $IdentityProfileId -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaIdentityProfile -IdentityProfileId $IdentityProfileId -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaIdentityProfile"
            Write-Host $_.ErrorDetails
        }
- path: /launchers
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/launchers#create-launcher
      source: |
        $LauncherRequest = @"
        {
          "reference" : {
            "id" : "2fd6ff94-2081-4d29-acbc-83a0a2f744a5",
            "type" : "WORKFLOW"
          },
          "name" : "Group Create",
          "description" : "Create a new Active Directory Group",
          "disabled" : false,
          "type" : "INTERACTIVE_PROCESS",
          "config" : "{\"workflowId\" : \"6b42d9be-61b6-46af-827e-ea29ba8aa3d9\"}"
        }
        "@
        
        # Create launcher
        
        try {
            $Result = ConvertFrom-JsonToLauncherRequest -Json $LauncherRequest
            New-BetaLauncher -LauncherRequest $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaLauncher -LauncherRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaLauncher"
            Write-Host $_.ErrorDetails
        }
- path: /launchers/{launcherID}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/launchers#delete-launcher
      source: |
        $LauncherID = "e3012408-8b61-4564-ad41-c5ec131c325b" # String | ID of the Launcher to be deleted
        
        # Delete launcher
        
        try {
            Remove-BetaLauncher -LauncherID $LauncherID 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaLauncher -LauncherID $LauncherID   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaLauncher"
            Write-Host $_.ErrorDetails
        }
- path: /launchers/{launcherID}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/launchers#get-launcher
      source: |
        $LauncherID = "e3012408-8b61-4564-ad41-c5ec131c325b" # String | ID of the Launcher to be retrieved
        
        # Get launcher by id
        
        try {
            Get-BetaLauncher -LauncherID $LauncherID 
    
            # Below is a request that includes all optional parameters
            # Get-BetaLauncher -LauncherID $LauncherID   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaLauncher"
            Write-Host $_.ErrorDetails
        }
- path: /launchers
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/launchers#get-launchers
      source: |
        $Filters = "disabled eq "true"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **description**: *sw*  **disabled**: *eq*  **name**: *sw* (optional)
        $Next = "eyJuZXh0IjoxMjN9Cg==" # String | Pagination marker (optional)
        $Limit = 42 # Int32 | Number of Launchers to return (optional) (default to 10)
        
        # List all launchers for tenant
        
        try {
            Get-BetaLaunchers 
    
            # Below is a request that includes all optional parameters
            # Get-BetaLaunchers -Filters $Filters -Next $Next -Limit $Limit   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaLaunchers"
            Write-Host $_.ErrorDetails
        }
- path: /launchers/{launcherID}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/launchers#put-launcher
      source: |
        $LauncherID = "e3012408-8b61-4564-ad41-c5ec131c325b" # String | ID of the Launcher to be replaced
        $LauncherRequest = @"
        {
          "reference" : {
            "id" : "2fd6ff94-2081-4d29-acbc-83a0a2f744a5",
            "type" : "WORKFLOW"
          },
          "name" : "Group Create",
          "description" : "Create a new Active Directory Group",
          "disabled" : false,
          "type" : "INTERACTIVE_PROCESS",
          "config" : "{\"workflowId\" : \"6b42d9be-61b6-46af-827e-ea29ba8aa3d9\"}"
        }
        "@
        
        # Replace launcher
        
        try {
            $Result = ConvertFrom-JsonToLauncherRequest -Json $LauncherRequest
            Send-BetaLauncher -LauncherID $LauncherID -LauncherRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaLauncher -LauncherID $LauncherID -LauncherRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaLauncher"
            Write-Host $_.ErrorDetails
        }
- path: /beta/launchers/{launcherID}/launch
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/launchers#start-launcher
      source: |
        $LauncherID = "e3012408-8b61-4564-ad41-c5ec131c325b" # String | ID of the Launcher to be launched
        
        # Launch a launcher
        
        try {
            Start-BetaLauncher -LauncherID $LauncherID 
    
            # Below is a request that includes all optional parameters
            # Start-BetaLauncher -LauncherID $LauncherID   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Start-BetaLauncher"
            Write-Host $_.ErrorDetails
        }
- path: /identity-profiles/{identity-profile-id}/lifecycle-states/{lifecycle-state-id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/lifecycle-states#get-lifecycle-states
      source: |
        $IdentityProfileId = "2b838de9-db9b-abcf-e646-d4f274ad4238" # String | Identity Profile ID.
        $LifecycleStateId = "ef38f94347e94562b5bb8424a56397d8" # String | Lifecycle State ID.
        
        # Get lifecycle state
        
        try {
            Get-BetaLifecycleStates -IdentityProfileId $IdentityProfileId -LifecycleStateId $LifecycleStateId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaLifecycleStates -IdentityProfileId $IdentityProfileId -LifecycleStateId $LifecycleStateId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaLifecycleStates"
            Write-Host $_.ErrorDetails
        }
- path: /identity-profiles/{identity-profile-id}/lifecycle-states/{lifecycle-state-id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/lifecycle-states#update-lifecycle-states
      source: |
        $IdentityProfileId = "2b838de9-db9b-abcf-e646-d4f274ad4238" # String | Identity Profile ID.
        $LifecycleStateId = "ef38f94347e94562b5bb8424a56397d8" # String | Lifecycle State ID.
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Update lifecycle state
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaLifecycleStates -IdentityProfileId $IdentityProfileId -LifecycleStateId $LifecycleStateId -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaLifecycleStates -IdentityProfileId $IdentityProfileId -LifecycleStateId $LifecycleStateId -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaLifecycleStates"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/{method}/delete
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-configuration#delete-mfa-config
      source: |
        $Method = "okta-verify" # String | The name of the MFA method. The currently supported method names are 'okta-verify' and 'duo-web'.
        
        # Delete mfa method configuration
        
        try {
            Remove-BetaMFAConfig -Method $Method 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaMFAConfig -Method $Method   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaMFAConfig"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/duo-web/config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-configuration#get-mfa-duo-config
      source: |
        
        # Configuration of duo mfa method
        
        try {
            Get-BetaMFADuoConfig 
    
            # Below is a request that includes all optional parameters
            # Get-BetaMFADuoConfig   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaMFADuoConfig"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/kba/config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-configuration#get-mfa-kba-config
      source: |
        $AllLanguages = $false # Boolean | Indicator whether the question text should be returned in all configured languages    * If true, the question text is returned in all languages that it is configured in.    * If false, the question text is returned in the user locale if available, else for the default locale.     * If not passed, it behaves the same way as passing this parameter as false (optional)
        
        # Configuration of kba mfa method
        
        try {
            Get-BetaMFAKbaConfig 
    
            # Below is a request that includes all optional parameters
            # Get-BetaMFAKbaConfig -AllLanguages $AllLanguages   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaMFAKbaConfig"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/okta-verify/config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-configuration#get-mfa-okta-config
      source: |
        
        # Configuration of okta mfa method
        
        try {
            Get-BetaMFAOktaConfig 
    
            # Below is a request that includes all optional parameters
            # Get-BetaMFAOktaConfig   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaMFAOktaConfig"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/duo-web/config
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-configuration#set-mfa-duo-config
      source: |
        $MfaDuoConfig = @"
        {
          "accessKey" : "qw123Y3QlA5UqocYpdU3rEkzrK2D497y",
          "host" : "example.com",
          "configProperties" : {
            "skey" : "qwERttyZx1CdlQye2Vwtbsjr3HKddy4BAiCXjc5x",
            "ikey" : "Q123WE45R6TY7890ZXCV"
          },
          "mfaMethod" : "duo-web",
          "enabled" : true,
          "identityAttribute" : "email"
        }
        "@
        
        # Set duo mfa configuration
        
        try {
            $Result = ConvertFrom-JsonToMfaDuoConfig -Json $MfaDuoConfig
            Set-BetaMFADuoConfig -MfaDuoConfig $Result 
    
            # Below is a request that includes all optional parameters
            # Set-BetaMFADuoConfig -MfaDuoConfig $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Set-BetaMFADuoConfig"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/kba/config/answers
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-configuration#set-mfakba-config
      source: |
        $KbaAnswerRequestItem = @"{
          "answer" : "Your answer",
          "id" : "c54fee53-2d63-4fc5-9259-3e93b9994135"
        }"@ 
        
        
        # Set mfa kba configuration
        
        try {
            $Result = ConvertFrom-JsonToKbaAnswerRequestItem -Json $KbaAnswerRequestItem
            Set-BetaMFAKBAConfig -KbaAnswerRequestItem $Result 
    
            # Below is a request that includes all optional parameters
            # Set-BetaMFAKBAConfig -KbaAnswerRequestItem $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Set-BetaMFAKBAConfig"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/okta-verify/config
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-configuration#set-mfa-okta-config
      source: |
        $MfaOktaConfig = @"
        {
          "accessKey" : "qw123Y3QlA5UqocYpdU3rEkzrK2D497y",
          "host" : "example.com",
          "mfaMethod" : "okta-verify",
          "enabled" : true,
          "identityAttribute" : "email"
        }
        "@
        
        # Set okta mfa configuration
        
        try {
            $Result = ConvertFrom-JsonToMfaOktaConfig -Json $MfaOktaConfig
            Set-BetaMFAOktaConfig -MfaOktaConfig $Result 
    
            # Below is a request that includes all optional parameters
            # Set-BetaMFAOktaConfig -MfaOktaConfig $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Set-BetaMFAOktaConfig"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/{method}/test
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-configuration#test-mfa-config
      source: |
        $Method = "okta-verify" # String | The name of the MFA method. The currently supported method names are 'okta-verify' and 'duo-web'.
        
        # Mfa method's test configuration
        
        try {
            Test-BetaMFAConfig -Method $Method 
    
            # Below is a request that includes all optional parameters
            # Test-BetaMFAConfig -Method $Method   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Test-BetaMFAConfig"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/token/send
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-controller#create-send-token
      source: |
        $SendTokenRequest = @"
        {
          "userAlias" : "will.albin",
          "deliveryType" : "EMAIL_WORK"
        }
        "@
        
        # Create and send user token
        
        try {
            $Result = ConvertFrom-JsonToSendTokenRequest -Json $SendTokenRequest
            New-BetaSendToken -SendTokenRequest $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaSendToken -SendTokenRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaSendToken"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/{method}/poll
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-controller#ping-verification-status
      source: |
        $Method = "okta-verify" # String | The name of the MFA method. The currently supported method names are 'okta-verify', 'duo-web', 'kba','token', 'rsa'
        $VerificationPollRequest = @"
        {
          "requestId" : "089899f13a8f4da7824996191587bab9"
        }
        "@
        
        # Polling mfa method by verificationpollrequest
        
        try {
            $Result = ConvertFrom-JsonToVerificationPollRequest -Json $VerificationPollRequest
            Ping-BetaVerificationStatus -Method $Method -VerificationPollRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Ping-BetaVerificationStatus -Method $Method -VerificationPollRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Ping-BetaVerificationStatus"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/duo-web/verify
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-controller#send-duo-verify-request
      source: |
        $DuoVerificationRequest = @"
        {
          "signedResponse" : "AUTH|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjUzMDg5|f1f5f8ced5b340f3d303b05d0efa0e43b6a8f970:APP|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjU2NjE5|cb44cf44353f5127edcae31b1da0355f87357db2",
          "userId" : "2c9180947f0ef465017f215cbcfd004b"
        }
        "@
        
        # Verifying authentication via duo method
        
        try {
            $Result = ConvertFrom-JsonToDuoVerificationRequest -Json $DuoVerificationRequest
            Send-BetaDuoVerifyRequest -DuoVerificationRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaDuoVerifyRequest -DuoVerificationRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaDuoVerifyRequest"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/kba/authenticate
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-controller#send-kba-answers
      source: |
        $KbaAnswerRequestItem = @"{
          "answer" : "Your answer",
          "id" : "c54fee53-2d63-4fc5-9259-3e93b9994135"
        }"@ 
        
        
        # Authenticate kba provided mfa method
        
        try {
            $Result = ConvertFrom-JsonToKbaAnswerRequestItem -Json $KbaAnswerRequestItem
            Send-BetaKbaAnswers -KbaAnswerRequestItem $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaKbaAnswers -KbaAnswerRequestItem $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaKbaAnswers"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/okta-verify/verify
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-controller#send-okta-verify-request
      source: |
        $OktaVerificationRequest = @"
        {
          "userId" : "example@mail.com"
        }
        "@
        
        # Verifying authentication via okta method
        
        try {
            $Result = ConvertFrom-JsonToOktaVerificationRequest -Json $OktaVerificationRequest
            Send-BetaOktaVerifyRequest -OktaVerificationRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaOktaVerifyRequest -OktaVerificationRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaOktaVerifyRequest"
            Write-Host $_.ErrorDetails
        }
- path: /mfa/token/authenticate
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/mfa-controller#send-token-auth-request
      source: |
        $TokenAuthRequest = @"
        {
          "userAlias" : "will.albin",
          "deliveryType" : "EMAIL_WORK",
          "token" : "12345"
        }
        "@
        
        # Authenticate token provided mfa method
        
        try {
            $Result = ConvertFrom-JsonToTokenAuthRequest -Json $TokenAuthRequest
            Send-BetaTokenAuthRequest -TokenAuthRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaTokenAuthRequest -TokenAuthRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaTokenAuthRequest"
            Write-Host $_.ErrorDetails
        }
- path: /managed-clients/{id}/status
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/managed-clients#get-managed-client-status
      source: |
        $Id = "aClientId" # String | ID of the Managed Client Status to get
        $Type = "CCG" # ManagedClientType | Type of the Managed Client Status to get
        
        # Specified managed client status.
        
        try {
            Get-BetaManagedClientStatus -Id $Id -Type $Type 
    
            # Below is a request that includes all optional parameters
            # Get-BetaManagedClientStatus -Id $Id -Type $Type   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaManagedClientStatus"
            Write-Host $_.ErrorDetails
        }
- path: /managed-clients/{id}/status
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/managed-clients#update-managed-client-status
      source: |
        $Id = "aClientId" # String | ID of the Managed Client Status to update
        $ManagedClientStatus = @"
        {
          "body" : {
            "alertKey" : "",
            "id" : "5678",
            "clusterId" : "1234",
            "ccg_etag" : "ccg_etag123xyz456",
            "ccg_pin" : "NONE",
            "cookbook_etag" : "20210420125956-20210511144538",
            "hostname" : "megapod-useast1-secret-hostname.sailpoint.com",
            "internal_ip" : "127.0.0.1",
            "lastSeen" : "1620843964604",
            "sinceSeen" : "14708",
            "sinceSeenMillis" : "14708",
            "localDev" : false,
            "stacktrace" : "",
            "status" : "NORMAL",
            "product" : "idn",
            "platform_version" : "2",
            "os_version" : "2345.3.1",
            "os_type" : "flatcar",
            "hypervisor" : "unknown"
          },
          "type" : "CCG",
          "status" : "NORMAL",
          "timestamp" : "2020-01-01T00:00:00Z"
        }
        "@
        
        # Handle status request from client
        
        try {
            $Result = ConvertFrom-JsonToManagedClientStatus -Json $ManagedClientStatus
            Update-BetaManagedClientStatus -Id $Id -ManagedClientStatus $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaManagedClientStatus -Id $Id -ManagedClientStatus $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaManagedClientStatus"
            Write-Host $_.ErrorDetails
        }
- path: /managed-clusters/{id}/log-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/managed-clusters#get-client-log-configuration
      source: |
        $Id = "aClusterId" # String | ID of ManagedCluster to get log configuration for
        
        # Get managed cluster's log configuration
        
        try {
            Get-BetaClientLogConfiguration -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaClientLogConfiguration -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaClientLogConfiguration"
            Write-Host $_.ErrorDetails
        }
- path: /managed-clusters/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/managed-clusters#get-managed-cluster
      source: |
        $Id = "aClusterId" # String | ID of the ManagedCluster to get
        
        # Get a specified managedcluster.
        
        try {
            Get-BetaManagedCluster -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaManagedCluster -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaManagedCluster"
            Write-Host $_.ErrorDetails
        }
- path: /managed-clusters
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/managed-clusters#get-managed-clusters
      source: |
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "operational eq operation" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **operational**: *eq* (optional)
        
        # Retrieve all managed clusters.
        
        try {
            Get-BetaManagedClusters 
    
            # Below is a request that includes all optional parameters
            # Get-BetaManagedClusters -Offset $Offset -Limit $Limit -Count $Count -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaManagedClusters"
            Write-Host $_.ErrorDetails
        }
- path: /managed-clusters/{id}/log-config
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/managed-clusters#put-client-log-configuration
      source: |
        $Id = "aClusterId" # String | ID of ManagedCluster to update log configuration for
        $ClientLogConfiguration = @"
        {
          "durationMinutes" : 120,
          "rootLevel" : "INFO",
          "clientId" : "aClientId",
          "expiration" : "2020-12-15T19:13:36.079Z",
          "logLevels" : "INFO"
        }
        "@
        
        # Update managed cluster's log configuration
        
        try {
            Send-BetaClientLogConfiguration -Id $Id -ClientLogConfiguration $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaClientLogConfiguration -Id $Id -ClientLogConfiguration $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaClientLogConfiguration"
            Write-Host $_.ErrorDetails
        }
- path: /multihosts
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/multi-host-integration#create-multi-host-integration
      source: |
        $MultiHostIntegrationsCreate = @"
        {
          "owner" : {
            "name" : "MyName",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "managementWorkgroup" : {
            "name" : "My Management Workgroup",
            "id" : "2c91808568c529c60168cca6f90c2222",
            "type" : "GOVERNANCE_GROUP"
          },
          "cluster" : {
            "name" : "Corporate Cluster",
            "id" : "2c9180866166b5b0016167c32ef31a66",
            "type" : "CLUSTER"
          },
          "connector" : "multihost-microsoft-sql-server",
          "connectorAttributes" : {
            "maxSourcesPerAggGroup" : 10,
            "maxAllowedSources" : 300
          },
          "created" : "2022-02-08T14:50:03.827Z",
          "name" : "My Multi-Host Integration",
          "description" : "This is the Multi-Host Integration.",
          "modified" : "2024-01-23T18:08:50.897Z"
        }
        "@
        
        # Create multi-host integration
        
        try {
            $Result = ConvertFrom-JsonToMultiHostIntegrationsCreate -Json $MultiHostIntegrationsCreate
            New-BetaMultiHostIntegration -MultiHostIntegrationsCreate $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaMultiHostIntegration -MultiHostIntegrationsCreate $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaMultiHostIntegration"
            Write-Host $_.ErrorDetails
        }
- path: /multihosts/{multihostId}
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/multi-host-integration#create-sources-within-multi-host
      source: |
        $MultihostId = "2c91808568c529c60168cca6f90c1326" # String | ID of the Multi-Host Integration.
        $MultiHostIntegrationsCreateSources = @"{
          "connectorAttributes" : {
            "authType" : "SQLAuthentication",
            "url" : "jdbc:sqlserver://178.18.41.118:1433",
            "user" : "username",
            "driverClass" : "com.microsoft.sqlserver.jdbc.SQLServerDriver",
            "maxSourcesPerAggGroup" : 10,
            "maxAllowedSources" : 300
          },
          "name" : "My Source",
          "description" : "This is the corporate directory."
        }"@ 
        
        
        # Create sources within multi-host integration
        
        try {
            $Result = ConvertFrom-JsonToMultiHostIntegrationsCreateSources -Json $MultiHostIntegrationsCreateSources
            New-BetaSourcesWithinMultiHost -MultihostId $MultihostId -MultiHostIntegrationsCreateSources $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaSourcesWithinMultiHost -MultihostId $MultihostId -MultiHostIntegrationsCreateSources $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaSourcesWithinMultiHost"
            Write-Host $_.ErrorDetails
        }
- path: /multihosts/{multihostId}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/multi-host-integration#delete-multi-host
      source: |
        $MultihostId = "2c91808568c529c60168cca6f90c1326" # String | ID of Multi-Host Integration to delete.
        
        # Delete multi-host integration
        
        try {
            Remove-BetaMultiHost -MultihostId $MultihostId 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaMultiHost -MultihostId $MultihostId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaMultiHost"
            Write-Host $_.ErrorDetails
        }
- path: /multihosts/{multihostId}/acctAggregationGroups
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/multi-host-integration#get-acct-aggregation-groups
      source: |
        $MultihostId = "aMultiHostId" # String | ID of the Multi-Host Integration to update
        
        # Get account aggregation groups within multi-host integration id
        
        try {
            Get-BetaAcctAggregationGroups -MultihostId $MultihostId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaAcctAggregationGroups -MultihostId $MultihostId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaAcctAggregationGroups"
            Write-Host $_.ErrorDetails
        }
- path: /multihosts/{multiHostId}/entitlementAggregationGroups
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/multi-host-integration#get-entitlement-aggregation-groups
      source: |
        $MultiHostId = "aMultiHostId" # String | ID of the Multi-Host Integration to update
        
        # Get entitlement aggregation groups within multi-host integration id
        
        try {
            Get-BetaEntitlementAggregationGroups -MultiHostId $MultiHostId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaEntitlementAggregationGroups -MultiHostId $MultiHostId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaEntitlementAggregationGroups"
            Write-Host $_.ErrorDetails
        }
- path: /multihosts/{multihostId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/multi-host-integration#get-multi-host-integrations
      source: |
        $MultihostId = "2c91808568c529c60168cca6f90c1326" # String | ID of the Multi-Host Integration.
        
        # Get multi-host integration by id
        
        try {
            Get-BetaMultiHostIntegrations -MultihostId $MultihostId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaMultiHostIntegrations -MultihostId $MultihostId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaMultiHostIntegrations"
            Write-Host $_.ErrorDetails
        }
- path: /multihosts
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/multi-host-integration#get-multi-host-integrations-list
      source: |
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional)
        $Filters = "id eq 2c91808b6ef1d43e016efba0ce470904" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **type**: *in*  **forSubAdminId**: *in* (optional)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $ForSubadmin = "5168015d32f890ca15812c9180835d2e" # String | If provided, filters the returned list according to what is visible to the indicated ROLE_SUBADMIN Identity or SOURCE_SUBADMIN identity.  The value of the parameter is either an Identity ID, or the special value **me**, which is shorthand for the calling Identity's ID.  A 400 Bad Request error is returned if the **for-subadmin** parameter is specified for an Identity that is not a subadmin. (optional)
        
        # List all existing multi-host integrations
        
        try {
            Get-BetaMultiHostIntegrationsList 
    
            # Below is a request that includes all optional parameters
            # Get-BetaMultiHostIntegrationsList -Offset $Offset -Limit $Limit -Sorters $Sorters -Filters $Filters -Count $Count -ForSubadmin $ForSubadmin   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaMultiHostIntegrationsList"
            Write-Host $_.ErrorDetails
        }
- path: /multihosts/{multiHostId}/sources/errors
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/multi-host-integration#get-multi-host-source-creation-errors
      source: |
        $MultiHostId = "004091cb79b04636b88662afa50a4440" # String | ID of the Multi-Host Integration
        
        # List multi-host source creation errors
        
        try {
            Get-BetaMultiHostSourceCreationErrors -MultiHostId $MultiHostId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaMultiHostSourceCreationErrors -MultiHostId $MultiHostId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaMultiHostSourceCreationErrors"
            Write-Host $_.ErrorDetails
        }
- path: /multihosts/types
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/multi-host-integration#get-multihost-integration-types
      source: |
        
        # List multi-host integration types
        
        try {
            Get-BetaMultihostIntegrationTypes 
    
            # Below is a request that includes all optional parameters
            # Get-BetaMultihostIntegrationTypes   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaMultihostIntegrationTypes"
            Write-Host $_.ErrorDetails
        }
- path: /multihosts/{multihostId}/sources
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/multi-host-integration#get-sources-within-multi-host
      source: |
        $MultihostId = "aMultiHostId" # String | ID of the Multi-Host Integration to update
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional)
        $Filters = "id eq 2c91808b6ef1d43e016efba0ce470904" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *in* (optional)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # List sources within multi-host integration
        
        try {
            Get-BetaSourcesWithinMultiHost -MultihostId $MultihostId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSourcesWithinMultiHost -MultihostId $MultihostId -Offset $Offset -Limit $Limit -Sorters $Sorters -Filters $Filters -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSourcesWithinMultiHost"
            Write-Host $_.ErrorDetails
        }
- path: /multihosts/{multihostId}/sources/testConnection
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/multi-host-integration#test-connection-multi-host-sources
      source: |
        $MultihostId = "2c91808568c529c60168cca6f90c1324" # String | ID of the Multi-Host Integration
        
        # Test configuration for multi-host integration
        
        try {
            Test-BetaConnectionMultiHostSources -MultihostId $MultihostId 
    
            # Below is a request that includes all optional parameters
            # Test-BetaConnectionMultiHostSources -MultihostId $MultihostId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Test-BetaConnectionMultiHostSources"
            Write-Host $_.ErrorDetails
        }
- path: /multihosts/{multihostId}/sources/{sourceId}/testConnection
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/multi-host-integration#test-source-connection-multihost
      source: |
        $MultihostId = "2c91808568c529c60168cca6f90c1326" # String | ID of the Multi-Host Integration
        $SourceId = "2c91808568c529f60168cca6f90c1324" # String | ID of the source within the Multi-Host Integration
        
        # Test configuration for multi-host integration's single source
        
        try {
            Test-BetaSourceConnectionMultihost -MultihostId $MultihostId -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Test-BetaSourceConnectionMultihost -MultihostId $MultihostId -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Test-BetaSourceConnectionMultihost"
            Write-Host $_.ErrorDetails
        }
- path: /multihosts/{multihostId}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/multi-host-integration#update-multi-host-sources
      source: |
        $MultihostId = "anId" # String | ID of the Multi-Host Integration to update.
        $UpdateMultiHostSourcesRequestInner = @"[{op=add, path=/description, value=MDK Multi-Host Integration 222 description}]"@ 
        
        
        # Update multi-host integration
        
        try {
            $Result = ConvertFrom-JsonToUpdateMultiHostSourcesRequestInner -Json $UpdateMultiHostSourcesRequestInner
            Update-BetaMultiHostSources -MultihostId $MultihostId -UpdateMultiHostSourcesRequestInner $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaMultiHostSources -MultihostId $MultihostId -UpdateMultiHostSourcesRequestInner $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaMultiHostSources"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-approvals/{id}/approve
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#approve-non-employee-request
      source: |
        $Id = "2c91808b6ef1d43e016efba0ce470904" # String | Non-Employee approval item id (UUID)
        $NonEmployeeApprovalDecision = @"
        {
          "comment" : "comment"
        }
        "@
        
        # Approve a non-employee request
        
        try {
            $Result = ConvertFrom-JsonToNonEmployeeApprovalDecision -Json $NonEmployeeApprovalDecision
            Approve-BetaNonEmployeeRequest -Id $Id -NonEmployeeApprovalDecision $Result 
    
            # Below is a request that includes all optional parameters
            # Approve-BetaNonEmployeeRequest -Id $Id -NonEmployeeApprovalDecision $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Approve-BetaNonEmployeeRequest"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-records
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#create-non-employee-record
      source: |
        $NonEmployeeRequestBody = @"
        {
          "sourceId" : "2c91808568c529c60168cca6f90c1313",
          "firstName" : "William",
          "lastName" : "Smith",
          "manager" : "jane.doe",
          "data" : {
            "description" : "Auditing"
          },
          "accountName" : "william.smith",
          "phone" : "5125555555",
          "endDate" : "2021-03-25T00:00:00-05:00",
          "email" : "william.smith@example.com",
          "startDate" : "2020-03-24T00:00:00-05:00"
        }
        "@
        
        # Create non-employee record
        
        try {
            $Result = ConvertFrom-JsonToNonEmployeeRequestBody -Json $NonEmployeeRequestBody
            New-BetaNonEmployeeRecord -NonEmployeeRequestBody $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaNonEmployeeRecord -NonEmployeeRequestBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaNonEmployeeRecord"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-requests
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#create-non-employee-request
      source: |
        $NonEmployeeRequestBody = @"
        {
          "sourceId" : "2c91808568c529c60168cca6f90c1313",
          "firstName" : "William",
          "lastName" : "Smith",
          "manager" : "jane.doe",
          "data" : {
            "description" : "Auditing"
          },
          "accountName" : "william.smith",
          "phone" : "5125555555",
          "endDate" : "2021-03-25T00:00:00-05:00",
          "email" : "william.smith@example.com",
          "startDate" : "2020-03-24T00:00:00-05:00"
        }
        "@
        
        # Create non-employee request
        
        try {
            $Result = ConvertFrom-JsonToNonEmployeeRequestBody -Json $NonEmployeeRequestBody
            New-BetaNonEmployeeRequest -NonEmployeeRequestBody $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaNonEmployeeRequest -NonEmployeeRequestBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaNonEmployeeRequest"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#create-non-employee-source
      source: |
        $NonEmployeeSourceRequestBody = @"
        {
          "owner" : {
            "id" : "2c91808570313110017040b06f344ec9"
          },
          "managementWorkgroup" : "123299",
          "accountManagers" : [ {
            "id" : "2c91808570313110017040b06f344ec9"
          }, {
            "id" : "2c91808570313110017040b06f344ec9"
          }, {
            "id" : "2c91808570313110017040b06f344ec9"
          }, {
            "id" : "2c91808570313110017040b06f344ec9"
          }, {
            "id" : "2c91808570313110017040b06f344ec9"
          } ],
          "name" : "Retail",
          "description" : "Source description",
          "approvers" : [ {
            "id" : "2c91808570313110017040b06f344ec9"
          }, {
            "id" : "2c91808570313110017040b06f344ec9"
          }, {
            "id" : "2c91808570313110017040b06f344ec9"
          } ]
        }
        "@
        
        # Create non-employee source
        
        try {
            $Result = ConvertFrom-JsonToNonEmployeeSourceRequestBody -Json $NonEmployeeSourceRequestBody
            New-BetaNonEmployeeSource -NonEmployeeSourceRequestBody $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaNonEmployeeSource -NonEmployeeSourceRequestBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaNonEmployeeSource"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources/{sourceId}/schema-attributes
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#create-non-employee-source-schema-attributes
      source: |
        $SourceId = "2c91808b6ef1d43e016efba0ce470904" # String | The Source id
        $NonEmployeeSchemaAttributeBody = @"
        {
          "helpText" : "The unique identifier for the account",
          "label" : "Account Name",
          "placeholder" : "Enter a unique user name for this account.",
          "type" : "TEXT",
          "technicalName" : "account.name",
          "required" : true
        }
        "@
        
        # Create non-employee source schema attribute
        
        try {
            $Result = ConvertFrom-JsonToNonEmployeeSchemaAttributeBody -Json $NonEmployeeSchemaAttributeBody
            New-BetaNonEmployeeSourceSchemaAttributes -SourceId $SourceId -NonEmployeeSchemaAttributeBody $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaNonEmployeeSourceSchemaAttributes -SourceId $SourceId -NonEmployeeSchemaAttributeBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaNonEmployeeSourceSchemaAttributes"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-records/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#delete-non-employee-record
      source: |
        $Id = "2c91808b6ef1d43e016efba0ce470904" # String | Non-Employee record id (UUID)
        
        # Delete non-employee record
        
        try {
            Remove-BetaNonEmployeeRecord -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaNonEmployeeRecord -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaNonEmployeeRecord"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-records/bulk-delete
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#delete-non-employee-record-in-bulk
      source: |
        $DeleteNonEmployeeRecordInBulkRequest = @"
        
        "@
        
        # Delete multiple non-employee records
        
        try {
            $Result = ConvertFrom-JsonToDeleteNonEmployeeRecordInBulkRequest -Json $DeleteNonEmployeeRecordInBulkRequest
            Remove-BetaNonEmployeeRecordInBulk -DeleteNonEmployeeRecordInBulkRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaNonEmployeeRecordInBulk -DeleteNonEmployeeRecordInBulkRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaNonEmployeeRecordInBulk"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-requests/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#delete-non-employee-request
      source: |
        $Id = "2c91808b6ef1d43e016efba0ce470904" # String | Non-Employee request id in the UUID format
        
        # Delete non-employee request
        
        try {
            Remove-BetaNonEmployeeRequest -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaNonEmployeeRequest -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaNonEmployeeRequest"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources/{sourceId}/schema-attributes/{attributeId}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#delete-non-employee-schema-attribute
      source: |
        $AttributeId = "2c91808b6ef1d43e016efba0ce470904" # String | The Schema Attribute Id (UUID)
        $SourceId = "2c91808b6ef1d43e016efba0ce470904" # String | The Source id
        
        # Delete non-employee source's schema attribute
        
        try {
            Remove-BetaNonEmployeeSchemaAttribute -AttributeId $AttributeId -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaNonEmployeeSchemaAttribute -AttributeId $AttributeId -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaNonEmployeeSchemaAttribute"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources/{sourceId}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#delete-non-employee-source
      source: |
        $SourceId = "2c91808b6ef1d43e016efba0ce470904" # String | Source Id
        
        # Delete non-employee source
        
        try {
            Remove-BetaNonEmployeeSource -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaNonEmployeeSource -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaNonEmployeeSource"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources/{sourceId}/schema-attributes
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#delete-non-employee-source-schema-attributes
      source: |
        $SourceId = "2c91808b6ef1d43e016efba0ce470904" # String | The Source id
        
        # Delete all custom schema attributes
        
        try {
            Remove-BetaNonEmployeeSourceSchemaAttributes -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaNonEmployeeSourceSchemaAttributes -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaNonEmployeeSourceSchemaAttributes"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-approvals/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#get-non-employee-approval
      source: |
        $Id = "ac10d20a-841e-1e7d-8184-32d2e22c0179" # String | Non-Employee approval item id (UUID)
        $IncludeDetail = "include-detail=false" # String | The object nonEmployeeRequest will not be included detail when set to false. *Default value is true* (optional)
        
        # A non-employee approval item detail
        
        try {
            Get-BetaNonEmployeeApproval -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeApproval -Id $Id -IncludeDetail $IncludeDetail   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeApproval"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-approvals/summary/{requested-for}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#get-non-employee-approval-summary
      source: |
        $RequestedFor = "ac10d20a-841e-1e7d-8184-32d2e22c0179" # String | The identity (UUID) of the approver for whom for whom the summary is being retrieved. Use ""me"" instead to indicate the current user.
        
        # Summary of non-employee approval requests
        
        try {
            Get-BetaNonEmployeeApprovalSummary -RequestedFor $RequestedFor 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeApprovalSummary -RequestedFor $RequestedFor   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeApprovalSummary"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources/{id}/non-employee-bulk-upload/status
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#get-non-employee-bulk-upload-status
      source: |
        $Id = "2c918085842e69ae018432d22ccb212f" # String | Source ID (UUID)
        
        # Bulk upload status on source
        
        try {
            Get-BetaNonEmployeeBulkUploadStatus -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeBulkUploadStatus -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeBulkUploadStatus"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources/{id}/non-employees/download
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#get-non-employee-export-records
      source: |
        $Id = "2c918085842e69ae018432d22ccb212f" # String | Source Id (UUID)
        
        # Exports non-employee records to csv
        
        try {
            Get-BetaNonEmployeeExportRecords -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeExportRecords -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeExportRecords"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources/{id}/schema-attributes-template/download
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#get-non-employee-export-source-schema-template
      source: |
        $Id = "2c918085842e69ae018432d22ccb212f" # String | Source Id (UUID)
        
        # Exports source schema template
        
        try {
            Get-BetaNonEmployeeExportSourceSchemaTemplate -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeExportSourceSchemaTemplate -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeExportSourceSchemaTemplate"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-records/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#get-non-employee-record
      source: |
        $Id = "2c91808b6ef1d43e016efba0ce470904" # String | Non-Employee record id (UUID)
        
        # Get a non-employee record
        
        try {
            Get-BetaNonEmployeeRecord -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeRecord -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeRecord"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-requests/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#get-non-employee-request
      source: |
        $Id = "2c91808b6ef1d43e016efba0ce470904" # String | Non-Employee request id (UUID)
        
        # Get a non-employee request
        
        try {
            Get-BetaNonEmployeeRequest -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeRequest -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeRequest"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-requests/summary/{requested-for}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#get-non-employee-request-summary
      source: |
        $RequestedFor = "ac10d20a-841e-1e7d-8184-32d2e22c0179" # String | The identity (UUID) of the non-employee account manager for whom the summary is being retrieved. Use ""me"" instead to indicate the current user.
        
        # Get summary of non-employee requests
        
        try {
            Get-BetaNonEmployeeRequestSummary -RequestedFor $RequestedFor 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeRequestSummary -RequestedFor $RequestedFor   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeRequestSummary"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources/{sourceId}/schema-attributes/{attributeId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#get-non-employee-schema-attribute
      source: |
        $AttributeId = "2c918085842e69ae018432d22ccb212f" # String | The Schema Attribute Id (UUID)
        $SourceId = "2c918085842e69ae018432d22ccb212f" # String | The Source id
        
        # Get schema attribute non-employee source
        
        try {
            Get-BetaNonEmployeeSchemaAttribute -AttributeId $AttributeId -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeSchemaAttribute -AttributeId $AttributeId -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeSchemaAttribute"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources/{sourceId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#get-non-employee-source
      source: |
        $SourceId = "2c91808b7c28b350017c2a2ec5790aa1" # String | Source Id
        
        # Get a non-employee source
        
        try {
            Get-BetaNonEmployeeSource -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeSource -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeSource"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources/{sourceId}/schema-attributes
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#get-non-employee-source-schema-attributes
      source: |
        $SourceId = "2c918085842e69ae018432d22ccb212f" # String | The Source id
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        
        # List schema attributes non-employee source
        
        try {
            Get-BetaNonEmployeeSourceSchemaAttributes -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeSourceSchemaAttributes -SourceId $SourceId -Limit $Limit -Offset $Offset   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeSourceSchemaAttributes"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources/{id}/non-employee-bulk-upload
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#import-non-employee-records-in-bulk
      source: |
        $Id = "e136567de87e4d029e60b3c3c55db56d" # String | Source Id (UUID)
        $Data =  # System.IO.FileInfo | 
        
        # Imports, or updates, non-employee records
        
        try {
            Import-BetaNonEmployeeRecordsInBulk -Id $Id -Data $Data 
    
            # Below is a request that includes all optional parameters
            # Import-BetaNonEmployeeRecordsInBulk -Id $Id -Data $Data   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Import-BetaNonEmployeeRecordsInBulk"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-approvals
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#list-non-employee-approval
      source: |
        $RequestedFor = "ac10d20a-841e-1e7d-8184-32d2e22c0179" # String | The identity for whom the request was made. *me* indicates the current user. (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "approvalStatus eq "PENDING"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **approvalStatus**: *eq* (optional)
        $Sorters = "created" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, modified** (optional)
        
        # List of non-employee approval requests
        
        try {
            Get-BetaNonEmployeeApproval 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeApproval -RequestedFor $RequestedFor -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeApproval"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-records
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#list-non-employee-records
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Sorters = "accountName,sourceId" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified** (optional)
        $Filters = "sourceId eq "2c91808568c529c60168cca6f90c1313"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **sourceId**: *eq* (optional)
        
        # List non-employee records
        
        try {
            Get-BetaNonEmployeeRecords 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeRecords -Limit $Limit -Offset $Offset -Count $Count -Sorters $Sorters -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeRecords"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-requests
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#list-non-employee-requests
      source: |
        $RequestedFor = "me" # String | The identity for whom the request was made. *me* indicates the current user.
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Sorters = "approvalStatus,firstName" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created, approvalStatus, firstName, lastName, email, phone, accountName, startDate, endDate** (optional)
        $Filters = "sourceId eq "2c91808568c529c60168cca6f90c1313"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **sourceId**: *eq* (optional)
        
        # List non-employee requests
        
        try {
            Get-BetaNonEmployeeRequests -RequestedFor $RequestedFor 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeRequests -RequestedFor $RequestedFor -Limit $Limit -Offset $Offset -Count $Count -Sorters $Sorters -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeRequests"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#list-non-employee-sources
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $RequestedFor = "me" # String | Identity the request was made for. Use 'me' to indicate the current user. (optional)
        $NonEmployeeCount = $false # Boolean | Flag that determines whether the API will return a non-employee count associated with the source. (optional) (default to $false)
        $Sorters = "name,created" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, sourceId** (optional)
        
        # List non-employee sources
        
        try {
            Get-BetaNonEmployeeSources 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNonEmployeeSources -Limit $Limit -Offset $Offset -Count $Count -RequestedFor $RequestedFor -NonEmployeeCount $NonEmployeeCount -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNonEmployeeSources"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-records/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#patch-non-employee-record
      source: |
        $Id = "2c91808b6ef1d43e016efba0ce470904" # String | Non-employee record id (UUID)
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch non-employee record
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaNonEmployeeRecord -Id $Id -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaNonEmployeeRecord -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaNonEmployeeRecord"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources/{sourceId}/schema-attributes/{attributeId}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#patch-non-employee-schema-attribute
      source: |
        $AttributeId = "2c91808b6ef1d43e016efba0ce470904" # String | The Schema Attribute Id (UUID)
        $SourceId = "2c91808b6ef1d43e016efba0ce470904" # String | The Source id
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch non-employee source's schema attribute
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaNonEmployeeSchemaAttribute -AttributeId $AttributeId -SourceId $SourceId -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaNonEmployeeSchemaAttribute -AttributeId $AttributeId -SourceId $SourceId -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaNonEmployeeSchemaAttribute"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-sources/{sourceId}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#patch-non-employee-source
      source: |
        $SourceId = "2c91808b6ef1d43e016efba0ce470904" # String | Source Id
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch a non-employee source
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaNonEmployeeSource -SourceId $SourceId -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaNonEmployeeSource -SourceId $SourceId -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaNonEmployeeSource"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-records/{id}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#put-non-employee-record
      source: |
        $Id = "2c91808b6ef1d43e016efba0ce470904" # String | Non-employee record id (UUID)
        $NonEmployeeRequestBody = @"
        {
          "sourceId" : "2c91808568c529c60168cca6f90c1313",
          "firstName" : "William",
          "lastName" : "Smith",
          "manager" : "jane.doe",
          "data" : {
            "description" : "Auditing"
          },
          "accountName" : "william.smith",
          "phone" : "5125555555",
          "endDate" : "2021-03-25T00:00:00-05:00",
          "email" : "william.smith@example.com",
          "startDate" : "2020-03-24T00:00:00-05:00"
        }
        "@
        
        # Update non-employee record
        
        try {
            $Result = ConvertFrom-JsonToNonEmployeeRequestBody -Json $NonEmployeeRequestBody
            Send-BetaNonEmployeeRecord -Id $Id -NonEmployeeRequestBody $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaNonEmployeeRecord -Id $Id -NonEmployeeRequestBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaNonEmployeeRecord"
            Write-Host $_.ErrorDetails
        }
- path: /non-employee-approvals/{id}/reject
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/non-employee-lifecycle-management#reject-non-employee-request
      source: |
        $Id = "2c91808b6ef1d43e016efba0ce470904" # String | Non-Employee approval item id (UUID)
        $NonEmployeeRejectApprovalDecision = @"
        {
          "comment" : "comment"
        }
        "@
        
        # Reject a non-employee request
        
        try {
            $Result = ConvertFrom-JsonToNonEmployeeRejectApprovalDecision -Json $NonEmployeeRejectApprovalDecision
            Deny-BetaNonEmployeeRequest -Id $Id -NonEmployeeRejectApprovalDecision $Result 
    
            # Below is a request that includes all optional parameters
            # Deny-BetaNonEmployeeRequest -Id $Id -NonEmployeeRejectApprovalDecision $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Deny-BetaNonEmployeeRequest"
            Write-Host $_.ErrorDetails
        }
- path: /verified-domains
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#create-domain-dkim
      source: |
        $DomainAddress = @"
        {
          "domain" : "sailpoint.com"
        }
        "@
        
        # Verify domain address via dkim
        
        try {
            $Result = ConvertFrom-JsonToDomainAddress -Json $DomainAddress
            New-BetaDomainDkim -DomainAddress $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaDomainDkim -DomainAddress $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaDomainDkim"
            Write-Host $_.ErrorDetails
        }
- path: /notification-templates
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#create-notification-template
      source: |
        $TemplateDto = @"
        {
          "slackTemplate" : "slackTemplate",
          "footer" : "footer",
          "teamsTemplate" : "teamsTemplate",
          "subject" : "You have $numberOfPendingTasks $taskTasks to complete in ${__global.productName}.",
          "created" : "2020-01-01T00:00:00Z",
          "description" : "Daily digest - sent if number of outstanding tasks for task owner > 0",
          "medium" : "EMAIL",
          "locale" : "en",
          "body" : "Please go to the task manager",
          "name" : "Task Manager Subscription",
          "replyTo" : "$__global.emailFromAddress",
          "header" : "header",
          "modified" : "2020-01-01T00:00:00Z",
          "from" : "$__global.emailFromAddress",
          "id" : "c17bea3a-574d-453c-9e04-4365fbf5af0b",
          "key" : "cloud_manual_work_item_summary"
        }
        "@
        
        # Create notification template
        
        try {
            $Result = ConvertFrom-JsonToTemplateDto -Json $TemplateDto
            New-BetaNotificationTemplate -TemplateDto $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaNotificationTemplate -TemplateDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaNotificationTemplate"
            Write-Host $_.ErrorDetails
        }
- path: /verified-from-addresses
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#create-verified-from-address
      source: |
        $EmailStatusDto = @"
        {
          "isVerifiedByDomain" : false,
          "verificationStatus" : "PENDING",
          "id" : "id",
          "email" : "sender@example.com"
        }
        "@
        
        # Create verified from address
        
        try {
            $Result = ConvertFrom-JsonToEmailStatusDto -Json $EmailStatusDto
            New-BetaVerifiedFromAddress -EmailStatusDto $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaVerifiedFromAddress -EmailStatusDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaVerifiedFromAddress"
            Write-Host $_.ErrorDetails
        }
- path: /notification-templates/bulk-delete
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#delete-notification-templates-in-bulk
      source: |
        $TemplateBulkDeleteDto = @"{
          "medium" : "EMAIL",
          "locale" : "en",
          "key" : "cloud_manual_work_item_summary"
        }"@ 
        
        
        # Bulk delete notification templates
        
        try {
            $Result = ConvertFrom-JsonToTemplateBulkDeleteDto -Json $TemplateBulkDeleteDto
            Remove-BetaNotificationTemplatesInBulk -TemplateBulkDeleteDto $Result 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaNotificationTemplatesInBulk -TemplateBulkDeleteDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaNotificationTemplatesInBulk"
            Write-Host $_.ErrorDetails
        }
- path: /verified-from-addresses/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#delete-verified-from-address
      source: |
        $Id = "MyId" # String | 
        
        # Delete verified from address
        
        try {
            Remove-BetaVerifiedFromAddress -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaVerifiedFromAddress -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaVerifiedFromAddress"
            Write-Host $_.ErrorDetails
        }
- path: /verified-domains
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#get-dkim-attributes
      source: |
        
        # Get dkim attributes
        
        try {
            Get-BetaDkimAttributes 
    
            # Below is a request that includes all optional parameters
            # Get-BetaDkimAttributes   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaDkimAttributes"
            Write-Host $_.ErrorDetails
        }
- path: /mail-from-attributes/{identityId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#get-mail-from-attributes
      source: |
        $IdentityId = "bobsmith@sailpoint.com" # String | Returns the MX and TXT record to be put in your DNS, as well as the MAIL FROM domain status
        
        # Get mail from attributes
        
        try {
            Get-BetaMailFromAttributes -IdentityId $IdentityId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaMailFromAttributes -IdentityId $IdentityId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaMailFromAttributes"
            Write-Host $_.ErrorDetails
        }
- path: /notification-templates/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#get-notification-template
      source: |
        $Id = "c17bea3a-574d-453c-9e04-4365fbf5af0b" # String | Id of the Notification Template
        
        # Get notification template by id
        
        try {
            Get-BetaNotificationTemplate -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNotificationTemplate -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNotificationTemplate"
            Write-Host $_.ErrorDetails
        }
- path: /notification-template-context
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#get-notifications-template-context
      source: |
        
        # Get notification template context
        
        try {
            Get-BetaNotificationsTemplateContext 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNotificationsTemplateContext   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNotificationsTemplateContext"
            Write-Host $_.ErrorDetails
        }
- path: /verified-from-addresses
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#list-from-addresses
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "email eq "john.doe@company.com"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **email**: *eq, ge, le, sw* (optional)
        $Sorters = "email" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **email** (optional)
        
        # List from addresses
        
        try {
            Get-BetaFromAddresses 
    
            # Below is a request that includes all optional parameters
            # Get-BetaFromAddresses -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaFromAddresses"
            Write-Host $_.ErrorDetails
        }
- path: /notification-preferences/{key}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#list-notification-preferences
      source: |
        $Key = "cloud_manual_work_item_summary" # String | The notification key.
        
        # List notification preferences for tenant.
        
        try {
            Get-BetaNotificationPreferences -Key $Key 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNotificationPreferences -Key $Key   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNotificationPreferences"
            Write-Host $_.ErrorDetails
        }
- path: /notification-template-defaults
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#list-notification-template-defaults
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Filters = "key eq "cloud_manual_work_item_summary"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **key**: *eq, in, sw*  **medium**: *eq, sw*  **locale**: *eq, sw* (optional)
        
        # List notification template defaults
        
        try {
            Get-BetaNotificationTemplateDefaults 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNotificationTemplateDefaults -Limit $Limit -Offset $Offset -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNotificationTemplateDefaults"
            Write-Host $_.ErrorDetails
        }
- path: /notification-templates
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#list-notification-templates
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Filters = "medium eq "EMAIL"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **key**: *eq, in*  **medium**: *eq*  **locale**: *eq*  **name**: *eq, sw*  **description**: *eq, sw*  **id**: *eq, sw* (optional)
        $Sorters = "key, -name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **key, name, medium** (optional)
        
        # List notification templates
        
        try {
            Get-BetaNotificationTemplates 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNotificationTemplates -Limit $Limit -Offset $Offset -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNotificationTemplates"
            Write-Host $_.ErrorDetails
        }
- path: /mail-from-attributes
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#put-mail-from-attributes
      source: |
        $MailFromAttributesDto = @"
        {
          "identity" : "BobSmith@sailpoint.com",
          "mailFromDomain" : "example.sailpoint.com"
        }
        "@
        
        # Change mail from domain
        
        try {
            $Result = ConvertFrom-JsonToMailFromAttributesDto -Json $MailFromAttributesDto
            Send-BetaMailFromAttributes -MailFromAttributesDto $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaMailFromAttributes -MailFromAttributesDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaMailFromAttributes"
            Write-Host $_.ErrorDetails
        }
- path: /send-test-notification
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/notifications#send-test-notification
      source: |
        $SendTestNotificationRequestDto = @"
        {
          "context" : "{}",
          "medium" : "EMAIL",
          "key" : "cloud_manual_work_item_summary"
        }
        "@
        
        # Send test notification
        
        try {
            $Result = ConvertFrom-JsonToSendTestNotificationRequestDto -Json $SendTestNotificationRequestDto
            Send-BetaTestNotification -SendTestNotificationRequestDto $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaTestNotification -SendTestNotificationRequestDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaTestNotification"
            Write-Host $_.ErrorDetails
        }
- path: /oauth-clients
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/o-auth-clients#create-oauth-client
      source: |
        $CreateOAuthClientRequest = @"
        {
          "internal" : false,
          "businessName" : "Acme-Solar",
          "description" : "An API client used for the authorization_code, refresh_token, and client_credentials flows",
          "refreshTokenValiditySeconds" : 86400,
          "type" : "CONFIDENTIAL",
          "redirectUris" : [ "http://localhost:12345", "http://localhost:67890" ],
          "enabled" : true,
          "accessType" : "OFFLINE",
          "grantTypes" : [ "AUTHORIZATION_CODE", "CLIENT_CREDENTIALS", "REFRESH_TOKEN" ],
          "strongAuthSupported" : false,
          "homepageUrl" : "http://localhost:12345",
          "accessTokenValiditySeconds" : 750,
          "scope" : [ "demo:api-client-scope:first", "demo:api-client-scope:second" ],
          "name" : "Demo API Client",
          "claimsSupported" : false
        }
        "@
        
        # Create oauth client
        
        try {
            $Result = ConvertFrom-JsonToCreateOAuthClientRequest -Json $CreateOAuthClientRequest
            New-BetaOauthClient -CreateOAuthClientRequest $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaOauthClient -CreateOAuthClientRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaOauthClient"
            Write-Host $_.ErrorDetails
        }
- path: /oauth-clients/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/o-auth-clients#delete-oauth-client
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The OAuth client id
        
        # Delete oauth client
        
        try {
            Remove-BetaOauthClient -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaOauthClient -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaOauthClient"
            Write-Host $_.ErrorDetails
        }
- path: /oauth-clients/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/o-auth-clients#get-oauth-client
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The OAuth client id
        
        # Get oauth client
        
        try {
            Get-BetaOauthClient -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaOauthClient -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaOauthClient"
            Write-Host $_.ErrorDetails
        }
- path: /oauth-clients
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/o-auth-clients#list-oauth-clients
      source: |
        $Filters = "lastUsed le 2023-02-05T10:59:27.214Z" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **lastUsed**: *le, isnull* (optional)
        
        # List oauth clients
        
        try {
            Get-BetaOauthClients 
    
            # Below is a request that includes all optional parameters
            # Get-BetaOauthClients -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaOauthClients"
            Write-Host $_.ErrorDetails
        }
- path: /oauth-clients/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/o-auth-clients#patch-oauth-client
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The OAuth client id
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch oauth client
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaOauthClient -Id $Id -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaOauthClient -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaOauthClient"
            Write-Host $_.ErrorDetails
        }
- path: /org-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/org-config#get-org-config
      source: |
        
        # Get org configuration settings
        
        try {
            Get-BetaOrgConfig 
    
            # Below is a request that includes all optional parameters
            # Get-BetaOrgConfig   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaOrgConfig"
            Write-Host $_.ErrorDetails
        }
- path: /org-config/valid-time-zones
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/org-config#get-valid-time-zones
      source: |
        
        # Get list of time zones
        
        try {
            Get-BetaValidTimeZones 
    
            # Below is a request that includes all optional parameters
            # Get-BetaValidTimeZones   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaValidTimeZones"
            Write-Host $_.ErrorDetails
        }
- path: /org-config
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/org-config#patch-org-config
      source: |
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch an org configuration property
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaOrgConfig -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaOrgConfig -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaOrgConfig"
            Write-Host $_.ErrorDetails
        }
- path: /password-org-config
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-configuration#create-password-org-config
      source: |
        $PasswordOrgConfig = @"
        {
          "digitTokenLength" : 9,
          "digitTokenEnabled" : true,
          "digitTokenDurationMinutes" : 10,
          "customInstructionsEnabled" : true
        }
        "@
        
        # Create password org config
        
        try {
            $Result = ConvertFrom-JsonToPasswordOrgConfig -Json $PasswordOrgConfig
            New-BetaPasswordOrgConfig -PasswordOrgConfig $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaPasswordOrgConfig -PasswordOrgConfig $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaPasswordOrgConfig"
            Write-Host $_.ErrorDetails
        }
- path: /password-org-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-configuration#get-password-org-config
      source: |
        
        # Get password org config
        
        try {
            Get-BetaPasswordOrgConfig 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPasswordOrgConfig   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPasswordOrgConfig"
            Write-Host $_.ErrorDetails
        }
- path: /password-org-config
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-configuration#put-password-org-config
      source: |
        $PasswordOrgConfig = @"
        {
          "digitTokenLength" : 9,
          "digitTokenEnabled" : true,
          "digitTokenDurationMinutes" : 10,
          "customInstructionsEnabled" : true
        }
        "@
        
        # Update password org config
        
        try {
            $Result = ConvertFrom-JsonToPasswordOrgConfig -Json $PasswordOrgConfig
            Send-BetaPasswordOrgConfig -PasswordOrgConfig $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaPasswordOrgConfig -PasswordOrgConfig $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaPasswordOrgConfig"
            Write-Host $_.ErrorDetails
        }
- path: /password-dictionary
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-dictionary#get-password-dictionary
      source: |
        
        # Get password dictionary
        
        try {
            Get-BetaPasswordDictionary 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPasswordDictionary   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPasswordDictionary"
            Write-Host $_.ErrorDetails
        }
- path: /password-dictionary
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-dictionary#put-password-dictionary
      source: |
        $File =  # System.IO.FileInfo |  (optional)
        
        # Update password dictionary
        
        try {
            Send-BetaPasswordDictionary 
    
            # Below is a request that includes all optional parameters
            # Send-BetaPasswordDictionary -File $File   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaPasswordDictionary"
            Write-Host $_.ErrorDetails
        }
- path: /generate-password-reset-token/digit
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-management#create-digit-token
      source: |
        $PasswordDigitTokenReset = @"
        {
          "durationMinutes" : 5,
          "length" : 8,
          "userId" : "Abby.Smith"
        }
        "@
        
        # Generate a digit token
        
        try {
            $Result = ConvertFrom-JsonToPasswordDigitTokenReset -Json $PasswordDigitTokenReset
            New-BetaDigitToken -PasswordDigitTokenReset $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaDigitToken -PasswordDigitTokenReset $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaDigitToken"
            Write-Host $_.ErrorDetails
        }
- path: /password-change-status/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-management#get-identity-password-change-status
      source: |
        $Id = "MyId" # String | 
        
        # Get password change request status
        
        try {
            Get-BetaIdentityPasswordChangeStatus -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaIdentityPasswordChangeStatus -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaIdentityPasswordChangeStatus"
            Write-Host $_.ErrorDetails
        }
- path: /query-password-info
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-management#query-password-info
      source: |
        $PasswordInfoQueryDTO = @"
        {
          "sourceName" : "My-AD",
          "userName" : "Abby.Smith"
        }
        "@
        
        # Query password info
        
        try {
            $Result = ConvertFrom-JsonToPasswordInfoQueryDTO -Json $PasswordInfoQueryDTO
            Search-BetaPasswordInfo -PasswordInfoQueryDTO $Result 
    
            # Below is a request that includes all optional parameters
            # Search-BetaPasswordInfo -PasswordInfoQueryDTO $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Search-BetaPasswordInfo"
            Write-Host $_.ErrorDetails
        }
- path: /set-password
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-management#set-identity-password
      source: |
        $PasswordChangeRequest = @"
        {
          "sourceId" : "8a807d4c73c545510173c545d4b60246",
          "accountId" : "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com",
          "identityId" : "8a807d4c73c545510173c545f0a002ff",
          "publicKeyId" : "YWQ2NjQ4MTItZjY0NC00MWExLWFjMjktOGNmMzU3Y2VlNjk2",
          "encryptedPassword" : "XzN+YwKgr2C+InkMYFMBG3UtjMEw5ZIql/XFlXo8cJNeslmkplx6vn4kd4/43IF9STBk5RnzR6XmjpEO+FwHDoiBwYZAkAZK/Iswxk4OdybG6Y4MStJCOCiK8osKr35IMMSV/mbO4wAeltoCk7daTWzTGLiI6UaT5tf+F2EgdjJZ7YqM8W8r7aUWsm3p2Xt01Y46ZRx0QaM91QruiIx2rECFT2pUO0wr+7oQ77jypATyGWRtADsu3YcvCk/6U5MqCnXMzKBcRas7NnZdSL/d5H1GglVGz3VLPMaivG4/oL4chOMmFCRl/zVsGxZ9RhN8rxsRGFFKn+rhExTi+bax3A=="
        }
        "@
        
        # Set identity's password
        
        try {
            $Result = ConvertFrom-JsonToPasswordChangeRequest -Json $PasswordChangeRequest
            Set-BetaIdentityPassword -PasswordChangeRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Set-BetaIdentityPassword -PasswordChangeRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Set-BetaIdentityPassword"
            Write-Host $_.ErrorDetails
        }
- path: /password-policies
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-policies#create-password-policy
      source: |
        $PasswordPolicyV3Dto = @"
        {
          "validateAgainstAccountName" : true,
          "minLength" : 8,
          "description" : "Information about the Password Policy",
          "requireStrongAuthUntrustedGeographies" : true,
          "enablePasswdExpiration" : true,
          "minNumeric" : 8,
          "lastUpdated" : "2000-01-23T04:56:07.000+00:00",
          "validateAgainstAccountId" : false,
          "dateCreated" : "2000-01-23T04:56:07.000+00:00",
          "accountNameMinWordLength" : 6,
          "minUpper" : 8,
          "firstExpirationReminder" : 45,
          "modified" : "modified",
          "id" : "2c91808e7d976f3b017d9f5ceae440c8",
          "requireStrongAuthn" : true,
          "useDictionary" : false,
          "minSpecial" : 8,
          "sourceIds" : [ "2c91808382ffee0b01830de154f14034", "2f98808382ffee0b01830de154f12134" ],
          "passwordExpiration" : 8,
          "maxRepeatedChars" : 3,
          "minCharacterTypes" : 5,
          "minAlpha" : 5,
          "created" : "created",
          "useAccountAttributes" : false,
          "accountIdMinWordLength" : 4,
          "minLower" : 8,
          "useIdentityAttributes" : false,
          "defaultPolicy" : true,
          "requireStrongAuthOffNetwork" : true,
          "name" : "PasswordPolicy Example",
          "maxLength" : 25
        }
        "@
        
        # Create password policy
        
        try {
            $Result = ConvertFrom-JsonToPasswordPolicyV3Dto -Json $PasswordPolicyV3Dto
            New-BetaPasswordPolicy -PasswordPolicyV3Dto $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaPasswordPolicy -PasswordPolicyV3Dto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaPasswordPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /password-policies/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-policies#delete-password-policy
      source: |
        $Id = "ff808081838d9e9d01838da6a03e0002" # String | The ID of password policy to delete.
        
        # Delete password policy by id
        
        try {
            Remove-BetaPasswordPolicy -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaPasswordPolicy -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaPasswordPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /password-policies/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-policies#get-password-policy-by-id
      source: |
        $Id = "ff808081838d9e9d01838da6a03e0005" # String | The ID of password policy to retrieve.
        
        # Get password policy by id
        
        try {
            Get-BetaPasswordPolicyById -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPasswordPolicyById -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPasswordPolicyById"
            Write-Host $_.ErrorDetails
        }
- path: /password-policies
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-policies#list-password-policies
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # List password policies
        
        try {
            Get-BetaPasswordPolicies 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPasswordPolicies -Limit $Limit -Offset $Offset -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPasswordPolicies"
            Write-Host $_.ErrorDetails
        }
- path: /password-policies/{id}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-policies#set-password-policy
      source: |
        $Id = "ff808081838d9e9d01838da6a03e0007" # String | The ID of password policy to update.
        $PasswordPolicyV3Dto = @"
        {
          "validateAgainstAccountName" : true,
          "minLength" : 8,
          "description" : "Information about the Password Policy",
          "requireStrongAuthUntrustedGeographies" : true,
          "enablePasswdExpiration" : true,
          "minNumeric" : 8,
          "lastUpdated" : "2000-01-23T04:56:07.000+00:00",
          "validateAgainstAccountId" : false,
          "dateCreated" : "2000-01-23T04:56:07.000+00:00",
          "accountNameMinWordLength" : 6,
          "minUpper" : 8,
          "firstExpirationReminder" : 45,
          "modified" : "modified",
          "id" : "2c91808e7d976f3b017d9f5ceae440c8",
          "requireStrongAuthn" : true,
          "useDictionary" : false,
          "minSpecial" : 8,
          "sourceIds" : [ "2c91808382ffee0b01830de154f14034", "2f98808382ffee0b01830de154f12134" ],
          "passwordExpiration" : 8,
          "maxRepeatedChars" : 3,
          "minCharacterTypes" : 5,
          "minAlpha" : 5,
          "created" : "created",
          "useAccountAttributes" : false,
          "accountIdMinWordLength" : 4,
          "minLower" : 8,
          "useIdentityAttributes" : false,
          "defaultPolicy" : true,
          "requireStrongAuthOffNetwork" : true,
          "name" : "PasswordPolicy Example",
          "maxLength" : 25
        }
        "@
        
        # Update password policy by id
        
        try {
            $Result = ConvertFrom-JsonToPasswordPolicyV3Dto -Json $PasswordPolicyV3Dto
            Set-BetaPasswordPolicy -Id $Id -PasswordPolicyV3Dto $Result 
    
            # Below is a request that includes all optional parameters
            # Set-BetaPasswordPolicy -Id $Id -PasswordPolicyV3Dto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Set-BetaPasswordPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /password-sync-groups
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-sync-groups#create-password-sync-group
      source: |
        $PasswordSyncGroup = @"
        {
          "created" : "2023-03-16T04:00:00Z",
          "name" : "Password Sync Group 1",
          "modified" : "2023-03-16T04:00:00Z",
          "passwordPolicyId" : "2c91808d744ba0ce01746f93b6204501",
          "id" : "6881f631-3bd5-4213-9c75-8e05cc3e35dd",
          "sourceIds" : [ "2c918084660f45d6016617daa9210584", "2c918084660f45d6016617daa9210500" ]
        }
        "@
        
        # Create password sync group
        
        try {
            $Result = ConvertFrom-JsonToPasswordSyncGroup -Json $PasswordSyncGroup
            New-BetaPasswordSyncGroup -PasswordSyncGroup $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaPasswordSyncGroup -PasswordSyncGroup $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaPasswordSyncGroup"
            Write-Host $_.ErrorDetails
        }
- path: /password-sync-groups/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-sync-groups#delete-password-sync-group
      source: |
        $Id = "6881f631-3bd5-4213-9c75-8e05cc3e35dd" # String | The ID of password sync group to delete.
        
        # Delete password sync group by id
        
        try {
            Remove-BetaPasswordSyncGroup -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaPasswordSyncGroup -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaPasswordSyncGroup"
            Write-Host $_.ErrorDetails
        }
- path: /password-sync-groups/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-sync-groups#get-password-sync-group
      source: |
        $Id = "6881f631-3bd5-4213-9c75-8e05cc3e35dd" # String | The ID of password sync group to retrieve.
        
        # Get password sync group by id
        
        try {
            Get-BetaPasswordSyncGroup -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPasswordSyncGroup -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPasswordSyncGroup"
            Write-Host $_.ErrorDetails
        }
- path: /password-sync-groups
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-sync-groups#get-password-sync-groups
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Get password sync group list
        
        try {
            Get-BetaPasswordSyncGroups 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPasswordSyncGroups -Limit $Limit -Offset $Offset -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPasswordSyncGroups"
            Write-Host $_.ErrorDetails
        }
- path: /password-sync-groups/{id}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/password-sync-groups#update-password-sync-group
      source: |
        $Id = "6881f631-3bd5-4213-9c75-8e05cc3e35dd" # String | The ID of password sync group to update.
        $PasswordSyncGroup = @"
        {
          "created" : "2023-03-16T04:00:00Z",
          "name" : "Password Sync Group 1",
          "modified" : "2023-03-16T04:00:00Z",
          "passwordPolicyId" : "2c91808d744ba0ce01746f93b6204501",
          "id" : "6881f631-3bd5-4213-9c75-8e05cc3e35dd",
          "sourceIds" : [ "2c918084660f45d6016617daa9210584", "2c918084660f45d6016617daa9210500" ]
        }
        "@
        
        # Update password sync group by id
        
        try {
            $Result = ConvertFrom-JsonToPasswordSyncGroup -Json $PasswordSyncGroup
            Update-BetaPasswordSyncGroup -Id $Id -PasswordSyncGroup $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaPasswordSyncGroup -Id $Id -PasswordSyncGroup $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaPasswordSyncGroup"
            Write-Host $_.ErrorDetails
        }
- path: /personal-access-tokens
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/personal-access-tokens#create-personal-access-token
      source: |
        $CreatePersonalAccessTokenRequest = @"
        {
          "scope" : [ "demo:personal-access-token-scope:first", "demo:personal-access-token-scope:second" ],
          "accessTokenValiditySeconds" : 36900,
          "name" : "NodeJS Integration",
          "expirationDate" : "2018-01-11T18:45:37.098Z"
        }
        "@
        
        # Create personal access token
        
        try {
            $Result = ConvertFrom-JsonToCreatePersonalAccessTokenRequest -Json $CreatePersonalAccessTokenRequest
            New-BetaPersonalAccessToken -CreatePersonalAccessTokenRequest $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaPersonalAccessToken -CreatePersonalAccessTokenRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaPersonalAccessToken"
            Write-Host $_.ErrorDetails
        }
- path: /personal-access-tokens/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/personal-access-tokens#delete-personal-access-token
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The personal access token id
        
        # Delete personal access token
        
        try {
            Remove-BetaPersonalAccessToken -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaPersonalAccessToken -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaPersonalAccessToken"
            Write-Host $_.ErrorDetails
        }
- path: /personal-access-tokens
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/personal-access-tokens#list-personal-access-tokens
      source: |
        $OwnerId = "2c9180867b50d088017b554662fb281e" # String | The identity ID of the owner whose personal access tokens should be listed.  If ""me"", the caller should have the following right: 'idn:my-personal-access-tokens:read' If an actual owner ID or if the `owner-id` parameter is omitted in the request,  the caller should have the following right: 'idn:all-personal-access-tokens:read'.  If the caller has the following right, then managed personal access tokens associated with `owner-id` will be retrieved: 'idn:managed-personal-access-tokens:read' (optional)
        $Filters = "lastUsed le 2023-02-05T10:59:27.214Z" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **lastUsed**: *le, isnull* (optional)
        
        # List personal access tokens
        
        try {
            Get-BetaPersonalAccessTokens 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPersonalAccessTokens -OwnerId $OwnerId -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPersonalAccessTokens"
            Write-Host $_.ErrorDetails
        }
- path: /personal-access-tokens/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/personal-access-tokens#patch-personal-access-token
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The Personal Access Token id
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch personal access token
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaPersonalAccessToken -Id $Id -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaPersonalAccessToken -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaPersonalAccessToken"
            Write-Host $_.ErrorDetails
        }
- path: /public-identities-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/public-identities-config#get-public-identity-config
      source: |
        
        # Get public identity config
        
        try {
            Get-BetaPublicIdentityConfig 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPublicIdentityConfig   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPublicIdentityConfig"
            Write-Host $_.ErrorDetails
        }
- path: /public-identities-config
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/public-identities-config#update-public-identity-config
      source: |
        $PublicIdentityConfig = @"
        {
          "modified" : "2018-06-25T20:22:28.104Z",
          "attributes" : [ {
            "name" : "Country",
            "key" : "country"
          }, {
            "name" : "Country",
            "key" : "country"
          } ],
          "modifiedBy" : {
            "name" : "Thomas Edison",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          }
        }
        "@
        
        # Update public identity config
        
        try {
            $Result = ConvertFrom-JsonToPublicIdentityConfig -Json $PublicIdentityConfig
            Update-BetaPublicIdentityConfig -PublicIdentityConfig $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaPublicIdentityConfig -PublicIdentityConfig $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaPublicIdentityConfig"
            Write-Host $_.ErrorDetails
        }
- path: /requestable-objects
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/requestable-objects#list-requestable-objects
      source: |
        $IdentityId = "e7eab60924f64aa284175b9fa3309599" # String | If present, the value returns only requestable objects for the specified identity.  * Admin users can call this with any identity ID value.  * Non-admin users can only specify *me* or pass their own identity ID value.  * If absent, returns a list of all requestable objects for the tenant. Only admin users can make such a call. In this case, the available, pending, assigned accesses will not be annotated in the result. (optional)
        $Types = "ACCESS_PROFILE" # String[] | Filters the results to the specified type/types, where each type is one of `ROLE` or `ACCESS_PROFILE`. If absent, all types are returned. SailPoint may add support for additional types in the future without notice. (optional)
        
        $Types = @"ACCESS_PROFILE,ROLE"@
        $Term = "Finance Role" # String | Allows searching requestable access items with a partial match on the name or description. If `term` is provided, then the API will ignore the `filter` query parameter. (optional)
        $Statuses = "AVAILABLE" # RequestableObjectRequestStatus[] | Filters the result to the specified status/statuses, where each status is one of `AVAILABLE`, `ASSIGNED`, or `PENDING`. Specifying this parameter without also specifying an `identity-id` parameter results in an error.  SailPoint may add additional statuses in the future without notice. (optional)
        
        $Statuses = @"[ASSIGNED, PENDING]"@
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "name sw "bob"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw*  (optional)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name**  (optional)
        
        # Requestable objects list
        
        try {
            Get-BetaRequestableObjects 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRequestableObjects -IdentityId $IdentityId -Types $Types -Term $Term -Statuses $Statuses -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRequestableObjects"
            Write-Host $_.ErrorDetails
        }
- path: /role-insights/requests
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/role-insights#create-role-insight-requests
      source: |
        
        # Generate insights for roles
        
        try {
            New-BetaRoleInsightRequests 
    
            # Below is a request that includes all optional parameters
            # New-BetaRoleInsightRequests   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaRoleInsightRequests"
            Write-Host $_.ErrorDetails
        }
- path: /role-insights/{insightId}/entitlement-changes/download
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/role-insights#download-role-insights-entitlements-changes
      source: |
        $InsightId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role insight id
        $Sorters = "identitiesWithAccess" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **identitiesWithAccess**  The default sort is **identitiesWithAccess** in descending order. (optional)
        $Filters = "name sw "r"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **description**: *sw* (optional)
        
        # Download entitlement insights for a role
        
        try {
            Invoke-BetaDownloadRoleInsightsEntitlementsChanges -InsightId $InsightId 
    
            # Below is a request that includes all optional parameters
            # Invoke-BetaDownloadRoleInsightsEntitlementsChanges -InsightId $InsightId -Sorters $Sorters -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Invoke-BetaDownloadRoleInsightsEntitlementsChanges"
            Write-Host $_.ErrorDetails
        }
- path: /role-insights/{insightId}/entitlement-changes/{entitlementId}/identities
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/role-insights#get-entitlement-changes-identities
      source: |
        $InsightId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role insight id
        $EntitlementId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The entitlement id
        $HasEntitlement = $true # Boolean | Identity has this entitlement or not (optional) (default to $false)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional)
        $Filters = "name sw "Jan"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw* (optional)
        
        # Get identities for a suggested entitlement (for a role)
        
        try {
            Get-BetaEntitlementChangesIdentities -InsightId $InsightId -EntitlementId $EntitlementId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaEntitlementChangesIdentities -InsightId $InsightId -EntitlementId $EntitlementId -HasEntitlement $HasEntitlement -Offset $Offset -Limit $Limit -Count $Count -Sorters $Sorters -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaEntitlementChangesIdentities"
            Write-Host $_.ErrorDetails
        }
- path: /role-insights/{insightId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/role-insights#get-role-insight
      source: |
        $InsightId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role insight id
        
        # Get a single role insight
        
        try {
            Get-BetaRoleInsight -InsightId $InsightId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleInsight -InsightId $InsightId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleInsight"
            Write-Host $_.ErrorDetails
        }
- path: /role-insights
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/role-insights#get-role-insights
      source: |
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Sorters = "numberOfUpdates" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **numberOfUpdates, identitiesWithAccess, totalNumberOfIdentities** (optional)
        $Filters = "name sw "John"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **ownerName**: *sw*  **description**: *sw* (optional)
        
        # Get role insights
        
        try {
            Get-BetaRoleInsights 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleInsights -Offset $Offset -Limit $Limit -Count $Count -Sorters $Sorters -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleInsights"
            Write-Host $_.ErrorDetails
        }
- path: /role-insights/{insightId}/current-entitlements
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/role-insights#get-role-insights-current-entitlements
      source: |
        $InsightId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role insight id
        $Filters = "name sw "r"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **description**: *sw* (optional)
        
        # Get current entitlement for a role
        
        try {
            Get-BetaRoleInsightsCurrentEntitlements -InsightId $InsightId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleInsightsCurrentEntitlements -InsightId $InsightId -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleInsightsCurrentEntitlements"
            Write-Host $_.ErrorDetails
        }
- path: /role-insights/{insightId}/entitlement-changes
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/role-insights#get-role-insights-entitlements-changes
      source: |
        $InsightId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role insight id
        $Sorters = "MySorters" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **identitiesWithAccess, name** (optional)
        $Filters = "name sw "Admin"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *sw*  **description**: *sw* (optional)
        
        # Get entitlement insights for a role
        
        try {
            Get-BetaRoleInsightsEntitlementsChanges -InsightId $InsightId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleInsightsEntitlementsChanges -InsightId $InsightId -Sorters $Sorters -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleInsightsEntitlementsChanges"
            Write-Host $_.ErrorDetails
        }
- path: /role-insights/requests/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/role-insights#get-role-insights-requests
      source: |
        $Id = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | The role insights request id
        
        # Returns metadata from prior request.
        
        try {
            Get-BetaRoleInsightsRequests -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleInsightsRequests -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleInsightsRequests"
            Write-Host $_.ErrorDetails
        }
- path: /role-insights/summary
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/role-insights#get-role-insights-summary
      source: |
        
        # Get role insights summary information
        
        try {
            Get-BetaRoleInsightsSummary 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleInsightsSummary   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleInsightsSummary"
            Write-Host $_.ErrorDetails
        }
- path: /roles
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/roles#create-role
      source: |
        $Role = @"
        {
          "owner" : {
            "name" : "support",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          },
          "entitlements" : [ {
            "name" : "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local",
            "id" : "2c91809773dee32014e13e122092014e",
            "type" : "ENTITLEMENT"
          }, {
            "name" : "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local",
            "id" : "2c91809773dee32014e13e122092014e",
            "type" : "ENTITLEMENT"
          } ],
          "dimensional" : false,
          "created" : "2021-03-01T22:32:58.104Z",
          "dimensionRefs" : [ {
            "name" : "Role 2",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "DIMENSION"
          }, {
            "name" : "Role 2",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "DIMENSION"
          } ],
          "description" : "Urna amet cursus pellentesque nisl orci maximus lorem nisl euismod fusce morbi placerat adipiscing maecenas nisi tristique et metus et lacus sed morbi nunc nisl maximus magna arcu varius sollicitudin elementum enim maecenas nisi id ipsum tempus fusce diam ipsum tortor.",
          "membership" : {
            "identities" : [ {
              "aliasName" : "t.edison",
              "name" : "Thomas Edison",
              "id" : "2c9180a46faadee4016fb4e018c20639",
              "type" : "IDENTITY"
            }, {
              "aliasName" : "t.edison",
              "name" : "Thomas Edison",
              "id" : "2c9180a46faadee4016fb4e018c20639",
              "type" : "IDENTITY"
            } ],
            "criteria" : {
              "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
              "children" : [ {
                "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
                "children" : [ {
                  "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
                  "operation" : "EQUALS",
                  "key" : {
                    "sourceId" : "2c9180867427f3a301745aec18211519",
                    "property" : "attribute.email",
                    "type" : "ACCOUNT"
                  }
                }, {
                  "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
                  "operation" : "EQUALS",
                  "key" : {
                    "sourceId" : "2c9180867427f3a301745aec18211519",
                    "property" : "attribute.email",
                    "type" : "ACCOUNT"
                  }
                } ],
                "operation" : "EQUALS",
                "key" : {
                  "sourceId" : "2c9180867427f3a301745aec18211519",
                  "property" : "attribute.email",
                  "type" : "ACCOUNT"
                }
              }, {
                "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
                "children" : [ {
                  "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
                  "operation" : "EQUALS",
                  "key" : {
                    "sourceId" : "2c9180867427f3a301745aec18211519",
                    "property" : "attribute.email",
                    "type" : "ACCOUNT"
                  }
                }, {
                  "stringValue" : "carlee.cert1c9f9b6fd@mailinator.com",
                  "operation" : "EQUALS",
                  "key" : {
                    "sourceId" : "2c9180867427f3a301745aec18211519",
                    "property" : "attribute.email",
                    "type" : "ACCOUNT"
                  }
                } ],
                "operation" : "EQUALS",
                "key" : {
                  "sourceId" : "2c9180867427f3a301745aec18211519",
                  "property" : "attribute.email",
                  "type" : "ACCOUNT"
                }
              } ],
              "operation" : "EQUALS",
              "key" : {
                "sourceId" : "2c9180867427f3a301745aec18211519",
                "property" : "attribute.email",
                "type" : "ACCOUNT"
              }
            },
            "type" : "IDENTITY_LIST"
          },
          "enabled" : true,
          "revocationRequestConfig" : {
            "commentsRequired" : false,
            "approvalSchemes" : [ {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            } ],
            "denialCommentsRequired" : false
          },
          "segments" : [ "f7b1b8a3-5fed-4fd4-ad29-82014e137e19", "29cb6c06-1da8-43ea-8be4-b3125f248f2a" ],
          "legacyMembershipInfo" : {
            "type" : "IDENTITY_LIST"
          },
          "accessRequestConfig" : {
            "commentsRequired" : true,
            "reauthorizationRequired" : true,
            "approvalSchemes" : [ {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "46c79819-a69f-49a2-becb-12c971ae66c6",
              "approverType" : "GOVERNANCE_GROUP"
            } ],
            "denialCommentsRequired" : true
          },
          "accessProfiles" : [ {
            "name" : "Access Profile 2567",
            "id" : "ff808081751e6e129f1518161919ecca",
            "type" : "ACCESS_PROFILE"
          }, {
            "name" : "Access Profile 2567",
            "id" : "ff808081751e6e129f1518161919ecca",
            "type" : "ACCESS_PROFILE"
          } ],
          "name" : "Role 2567",
          "modified" : "2021-03-02T20:22:28.104Z",
          "accessModelMetadata" : {
            "attributes" : [ {
              "key" : "iscPrivacy",
              "name" : "Privacy",
              "multiselect" : false,
              "status" : "active",
              "type" : "governance",
              "objectTypes" : [ "all" ],
              "description" : "Specifies the level of privacy associated with an access item.",
              "values" : [ {
                "value" : "public",
                "name" : "Public",
                "status" : "active"
              } ]
            } ]
          },
          "id" : "2c918086749d78830174a1a40e121518",
          "requestable" : true
        }
        "@
        
        # Create a role
        
        try {
            $Result = ConvertFrom-JsonToRole -Json $Role
            New-BetaRole -Role $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaRole -Role $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaRole"
            Write-Host $_.ErrorDetails
        }
- path: /roles/bulk-delete
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/roles#delete-bulk-roles
      source: |
        $RoleBulkDeleteRequest = @"
        {
          "roleIds" : [ "2c9180847812e0b1017817051919ecca", "2c9180887812e0b201781e129f151816" ]
        }
        "@
        
        # Delete role(s)
        
        try {
            $Result = ConvertFrom-JsonToRoleBulkDeleteRequest -Json $RoleBulkDeleteRequest
            Remove-BetaBulkRoles -RoleBulkDeleteRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaBulkRoles -RoleBulkDeleteRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaBulkRoles"
            Write-Host $_.ErrorDetails
        }
- path: /roles/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/roles#delete-role
      source: |
        $Id = "2c91808a7813090a017814121e121518" # String | ID of the Role
        
        # Delete a role
        
        try {
            Remove-BetaRole -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaRole -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaRole"
            Write-Host $_.ErrorDetails
        }
- path: /roles/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/roles#get-role
      source: |
        $Id = "2c91808a7813090a017814121e121518" # String | ID of the Role
        
        # Get a role
        
        try {
            Get-BetaRole -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRole -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRole"
            Write-Host $_.ErrorDetails
        }
- path: /roles/{id}/assigned-identities
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/roles#get-role-assigned-identities
      source: |
        $Id = "2c91808a7813090a017814121e121518" # String | ID of the Role for which the assigned Identities are to be listed
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "name sw Joe" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **aliasName**: *eq, sw*  **email**: *eq, sw*  **name**: *eq, sw, co* (optional)
        $Sorters = "aliasName,name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, aliasName, email** (optional)
        
        # Identities assigned a role
        
        try {
            Get-BetaRoleAssignedIdentities -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleAssignedIdentities -Id $Id -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleAssignedIdentities"
            Write-Host $_.ErrorDetails
        }
- path: /roles/{id}/entitlements
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/roles#get-role-entitlements
      source: |
        $Id = "2c91808a7813090a017814121919ecca" # String | Containing role's ID.
        $Limit = 50 # Int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "attribute eq "memberOf"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **attribute**: *eq, sw*  **value**: *eq, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **source.id**: *eq, in* (optional)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, attribute, value, created, modified** (optional)
        
        # List role's entitlements
        
        try {
            Get-BetaRoleEntitlements -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoleEntitlements -Id $Id -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoleEntitlements"
            Write-Host $_.ErrorDetails
        }
- path: /roles
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/roles#list-roles
      source: |
        $ForSubadmin = "5168015d32f890ca15812c9180835d2e" # String | If provided, filters the returned list according to what is visible to the indicated ROLE_SUBADMIN Identity. The value of the parameter is either an Identity ID, or the special value **me**, which is shorthand for the calling Identity's ID. A 400 Bad Request error is returned if the **for-subadmin** parameter is specified for an Identity that is not a subadmin. (optional)
        $Limit = 50 # Int32 | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "requestable eq false" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **created**: *gt, ge, le*  **modified**: *lt, ge, le*  **owner.id**: *eq, in*  **requestable**: *eq*  **dimensional**: *eq* (optional)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional)
        $ForSegmentIds = "0b5c9f25-83c6-4762-9073-e38f7bb2ae26,2e8d8180-24bc-4d21-91c6-7affdb473b0d" # String | If present and not empty, additionally filters Roles to those which are assigned to the Segment(s) with the specified IDs.  If segmentation is currently unavailable, specifying this parameter results in an error. (optional)
        $IncludeUnsegmented = $false # Boolean | Whether or not the response list should contain unsegmented Roles. If *for-segment-ids* is absent or empty, specifying *include-unsegmented* as false results in an error. (optional) (default to $true)
        
        # List roles
        
        try {
            Get-BetaRoles 
    
            # Below is a request that includes all optional parameters
            # Get-BetaRoles -ForSubadmin $ForSubadmin -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters -ForSegmentIds $ForSegmentIds -IncludeUnsegmented $IncludeUnsegmented   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaRoles"
            Write-Host $_.ErrorDetails
        }
- path: /roles/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/roles#patch-role
      source: |
        $Id = "2c91808a7813090a017814121e121518" # String | ID of the Role to patch
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch a specified role
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaRole -Id $Id -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaRole -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaRole"
            Write-Host $_.ErrorDetails
        }
- path: /sim-integrations
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sim-integrations#create-sim-integration
      source: |
        $SimIntegrationDetails = @"
        {
          "cluster" : "xyzzy999",
          "statusMap" : "{closed_cancelled=Failed, closed_complete=Committed, closed_incomplete=Failed, closed_rejected=Failed, in_process=Queued, requested=Queued}",
          "request" : "{description=SailPoint Access Request,, req_description=The Service Request created by SailPoint ServiceNow Service Integration Module (SIM).,, req_short_description=SailPoint New Access Request Created from IdentityNow,, short_description=SailPoint Access Request $!plan.arguments.identityRequestId}",
          "sources" : [ "2c9180835d191a86015d28455b4a2329", "2c5680835d191a85765d28455b4a9823" ],
          "created" : "2023-01-03T21:16:22.432Z",
          "name" : "aName",
          "modified" : "2023-01-03T21:16:22.432Z",
          "description" : "Integration description",
          "attributes" : "{\"uid\":\"Walter White\",\"firstname\":\"walter\",\"cloudStatus\":\"UNREGISTERED\",\"displayName\":\"Walter White\",\"identificationNumber\":\"942\",\"lastSyncDate\":1470348809380,\"email\":\"walter@gmail.com\",\"lastname\":\"white\"}",
          "id" : "id12345",
          "type" : "ServiceNow Service Desk",
          "beforeProvisioningRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "IDENTITY"
          }
        }
        "@
        
        # Create new sim integration
        
        try {
            $Result = ConvertFrom-JsonToSimIntegrationDetails -Json $SimIntegrationDetails
            New-BetaSIMIntegration -SimIntegrationDetails $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaSIMIntegration -SimIntegrationDetails $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaSIMIntegration"
            Write-Host $_.ErrorDetails
        }
- path: /sim-integrations/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sim-integrations#delete-sim-integration
      source: |
        $Id = "12345" # String | The id of the integration to delete.
        
        # Delete a sim integration
        
        try {
            Remove-BetaSIMIntegration -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaSIMIntegration -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaSIMIntegration"
            Write-Host $_.ErrorDetails
        }
- path: /sim-integrations/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sim-integrations#get-sim-integration
      source: |
        $Id = "12345" # String | The id of the integration.
        
        # Get a sim integration details.
        
        try {
            Get-BetaSIMIntegration -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSIMIntegration -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSIMIntegration"
            Write-Host $_.ErrorDetails
        }
- path: /sim-integrations
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sim-integrations#get-sim-integrations
      source: |
        
        # List the existing sim integrations.
        
        try {
            Get-BetaSIMIntegrations 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSIMIntegrations   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSIMIntegrations"
            Write-Host $_.ErrorDetails
        }
- path: /sim-integrations/{id}/beforeProvisioningRule
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sim-integrations#patch-before-provisioning-rule
      source: |
        $Id = "12345" # String | SIM integration id
        $JsonPatch = @"
        "[\n  {\n\t  \"op\": \"replace\",\n\t  \"path\": \"/description\",\n\t  \"value\": \"A new description\"\n  }\n]"
        "@
        
        # Patch a sim beforeprovisioningrule attribute.
        
        try {
            $Result = ConvertFrom-JsonToJsonPatch -Json $JsonPatch
            Update-BetaBeforeProvisioningRule -Id $Id -JsonPatch $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaBeforeProvisioningRule -Id $Id -JsonPatch $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaBeforeProvisioningRule"
            Write-Host $_.ErrorDetails
        }
- path: /sim-integrations/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sim-integrations#patch-sim-attributes
      source: |
        $Id = "12345" # String | SIM integration id
        $JsonPatch = @"
        "[\n  {\n\t  \"op\": \"replace\",\n\t  \"path\": \"/description\",\n\t  \"value\": \"A new description\"\n  }\n]"
        "@
        
        # Patch a sim attribute.
        
        try {
            $Result = ConvertFrom-JsonToJsonPatch -Json $JsonPatch
            Update-BetaSIMAttributes -Id $Id -JsonPatch $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaSIMAttributes -Id $Id -JsonPatch $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaSIMAttributes"
            Write-Host $_.ErrorDetails
        }
- path: /sim-integrations/{id}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sim-integrations#put-sim-integration
      source: |
        $Id = "12345" # String | The id of the integration.
        $SimIntegrationDetails = @"
        {
          "cluster" : "xyzzy999",
          "statusMap" : "{closed_cancelled=Failed, closed_complete=Committed, closed_incomplete=Failed, closed_rejected=Failed, in_process=Queued, requested=Queued}",
          "request" : "{description=SailPoint Access Request,, req_description=The Service Request created by SailPoint ServiceNow Service Integration Module (SIM).,, req_short_description=SailPoint New Access Request Created from IdentityNow,, short_description=SailPoint Access Request $!plan.arguments.identityRequestId}",
          "sources" : [ "2c9180835d191a86015d28455b4a2329", "2c5680835d191a85765d28455b4a9823" ],
          "created" : "2023-01-03T21:16:22.432Z",
          "name" : "aName",
          "modified" : "2023-01-03T21:16:22.432Z",
          "description" : "Integration description",
          "attributes" : "{\"uid\":\"Walter White\",\"firstname\":\"walter\",\"cloudStatus\":\"UNREGISTERED\",\"displayName\":\"Walter White\",\"identificationNumber\":\"942\",\"lastSyncDate\":1470348809380,\"email\":\"walter@gmail.com\",\"lastname\":\"white\"}",
          "id" : "id12345",
          "type" : "ServiceNow Service Desk",
          "beforeProvisioningRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "IDENTITY"
          }
        }
        "@
        
        # Update an existing sim integration
        
        try {
            $Result = ConvertFrom-JsonToSimIntegrationDetails -Json $SimIntegrationDetails
            Send-BetaSIMIntegration -Id $Id -SimIntegrationDetails $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaSIMIntegration -Id $Id -SimIntegrationDetails $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaSIMIntegration"
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#create-sod-policy
      source: |
        $SodPolicy = @"
        {
          "conflictingAccessCriteria" : {
            "leftCriteria" : {
              "name" : "money-in",
              "criteriaList" : [ {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a66",
                "name" : "Administrator"
              }, {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a67",
                "name" : "Administrator"
              } ]
            },
            "rightCriteria" : {
              "name" : "money-in",
              "criteriaList" : [ {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a66",
                "name" : "Administrator"
              }, {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a67",
                "name" : "Administrator"
              } ]
            }
          },
          "ownerRef" : {
            "name" : "Support",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          },
          "created" : "2020-01-01T00:00:00Z",
          "scheduled" : true,
          "creatorId" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "modifierId" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "description" : "This policy ensures compliance of xyz",
          "violationOwnerAssignmentConfig" : {
            "assignmentRule" : "MANAGER",
            "ownerRef" : {
              "name" : "Support",
              "id" : "2c9180a46faadee4016fb4e018c20639",
              "type" : "IDENTITY"
            }
          },
          "correctionAdvice" : "Based on the role of the employee, managers should remove access that is not required for their job function.",
          "type" : "GENERAL",
          "tags" : [ "TAG1", "TAG2" ],
          "name" : "policy-xyz",
          "modified" : "2020-01-01T00:00:00Z",
          "policyQuery" : "@access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdg) AND @access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdf)",
          "compensatingControls" : "Have a manager review the transaction decisions for their \"out of compliance\" employee",
          "id" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "state" : "ENFORCED",
          "externalPolicyReference" : "XYZ policy"
        }
        "@
        
        # Create sod policy
        
        try {
            $Result = ConvertFrom-JsonToSodPolicy -Json $SodPolicy
            New-BetaSodPolicy -SodPolicy $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaSodPolicy -SodPolicy $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaSodPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#delete-sod-policy
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the SOD Policy to delete.
        $Logical = $true # Boolean | Indicates whether this is a soft delete (logical true) or a hard delete. (optional) (default to $true)
        
        # Delete sod policy by id
        
        try {
            Remove-BetaSodPolicy -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaSodPolicy -Id $Id -Logical $Logical   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaSodPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}/schedule
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#delete-sod-policy-schedule
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the SOD policy the schedule must be deleted for.
        
        # Delete sod policy schedule
        
        try {
            Remove-BetaSodPolicySchedule -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaSodPolicySchedule -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaSodPolicySchedule"
            Write-Host $_.ErrorDetails
        }
- path: /sod-violation-report/{reportResultId}/download/{fileName}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#get-custom-violation-report
      source: |
        $ReportResultId = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the report reference to download.
        $FileName = "custom-name" # String | Custom Name for the  file.
        
        # Download custom violation report
        
        try {
            Get-BetaCustomViolationReport -ReportResultId $ReportResultId -FileName $FileName 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCustomViolationReport -ReportResultId $ReportResultId -FileName $FileName   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCustomViolationReport"
            Write-Host $_.ErrorDetails
        }
- path: /sod-violation-report/{reportResultId}/download
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#get-default-violation-report
      source: |
        $ReportResultId = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the report reference to download.
        
        # Download violation report
        
        try {
            Get-BetaDefaultViolationReport -ReportResultId $ReportResultId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaDefaultViolationReport -ReportResultId $ReportResultId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaDefaultViolationReport"
            Write-Host $_.ErrorDetails
        }
- path: /sod-violation-report
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#get-sod-all-report-run-status
      source: |
        
        # Get multi-report run task status
        
        try {
            Get-BetaSodAllReportRunStatus 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSodAllReportRunStatus   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSodAllReportRunStatus"
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#get-sod-policy
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the object reference to retrieve.
        
        # Get sod policy by id
        
        try {
            Get-BetaSodPolicy -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSodPolicy -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSodPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}/schedule
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#get-sod-policy-schedule
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the object reference to retrieve.
        
        # Get sod policy schedule
        
        try {
            Get-BetaSodPolicySchedule -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSodPolicySchedule -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSodPolicySchedule"
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/sod-violation-report-status/{reportResultId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#get-sod-violation-report-run-status
      source: |
        $ReportResultId = "2e8d8180-24bc-4d21-91c6-7affdb473b0d" # String | The ID of the report reference to retrieve.
        
        # Get violation report run status
        
        try {
            Get-BetaSodViolationReportRunStatus -ReportResultId $ReportResultId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSodViolationReportRunStatus -ReportResultId $ReportResultId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSodViolationReportRunStatus"
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}/violation-report
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#get-sod-violation-report-status
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the object reference to retrieve.
        
        # Get sod violation report status
        
        try {
            Get-BetaSodViolationReportStatus -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSodViolationReportStatus -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSodViolationReportStatus"
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#list-sod-policies
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "id eq "bc693f07e7b645539626c25954c58554"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in*  **state**: *eq, in* (optional)
        $Sorters = "id,name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, description** (optional)
        
        # List sod policies
        
        try {
            Get-BetaSodPolicies 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSodPolicies -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSodPolicies"
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#patch-sod-policy
      source: |
        $Id = "2c9180835d191a86015d28455b4a2329" # String | The ID of the SOD policy being modified.
        $RequestBody =  # SystemCollectionsHashtable[] | A list of SOD Policy update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.  The following fields are patchable: * name * description * ownerRef * externalPolicyReference * compensatingControls * correctionAdvice * state * tags * violationOwnerAssignmentConfig * scheduled * conflictingAccessCriteria 
        $RequestBody = @"[{op=replace, path=/description, value=Modified description}, {op=replace, path=/conflictingAccessCriteria/leftCriteria/name, value=money-in-modified}, {op=replace, path=/conflictingAccessCriteria/rightCriteria, value={name=money-out-modified, criteriaList=[{type=ENTITLEMENT, id=2c918087682f9a86016839c0509c1ab2}]}}]"@ 
        
        
        # Patch a sod policy
        
        try {
            $Result = ConvertFrom-JsonToRequestBody -Json $RequestBody
            Update-BetaSodPolicy -Id $Id -RequestBody $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaSodPolicy -Id $Id -RequestBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaSodPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}/schedule
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#put-policy-schedule
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the SOD policy to update its schedule.
        $SodPolicySchedule = @"
        {
          "schedule" : {
            "hours" : {
              "accountMatchConfig" : {
                "matchExpression" : {
                  "and" : true,
                  "matchTerms" : [ {
                    "name" : "",
                    "value" : "",
                    "container" : true,
                    "and" : false,
                    "children" : [ {
                      "name" : "businessCategory",
                      "value" : "Service",
                      "op" : "eq",
                      "container" : false,
                      "and" : false
                    } ]
                  } ]
                }
              },
              "applicationId" : "2c91808874ff91550175097daaec161c\""
            },
            "months" : {
              "accountMatchConfig" : {
                "matchExpression" : {
                  "and" : true,
                  "matchTerms" : [ {
                    "name" : "",
                    "value" : "",
                    "container" : true,
                    "and" : false,
                    "children" : [ {
                      "name" : "businessCategory",
                      "value" : "Service",
                      "op" : "eq",
                      "container" : false,
                      "and" : false
                    } ]
                  } ]
                }
              },
              "applicationId" : "2c91808874ff91550175097daaec161c\""
            },
            "timeZoneId" : "America/Chicago",
            "days" : {
              "accountMatchConfig" : {
                "matchExpression" : {
                  "and" : true,
                  "matchTerms" : [ {
                    "name" : "",
                    "value" : "",
                    "container" : true,
                    "and" : false,
                    "children" : [ {
                      "name" : "businessCategory",
                      "value" : "Service",
                      "op" : "eq",
                      "container" : false,
                      "and" : false
                    } ]
                  } ]
                }
              },
              "applicationId" : "2c91808874ff91550175097daaec161c\""
            },
            "expiration" : "2018-06-25T20:22:28.104Z",
            "type" : "WEEKLY"
          },
          "created" : "2020-01-01T00:00:00Z",
          "recipients" : [ {
            "name" : "Michael Michaels",
            "id" : "2c7180a46faadee4016fb4e018c20642",
            "type" : "IDENTITY"
          }, {
            "name" : "Michael Michaels",
            "id" : "2c7180a46faadee4016fb4e018c20642",
            "type" : "IDENTITY"
          } ],
          "name" : "SCH-1584312283015",
          "creatorId" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "modifierId" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "modified" : "2020-01-01T00:00:00Z",
          "description" : "Schedule for policy xyz",
          "emailEmptyResults" : false
        }
        "@
        
        # Update sod policy schedule
        
        try {
            $Result = ConvertFrom-JsonToSodPolicySchedule -Json $SodPolicySchedule
            Send-BetaPolicySchedule -Id $Id -SodPolicySchedule $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaPolicySchedule -Id $Id -SodPolicySchedule $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaPolicySchedule"
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#put-sod-policy
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the SOD policy to update.
        $SodPolicy = @"
        {
          "conflictingAccessCriteria" : {
            "leftCriteria" : {
              "name" : "money-in",
              "criteriaList" : [ {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a66",
                "name" : "Administrator"
              }, {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a67",
                "name" : "Administrator"
              } ]
            },
            "rightCriteria" : {
              "name" : "money-in",
              "criteriaList" : [ {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a66",
                "name" : "Administrator"
              }, {
                "type" : "ENTITLEMENT",
                "id" : "2c9180866166b5b0016167c32ef31a67",
                "name" : "Administrator"
              } ]
            }
          },
          "ownerRef" : {
            "name" : "Support",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          },
          "created" : "2020-01-01T00:00:00Z",
          "scheduled" : true,
          "creatorId" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "modifierId" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "description" : "This policy ensures compliance of xyz",
          "violationOwnerAssignmentConfig" : {
            "assignmentRule" : "MANAGER",
            "ownerRef" : {
              "name" : "Support",
              "id" : "2c9180a46faadee4016fb4e018c20639",
              "type" : "IDENTITY"
            }
          },
          "correctionAdvice" : "Based on the role of the employee, managers should remove access that is not required for their job function.",
          "type" : "GENERAL",
          "tags" : [ "TAG1", "TAG2" ],
          "name" : "policy-xyz",
          "modified" : "2020-01-01T00:00:00Z",
          "policyQuery" : "@access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdg) AND @access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdf)",
          "compensatingControls" : "Have a manager review the transaction decisions for their \"out of compliance\" employee",
          "id" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "state" : "ENFORCED",
          "externalPolicyReference" : "XYZ policy"
        }
        "@
        
        # Update sod policy by id
        
        try {
            $Result = ConvertFrom-JsonToSodPolicy -Json $SodPolicy
            Send-BetaSodPolicy -Id $Id -SodPolicy $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaSodPolicy -Id $Id -SodPolicy $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaSodPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /sod-violation-report/run
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#start-sod-all-policies-for-org
      source: |
        $MultiPolicyRequest = @"
        {
          "filteredPolicyList" : [ "filteredPolicyList", "filteredPolicyList" ]
        }
        "@
        
        # Runs all policies for org
        
        try {
            Start-BetaSodAllPoliciesForOrg 
    
            # Below is a request that includes all optional parameters
            # Start-BetaSodAllPoliciesForOrg -MultiPolicyRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Start-BetaSodAllPoliciesForOrg"
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}/violation-report/run
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-policies#start-sod-policy
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The SOD policy ID to run.
        
        # Runs sod policy violation report
        
        try {
            Start-BetaSodPolicy -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Start-BetaSodPolicy -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Start-BetaSodPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /sod-violations/predict
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sod-violations#start-predict-sod-violations
      source: |
        $IdentityWithNewAccess = @"
        {
          "identityId" : "2c91808568c529c60168cca6f90c1313",
          "accessRefs" : [ {
            "type" : "ENTITLEMENT",
            "id" : "2c918087682f9a86016839c050861ab1",
            "name" : "CN=Information Access,OU=test,OU=test-service,DC=TestAD,DC=local"
          }, {
            "type" : "ENTITLEMENT",
            "id" : "2c918087682f9a86016839c0509c1ab2",
            "name" : "CN=Information Technology,OU=test,OU=test-service,DC=TestAD,DC=local"
          } ]
        }
        "@
        
        # Predict sod violations for identity.
        
        try {
            $Result = ConvertFrom-JsonToIdentityWithNewAccess -Json $IdentityWithNewAccess
            Start-BetaPredictSodViolations -IdentityWithNewAccess $Result 
    
            # Below is a request that includes all optional parameters
            # Start-BetaPredictSodViolations -IdentityWithNewAccess $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Start-BetaPredictSodViolations"
            Write-Host $_.ErrorDetails
        }
- path: /sp-config/export
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sp-config#export-sp-config
      source: |
        $ExportPayload = @"
        {
          "description" : "Export Job 1 Test"
        }
        "@
        
        # Initiates configuration objects export job
        
        try {
            $Result = ConvertFrom-JsonToExportPayload -Json $ExportPayload
            Export-BetaSpConfig -ExportPayload $Result 
    
            # Below is a request that includes all optional parameters
            # Export-BetaSpConfig -ExportPayload $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Export-BetaSpConfig"
            Write-Host $_.ErrorDetails
        }
- path: /sp-config/export/{id}/download
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sp-config#get-sp-config-export
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the export job whose results will be downloaded.
        
        # Download export job result.
        
        try {
            Get-BetaSpConfigExport -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSpConfigExport -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSpConfigExport"
            Write-Host $_.ErrorDetails
        }
- path: /sp-config/export/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sp-config#get-sp-config-export-status
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the export job whose status will be returned.
        
        # Get export job status
        
        try {
            Get-BetaSpConfigExportStatus -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSpConfigExportStatus -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSpConfigExportStatus"
            Write-Host $_.ErrorDetails
        }
- path: /sp-config/import/{id}/download
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sp-config#get-sp-config-import
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the import job whose results will be downloaded.
        
        # Download import job result
        
        try {
            Get-BetaSpConfigImport -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSpConfigImport -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSpConfigImport"
            Write-Host $_.ErrorDetails
        }
- path: /sp-config/import/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sp-config#get-sp-config-import-status
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the import job whose status will be returned.
        
        # Get import job status
        
        try {
            Get-BetaSpConfigImportStatus -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSpConfigImportStatus -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSpConfigImportStatus"
            Write-Host $_.ErrorDetails
        }
- path: /sp-config/import
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sp-config#import-sp-config
      source: |
        $Data =  # System.IO.FileInfo | JSON file containing the objects to be imported.
        $Preview = $true # Boolean | This option is intended to give the user information about how an import operation would proceed, without having any effect on the target tenant. If this parameter is ""true"", no objects will be imported. Instead, the import process will pre-process the import file and attempt to resolve references within imported objects. The import result file will contain messages pertaining to how specific references were resolved, any errors associated with the preprocessing, and messages indicating which objects would be imported.  (optional) (default to $false)
        $Options = @"
        "@
        
        # Initiates configuration objects import job
        
        try {
            Import-BetaSpConfig -Data $Data 
    
            # Below is a request that includes all optional parameters
            # Import-BetaSpConfig -Data $Data -Preview $Preview -Options $Options   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Import-BetaSpConfig"
            Write-Host $_.ErrorDetails
        }
- path: /sp-config/config-objects
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sp-config#list-sp-config-objects
      source: |
        
        # List config objects
        
        try {
            Get-BetaSpConfigObjects 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSpConfigObjects   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSpConfigObjects"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/search-attribute-config
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/search-attribute-configuration#create-search-attribute-config
      source: |
        $SearchAttributeConfig = @"
        {
          "displayName" : "New Mail Attribute",
          "name" : "newMailAttribute",
          "applicationAttributes" : {
            "2c91808b79fd2422017a0b35d30f3968" : "employeeNumber",
            "2c91808b79fd2422017a0b36008f396b" : "employeeNumber"
          }
        }
        "@
        
        # Create extended search attributes
        
        try {
            $Result = ConvertFrom-JsonToSearchAttributeConfig -Json $SearchAttributeConfig
            New-BetaSearchAttributeConfig -SearchAttributeConfig $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaSearchAttributeConfig -SearchAttributeConfig $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaSearchAttributeConfig"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/search-attribute-config/{name}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/search-attribute-configuration#delete-search-attribute-config
      source: |
        $Name = "newMailAttribute" # String | Name of the extended search attribute configuration to delete.
        
        # Delete extended search attribute
        
        try {
            Remove-BetaSearchAttributeConfig -Name $Name 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaSearchAttributeConfig -Name $Name   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaSearchAttributeConfig"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/search-attribute-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/search-attribute-configuration#get-search-attribute-config
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        
        # List extended search attributes
        
        try {
            Get-BetaSearchAttributeConfig 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSearchAttributeConfig -Limit $Limit -Offset $Offset   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSearchAttributeConfig"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/search-attribute-config/{name}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/search-attribute-configuration#get-single-search-attribute-config
      source: |
        $Name = "newMailAttribute" # String | Name of the extended search attribute configuration to get.
        
        # Get extended search attribute
        
        try {
            Get-BetaSingleSearchAttributeConfig -Name $Name 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSingleSearchAttributeConfig -Name $Name   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSingleSearchAttributeConfig"
            Write-Host $_.ErrorDetails
        }
- path: /accounts/search-attribute-config/{name}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/search-attribute-configuration#patch-search-attribute-config
      source: |
        $Name = "promotedMailAttribute" # String | Name of the extended search attribute configuration to patch.
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Update extended search attribute
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaSearchAttributeConfig -Name $Name -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaSearchAttributeConfig -Name $Name -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaSearchAttributeConfig"
            Write-Host $_.ErrorDetails
        }
- path: /segments
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/segments#create-segment
      source: |
        $Segment = @"
        {
          "owner" : {
            "name" : "support",
            "id" : "2c9180a46faadee4016fb4e018c20639",
            "type" : "IDENTITY"
          },
          "created" : "2020-01-01T00:00:00Z",
          "visibilityCriteria" : {
            "expression" : {
              "children" : [ ],
              "attribute" : "location",
              "value" : {
                "type" : "STRING",
                "value" : "Austin"
              },
              "operator" : "EQUALS"
            }
          },
          "name" : "segment-xyz",
          "modified" : "2020-01-01T00:00:00Z",
          "description" : "This segment represents xyz",
          "active" : true,
          "id" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde"
        }
        "@
        
        # Create segment
        
        try {
            $Result = ConvertFrom-JsonToSegment -Json $Segment
            New-BetaSegment -Segment $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaSegment -Segment $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaSegment"
            Write-Host $_.ErrorDetails
        }
- path: /segments/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/segments#delete-segment
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The segment ID to delete.
        
        # Delete segment by id
        
        try {
            Remove-BetaSegment -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaSegment -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaSegment"
            Write-Host $_.ErrorDetails
        }
- path: /segments/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/segments#get-segment
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The segment ID to retrieve.
        
        # Get segment by id
        
        try {
            Get-BetaSegment -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSegment -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSegment"
            Write-Host $_.ErrorDetails
        }
- path: /segments
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/segments#list-segments
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # List segments
        
        try {
            Get-BetaSegments 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSegments -Limit $Limit -Offset $Offset -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSegments"
            Write-Host $_.ErrorDetails
        }
- path: /segments/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/segments#patch-segment
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The segment ID to modify.
        $RequestBody =  # SystemCollectionsHashtable[] | A list of segment update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.  The following fields are patchable: * name * description * owner * visibilityCriteria * active 
        $RequestBody = @"[{op=replace, path=/visibilityCriteria, value={expression={operator=AND, children=[{operator=EQUALS, attribute=location, value={type=STRING, value=Philadelphia}}, {operator=EQUALS, attribute=department, value={type=STRING, value=HR}}]}}}]"@ 
        
        
        # Update segment
        
        try {
            $Result = ConvertFrom-JsonToRequestBody -Json $RequestBody
            Update-BetaSegment -Id $Id -RequestBody $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaSegment -Id $Id -RequestBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaSegment"
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/service-desk-integration#create-service-desk-integration
      source: |
        $ServiceDeskIntegrationDto = @"
        {
          "ownerRef" : "",
          "cluster" : "xyzzy999",
          "managedSources" : [ "2c9180835d191a86015d28455b4a2329", "2c5680835d191a85765d28455b4a9823" ],
          "provisioningConfig" : {
            "managedResourceRefs" : [ {
              "type" : "SOURCE",
              "id" : "2c9180855d191c59015d291ceb051111",
              "name" : "My Source 1"
            }, {
              "type" : "SOURCE",
              "id" : "2c9180855d191c59015d291ceb052222",
              "name" : "My Source 2"
            } ],
            "provisioningRequestExpiration" : 7,
            "noProvisioningRequests" : true,
            "universalManager" : true,
            "planInitializerScript" : {
              "source" : "<?xml version='1.0' encoding='UTF-8'?>\\r\\n<!DOCTYPE Rule PUBLIC \\\"sailpoint.dtd\\\" \\\"sailpoint.dtd\\\">\\r\\n<Rule name=\\\"Example Rule\\\" type=\\\"BeforeProvisioning\\\">\\r\\n  <Description>Before Provisioning Rule which changes disables and enables to a modify.</Description>\\r\\n  <Source><![CDATA[\\r\\nimport sailpoint.object.*;\\r\\nimport sailpoint.object.ProvisioningPlan.AccountRequest;\\r\\nimport sailpoint.object.ProvisioningPlan.AccountRequest.Operation;\\r\\nimport sailpoint.object.ProvisioningPlan.AttributeRequest;\\r\\nimport sailpoint.object.ProvisioningPlan;\\r\\nimport sailpoint.object.ProvisioningPlan.Operation;\\r\\n\\r\\nfor ( AccountRequest accountRequest : plan.getAccountRequests() ) {\\r\\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Disable ) ) {\\r\\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\\r\\n  }\\r\\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Enable ) ) {\\r\\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\\r\\n  }\\r\\n}\\r\\n\\r\\n  ]]></Source>\n"
            }
          },
          "name" : "Service Desk Integration Name",
          "description" : "A very nice Service Desk integration",
          "attributes" : {
            "property" : "value",
            "key" : "value"
          },
          "clusterRef" : "",
          "type" : "ServiceNowSDIM",
          "beforeProvisioningRule" : ""
        }
        "@
        
        # Create new service desk integration
        
        try {
            $Result = ConvertFrom-JsonToServiceDeskIntegrationDto -Json $ServiceDeskIntegrationDto
            New-BetaServiceDeskIntegration -ServiceDeskIntegrationDto $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaServiceDeskIntegration -ServiceDeskIntegrationDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaServiceDeskIntegration"
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/service-desk-integration#delete-service-desk-integration
      source: |
        $Id = "anId" # String | ID of Service Desk integration to delete
        
        # Delete a service desk integration
        
        try {
            Remove-BetaServiceDeskIntegration -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaServiceDeskIntegration -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaServiceDeskIntegration"
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/service-desk-integration#get-service-desk-integration
      source: |
        $Id = "anId" # String | ID of the Service Desk integration to get
        
        # Get a service desk integration
        
        try {
            Get-BetaServiceDeskIntegration -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaServiceDeskIntegration -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaServiceDeskIntegration"
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/service-desk-integration#get-service-desk-integration-list
      source: |
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional)
        $Filters = "id eq 2c91808b6ef1d43e016efba0ce470904" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq*  **type**: *eq, in*  **cluster**: *eq, in* (optional)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # List existing service desk integrations
        
        try {
            Get-BetaServiceDeskIntegrationList 
    
            # Below is a request that includes all optional parameters
            # Get-BetaServiceDeskIntegrationList -Offset $Offset -Limit $Limit -Sorters $Sorters -Filters $Filters -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaServiceDeskIntegrationList"
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/templates/{scriptName}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/service-desk-integration#get-service-desk-integration-template
      source: |
        $ScriptName = "aScriptName" # String | The scriptName value of the Service Desk integration template to get
        
        # Service desk integration template by scriptname
        
        try {
            Get-BetaServiceDeskIntegrationTemplate -ScriptName $ScriptName 
    
            # Below is a request that includes all optional parameters
            # Get-BetaServiceDeskIntegrationTemplate -ScriptName $ScriptName   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaServiceDeskIntegrationTemplate"
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/types
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/service-desk-integration#get-service-desk-integration-types
      source: |
        
        # List service desk integration types
        
        try {
            Get-BetaServiceDeskIntegrationTypes 
    
            # Below is a request that includes all optional parameters
            # Get-BetaServiceDeskIntegrationTypes   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaServiceDeskIntegrationTypes"
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/status-check-configuration
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/service-desk-integration#get-status-check-details
      source: |
        
        # Get the time check configuration
        
        try {
            Get-BetaStatusCheckDetails 
    
            # Below is a request that includes all optional parameters
            # Get-BetaStatusCheckDetails   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaStatusCheckDetails"
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/service-desk-integration#patch-service-desk-integration
      source: |
        $Id = "anId" # String | ID of the Service Desk integration to update
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch a service desk integration
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaServiceDeskIntegration -Id $Id -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaServiceDeskIntegration -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaServiceDeskIntegration"
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/{id}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/service-desk-integration#put-service-desk-integration
      source: |
        $Id = "anId" # String | ID of the Service Desk integration to update
        $ServiceDeskIntegrationDto = @"
        {
          "ownerRef" : "",
          "cluster" : "xyzzy999",
          "managedSources" : [ "2c9180835d191a86015d28455b4a2329", "2c5680835d191a85765d28455b4a9823" ],
          "provisioningConfig" : {
            "managedResourceRefs" : [ {
              "type" : "SOURCE",
              "id" : "2c9180855d191c59015d291ceb051111",
              "name" : "My Source 1"
            }, {
              "type" : "SOURCE",
              "id" : "2c9180855d191c59015d291ceb052222",
              "name" : "My Source 2"
            } ],
            "provisioningRequestExpiration" : 7,
            "noProvisioningRequests" : true,
            "universalManager" : true,
            "planInitializerScript" : {
              "source" : "<?xml version='1.0' encoding='UTF-8'?>\\r\\n<!DOCTYPE Rule PUBLIC \\\"sailpoint.dtd\\\" \\\"sailpoint.dtd\\\">\\r\\n<Rule name=\\\"Example Rule\\\" type=\\\"BeforeProvisioning\\\">\\r\\n  <Description>Before Provisioning Rule which changes disables and enables to a modify.</Description>\\r\\n  <Source><![CDATA[\\r\\nimport sailpoint.object.*;\\r\\nimport sailpoint.object.ProvisioningPlan.AccountRequest;\\r\\nimport sailpoint.object.ProvisioningPlan.AccountRequest.Operation;\\r\\nimport sailpoint.object.ProvisioningPlan.AttributeRequest;\\r\\nimport sailpoint.object.ProvisioningPlan;\\r\\nimport sailpoint.object.ProvisioningPlan.Operation;\\r\\n\\r\\nfor ( AccountRequest accountRequest : plan.getAccountRequests() ) {\\r\\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Disable ) ) {\\r\\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\\r\\n  }\\r\\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Enable ) ) {\\r\\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\\r\\n  }\\r\\n}\\r\\n\\r\\n  ]]></Source>\n"
            }
          },
          "name" : "Service Desk Integration Name",
          "description" : "A very nice Service Desk integration",
          "attributes" : {
            "property" : "value",
            "key" : "value"
          },
          "clusterRef" : "",
          "type" : "ServiceNowSDIM",
          "beforeProvisioningRule" : ""
        }
        "@
        
        # Update a service desk integration
        
        try {
            $Result = ConvertFrom-JsonToServiceDeskIntegrationDto -Json $ServiceDeskIntegrationDto
            Send-BetaServiceDeskIntegration -Id $Id -ServiceDeskIntegrationDto $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaServiceDeskIntegration -Id $Id -ServiceDeskIntegrationDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaServiceDeskIntegration"
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/status-check-configuration
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/service-desk-integration#update-status-check-details
      source: |
        $QueuedCheckConfigDetails = @"
        {
          "provisioningStatusCheckIntervalMinutes" : "30",
          "provisioningMaxStatusCheckDays" : "2"
        }
        "@
        
        # Update the time check configuration
        
        try {
            $Result = ConvertFrom-JsonToQueuedCheckConfigDetails -Json $QueuedCheckConfigDetails
            Update-BetaStatusCheckDetails -QueuedCheckConfigDetails $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaStatusCheckDetails -QueuedCheckConfigDetails $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaStatusCheckDetails"
            Write-Host $_.ErrorDetails
        }
- path: /source-usages/{sourceId}/status
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/source-usages#get-status-by-source-id
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | ID of IDN source
        
        # Finds status of source usage
        
        try {
            Get-BetaStatusBySourceId -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaStatusBySourceId -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaStatusBySourceId"
            Write-Host $_.ErrorDetails
        }
- path: /source-usages/{sourceId}/summaries
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/source-usages#get-usages-by-source-id
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | ID of IDN source
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Sorters = "-date" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **date** (optional)
        
        # Returns source usage insights
        
        try {
            Get-BetaUsagesBySourceId -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaUsagesBySourceId -SourceId $SourceId -Limit $Limit -Offset $Offset -Count $Count -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaUsagesBySourceId"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/provisioning-policies
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#create-provisioning-policy
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The Source id
        $ProvisioningPolicyDto = @"
        {
          "name" : "example provisioning policy for inactive identities",
          "description" : "this provisioning policy creates access based on an identity going inactive",
          "fields" : [ {
            "isRequired" : false,
            "transform" : {
              "type" : "rule",
              "attributes" : {
                "name" : "Create Unique LDAP Attribute"
              }
            },
            "isMultiValued" : false,
            "name" : "userName",
            "attributes" : {
              "template" : "${firstname}.${lastname}${uniqueCounter}",
              "cloudMaxUniqueChecks" : "50",
              "cloudMaxSize" : "20",
              "cloudRequired" : "true"
            },
            "type" : "string"
          }, {
            "isRequired" : false,
            "transform" : {
              "type" : "rule",
              "attributes" : {
                "name" : "Create Unique LDAP Attribute"
              }
            },
            "isMultiValued" : false,
            "name" : "userName",
            "attributes" : {
              "template" : "${firstname}.${lastname}${uniqueCounter}",
              "cloudMaxUniqueChecks" : "50",
              "cloudMaxSize" : "20",
              "cloudRequired" : "true"
            },
            "type" : "string"
          } ],
          "usageType" : "CREATE"
        }
        "@
        
        # Create provisioning policy
        
        try {
            $Result = ConvertFrom-JsonToProvisioningPolicyDto -Json $ProvisioningPolicyDto
            New-BetaProvisioningPolicy -SourceId $SourceId -ProvisioningPolicyDto $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaProvisioningPolicy -SourceId $SourceId -ProvisioningPolicyDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaProvisioningPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /sources
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#create-source
      source: |
        $Source = @"
        {
          "cluster" : {
            "name" : "Corporate Cluster",
            "id" : "2c9180866166b5b0016167c32ef31a66",
            "type" : "CLUSTER"
          },
          "deleteThreshold" : 10,
          "connectorId" : "active-directory",
          "description" : "This is the corporate directory.",
          "type" : "OpenLDAP - Direct",
          "connectorClass" : "sailpoint.connector.LDAPConnector",
          "connectionType" : "file",
          "features" : [ "PROVISIONING", "NO_PERMISSIONS_PROVISIONING", "GROUPS_HAVE_MEMBERS" ],
          "passwordPolicies" : [ {
            "type" : "PASSWORD_POLICY",
            "id" : "2c9180855d191c59015d291ceb053980",
            "name" : "Corporate Password Policy"
          }, {
            "type" : "PASSWORD_POLICY",
            "id" : "2c9180855d191c59015d291ceb057777",
            "name" : "Vendor Password Policy"
          } ],
          "modified" : "2024-01-23T18:08:50.897Z",
          "id" : "2c91808568c529c60168cca6f90c1324",
          "connectorImplementationId" : "delimited-file",
          "managerCorrelationRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "RULE"
          },
          "owner" : {
            "name" : "MyName",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "managementWorkgroup" : {
            "name" : "My Management Workgroup",
            "id" : "2c91808568c529c60168cca6f90c2222",
            "type" : "GOVERNANCE_GROUP"
          },
          "accountCorrelationRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "RULE"
          },
          "authoritative" : false,
          "connectorAttributes" : {
            "healthCheckTimeout" : 30,
            "authSearchAttributes" : [ "cn", "uid", "mail" ]
          },
          "created" : "2022-02-08T14:50:03.827Z",
          "managerCorrelationMapping" : {
            "accountAttributeName" : "manager",
            "identityAttributeName" : "manager"
          },
          "credentialProviderEnabled" : false,
          "accountCorrelationConfig" : {
            "name" : "Directory [source-62867] Account Correlation",
            "id" : "2c9180855d191c59015d28583727245a",
            "type" : "ACCOUNT_CORRELATION_CONFIG"
          },
          "connector" : "active-directory",
          "healthy" : true,
          "schemas" : [ {
            "type" : "CONNECTOR_SCHEMA",
            "id" : "2c9180835d191a86015d28455b4b232a",
            "name" : "account"
          }, {
            "type" : "CONNECTOR_SCHEMA",
            "id" : "2c9180835d191a86015d28455b4b232b",
            "name" : "group"
          } ],
          "name" : "My Source",
          "connectorName" : "Active Directory",
          "category" : "CredentialProvider",
          "beforeProvisioningRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "RULE"
          },
          "status" : "SOURCE_STATE_HEALTHY",
          "since" : "2021-09-28T15:48:29.3801666300Z"
        }
        "@
        $ProvisionAsCsv = $false # Boolean | If this parameter is `true`, it configures the source as a Delimited File (CSV) source. Setting this to `true` will automatically set the `type` of the source to `DelimitedFile`.  You must use this query parameter to create a Delimited File source as you would in the UI.  If you don't set this query parameter and you attempt to set the `type` attribute directly, the request won't correctly generate the source.   (optional)
        
        # Creates a source in identitynow.
        
        try {
            $Result = ConvertFrom-JsonToSource -Json $Source
            New-BetaSource -Source $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaSource -Source $Result -ProvisionAsCsv $ProvisionAsCsv   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaSource"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/schemas
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#create-source-schema
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | Source ID.
        $Schema = @"
        {
          "features" : [ "PROVISIONING", "NO_PERMISSIONS_PROVISIONING", "GROUPS_HAVE_MEMBERS" ],
          "nativeObjectType" : "User",
          "configuration" : {
            "groupMemberAttribute" : "member"
          },
          "created" : "2019-12-24T22:32:58.104Z",
          "includePermissions" : false,
          "name" : "account",
          "hierarchyAttribute" : "memberOf",
          "modified" : "2019-12-31T20:22:28.104Z",
          "attributes" : [ {
            "name" : "sAMAccountName",
            "type" : "STRING",
            "isMultiValued" : false,
            "isEntitlement" : false,
            "isGroup" : false
          }, {
            "name" : "memberOf",
            "type" : "STRING",
            "schema" : {
              "type" : "CONNECTOR_SCHEMA",
              "id" : "2c9180887671ff8c01767b4671fc7d60",
              "name" : "group"
            },
            "description" : "Group membership",
            "isMultiValued" : true,
            "isEntitlement" : true,
            "isGroup" : true
          } ],
          "id" : "2c9180835d191a86015d28455b4a2329",
          "displayAttribute" : "distinguishedName",
          "identityAttribute" : "sAMAccountName"
        }
        "@
        
        # Create schema on source
        
        try {
            $Result = ConvertFrom-JsonToSchema -Json $Schema
            New-BetaSourceSchema -SourceId $SourceId -Schema $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaSourceSchema -SourceId $SourceId -Schema $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaSourceSchema"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#delete
      source: |
        $Id = "2c9180835d191a86015d28455b4a2329" # String | Source ID.
        
        # Delete source by id
        
        try {
            Remove-Beta -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-Beta -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-Beta"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/remove-accounts
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#delete-accounts-async
      source: |
        $SourceId = "ebbf35756e1140699ce52b233121384a" # String | The source id
        
        # Remove all accounts in a source
        
        try {
            Remove-BetaAccountsAsync -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaAccountsAsync -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaAccountsAsync"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/native-change-detection-config
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#delete-native-change-detection-config
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The source id
        
        # Delete native change detection configuration
        
        try {
            Remove-BetaNativeChangeDetectionConfig -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaNativeChangeDetectionConfig -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaNativeChangeDetectionConfig"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/provisioning-policies/{usageType}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#delete-provisioning-policy
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The Source ID.
        $UsageType = "CREATE" # UsageType | The type of provisioning policy usage.  In IdentityNow, a source can support various provisioning operations. For example, when a joiner is added to a source, this may trigger both CREATE and UPDATE provisioning operations.  Each usage type is considered a provisioning policy.  A source can have any number of these provisioning policies defined.  These are the common usage types:  CREATE - This usage type relates to 'Create Account Profile', the provisioning template for the account to be created. For example, this would be used for a joiner on a source.   UPDATE - This usage type relates to 'Update Account Profile', the provisioning template for the 'Update' connector operations. For example, this would be used for an attribute sync on a source. ENABLE - This usage type relates to 'Enable Account Profile', the provisioning template for the account to be enabled. For example, this could be used for a joiner on a source once the joiner's account is created.  DISABLE - This usage type relates to 'Disable Account Profile', the provisioning template for the account to be disabled. For example, this could be used when a leaver is removed temporarily from a source.  You can use these four usage types for all your provisioning policy needs. 
        
        # Delete provisioning policy by usagetype
        
        try {
            Remove-BetaProvisioningPolicy -SourceId $SourceId -UsageType $UsageType 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaProvisioningPolicy -SourceId $SourceId -UsageType $UsageType   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaProvisioningPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/schemas/{schemaId}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#delete-source-schema
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The Source ID.
        $SchemaId = "2c9180835d191a86015d28455b4a2329" # String | The Schema ID.
        
        # Delete source schema by id
        
        try {
            Remove-BetaSourceSchema -SourceId $SourceId -SchemaId $SchemaId 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaSourceSchema -SourceId $SourceId -SchemaId $SchemaId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaSourceSchema"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/correlation-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#get-correlation-config
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The source id
        
        # Get source correlation configuration
        
        try {
            Get-BetaCorrelationConfig -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCorrelationConfig -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCorrelationConfig"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/native-change-detection-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#get-native-change-detection-config
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The source id
        
        # Native change detection configuration
        
        try {
            Get-BetaNativeChangeDetectionConfig -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaNativeChangeDetectionConfig -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaNativeChangeDetectionConfig"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/provisioning-policies/{usageType}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#get-provisioning-policy
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The Source ID.
        $UsageType = "CREATE" # UsageType | The type of provisioning policy usage.  In IdentityNow, a source can support various provisioning operations. For example, when a joiner is added to a source, this may trigger both CREATE and UPDATE provisioning operations.  Each usage type is considered a provisioning policy.  A source can have any number of these provisioning policies defined.  These are the common usage types:  CREATE - This usage type relates to 'Create Account Profile', the provisioning template for the account to be created. For example, this would be used for a joiner on a source.   UPDATE - This usage type relates to 'Update Account Profile', the provisioning template for the 'Update' connector operations. For example, this would be used for an attribute sync on a source. ENABLE - This usage type relates to 'Enable Account Profile', the provisioning template for the account to be enabled. For example, this could be used for a joiner on a source once the joiner's account is created.  DISABLE - This usage type relates to 'Disable Account Profile', the provisioning template for the account to be disabled. For example, this could be used when a leaver is removed temporarily from a source.  You can use these four usage types for all your provisioning policy needs. 
        
        # Get provisioning policy by usagetype
        
        try {
            Get-BetaProvisioningPolicy -SourceId $SourceId -UsageType $UsageType 
    
            # Below is a request that includes all optional parameters
            # Get-BetaProvisioningPolicy -SourceId $SourceId -UsageType $UsageType   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaProvisioningPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#get-source
      source: |
        $Id = "2c9180835d191a86015d28455b4a2329" # String | Source ID.
        
        # Get source by id
        
        try {
            Get-BetaSource -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSource -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSource"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/schemas/accounts
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#get-source-accounts-schema
      source: |
        $SourceId = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The Source id
        
        # Downloads source accounts schema template
        
        try {
            Get-BetaSourceAccountsSchema -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSourceAccountsSchema -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSourceAccountsSchema"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{id}/attribute-sync-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#get-source-attr-sync-config
      source: |
        $Id = "2c9180835d191a86015d28455b4a2329" # String | The source id
        
        # Attribute sync config
        
        try {
            Get-BetaSourceAttrSyncConfig -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSourceAttrSyncConfig -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSourceAttrSyncConfig"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{id}/connectors/source-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#get-source-config
      source: |
        $Id = "MyId" # String | The Source id
        $Locale = "de" # String | The locale to apply to the config. If no viable locale is given, it will default to ""en"" (optional)
        
        # Gets source config with language translations
        
        try {
            Get-BetaSourceConfig -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSourceConfig -Id $Id -Locale $Locale   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSourceConfig"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/entitlement-request-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#get-source-entitlement-request-config
      source: |
        $SourceId = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The Source id
        
        # Get source entitlement request configuration
        
        try {
            Get-BetaSourceEntitlementRequestConfig -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSourceEntitlementRequestConfig -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSourceEntitlementRequestConfig"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/schemas/entitlements
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#get-source-entitlements-schema
      source: |
        $SourceId = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The Source id
        $SchemaName = "?schemaName=group" # String | Name of entitlement schema (optional)
        
        # Downloads source entitlements schema template
        
        try {
            Get-BetaSourceEntitlementsSchema -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSourceEntitlementsSchema -SourceId $SourceId -SchemaName $SchemaName   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSourceEntitlementsSchema"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/schemas/{schemaId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#get-source-schema
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The Source ID.
        $SchemaId = "2c9180835d191a86015d28455b4a2329" # String | The Schema ID.
        
        # Get source schema by id
        
        try {
            Get-BetaSourceSchema -SourceId $SourceId -SchemaId $SchemaId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSourceSchema -SourceId $SourceId -SchemaId $SchemaId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSourceSchema"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/schemas
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#get-source-schemas
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | Source ID.
        $IncludeTypes = "group" # String | If set to 'group', then the account schema is filtered and only group schemas are returned. Only a value of 'group' is recognized presently.  Note: The API will check whether include-types is group or not, if not, it will list schemas based on include-names, if include-names is not provided, it will list all schemas. (optional)
        $IncludeNames = "account" # String | A comma-separated list of schema names to filter result. (optional)
        
        # List schemas on source
        
        try {
            Get-BetaSourceSchemas -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSourceSchemas -SourceId $SourceId -IncludeTypes $IncludeTypes -IncludeNames $IncludeNames   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSourceSchemas"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/load-accounts
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#import-accounts
      source: |
        $SourceId = "ef38f94347e94562b5bb8424a56397d8" # String | Source Id
        $File =  # System.IO.FileInfo | The CSV file containing the source accounts to aggregate. (optional)
        $DisableOptimization = "true" # String | Use this flag to reprocess every account whether or not the data has changed. (optional)
        
        # Account aggregation
        
        try {
            Import-BetaAccounts -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Import-BetaAccounts -SourceId $SourceId -File $File -DisableOptimization $DisableOptimization   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Import-BetaAccounts"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/load-entitlements
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#import-entitlements
      source: |
        $SourceId = "ef38f94347e94562b5bb8424a56397d8" # String | Source Id
        $File =  # System.IO.FileInfo | The CSV file containing the source entitlements to aggregate. (optional)
        
        # Entitlement aggregation
        
        try {
            Import-BetaEntitlements -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Import-BetaEntitlements -SourceId $SourceId -File $File   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Import-BetaEntitlements"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/schemas/accounts
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#import-source-accounts-schema
      source: |
        $SourceId = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The Source id
        $File =  # System.IO.FileInfo |  (optional)
        
        # Uploads source accounts schema template
        
        try {
            Import-BetaSourceAccountsSchema -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Import-BetaSourceAccountsSchema -SourceId $SourceId -File $File   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Import-BetaSourceAccountsSchema"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/upload-connector-file
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#import-source-connector-file
      source: |
        $SourceId = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The Source id
        $File =  # System.IO.FileInfo |  (optional)
        
        # Upload connector file to source
        
        try {
            Import-BetaSourceConnectorFile -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Import-BetaSourceConnectorFile -SourceId $SourceId -File $File   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Import-BetaSourceConnectorFile"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/schemas/entitlements
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#import-source-entitlements-schema
      source: |
        $SourceId = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The Source id
        $SchemaName = "?schemaName=group" # String | Name of entitlement schema (optional)
        $File =  # System.IO.FileInfo |  (optional)
        
        # Uploads source entitlements schema template
        
        try {
            Import-BetaSourceEntitlementsSchema -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Import-BetaSourceEntitlementsSchema -SourceId $SourceId -SchemaName $SchemaName -File $File   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Import-BetaSourceEntitlementsSchema"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/load-uncorrelated-accounts
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#import-uncorrelated-accounts
      source: |
        $SourceId = "75dbec1ebe154d5785da27b95e1dd5d7" # String | Source Id
        $File =  # System.IO.FileInfo |  (optional)
        
        # Process uncorrelated accounts
        
        try {
            Import-BetaUncorrelatedAccounts -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Import-BetaUncorrelatedAccounts -SourceId $SourceId -File $File   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Import-BetaUncorrelatedAccounts"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/provisioning-policies
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#list-provisioning-policies
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The Source id
        
        # Lists provisioningpolicies
        
        try {
            Get-BetaProvisioningPolicies -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaProvisioningPolicies -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaProvisioningPolicies"
            Write-Host $_.ErrorDetails
        }
- path: /sources
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#list-sources
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "name eq "Employees"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **name**: *co, eq, in, sw, ge, gt, ne, isnull*  **type**: *eq, in, ge, gt, ne, isnull, sw*  **owner.id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **features**: *ca, co*  **created**: *eq*  **modified**: *eq*  **managementWorkgroup.id**: *eq, ge, gt, in, le, lt, ne, isnull, sw*  **description**: *eq, sw*  **authoritative**: *eq, ne, isnull*  **healthy**: *isnull*  **status**: *eq, in, ge, gt, le, lt, ne, isnull, sw*  **connectionType**: *eq, ge, gt, in, le, lt, ne, isnull, sw*  **connectorName**: *eq, ge, gt, in, ne, isnull, sw*  **category**: *co, eq, ge, gt, in, le, lt, ne, sw* (optional)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status, id, description, owner.id, accountCorrelationConfig.id, accountCorrelationConfig.name, managerCorrelationRule.type, managerCorrelationRule.id, managerCorrelationRule.name, authoritative, managementWorkgroup.id, connectorName, connectionType** (optional)
        $ForSubadmin = "name" # String | Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user. Subadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned. (optional)
        $IncludeIDNSource = $true # Boolean | Include the IdentityNow source in the response. (optional) (default to $false)
        
        # Lists all sources in identitynow.
        
        try {
            Get-BetaSources 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSources -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters -ForSubadmin $ForSubadmin -IncludeIDNSource $IncludeIDNSource   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSources"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/connector/peek-resource-objects
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#peek-resource-objects
      source: |
        $SourceId = "cef3ee201db947c5912551015ba0c679" # String | The ID of the Source
        $ResourceObjectsRequest = @"
        {
          "maxCount" : 100,
          "objectType" : "group"
        }
        "@
        
        # Peek source connector's resource objects
        
        try {
            $Result = ConvertFrom-JsonToResourceObjectsRequest -Json $ResourceObjectsRequest
            Receive-BetaResourceObjects -SourceId $SourceId -ResourceObjectsRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Receive-BetaResourceObjects -SourceId $SourceId -ResourceObjectsRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Receive-BetaResourceObjects"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/connector/ping-cluster
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#ping-cluster
      source: |
        $SourceId = "cef3ee201db947c5912551015ba0c679" # String | The ID of the Source
        
        # Ping cluster for source connector
        
        try {
            Ping-BetaCluster -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Ping-BetaCluster -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Ping-BetaCluster"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/correlation-config
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#put-correlation-config
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The source id
        $CorrelationConfig = @"
        {
          "attributeAssignments" : [ {
            "sequence" : 1,
            "filterString" : "first_name == \"John\"",
            "ignoreCase" : false,
            "complex" : false,
            "property" : "first_name",
            "value" : "firstName",
            "operation" : "EQ",
            "matchMode" : "ANYWHERE"
          }, {
            "sequence" : 1,
            "filterString" : "first_name == \"John\"",
            "ignoreCase" : false,
            "complex" : false,
            "property" : "first_name",
            "value" : "firstName",
            "operation" : "EQ",
            "matchMode" : "ANYWHERE"
          } ],
          "name" : "Source [source] Account Correlation",
          "id" : "2c9180835d191a86015d28455b4a2329"
        }
        "@
        
        # Update source correlation configuration
        
        try {
            $Result = ConvertFrom-JsonToCorrelationConfig -Json $CorrelationConfig
            Send-BetaCorrelationConfig -SourceId $SourceId -CorrelationConfig $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaCorrelationConfig -SourceId $SourceId -CorrelationConfig $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaCorrelationConfig"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/native-change-detection-config
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#put-native-change-detection-config
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The source id
        $NativeChangeDetectionConfig = @"
        {
          "selectedEntitlements" : [ "memberOf", "memberOfSharedMailbox" ],
          "operations" : [ "ACCOUNT_UPDATED", "ACCOUNT_DELETED" ],
          "selectedNonEntitlementAttributes" : [ "lastName", "phoneNumber", "objectType", "servicePrincipalName" ],
          "allNonEntitlementAttributes" : false,
          "allEntitlements" : false,
          "enabled" : true
        }
        "@
        
        # Update native change detection configuration
        
        try {
            $Result = ConvertFrom-JsonToNativeChangeDetectionConfig -Json $NativeChangeDetectionConfig
            Send-BetaNativeChangeDetectionConfig -SourceId $SourceId -NativeChangeDetectionConfig $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaNativeChangeDetectionConfig -SourceId $SourceId -NativeChangeDetectionConfig $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaNativeChangeDetectionConfig"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/provisioning-policies/{usageType}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#put-provisioning-policy
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The Source ID.
        $UsageType = "CREATE" # UsageType | The type of provisioning policy usage.  In IdentityNow, a source can support various provisioning operations. For example, when a joiner is added to a source, this may trigger both CREATE and UPDATE provisioning operations.  Each usage type is considered a provisioning policy.  A source can have any number of these provisioning policies defined.  These are the common usage types:  CREATE - This usage type relates to 'Create Account Profile', the provisioning template for the account to be created. For example, this would be used for a joiner on a source.   UPDATE - This usage type relates to 'Update Account Profile', the provisioning template for the 'Update' connector operations. For example, this would be used for an attribute sync on a source. ENABLE - This usage type relates to 'Enable Account Profile', the provisioning template for the account to be enabled. For example, this could be used for a joiner on a source once the joiner's account is created.  DISABLE - This usage type relates to 'Disable Account Profile', the provisioning template for the account to be disabled. For example, this could be used when a leaver is removed temporarily from a source.  You can use these four usage types for all your provisioning policy needs. 
        $ProvisioningPolicyDto = @"
        {
          "name" : "example provisioning policy for inactive identities",
          "description" : "this provisioning policy creates access based on an identity going inactive",
          "fields" : [ {
            "isRequired" : false,
            "transform" : {
              "type" : "rule",
              "attributes" : {
                "name" : "Create Unique LDAP Attribute"
              }
            },
            "isMultiValued" : false,
            "name" : "userName",
            "attributes" : {
              "template" : "${firstname}.${lastname}${uniqueCounter}",
              "cloudMaxUniqueChecks" : "50",
              "cloudMaxSize" : "20",
              "cloudRequired" : "true"
            },
            "type" : "string"
          }, {
            "isRequired" : false,
            "transform" : {
              "type" : "rule",
              "attributes" : {
                "name" : "Create Unique LDAP Attribute"
              }
            },
            "isMultiValued" : false,
            "name" : "userName",
            "attributes" : {
              "template" : "${firstname}.${lastname}${uniqueCounter}",
              "cloudMaxUniqueChecks" : "50",
              "cloudMaxSize" : "20",
              "cloudRequired" : "true"
            },
            "type" : "string"
          } ],
          "usageType" : "CREATE"
        }
        "@
        
        # Update provisioning policy by usagetype
        
        try {
            $Result = ConvertFrom-JsonToProvisioningPolicyDto -Json $ProvisioningPolicyDto
            Send-BetaProvisioningPolicy -SourceId $SourceId -UsageType $UsageType -ProvisioningPolicyDto $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaProvisioningPolicy -SourceId $SourceId -UsageType $UsageType -ProvisioningPolicyDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaProvisioningPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{id}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#put-source
      source: |
        $Id = "2c9180835d191a86015d28455b4a2329" # String | Source ID.
        $Source = @"
        {
          "cluster" : {
            "name" : "Corporate Cluster",
            "id" : "2c9180866166b5b0016167c32ef31a66",
            "type" : "CLUSTER"
          },
          "deleteThreshold" : 10,
          "connectorId" : "active-directory",
          "description" : "This is the corporate directory.",
          "type" : "OpenLDAP - Direct",
          "connectorClass" : "sailpoint.connector.LDAPConnector",
          "connectionType" : "file",
          "features" : [ "PROVISIONING", "NO_PERMISSIONS_PROVISIONING", "GROUPS_HAVE_MEMBERS" ],
          "passwordPolicies" : [ {
            "type" : "PASSWORD_POLICY",
            "id" : "2c9180855d191c59015d291ceb053980",
            "name" : "Corporate Password Policy"
          }, {
            "type" : "PASSWORD_POLICY",
            "id" : "2c9180855d191c59015d291ceb057777",
            "name" : "Vendor Password Policy"
          } ],
          "modified" : "2024-01-23T18:08:50.897Z",
          "id" : "2c91808568c529c60168cca6f90c1324",
          "connectorImplementationId" : "delimited-file",
          "managerCorrelationRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "RULE"
          },
          "owner" : {
            "name" : "MyName",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "managementWorkgroup" : {
            "name" : "My Management Workgroup",
            "id" : "2c91808568c529c60168cca6f90c2222",
            "type" : "GOVERNANCE_GROUP"
          },
          "accountCorrelationRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "RULE"
          },
          "authoritative" : false,
          "connectorAttributes" : {
            "healthCheckTimeout" : 30,
            "authSearchAttributes" : [ "cn", "uid", "mail" ]
          },
          "created" : "2022-02-08T14:50:03.827Z",
          "managerCorrelationMapping" : {
            "accountAttributeName" : "manager",
            "identityAttributeName" : "manager"
          },
          "credentialProviderEnabled" : false,
          "accountCorrelationConfig" : {
            "name" : "Directory [source-62867] Account Correlation",
            "id" : "2c9180855d191c59015d28583727245a",
            "type" : "ACCOUNT_CORRELATION_CONFIG"
          },
          "connector" : "active-directory",
          "healthy" : true,
          "schemas" : [ {
            "type" : "CONNECTOR_SCHEMA",
            "id" : "2c9180835d191a86015d28455b4b232a",
            "name" : "account"
          }, {
            "type" : "CONNECTOR_SCHEMA",
            "id" : "2c9180835d191a86015d28455b4b232b",
            "name" : "group"
          } ],
          "name" : "My Source",
          "connectorName" : "Active Directory",
          "category" : "CredentialProvider",
          "beforeProvisioningRule" : {
            "name" : "Example Rule",
            "id" : "2c918085708c274401708c2a8a760001",
            "type" : "RULE"
          },
          "status" : "SOURCE_STATE_HEALTHY",
          "since" : "2021-09-28T15:48:29.3801666300Z"
        }
        "@
        
        # Update source (full)
        
        try {
            $Result = ConvertFrom-JsonToSource -Json $Source
            Send-BetaSource -Id $Id -Source $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaSource -Id $Id -Source $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaSource"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{id}/attribute-sync-config
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#put-source-attr-sync-config
      source: |
        $Id = "2c9180835d191a86015d28455b4a2329" # String | The source id
        $AttrSyncSourceConfig = @"
        {
          "attributes" : [ {
            "name" : "email",
            "displayName" : "Email",
            "enabled" : true,
            "target" : "mail"
          }, {
            "name" : "firstname",
            "displayName" : "First Name",
            "enabled" : false,
            "target" : "givenName"
          } ],
          "source" : {
            "name" : "HR Active Directory",
            "id" : "2c9180835d191a86015d28455b4b232a",
            "type" : "SOURCE"
          }
        }
        "@
        
        # Update attribute sync config
        
        try {
            $Result = ConvertFrom-JsonToAttrSyncSourceConfig -Json $AttrSyncSourceConfig
            Send-BetaSourceAttrSyncConfig -Id $Id -AttrSyncSourceConfig $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaSourceAttrSyncConfig -Id $Id -AttrSyncSourceConfig $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaSourceAttrSyncConfig"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/schemas/{schemaId}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#put-source-schema
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The Source ID.
        $SchemaId = "2c9180835d191a86015d28455b4a2329" # String | The Schema ID.
        $Schema = @"
        {
          "features" : [ "PROVISIONING", "NO_PERMISSIONS_PROVISIONING", "GROUPS_HAVE_MEMBERS" ],
          "nativeObjectType" : "User",
          "configuration" : {
            "groupMemberAttribute" : "member"
          },
          "created" : "2019-12-24T22:32:58.104Z",
          "includePermissions" : false,
          "name" : "account",
          "hierarchyAttribute" : "memberOf",
          "modified" : "2019-12-31T20:22:28.104Z",
          "attributes" : [ {
            "name" : "sAMAccountName",
            "type" : "STRING",
            "isMultiValued" : false,
            "isEntitlement" : false,
            "isGroup" : false
          }, {
            "name" : "memberOf",
            "type" : "STRING",
            "schema" : {
              "type" : "CONNECTOR_SCHEMA",
              "id" : "2c9180887671ff8c01767b4671fc7d60",
              "name" : "group"
            },
            "description" : "Group membership",
            "isMultiValued" : true,
            "isEntitlement" : true,
            "isGroup" : true
          } ],
          "id" : "2c9180835d191a86015d28455b4a2329",
          "displayAttribute" : "distinguishedName",
          "identityAttribute" : "sAMAccountName"
        }
        "@
        
        # Update source schema (full)
        
        try {
            $Result = ConvertFrom-JsonToSchema -Json $Schema
            Send-BetaSourceSchema -SourceId $SourceId -SchemaId $SchemaId -Schema $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaSourceSchema -SourceId $SourceId -SchemaId $SchemaId -Schema $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaSourceSchema"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/synchronize-attributes
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#sync-attributes-for-source
      source: |
        $SourceId = "MySourceId" # String | The Source id
        
        # Synchronize single source attributes.
        
        try {
            Sync-BetaAttributesForSource -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Sync-BetaAttributesForSource -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Sync-BetaAttributesForSource"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/connector/test-configuration
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#test-source-configuration
      source: |
        $SourceId = "cef3ee201db947c5912551015ba0c679" # String | The ID of the Source
        
        # Test configuration for source connector
        
        try {
            Test-BetaSourceConfiguration -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Test-BetaSourceConfiguration -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Test-BetaSourceConfiguration"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/connector/check-connection
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#test-source-connection
      source: |
        $SourceId = "cef3ee201db947c5912551015ba0c679" # String | The ID of the Source.
        
        # Check connection for source connector.
        
        try {
            Test-BetaSourceConnection -SourceId $SourceId 
    
            # Below is a request that includes all optional parameters
            # Test-BetaSourceConnection -SourceId $SourceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Test-BetaSourceConnection"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/provisioning-policies/bulk-update
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#update-provisioning-policies-in-bulk
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The Source id.
        $ProvisioningPolicyDto = @"{
          "name" : "example provisioning policy for inactive identities",
          "description" : "this provisioning policy creates access based on an identity going inactive",
          "fields" : [ {
            "isRequired" : false,
            "transform" : {
              "type" : "rule",
              "attributes" : {
                "name" : "Create Unique LDAP Attribute"
              }
            },
            "isMultiValued" : false,
            "name" : "userName",
            "attributes" : {
              "template" : "${firstname}.${lastname}${uniqueCounter}",
              "cloudMaxUniqueChecks" : "50",
              "cloudMaxSize" : "20",
              "cloudRequired" : "true"
            },
            "type" : "string"
          }, {
            "isRequired" : false,
            "transform" : {
              "type" : "rule",
              "attributes" : {
                "name" : "Create Unique LDAP Attribute"
              }
            },
            "isMultiValued" : false,
            "name" : "userName",
            "attributes" : {
              "template" : "${firstname}.${lastname}${uniqueCounter}",
              "cloudMaxUniqueChecks" : "50",
              "cloudMaxSize" : "20",
              "cloudRequired" : "true"
            },
            "type" : "string"
          } ],
          "usageType" : "CREATE"
        }"@ 
        
        
        # Bulk update provisioning policies
        
        try {
            $Result = ConvertFrom-JsonToProvisioningPolicyDto -Json $ProvisioningPolicyDto
            Update-BetaProvisioningPoliciesInBulk -SourceId $SourceId -ProvisioningPolicyDto $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaProvisioningPoliciesInBulk -SourceId $SourceId -ProvisioningPolicyDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaProvisioningPoliciesInBulk"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/provisioning-policies/{usageType}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#update-provisioning-policy
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The Source id.
        $UsageType = "CREATE" # UsageType | The type of provisioning policy usage.  In IdentityNow, a source can support various provisioning operations. For example, when a joiner is added to a source, this may trigger both CREATE and UPDATE provisioning operations.  Each usage type is considered a provisioning policy.  A source can have any number of these provisioning policies defined.  These are the common usage types:  CREATE - This usage type relates to 'Create Account Profile', the provisioning template for the account to be created. For example, this would be used for a joiner on a source.   UPDATE - This usage type relates to 'Update Account Profile', the provisioning template for the 'Update' connector operations. For example, this would be used for an attribute sync on a source. ENABLE - This usage type relates to 'Enable Account Profile', the provisioning template for the account to be enabled. For example, this could be used for a joiner on a source once the joiner's account is created.  DISABLE - This usage type relates to 'Disable Account Profile', the provisioning template for the account to be disabled. For example, this could be used when a leaver is removed temporarily from a source.  You can use these four usage types for all your provisioning policy needs. 
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Partial update of provisioning policy
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaProvisioningPolicy -SourceId $SourceId -UsageType $UsageType -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaProvisioningPolicy -SourceId $SourceId -UsageType $UsageType -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaProvisioningPolicy"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#update-source
      source: |
        $Id = "2c9180835d191a86015d28455b4a2329" # String | Source ID.
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Update source (partial)
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaSource -Id $Id -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaSource -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaSource"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/entitlement-request-config
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#update-source-entitlement-request-config
      source: |
        $SourceId = "8c190e6787aa4ed9a90bd9d5344523fb" # String | The Source id
        $SourceEntitlementRequestConfig = @"
        {
          "accessRequestConfig" : {
            "denialCommentRequired" : false,
            "approvalSchemes" : [ {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            } ],
            "reauthorizationRequired" : false,
            "requestCommentRequired" : true
          },
          "revocationRequestConfig" : {
            "approvalSchemes" : [ {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            }, {
              "approverId" : "e3eab852-8315-467f-9de7-70eda97f63c8",
              "approverType" : "GOVERNANCE_GROUP"
            } ]
          }
        }
        "@
        
        # Update source entitlement request configuration
        
        try {
            $Result = ConvertFrom-JsonToSourceEntitlementRequestConfig -Json $SourceEntitlementRequestConfig
            Update-BetaSourceEntitlementRequestConfig -SourceId $SourceId -SourceEntitlementRequestConfig $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaSourceEntitlementRequestConfig -SourceId $SourceId -SourceEntitlementRequestConfig $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaSourceEntitlementRequestConfig"
            Write-Host $_.ErrorDetails
        }
- path: /sources/{sourceId}/schemas/{schemaId}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/sources#update-source-schema
      source: |
        $SourceId = "2c9180835d191a86015d28455b4a2329" # String | The Source id.
        $SchemaId = "2c9180835d191a86015d28455b4a2329" # String | The Schema id.
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Update source schema (partial)
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaSourceSchema -SourceId $SourceId -SchemaId $SchemaId -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaSourceSchema -SourceId $SourceId -SchemaId $SchemaId -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaSourceSchema"
            Write-Host $_.ErrorDetails
        }
- path: /suggested-entitlement-description-batches/{batchId}/stats
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/suggested-entitlement-description#get-sed-batch-stats
      source: |
        $BatchId = "8c190e67-87aa-4ed9-a90b-d9d5344523fb" # String | Batch Id
        
        # Submit sed batch stats request
        
        try {
            Get-BetaSedBatchStats -BatchId $BatchId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSedBatchStats -BatchId $BatchId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSedBatchStats"
            Write-Host $_.ErrorDetails
        }
- path: /suggested-entitlement-description-batches
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/suggested-entitlement-description#get-sed-batches
      source: |
        $Offset = 0 # Int64 | Offset  Integer specifying the offset of the first result from the beginning of the collection. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). The offset value is record-based, not page-based, and the index starts at 0. (optional) (default to 0)
        $Limit = 250 # Int64 | Limit  Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional) (default to 250)
        $Count = $true # Boolean | If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored.  The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). Since requesting a total count can have a performance impact, it is recommended not to send `count=true` if that value will not be used. (optional) (default to $false)
        $CountOnly = $true # Boolean | If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored. This parameter differs from the count parameter in that this one skips executing the actual query and always return an empty array. (optional) (default to $false)
        $Status = "completed, failed, submitted, materialized, failed" # String | Batch Status (optional)
        
        # List Sed Batch Record
        
        try {
            Get-BetaSedBatches 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSedBatches -Offset $Offset -Limit $Limit -Count $Count -CountOnly $CountOnly -Status $Status   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSedBatches"
            Write-Host $_.ErrorDetails
        }
- path: /suggested-entitlement-descriptions
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/suggested-entitlement-description#list-seds
      source: |
        $Limit = limit=25 # Int64 | Integer specifying the maximum number of records to return in a single API call.  The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used. (optional)
        $Filters = "displayName co "Read and Write"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **batchId**: *eq, ne*  **displayName**: *eq, ne, co*  **sourceName**: *eq, ne, co*  **sourceId**: *eq, ne*  **status**: *eq, ne*  **fullText**: *co* (optional)
        $Sorters = "sorters=displayName" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **displayName, sourceName, status** (optional)
        $Count = $false # Boolean | If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored.  The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). Since requesting a total count can have a performance impact, it is recommended not to send `count=true` if that value will not be used. (optional)
        $CountOnly = $false # Boolean | If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored. This parameter differs from the Coun parameter in that this one skip executing the actual query and always return an empty array. (optional)
        $RequestedByAnyone = $false # Boolean | By default, the ListSeds API will only return items that you have requested to be generated.   This option will allow you to see all items that have been requested (optional)
        $ShowPendingStatusOnly = $false # Boolean | Will limit records to items that are in ""suggested"" or ""approved"" status (optional)
        
        # List suggested entitlement descriptions
        
        try {
            Get-BetaSeds 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSeds -Limit $Limit -Filters $Filters -Sorters $Sorters -Count $Count -CountOnly $CountOnly -RequestedByAnyone $RequestedByAnyone -ShowPendingStatusOnly $ShowPendingStatusOnly   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSeds"
            Write-Host $_.ErrorDetails
        }
- path: /suggested-entitlement-descriptions
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/suggested-entitlement-description#patch-sed
      source: |
        $Id = "ebab396f-0af1-4050-89b7-dafc63ec70e7" # String | id is sed id
        $SedPatch = @"{
          "op" : "replace",
          "path" : "status",
          "value" : "approved"
        }"@ 
        
        
        # Patch suggested entitlement description
        
        try {
            $Result = ConvertFrom-JsonToSedPatch -Json $SedPatch
            Update-BetaSed -Id $Id -SedPatch $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaSed -Id $Id -SedPatch $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaSed"
            Write-Host $_.ErrorDetails
        }
- path: /suggested-entitlement-description-approvals
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/suggested-entitlement-description#submit-sed-approval
      source: |
        $SedApproval = @"{
          "items" : "016629d1-1d25-463f-97f3-c6686846650"
        }"@ 
        
        
        # Submit bulk approval request
        
        try {
            $Result = ConvertFrom-JsonToSedApproval -Json $SedApproval
            Submit-BetaSedApproval -SedApproval $Result 
    
            # Below is a request that includes all optional parameters
            # Submit-BetaSedApproval -SedApproval $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Submit-BetaSedApproval"
            Write-Host $_.ErrorDetails
        }
- path: /suggested-entitlement-description-assignments
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/suggested-entitlement-description#submit-sed-assignment
      source: |
        $SedAssignment = @"
        {
          "assignee" : {
            "type" : "SOURCE_OWNER",
            "value" : "016629d1-1d25-463f-97f3-c6686846650"
          },
          "items" : [ "016629d1-1d25-463f-97f3-0c6686846650", "016629d1-1d25-463f-97f3-0c6686846650" ]
        }
        "@
        
        # Submit sed assignment request
        
        try {
            $Result = ConvertFrom-JsonToSedAssignment -Json $SedAssignment
            Submit-BetaSedAssignment -SedAssignment $Result 
    
            # Below is a request that includes all optional parameters
            # Submit-BetaSedAssignment -SedAssignment $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Submit-BetaSedAssignment"
            Write-Host $_.ErrorDetails
        }
- path: /suggested-entitlement-description-batches
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/suggested-entitlement-description#submit-sed-batch-request
      source: |
        $SedBatchRequest = @"
        {
          "entitlements" : [ "016629d1-1d25-463f-97f3-c6686846650", "016629d1-1d25-463f-97f3-c6686846650" ],
          "seds" : [ "016629d1-1d25-463f-97f3-c6686846650", "016629d1-1d25-463f-97f3-c6686846650" ],
          "searchCriteria" : {
            "key" : {
              "indices" : [ "entitlements" ],
              "query" : {
                "query" : "status:active"
              },
              "textQuery" : {
                "terms" : [ "admin", "user" ],
                "matchAny" : true,
                "fields" : [ "role", "name" ]
              },
              "searchAfter" : [ "12345", "67890" ],
              "filters" : {
                "status" : {
                  "type" : "TERMS",
                  "terms" : [ "active", "inactive" ]
                }
              },
              "sort" : [ "name:asc", "createdAt:desc" ],
              "queryType" : "TEXT",
              "includeNested" : true
            }
          }
        }
        "@
        
        # Submit sed batch request
        
        try {
            Submit-BetaSedBatchRequest 
    
            # Below is a request that includes all optional parameters
            # Submit-BetaSedBatchRequest -SedBatchRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Submit-BetaSedBatchRequest"
            Write-Host $_.ErrorDetails
        }
- path: /tagged-objects/{type}/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/tagged-objects#delete-tagged-object
      source: |
        $Type = "ACCESS_PROFILE" # String | The type of object to delete tags from.
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the object to delete tags from.
        
        # Delete object tags
        
        try {
            Remove-BetaTaggedObject -Type $Type -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaTaggedObject -Type $Type -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaTaggedObject"
            Write-Host $_.ErrorDetails
        }
- path: /tagged-objects/bulk-remove
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/tagged-objects#delete-tags-to-many-object
      source: |
        $BulkTaggedObject = @"
        {
          "objectRefs" : [ {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          }, {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          } ],
          "operation" : "MERGE",
          "tags" : [ "BU_FINANCE", "PCI" ]
        }
        "@
        
        # Remove tags from multiple objects
        
        try {
            $Result = ConvertFrom-JsonToBulkTaggedObject -Json $BulkTaggedObject
            Remove-BetaTagsToManyObject -BulkTaggedObject $Result 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaTagsToManyObject -BulkTaggedObject $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaTagsToManyObject"
            Write-Host $_.ErrorDetails
        }
- path: /tagged-objects/{type}/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/tagged-objects#get-tagged-object
      source: |
        $Type = "ACCESS_PROFILE" # String | The type of tagged object to retrieve.
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the object reference to retrieve.
        
        # Get tagged object
        
        try {
            Get-BetaTaggedObject -Type $Type -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTaggedObject -Type $Type -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTaggedObject"
            Write-Host $_.ErrorDetails
        }
- path: /tagged-objects
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/tagged-objects#list-tagged-objects
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "tagName eq "BU_FINANCE"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **objectRef.id**: *eq, in*  **objectRef.type**: *eq, in*  **tagName**: *eq, in* (optional)
        
        # List tagged objects
        
        try {
            Get-BetaTaggedObjects 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTaggedObjects -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTaggedObjects"
            Write-Host $_.ErrorDetails
        }
- path: /tagged-objects/{type}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/tagged-objects#list-tagged-objects-by-type
      source: |
        $Type = "ACCESS_PROFILE" # String | The type of tagged object to retrieve.
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "objectRef.id eq "2c91808568c529c60168cca6f90c1313"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **objectRef.id**: *eq*  **objectRef.type**: *eq* (optional)
        
        # List tagged objects by type
        
        try {
            Get-BetaTaggedObjectsByType -Type $Type 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTaggedObjectsByType -Type $Type -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTaggedObjectsByType"
            Write-Host $_.ErrorDetails
        }
- path: /tagged-objects/{type}/{id}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/tagged-objects#put-tagged-object
      source: |
        $Type = "ACCESS_PROFILE" # String | The type of tagged object to update.
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the object reference to update.
        $TaggedObject = @"
        {
          "objectRef" : {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "tags" : [ "BU_FINANCE", "PCI" ]
        }
        "@
        
        # Update tagged object
        
        try {
            $Result = ConvertFrom-JsonToTaggedObject -Json $TaggedObject
            Send-BetaTaggedObject -Type $Type -Id $Id -TaggedObject $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaTaggedObject -Type $Type -Id $Id -TaggedObject $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaTaggedObject"
            Write-Host $_.ErrorDetails
        }
- path: /tagged-objects
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/tagged-objects#set-tag-to-object
      source: |
        $TaggedObject = @"
        {
          "objectRef" : {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "tags" : [ "BU_FINANCE", "PCI" ]
        }
        "@
        
        # Add tag to object
        
        try {
            $Result = ConvertFrom-JsonToTaggedObject -Json $TaggedObject
            Set-BetaTagToObject -TaggedObject $Result 
    
            # Below is a request that includes all optional parameters
            # Set-BetaTagToObject -TaggedObject $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Set-BetaTagToObject"
            Write-Host $_.ErrorDetails
        }
- path: /tagged-objects/bulk-add
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/tagged-objects#set-tags-to-many-objects
      source: |
        $BulkTaggedObject = @"
        {
          "objectRefs" : [ {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          }, {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          } ],
          "operation" : "MERGE",
          "tags" : [ "BU_FINANCE", "PCI" ]
        }
        "@
        
        # Tag multiple objects
        
        try {
            $Result = ConvertFrom-JsonToBulkTaggedObject -Json $BulkTaggedObject
            Set-BetaTagsToManyObjects -BulkTaggedObject $Result 
    
            # Below is a request that includes all optional parameters
            # Set-BetaTagsToManyObjects -BulkTaggedObject $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Set-BetaTagsToManyObjects"
            Write-Host $_.ErrorDetails
        }
- path: /tags
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/tags#create-tag
      source: |
        $Tag = @"
        {
          "created" : "2022-05-04T14:48:49Z",
          "tagCategoryRefs" : [ {
            "name" : "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local",
            "id" : "2c91809773dee32014e13e122092014e",
            "type" : "ENTITLEMENT"
          }, {
            "name" : "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local",
            "id" : "2c91809773dee32014e13e122092014e",
            "type" : "ENTITLEMENT"
          } ],
          "name" : "PCI",
          "modified" : "2022-07-14T16:31:11Z",
          "id" : "449ecdc0-d4ff-4341-acf6-92f6f7ce604f"
        }
        "@
        
        # Create tag
        
        try {
            $Result = ConvertFrom-JsonToTag -Json $Tag
            New-BetaTag -Tag $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaTag -Tag $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaTag"
            Write-Host $_.ErrorDetails
        }
- path: /tags/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/tags#delete-tag-by-id
      source: |
        $Id = "329d96cf-3bdb-40a9-988a-b5037ab89022" # String | The ID of the object reference to delete.
        
        # Delete tag
        
        try {
            Remove-BetaTagById -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaTagById -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaTagById"
            Write-Host $_.ErrorDetails
        }
- path: /tags/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/tags#get-tag-by-id
      source: |
        $Id = "329d96cf-3bdb-40a9-988a-b5037ab89022" # String | The ID of the object reference to retrieve.
        
        # Get tag by id
        
        try {
            Get-BetaTagById -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTagById -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTagById"
            Write-Host $_.ErrorDetails
        }
- path: /tags
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/tags#list-tags
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "id eq "27462f54-61c7-4140-b5da-d5dbe27fc6db"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in, sw* (optional)
        $Sorters = "name,-modified" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified** (optional)
        
        # List tags
        
        try {
            Get-BetaTags 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTags -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTags"
            Write-Host $_.ErrorDetails
        }
- path: /task-status/pending-tasks
  method: HEAD
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/task-management#get-pending-task-headers
      source: |
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Retrieve pending task list headers
        
        try {
            Get-BetaPendingTaskHeaders 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPendingTaskHeaders -Offset $Offset -Limit $Limit -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPendingTaskHeaders"
            Write-Host $_.ErrorDetails
        }
- path: /task-status/pending-tasks
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/task-management#get-pending-tasks
      source: |
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Retrieve pending task status list
        
        try {
            Get-BetaPendingTasks 
    
            # Below is a request that includes all optional parameters
            # Get-BetaPendingTasks -Offset $Offset -Limit $Limit -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaPendingTasks"
            Write-Host $_.ErrorDetails
        }
- path: /task-status/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/task-management#get-task-status
      source: |
        $Id = "00eebcf881994e419d72e757fd30dc0e" # String | Task ID.
        
        # Get task status by id
        
        try {
            Get-BetaTaskStatus -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTaskStatus -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTaskStatus"
            Write-Host $_.ErrorDetails
        }
- path: /task-status
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/task-management#get-task-status-list
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "completionStatus eq "Success"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **sourceId**: *eq, in*  **completionStatus**: *eq, in*  **type**: *eq, in* (optional)
        $Sorters = "-created" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created** (optional)
        
        # Retrieve task status list
        
        try {
            Get-BetaTaskStatusList 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTaskStatusList -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTaskStatusList"
            Write-Host $_.ErrorDetails
        }
- path: /task-status/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/task-management#update-task-status
      source: |
        $Id = "00eebcf881994e419d72e757fd30dc0e" # String | Task ID.
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Update task status by id
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaTaskStatus -Id $Id -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaTaskStatus -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaTaskStatus"
            Write-Host $_.ErrorDetails
        }
- path: /tenant
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/tenant#get-tenant
      source: |
        
        # Get tenant information.
        
        try {
            Get-BetaTenant 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTenant   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTenant"
            Write-Host $_.ErrorDetails
        }
- path: /transforms
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/transforms#create-transform
      source: |
        $Transform = @"
        {
          "name" : "Timestamp To Date",
          "attributes" : {
            "input" : {
              "type" : "accountAttribute",
              "attributes" : {
                "attributeName" : "first_name",
                "sourceName" : "Source"
              }
            },
            "accountSortAttribute" : "created",
            "accountReturnFirstLink" : false,
            "requiresPeriodicRefresh" : false,
            "accountPropertyFilter" : "(groups.containsAll({'Admin'}) || location == 'Austin')",
            "attributeName" : "DEPARTMENT",
            "accountSortDescending" : false,
            "sourceName" : "Workday",
            "accountFilter" : "!(nativeIdentity.startsWith(\"*DELETED*\"))"
          },
          "type" : "dateFormat"
        }
        "@
        
        # Create transform
        
        try {
            $Result = ConvertFrom-JsonToTransform -Json $Transform
            New-BetaTransform -Transform $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaTransform -Transform $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaTransform"
            Write-Host $_.ErrorDetails
        }
- path: /transforms/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/transforms#delete-transform
      source: |
        $Id = "2cd78adghjkja34jh2b1hkjhasuecd" # String | ID of the transform to delete
        
        # Delete a transform
        
        try {
            Remove-BetaTransform -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaTransform -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaTransform"
            Write-Host $_.ErrorDetails
        }
- path: /transforms/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/transforms#get-transform
      source: |
        $Id = "2cd78adghjkja34jh2b1hkjhasuecd" # String | ID of the transform to retrieve
        
        # Transform by id
        
        try {
            Get-BetaTransform -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTransform -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTransform"
            Write-Host $_.ErrorDetails
        }
- path: /transforms
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/transforms#list-transforms
      source: |
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Name = "ExampleTransformName123" # String | Name of the transform to retrieve from the list. (optional)
        $Filters = "name eq "Uppercase"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **internal**: *eq*  **name**: *eq, sw* (optional)
        
        # List transforms
        
        try {
            Get-BetaTransforms 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTransforms -Offset $Offset -Limit $Limit -Count $Count -Name $Name -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTransforms"
            Write-Host $_.ErrorDetails
        }
- path: /transforms/{id}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/transforms#update-transform
      source: |
        $Id = "2cd78adghjkja34jh2b1hkjhasuecd" # String | ID of the transform to update
        $Transform = @"
        {
          "name" : "Timestamp To Date",
          "attributes" : {
            "input" : {
              "type" : "accountAttribute",
              "attributes" : {
                "attributeName" : "first_name",
                "sourceName" : "Source"
              }
            },
            "accountSortAttribute" : "created",
            "accountReturnFirstLink" : false,
            "requiresPeriodicRefresh" : false,
            "accountPropertyFilter" : "(groups.containsAll({'Admin'}) || location == 'Austin')",
            "attributeName" : "DEPARTMENT",
            "accountSortDescending" : false,
            "sourceName" : "Workday",
            "accountFilter" : "!(nativeIdentity.startsWith(\"*DELETED*\"))"
          },
          "type" : "dateFormat"
        }
        "@
        
        # Update a transform
        
        try {
            Update-BetaTransform -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Update-BetaTransform -Id $Id -Transform $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaTransform"
            Write-Host $_.ErrorDetails
        }
- path: /trigger-invocations/{id}/complete
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/triggers#complete-trigger-invocation
      source: |
        $Id = "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde" # String | The ID of the invocation to complete.
        $CompleteInvocation = @"
        {
          "output" : {
            "approved" : false
          },
          "secret" : "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",
          "error" : "Access request is denied."
        }
        "@
        
        # Complete trigger invocation
        
        try {
            $Result = ConvertFrom-JsonToCompleteInvocation -Json $CompleteInvocation
            Complete-BetaTriggerInvocation -Id $Id -CompleteInvocation $Result 
    
            # Below is a request that includes all optional parameters
            # Complete-BetaTriggerInvocation -Id $Id -CompleteInvocation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Complete-BetaTriggerInvocation"
            Write-Host $_.ErrorDetails
        }
- path: /trigger-subscriptions
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/triggers#create-subscription
      source: |
        $SubscriptionPostRequest = @"
        {
          "filter" : "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]",
          "httpConfig" : {
            "bearerTokenAuthConfig" : {
              "bearerToken" : "bearerToken"
            },
            "httpAuthenticationType" : "BASIC_AUTH",
            "httpDispatchMode" : "SYNC",
            "basicAuthConfig" : {
              "password" : "password",
              "userName" : "user@example.com"
            },
            "url" : "https://www.example.com"
          },
          "triggerId" : "idn:access-requested",
          "name" : "Access request subscription",
          "description" : "Access requested to site xyz",
          "eventBridgeConfig" : {
            "awsRegion" : "us-west-1",
            "awsAccount" : "123456789012"
          },
          "responseDeadline" : "PT1H",
          "type" : "HTTP",
          "enabled" : true
        }
        "@
        
        # Create a subscription
        
        try {
            $Result = ConvertFrom-JsonToSubscriptionPostRequest -Json $SubscriptionPostRequest
            New-BetaSubscription -SubscriptionPostRequest $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaSubscription -SubscriptionPostRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaSubscription"
            Write-Host $_.ErrorDetails
        }
- path: /trigger-subscriptions/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/triggers#delete-subscription
      source: |
        $Id = "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde" # String | Subscription ID
        
        # Delete a subscription
        
        try {
            Remove-BetaSubscription -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaSubscription -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaSubscription"
            Write-Host $_.ErrorDetails
        }
- path: /trigger-subscriptions
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/triggers#list-subscriptions
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "id eq "12cff757-c0c0-413b-8ad7-2a47956d1e89"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq*  **triggerId**: *eq*  **type**: *eq, le* (optional)
        $Sorters = "triggerName" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **triggerId, triggerName** (optional)
        
        # List subscriptions
        
        try {
            Get-BetaSubscriptions 
    
            # Below is a request that includes all optional parameters
            # Get-BetaSubscriptions -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaSubscriptions"
            Write-Host $_.ErrorDetails
        }
- path: /trigger-invocations/status
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/triggers#list-trigger-invocation-status
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "triggerId eq "idn:access-request-dynamic-approver"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **triggerId**: *eq*  **subscriptionId**: *eq* (optional)
        $Sorters = "created" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **triggerId, subscriptionName, created, completed** (optional)
        
        # List latest invocation statuses
        
        try {
            Get-BetaTriggerInvocationStatus 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTriggerInvocationStatus -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTriggerInvocationStatus"
            Write-Host $_.ErrorDetails
        }
- path: /triggers
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/triggers#list-triggers
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $Filters = "id eq "idn:access-request-post-approval"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, ge, le* (optional)
        $Sorters = "name" # String | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name** (optional)
        
        # List triggers
        
        try {
            Get-BetaTriggers 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTriggers -Limit $Limit -Offset $Offset -Count $Count -Filters $Filters -Sorters $Sorters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTriggers"
            Write-Host $_.ErrorDetails
        }
- path: /trigger-subscriptions/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/triggers#patch-subscription
      source: |
        $Id = "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde" # String | ID of the Subscription to patch
        $SubscriptionPatchRequestInner = @""@ 
        
        
        # Patch a subscription
        
        try {
            $Result = ConvertFrom-JsonToSubscriptionPatchRequestInner -Json $SubscriptionPatchRequestInner
            Update-BetaSubscription -Id $Id -SubscriptionPatchRequestInner $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaSubscription -Id $Id -SubscriptionPatchRequestInner $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaSubscription"
            Write-Host $_.ErrorDetails
        }
- path: /trigger-invocations/test
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/triggers#start-test-trigger-invocation
      source: |
        $TestInvocation = @"
        {
          "input" : {
            "identityId" : "201327fda1c44704ac01181e963d463c"
          },
          "subscriptionIds" : [ "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde" ],
          "triggerId" : "idn:access-request-post-approval",
          "contentJson" : {
            "workflowId" : 1234
          }
        }
        "@
        
        # Start a test invocation
        
        try {
            $Result = ConvertFrom-JsonToTestInvocation -Json $TestInvocation
            Start-BetaTestTriggerInvocation -TestInvocation $Result 
    
            # Below is a request that includes all optional parameters
            # Start-BetaTestTriggerInvocation -TestInvocation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Start-BetaTestTriggerInvocation"
            Write-Host $_.ErrorDetails
        }
- path: /trigger-subscriptions/validate-filter
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/triggers#test-subscription-filter
      source: |
        $ValidateFilterInputDto = @"
        {
          "filter" : "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]",
          "input" : {
            "identityId" : "201327fda1c44704ac01181e963d463c"
          }
        }
        "@
        
        # Validate a subscription filter
        
        try {
            $Result = ConvertFrom-JsonToValidateFilterInputDto -Json $ValidateFilterInputDto
            Test-BetaSubscriptionFilter -ValidateFilterInputDto $Result 
    
            # Below is a request that includes all optional parameters
            # Test-BetaSubscriptionFilter -ValidateFilterInputDto $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Test-BetaSubscriptionFilter"
            Write-Host $_.ErrorDetails
        }
- path: /trigger-subscriptions/{id}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/triggers#update-subscription
      source: |
        $Id = "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde" # String | Subscription ID
        $SubscriptionPutRequest = @"
        {
          "filter" : "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]",
          "httpConfig" : {
            "bearerTokenAuthConfig" : {
              "bearerToken" : "bearerToken"
            },
            "httpAuthenticationType" : "BASIC_AUTH",
            "httpDispatchMode" : "SYNC",
            "basicAuthConfig" : {
              "password" : "password",
              "userName" : "user@example.com"
            },
            "url" : "https://www.example.com"
          },
          "name" : "Access request subscription",
          "description" : "Access requested to site xyz",
          "eventBridgeConfig" : {
            "awsRegion" : "us-west-1",
            "awsAccount" : "123456789012"
          },
          "responseDeadline" : "PT1H",
          "type" : "HTTP",
          "enabled" : true
        }
        "@
        
        # Update a subscription
        
        try {
            $Result = ConvertFrom-JsonToSubscriptionPutRequest -Json $SubscriptionPutRequest
            Update-BetaSubscription -Id $Id -SubscriptionPutRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaSubscription -Id $Id -SubscriptionPutRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaSubscription"
            Write-Host $_.ErrorDetails
        }
- path: /ui-metadata/tenant
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/ui-metadata#get-tenant-ui-metadata
      source: |
        
        # Get a tenant ui metadata
        
        try {
            Get-BetaTenantUiMetadata 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTenantUiMetadata   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTenantUiMetadata"
            Write-Host $_.ErrorDetails
        }
- path: /ui-metadata/tenant
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/ui-metadata#set-tenant-ui-metadata
      source: |
        $TenantUiMetadataItemUpdateRequest = @"
        {
          "usernameEmptyText" : "Please provide your work email address...",
          "usernameLabel" : "Email",
          "iframeWhiteList" : "http://example.com http://example2.com"
        }
        "@
        
        # Update tenant ui metadata
        
        try {
            $Result = ConvertFrom-JsonToTenantUiMetadataItemUpdateRequest -Json $TenantUiMetadataItemUpdateRequest
            Set-BetaTenantUiMetadata -TenantUiMetadataItemUpdateRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Set-BetaTenantUiMetadata -TenantUiMetadataItemUpdateRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Set-BetaTenantUiMetadata"
            Write-Host $_.ErrorDetails
        }
- path: /vendor-connector-mappings
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/vendor-connector-mappings#create-vendor-connector-mapping
      source: |
        $VendorConnectorMapping = @"
        {
          "createdAt" : "2024-03-13T12:56:19.391294Z",
          "deletedAt" : {
            "Valid" : false,
            "Time" : "0001-01-01T00:00:00Z"
          },
          "updatedBy" : {
            "Valid" : true,
            "String" : "user-67891"
          },
          "connector" : "Example connector",
          "createdBy" : "admin",
          "vendor" : "Example vendor",
          "id" : "78733556-9ea3-4f59-bf69-e5cd92b011b4",
          "deletedBy" : {
            "Valid" : false,
            "String" : ""
          },
          "updatedAt" : {
            "Valid" : true,
            "Time" : "2024-03-14T12:56:19.391294Z"
          }
        }
        "@
        
        # Create vendor connector mapping
        
        try {
            $Result = ConvertFrom-JsonToVendorConnectorMapping -Json $VendorConnectorMapping
            New-BetaVendorConnectorMapping -VendorConnectorMapping $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaVendorConnectorMapping -VendorConnectorMapping $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaVendorConnectorMapping"
            Write-Host $_.ErrorDetails
        }
- path: /vendor-connector-mappings
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/vendor-connector-mappings#delete-vendor-connector-mapping
      source: |
        $VendorConnectorMapping = @"
        {
          "createdAt" : "2024-03-13T12:56:19.391294Z",
          "deletedAt" : {
            "Valid" : false,
            "Time" : "0001-01-01T00:00:00Z"
          },
          "updatedBy" : {
            "Valid" : true,
            "String" : "user-67891"
          },
          "connector" : "Example connector",
          "createdBy" : "admin",
          "vendor" : "Example vendor",
          "id" : "78733556-9ea3-4f59-bf69-e5cd92b011b4",
          "deletedBy" : {
            "Valid" : false,
            "String" : ""
          },
          "updatedAt" : {
            "Valid" : true,
            "Time" : "2024-03-14T12:56:19.391294Z"
          }
        }
        "@
        
        # Delete vendor connector mapping
        
        try {
            $Result = ConvertFrom-JsonToVendorConnectorMapping -Json $VendorConnectorMapping
            Remove-BetaVendorConnectorMapping -VendorConnectorMapping $Result 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaVendorConnectorMapping -VendorConnectorMapping $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaVendorConnectorMapping"
            Write-Host $_.ErrorDetails
        }
- path: /vendor-connector-mappings
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/vendor-connector-mappings#get-vendor-connector-mappings
      source: |
        
        # List vendor connector mappings
        
        try {
            Get-BetaVendorConnectorMappings 
    
            # Below is a request that includes all optional parameters
            # Get-BetaVendorConnectorMappings   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaVendorConnectorMappings"
            Write-Host $_.ErrorDetails
        }
- path: /work-items/{id}/approve/{approvalItemId}
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-items#approve-approval-item
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the work item
        $ApprovalItemId = "1211bcaa32112bcef6122adb21cef1ac" # String | The ID of the approval item.
        
        # Approve an approval item
        
        try {
            Approve-BetaApprovalItem -Id $Id -ApprovalItemId $ApprovalItemId 
    
            # Below is a request that includes all optional parameters
            # Approve-BetaApprovalItem -Id $Id -ApprovalItemId $ApprovalItemId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Approve-BetaApprovalItem"
            Write-Host $_.ErrorDetails
        }
- path: /work-items/bulk-approve/{id}
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-items#approve-approval-items-in-bulk
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the work item
        
        # Bulk approve approval items
        
        try {
            Approve-BetaApprovalItemsInBulk -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Approve-BetaApprovalItemsInBulk -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Approve-BetaApprovalItemsInBulk"
            Write-Host $_.ErrorDetails
        }
- path: /work-items/{id}
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-items#complete-work-item
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the work item
        $Body = "MyBody" # String | Body is the request payload to create form definition request (optional)
        
        # Complete a work item
        
        try {
            Complete-BetaWorkItem -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Complete-BetaWorkItem -Id $Id -Body $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Complete-BetaWorkItem"
            Write-Host $_.ErrorDetails
        }
- path: /work-items/completed
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-items#get-completed-work-items
      source: |
        $OwnerId = "2c91808571bcfcf80171c23e4b4221fc" # String | The id of the owner of the work item list being requested.  Either an admin, or the owning/current user must make this request. (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        
        # Completed work items
        
        try {
            Get-BetaCompletedWorkItems 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCompletedWorkItems -OwnerId $OwnerId -Limit $Limit -Offset $Offset -Count $Count   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCompletedWorkItems"
            Write-Host $_.ErrorDetails
        }
- path: /work-items/completed/count
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-items#get-count-completed-work-items
      source: |
        $OwnerId = "2c91808571bcfcf80171c23e4b4221fc" # String | ID of the work item owner. (optional)
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        
        # Count completed work items
        
        try {
            Get-BetaCountCompletedWorkItems 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCountCompletedWorkItems -OwnerId $OwnerId -Limit $Limit -Offset $Offset   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCountCompletedWorkItems"
            Write-Host $_.ErrorDetails
        }
- path: /work-items/count
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-items#get-count-work-items
      source: |
        $OwnerId = "2c91808571bcfcf80171c23e4b4221fc" # String | ID of the work item owner. (optional)
        
        # Count work items
        
        try {
            Get-BetaCountWorkItems 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCountWorkItems -OwnerId $OwnerId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCountWorkItems"
            Write-Host $_.ErrorDetails
        }
- path: /work-items/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-items#get-work-item
      source: |
        $Id = "2c9180835d191a86015d28455b4a2329" # String | ID of the work item.
        $OwnerId = "2c9180835d191a86015d28455b4a2329" # String | ID of the work item owner. (optional)
        
        # Get a work item
        
        try {
            Get-BetaWorkItem -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkItem -Id $Id -OwnerId $OwnerId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkItem"
            Write-Host $_.ErrorDetails
        }
- path: /work-items/summary
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-items#get-work-items-summary
      source: |
        $OwnerId = "ef38f94347e94562b5bb8424a56397d8" # String | ID of the work item owner. (optional)
        
        # Work items summary
        
        try {
            Get-BetaWorkItemsSummary 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkItemsSummary -OwnerId $OwnerId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkItemsSummary"
            Write-Host $_.ErrorDetails
        }
- path: /work-items
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-items#list-work-items
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Count = $true # Boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to $false)
        $OwnerId = "ef38f94347e94562b5bb8424a56397d8" # String | ID of the work item owner. (optional)
        
        # List work items
        
        try {
            Get-BetaWorkItems 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkItems -Limit $Limit -Offset $Offset -Count $Count -OwnerId $OwnerId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkItems"
            Write-Host $_.ErrorDetails
        }
- path: /work-items/{id}/reject/{approvalItemId}
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-items#reject-approval-item
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the work item
        $ApprovalItemId = "1211bcaa32112bcef6122adb21cef1ac" # String | The ID of the approval item.
        
        # Reject an approval item
        
        try {
            Deny-BetaApprovalItem -Id $Id -ApprovalItemId $ApprovalItemId 
    
            # Below is a request that includes all optional parameters
            # Deny-BetaApprovalItem -Id $Id -ApprovalItemId $ApprovalItemId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Deny-BetaApprovalItem"
            Write-Host $_.ErrorDetails
        }
- path: /work-items/bulk-reject/{id}
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-items#reject-approval-items-in-bulk
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the work item
        
        # Bulk reject approval items
        
        try {
            Deny-BetaApprovalItemsInBulk -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Deny-BetaApprovalItemsInBulk -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Deny-BetaApprovalItemsInBulk"
            Write-Host $_.ErrorDetails
        }
- path: /work-items/{id}/submit-account-selection
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-items#submit-account-selection
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the work item
        $RequestBody = @{ key_example =  } # System.Collections.Hashtable | Account Selection Data map, keyed on fieldName
        
        # Submit account selections
        
        try {
            $Result = ConvertFrom-JsonToRequestBody -Json $RequestBody
            Submit-BetaAccountSelection -Id $Id -RequestBody $Result 
    
            # Below is a request that includes all optional parameters
            # Submit-BetaAccountSelection -Id $Id -RequestBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Submit-BetaAccountSelection"
            Write-Host $_.ErrorDetails
        }
- path: /work-items/{id}/forward
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-items#submit-forward-work-item
      source: |
        $Id = "ef38f94347e94562b5bb8424a56397d8" # String | The ID of the work item
        $WorkItemForward = @"
        {
          "targetOwnerId" : "2c9180835d2e5168015d32f890ca1581",
          "comment" : "I'm going on vacation.",
          "sendNotifications" : true
        }
        "@
        
        # Forward a work item
        
        try {
            $Result = ConvertFrom-JsonToWorkItemForward -Json $WorkItemForward
            Submit-BetaForwardWorkItem -Id $Id -WorkItemForward $Result 
    
            # Below is a request that includes all optional parameters
            # Submit-BetaForwardWorkItem -Id $Id -WorkItemForward $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Submit-BetaForwardWorkItem"
            Write-Host $_.ErrorDetails
        }
- path: /reassignment-configurations
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-reassignment#create-reassignment-configuration
      source: |
        $ConfigurationItemRequest = @"
        {
          "endDate" : "2022-07-30T17:00:00Z",
          "reassignedFromId" : "2c91808781a71ddb0181b9090b5c504e",
          "configType" : "ACCESS_REQUESTS",
          "reassignedToId" : "2c91808781a71ddb0181b9090b53504a",
          "startDate" : "2022-07-21T11:13:12.345Z"
        }
        "@
        
        # Create a reassignment configuration
        
        try {
            $Result = ConvertFrom-JsonToConfigurationItemRequest -Json $ConfigurationItemRequest
            New-BetaReassignmentConfiguration -ConfigurationItemRequest $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaReassignmentConfiguration -ConfigurationItemRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaReassignmentConfiguration"
            Write-Host $_.ErrorDetails
        }
- path: /reassignment-configurations/{identityId}/{configType}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-reassignment#delete-reassignment-configuration
      source: |
        $IdentityId = "2c91808781a71ddb0181b9090b5c504e" # String | unique identity id
        $ConfigType = "ACCESS_REQUESTS" # ConfigTypeEnum | 
        
        # Delete reassignment configuration
        
        try {
            Remove-BetaReassignmentConfiguration -IdentityId $IdentityId -ConfigType $ConfigType 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaReassignmentConfiguration -IdentityId $IdentityId -ConfigType $ConfigType   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaReassignmentConfiguration"
            Write-Host $_.ErrorDetails
        }
- path: /reassignment-configurations/{identityId}/evaluate/{configType}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-reassignment#get-evaluate-reassignment-configuration
      source: |
        $IdentityId = "2c91808781a71ddb0181b9090b5c504e" # String | unique identity id
        $ConfigType = "ACCESS_REQUESTS" # ConfigTypeEnum | Reassignment work type
        $ExclusionFilters = "MyExclusionFilters" # String[] | Exclusion filters that disable parts of the reassignment evaluation. Possible values are listed below: - `SELF_REVIEW_DELEGATION`: This will exclude delegations of self-review reassignments (optional)
        
        $ExclusionFilters = @"SELF_REVIEW_DELEGATION"@
        
        # Evaluate reassignment configuration
        
        try {
            Get-BetaEvaluateReassignmentConfiguration -IdentityId $IdentityId -ConfigType $ConfigType 
    
            # Below is a request that includes all optional parameters
            # Get-BetaEvaluateReassignmentConfiguration -IdentityId $IdentityId -ConfigType $ConfigType -ExclusionFilters $ExclusionFilters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaEvaluateReassignmentConfiguration"
            Write-Host $_.ErrorDetails
        }
- path: /reassignment-configurations/types
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-reassignment#get-reassignment-config-types
      source: |
        
        # List reassignment config types
        
        try {
            Get-BetaReassignmentConfigTypes 
    
            # Below is a request that includes all optional parameters
            # Get-BetaReassignmentConfigTypes   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaReassignmentConfigTypes"
            Write-Host $_.ErrorDetails
        }
- path: /reassignment-configurations/{identityId}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-reassignment#get-reassignment-configuration
      source: |
        $IdentityId = "2c91808781a71ddb0181b9090b5c504f" # String | unique identity id
        
        # Get reassignment configuration
        
        try {
            Get-BetaReassignmentConfiguration -IdentityId $IdentityId 
    
            # Below is a request that includes all optional parameters
            # Get-BetaReassignmentConfiguration -IdentityId $IdentityId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaReassignmentConfiguration"
            Write-Host $_.ErrorDetails
        }
- path: /reassignment-configurations/tenant-config
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-reassignment#get-tenant-config-configuration
      source: |
        
        # Get tenant-wide reassignment configuration settings
        
        try {
            Get-BetaTenantConfigConfiguration 
    
            # Below is a request that includes all optional parameters
            # Get-BetaTenantConfigConfiguration   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaTenantConfigConfiguration"
            Write-Host $_.ErrorDetails
        }
- path: /reassignment-configurations
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-reassignment#list-reassignment-configurations
      source: |
        $Limit = 20 # Int32 | Max number of results to return. (optional) (default to 20)
        $Offset = 10 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. Defaults to 0 if not specified. (optional)
        
        # List reassignment configurations
        
        try {
            Get-BetaReassignmentConfigurations 
    
            # Below is a request that includes all optional parameters
            # Get-BetaReassignmentConfigurations -Limit $Limit -Offset $Offset   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaReassignmentConfigurations"
            Write-Host $_.ErrorDetails
        }
- path: /reassignment-configurations/{identityId}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-reassignment#put-reassignment-config
      source: |
        $IdentityId = "2c91808781a71ddb0181b9090b5c504e" # String | unique identity id
        $ConfigurationItemRequest = @"
        {
          "endDate" : "2022-07-30T17:00:00Z",
          "reassignedFromId" : "2c91808781a71ddb0181b9090b5c504e",
          "configType" : "ACCESS_REQUESTS",
          "reassignedToId" : "2c91808781a71ddb0181b9090b53504a",
          "startDate" : "2022-07-21T11:13:12.345Z"
        }
        "@
        
        # Update reassignment configuration
        
        try {
            $Result = ConvertFrom-JsonToConfigurationItemRequest -Json $ConfigurationItemRequest
            Send-BetaReassignmentConfig -IdentityId $IdentityId -ConfigurationItemRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaReassignmentConfig -IdentityId $IdentityId -ConfigurationItemRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaReassignmentConfig"
            Write-Host $_.ErrorDetails
        }
- path: /reassignment-configurations/tenant-config
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/work-reassignment#put-tenant-configuration
      source: |
        $TenantConfigurationRequest = @"
        {
          "configDetails" : {
            "disabled" : true
          }
        }
        "@
        
        # Update tenant-wide reassignment configuration settings
        
        try {
            $Result = ConvertFrom-JsonToTenantConfigurationRequest -Json $TenantConfigurationRequest
            Send-BetaTenantConfiguration -TenantConfigurationRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaTenantConfiguration -TenantConfigurationRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaTenantConfiguration"
            Write-Host $_.ErrorDetails
        }
- path: /workflow-executions/{id}/cancel
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#cancel-workflow-execution
      source: |
        $Id = "c17bea3a-574d-453c-9e04-4365fbf5af0b" # String | The workflow execution ID
        
        # Cancel workflow execution by id
        
        try {
            Suspend-BetaWorkflowExecution -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Suspend-BetaWorkflowExecution -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Suspend-BetaWorkflowExecution"
            Write-Host $_.ErrorDetails
        }
- path: /workflows
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#create-workflow
      source: |
        $CreateWorkflowRequest = @"
        {name=Send Email, owner={type=IDENTITY, id=2c91808568c529c60168cca6f90c1313, name=William Wilson}, description=Send an email to the identity who's attributes changed., definition={start=Send Email Test, steps={Send Email={actionId=sp:send-email, attributes={body=This is a test, from=sailpoint@sailpoint.com, recipientId.$=$.identity.id, subject=test}, nextStep=success, selectResult=null, type=action}, success={type=success}}}, enabled=false, trigger={type=EVENT, attributes={id=idn:identity-attributes-changed, filter=$.changes[?(@.attribute == 'manager')]}}}
        "@
        
        # Create workflow
        
        try {
            $Result = ConvertFrom-JsonToCreateWorkflowRequest -Json $CreateWorkflowRequest
            New-BetaWorkflow -CreateWorkflowRequest $Result 
    
            # Below is a request that includes all optional parameters
            # New-BetaWorkflow -CreateWorkflowRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling New-BetaWorkflow"
            Write-Host $_.ErrorDetails
        }
- path: /workflows/{id}
  method: DELETE
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#delete-workflow
      source: |
        $Id = "c17bea3a-574d-453c-9e04-4365fbf5af0b" # String | Id of the Workflow
        
        # Delete workflow by id
        
        try {
            Remove-BetaWorkflow -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Remove-BetaWorkflow -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Remove-BetaWorkflow"
            Write-Host $_.ErrorDetails
        }
- path: /workflows/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#get-workflow
      source: |
        $Id = "c17bea3a-574d-453c-9e04-4365fbf5af0b" # String | Id of the workflow
        $WorkflowMetrics = $false # Boolean | disable workflow metrics (optional) (default to $true)
        
        # Get workflow by id
        
        try {
            Get-BetaWorkflow -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkflow -Id $Id -WorkflowMetrics $WorkflowMetrics   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkflow"
            Write-Host $_.ErrorDetails
        }
- path: /workflow-executions/{id}
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#get-workflow-execution
      source: |
        $Id = "c17bea3a-574d-453c-9e04-4365fbf5af0b" # String | Workflow execution ID.
        
        # Get workflow execution
        
        try {
            Get-BetaWorkflowExecution -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkflowExecution -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkflowExecution"
            Write-Host $_.ErrorDetails
        }
- path: /workflow-executions/{id}/history
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#get-workflow-execution-history
      source: |
        $Id = "c17bea3a-574d-453c-9e04-4365fbf5af0b" # String | Id of the workflow execution
        
        # Get workflow execution history
        
        try {
            Get-BetaWorkflowExecutionHistory -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkflowExecutionHistory -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkflowExecutionHistory"
            Write-Host $_.ErrorDetails
        }
- path: /workflows/{id}/executions
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#get-workflow-executions
      source: |
        $Id = "c17bea3a-574d-453c-9e04-4365fbf5af0b" # String | Workflow ID.
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Filters = "status eq "Failed"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **startTime**: *eq, lt, le, gt, ge*  **status**: *eq* (optional)
        
        # List workflow executions
        
        try {
            Get-BetaWorkflowExecutions -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkflowExecutions -Id $Id -Limit $Limit -Offset $Offset -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkflowExecutions"
            Write-Host $_.ErrorDetails
        }
- path: /workflow-library
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#list-complete-workflow-library
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        
        # List complete workflow library
        
        try {
            Get-BetaCompleteWorkflowLibrary 
    
            # Below is a request that includes all optional parameters
            # Get-BetaCompleteWorkflowLibrary -Limit $Limit -Offset $Offset   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaCompleteWorkflowLibrary"
            Write-Host $_.ErrorDetails
        }
- path: /workflow-library/actions
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#list-workflow-library-actions
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Filters = "id eq "sp:create-campaign"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq* (optional)
        
        # List workflow library actions
        
        try {
            Get-BetaWorkflowLibraryActions 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkflowLibraryActions -Limit $Limit -Offset $Offset -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkflowLibraryActions"
            Write-Host $_.ErrorDetails
        }
- path: /workflow-library/operators
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#list-workflow-library-operators
      source: |
        
        # List workflow library operators
        
        try {
            Get-BetaWorkflowLibraryOperators 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkflowLibraryOperators   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkflowLibraryOperators"
            Write-Host $_.ErrorDetails
        }
- path: /workflow-library/triggers
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#list-workflow-library-triggers
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $Filters = "id eq "idn:identity-attributes-changed"" # String | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq* (optional)
        
        # List workflow library triggers
        
        try {
            Get-BetaWorkflowLibraryTriggers 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkflowLibraryTriggers -Limit $Limit -Offset $Offset -Filters $Filters   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkflowLibraryTriggers"
            Write-Host $_.ErrorDetails
        }
- path: /workflows
  method: GET
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#list-workflows
      source: |
        $Limit = 250 # Int32 | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $Offset = 0 # Int32 | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $TriggerId = "idn:identity-created" # String | Trigger ID (optional)
        $ConnectorInstanceId = "28541fec-bb81-4ad4-88ef-0f7d213adcad" # String | Connector Instance ID (optional)
        
        # List workflows
        
        try {
            Get-BetaWorkflows 
    
            # Below is a request that includes all optional parameters
            # Get-BetaWorkflows -Limit $Limit -Offset $Offset -TriggerId $TriggerId -ConnectorInstanceId $ConnectorInstanceId   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Get-BetaWorkflows"
            Write-Host $_.ErrorDetails
        }
- path: /workflows/{id}
  method: PATCH
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#patch-workflow
      source: |
        $Id = "c17bea3a-574d-453c-9e04-4365fbf5af0b" # String | Id of the Workflow
        $JsonPatchOperation = @"{
          "op" : "replace",
          "path" : "/description",
          "value" : "New description"
        }"@ 
        
        
        # Patch workflow
        
        try {
            $Result = ConvertFrom-JsonToJsonPatchOperation -Json $JsonPatchOperation
            Update-BetaWorkflow -Id $Id -JsonPatchOperation $Result 
    
            # Below is a request that includes all optional parameters
            # Update-BetaWorkflow -Id $Id -JsonPatchOperation $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Update-BetaWorkflow"
            Write-Host $_.ErrorDetails
        }
- path: /workflows/execute/external/{id}
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#post-external-execute-workflow
      source: |
        $Id = "c17bea3a-574d-453c-9e04-4365fbf5af0b" # String | Id of the workflow
        $PostExternalExecuteWorkflowRequest = @"
        
        "@
        
        # Execute workflow via external trigger
        
        try {
            Submit-BetaExternalExecuteWorkflow -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Submit-BetaExternalExecuteWorkflow -Id $Id -PostExternalExecuteWorkflowRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Submit-BetaExternalExecuteWorkflow"
            Write-Host $_.ErrorDetails
        }
- path: /workflows/{id}/external/oauth-clients
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#post-workflow-external-trigger
      source: |
        $Id = "c17bea3a-574d-453c-9e04-4365fbf5af0b" # String | Id of the workflow
        
        # Generate external trigger oauth client
        
        try {
            Submit-BetaWorkflowExternalTrigger -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Submit-BetaWorkflowExternalTrigger -Id $Id   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Submit-BetaWorkflowExternalTrigger"
            Write-Host $_.ErrorDetails
        }
- path: /workflows/{id}
  method: PUT
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#put-workflow
      source: |
        $Id = "c17bea3a-574d-453c-9e04-4365fbf5af0b" # String | Id of the Workflow
        $WorkflowBody = @"
        {
          "owner" : {
            "name" : "William Wilson",
            "id" : "2c91808568c529c60168cca6f90c1313",
            "type" : "IDENTITY"
          },
          "name" : "Send Email",
          "description" : "Send an email to the identity who's attributes changed.",
          "definition" : {
            "start" : "Send Email Test",
            "steps" : {
              "Send Email" : {
                "actionId" : "sp:send-email",
                "attributes" : {
                  "body" : "This is a test",
                  "from" : "sailpoint@sailpoint.com",
                  "recipientId.$" : "$.identity.id",
                  "subject" : "test"
                },
                "nextStep" : "success",
                "type" : "ACTION"
              },
              "success" : {
                "type" : "success"
              }
            }
          },
          "trigger" : {
            "displayName" : "displayName",
            "attributes" : {
              "description" : "Triggered when an identity's manager attribute changes",
              "formDefinitionId" : "Admin_Access_Request_Form",
              "attributeToFilter" : "LifecycleState",
              "id" : "idn:identity-attributes-changed",
              "filter.$" : "$.changes[?(@.attribute == 'manager')]"
            },
            "type" : "EVENT"
          },
          "enabled" : false
        }
        "@
        
        # Update workflow
        
        try {
            $Result = ConvertFrom-JsonToWorkflowBody -Json $WorkflowBody
            Send-BetaWorkflow -Id $Id -WorkflowBody $Result 
    
            # Below is a request that includes all optional parameters
            # Send-BetaWorkflow -Id $Id -WorkflowBody $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Send-BetaWorkflow"
            Write-Host $_.ErrorDetails
        }
- path: /workflows/execute/external/{id}/test
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#test-external-execute-workflow
      source: |
        $Id = "c17bea3a-574d-453c-9e04-4365fbf5af0b" # String | Id of the workflow
        $TestExternalExecuteWorkflowRequest = @"
        
        "@
        
        # Test workflow via external trigger
        
        try {
            Test-BetaExternalExecuteWorkflow -Id $Id 
    
            # Below is a request that includes all optional parameters
            # Test-BetaExternalExecuteWorkflow -Id $Id -TestExternalExecuteWorkflowRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Test-BetaExternalExecuteWorkflow"
            Write-Host $_.ErrorDetails
        }
- path: /workflows/{id}/test
  method: POST
  xCodeSample:
    - lang: PowerShell
      label: SDK_tools/sdk/powershell/beta/methods/workflows#test-workflow
      source: |
        $Id = "c17bea3a-574d-453c-9e04-4365fbf5af0b" # String | Id of the workflow
        $TestWorkflowRequest = @"
        {input={identity={id=ee769173319b41d19ccec6cea52f237b, name=john.doe, type=IDENTITY}, changes=[{attribute=department, oldValue=sales, newValue=marketing}, {attribute=manager, oldValue={id=ee769173319b41d19ccec6c235423237b, name=nice.guy, type=IDENTITY}, newValue={id=ee769173319b41d19ccec6c235423236c, name=mean.guy, type=IDENTITY}}, {attribute=email, oldValue=john.doe@hotmail.com, newValue=john.doe@gmail.com}]}}
        "@
        
        # Test workflow by id
        
        try {
            $Result = ConvertFrom-JsonToTestWorkflowRequest -Json $TestWorkflowRequest
            Test-BetaWorkflow -Id $Id -TestWorkflowRequest $Result 
    
            # Below is a request that includes all optional parameters
            # Test-BetaWorkflow -Id $Id -TestWorkflowRequest $Result   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling Test-BetaWorkflow"
            Write-Host $_.ErrorDetails
        }
